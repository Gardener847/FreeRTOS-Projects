
build/bin/firmware.elf:     file format elf32-littlearm
build/bin/firmware.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010195

Program Header:
0x70000001 off    0x000214a4 vaddr 0x000214a4 paddr 0x000214a4 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00010000 paddr 0x00010000 align 2**16
         filesz 0x000114ac memsz 0x000114ac flags r-x
    LOAD off    0x0002c000 vaddr 0x2007c000 paddr 0x000214ac align 2**16
         filesz 0x000002fc memsz 0x000002fc flags rw-
    LOAD off    0x0002c300 vaddr 0x2007c300 paddr 0x000217a8 align 2**16
         filesz 0x00000000 memsz 0x000005cc flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         000114a4  00010000  00010000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002fc  2007c000  000214ac  0002c000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000005cc  2007c300  000217a8  0002c300  2**3  ALLOC
  3 .ARM.exidx    00000008  000214a4  000214a4  000214a4  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   00046e17  00000000  00000000  0002c2fc  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000be42  00000000  00000000  00073113  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_loc    00014b46  00000000  00000000  0007ef55  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 000019d0  00000000  00000000  00093a9b  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 000029f0  00000000  00000000  0009546b  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00011559  00000000  00000000  00097e5b  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000c748  00000000  00000000  000a93b4  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment      0000007f  00000000  00000000  000b5afc  2**0  CONTENTS, READONLY
 12 .ARM.attributes 00000031  00000000  00000000  000b5b7b  2**0  CONTENTS, READONLY
 13 .debug_frame  00006958  00000000  00000000  000b5bac  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c300 l    d  .bss	00000000 .bss
000214a4 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f0 l       .text	00000000 _MSP
00010650 l     F .text	0000003c isr_forwarder_routine
2007c000 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007c300 l     O .bss	0000000c g_rtc_boot_time
2007c30c l     O .bss	00000001 g_sys_boot_type
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007c314 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
000106f4 l     F .text	00000014 sys_clock_pll0_feed()
00010708 l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 freertos_mem_man.c
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 port.c
00010a20 l     F .text	00000012 prvTaskExitError
00010a34 l     F .text	0000001a prvPortStartFirstTask
00010aa0 l       .text	00000000 pxCurrentTCBConst2
00010b20 l       .text	00000000 pxCurrentTCBConst
2007c31c l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007c320 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00010c3e l     F .text	00000066 prvCopyDataToQueue
00010ca4 l     F .text	0000004a prvNotifyQueueSetContainer
00010cee l     F .text	00000028 prvCopyDataFromQueue
00010d16 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000111f8 l     F .text	00000028 prvIdleTask
00011220 l     F .text	00000024 prvResetNextTaskUnblockTime
00011244 l     F .text	0000008c prvAddCurrentTaskToDelayedList
2007c32c l     O .bss	00000004 pxDelayedTaskList
2007c330 l     O .bss	00000004 pxOverflowDelayedTaskList
2007c334 l     O .bss	000000c8 pxReadyTasksLists
2007c3fc l     O .bss	00000004 ulTaskSwitchedInTime
2007c400 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c404 l     O .bss	00000004 uxPendedTicks
2007c408 l     O .bss	00000004 uxSchedulerSuspended
2007c40c l     O .bss	00000004 uxTaskNumber
2007c410 l     O .bss	00000004 uxTopReadyPriority
2007c414 l     O .bss	00000014 xDelayedTaskList1
2007c428 l     O .bss	00000014 xDelayedTaskList2
2007c43c l     O .bss	00000004 xIdleTaskHandle
2007c440 l     O .bss	00000004 xNextTaskUnblockTime
2007c444 l     O .bss	00000004 xNumOfOverflows
2007c448 l     O .bss	00000014 xPendingReadyList
2007c45c l     O .bss	00000004 xSchedulerRunning
2007c460 l     O .bss	00000014 xSuspendedTaskList
2007c474 l     O .bss	00000004 xTickCount
2007c478 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 adc.c
000120d4 l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 can.c
00012228 l     F .text	00000032 CAN_tx_now
0001225c l     F .text	000000a4 CAN_handle_isr
00000000 l    df *ABS*	00000000 eint.c
00012328 l     F .text	0000002c handle_eint_list
00012354 l     F .text	00000038 eint3_enable.isra.0
2007c484 l     O .bss	00000004 gp_port0_falling_list
2007c488 l     O .bss	00000004 gp_port0_rising_list
2007c48c l     O .bss	00000004 gp_port2_falling_list
2007c490 l     O .bss	00000004 gp_port2_rising_list
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c498 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 lpc_timers.c
00012500 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c49c l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 file_logger.c
00012a18 l     F .text	000000b4 logger_write_to_file
00012acc l     F .text	000000d0 logger_task
2007c4ac l     O .bss	00000002 g_buffer_watermark
2007c4b0 l     O .bss	00000004 g_empty_buffer_queue
2007c4b4 l     O .bss	00000002 g_highest_file_write_time
2007c4b8 l     O .bss	00000004 g_write_buffer_queue
2007c4bc l     O .bss	00000004 gp_file_buffer
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 rtc_alarm.c
00012cc2 l     F .text	00000024 for_each_recur_alarm_callback
00012ce6 l     F .text	0000005a for_each_alarm_callback
2007c4c0 l     O .bss	00000010 g_list_recur_alarms
2007c4d0 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 c_tlm_comp.c
00012e38 l     F .text	00000010 tlm_component_find_by_name
2007c4d4 l     O .bss	00000004 mp_tlm_component_list
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 sd.c
00012fb0 l     F .text	00000012 sys_get_uptime_ms
00012fc4 l     F .text	00000030 ssp1_set_max_clock
00012ff4 l     F .text	00000014 ssp1_exchange_byte
2007c4d8 l     O .bss	00000001 g_card_type
2007c0cc l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 spi_flash.cpp
000136c8 l     F .text	00000020 flash_get_mem_size_bytes()
000136e8 l     F .text	00000074 flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
0001375c l     F .text	000000ac ssp1_exchange_data
00013808 l     F .text	00000026 flash_send_op_addr(flash_opcode_t, unsigned long)
00013830 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00013874 l     F .text	00000040 flash_wait_for_ready()
00013ac8 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c4dc l     O .bss	00000004 g_sector_count
2007c4e0 l     O .bss	00000001 g_flash_capacity
2007c4e2 l     O .bss	00000002 g_flash_pagesize
000203d8 l     O .text	00000010 CSWTCH.70
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 ff.c
00013bd2 l     F .text	00000038 mem_cpy
00013c0a l     F .text	0000000e mem_set
00013c18 l     F .text	0000001e sum_sfn
00013c36 l     F .text	0000003a get_ldnumber
00013c70 l     F .text	00000046 sync_window.part.1
00013cb6 l     F .text	0000000c sync_window
00013cc4 l     F .text	00000074 sync_fs
00013d38 l     F .text	00000034 move_window
00013d6c l     F .text	0000004c check_fs
00013db8 l     F .text	0000021c find_volume
00013fd4 l     F .text	0000003a validate
0001400e l     F .text	0000001a unlock_fs
000140e4 l     F .text	00000080 dir_sdi
00014236 l     F .text	000000a0 create_chain
000142d6 l     F .text	000000ec dir_next
000143c4 l     F .text	00000120 dir_find.part.9
000144e4 l     F .text	00000270 follow_path
00014754 l     F .text	00000238 dir_register
0001498c l     F .text	00000058 remove_chain
2007c4e4 l     O .bss	00000008 FatFs
2007c4ec l     O .bss	00000002 Fsid
000203e8 l     O .text	00000080 ExCvt
00020468 l     O .text	0000000d LfnOfs
00020476 l     O .text	00000016 cst.6348
000204d0 l     O .text	00000016 vst.6347
00000000 l    df *ABS*	00000000 ccsbcs.c
000204e6 l     O .text	00000100 Tbl
000205e6 l     O .text	000001e0 tbl_lower.5775
000207c6 l     O .text	000001e0 tbl_upper.5776
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 io_source.cpp
2007c4f0 l     O .bss	00000080 g_ir_timings
2007c570 l     O .bss	00000002 g_signal_count
2007c574 l     O .bss	00000004 g_last_decoded_signal
000209a6 l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 mesh.c
00015a08 l     F .text	00000026 mesh_incr_soft_timers_for_arr
00015a30 l     F .text	0000004c mesh_update_soft_timers
00015a7c l     F .text	0000003c mesh_send_packet
00015ab8 l     F .text	00000034 mesh_send_retry_packet
00015aec l     F .text	00000024 mesh_find_rte_tbl_entry
00015b10 l     F .text	00000028 mesh_update_rte_scores
00015b38 l     F .text	00000040 mesh_get_pnd_pkt_slot
00015b78 l     F .text	00000090 mesh_pending_packets_add
00015c08 l     F .text	00000058 mesh_get_rte_to_modify
00015c60 l     F .text	00000178 mesh_handle_pnd_pkts_for_arr
0001608a l     F .text	0000001a mesh_send_ack
2007c578 l     O .bss	00000014 g_driver
2007c58c l     O .bss	00000001 g_error_mask
2007c58d l     O .bss	00000001 g_locked
2007c58e l     O .bss	00000090 g_mesh_pnd_pkts
2007c61e l     O .bss	0000000c g_mesh_stats
2007c62a l     O .bss	00000018 g_our_name
2007c642 l     O .bss	00000048 g_our_pnd_pkts
2007c68a l     O .bss	0000000c g_pkt_hist
2007c696 l     O .bss	00000001 g_rpt_node
2007c697 l     O .bss	00000010 g_rte_table
2007c6a7 l     O .bss	00000001 s_next_packet_id.5115
2007c6a8 l     O .bss	00000004 s_prev_time_ms.5129
2007c0cd l     O .data	00000001 g_our_node_id
2007c0d0 l     O .data	00000004 g_pkt_hist_wptr
2007c0d4 l     O .data	00000001 g_retry_count
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
000163c4 l     F .text	000000e8 nordic_transfer
000164ac l     F .text	00000020 nordic_readRegister
000164cc l     F .text	0000001e nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00016840 l     F .text	00000070 nrf_driver_init
00016958 l     F .text	00000034 nrf_irq_callback
000168b0 l     F .text	00000050 nrf_driver_app_recv
00016900 l     F .text	00000058 nrf_driver_send
0001698c l     F .text	00000022 nrf_driver_receive
000169ae l     F .text	00000028 nrf_driver_get_timer
2007c6ac l     O .bss	00000004 g_ack_queue
2007c6b0 l     O .bss	00000004 g_nrf_activity_sem
2007c6b4 l     O .bss	00000004 g_rx_queue
00000000 l    df *ABS*	00000000 examples.cpp
00000000 l    df *ABS*	00000000 handlers.cpp
00000000 l    df *ABS*	00000000 high_level_init.cpp
00016b5c l     F .text	0000000c hl_print_line()
00016b68 l     F .text	0000002c ssp_set_max_clock
00016b94 l     F .text	00000090 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 malloc_lock.c
00000000 l    df *ABS*	00000000 memory.cpp
2007c6e0 l     O .bss	00000004 g_sbrk_calls
2007c6e4 l     O .bss	00000004 g_last_sbrk_ptr
2007c6e8 l     O .bss	00000004 g_next_heap_ptr
2007c6ec l     O .bss	00000004 g_last_sbrk_size
00000000 l    df *ABS*	00000000 newlib_syscalls.c
000172cc l     F .text	00000056 remap_fatfs_errors
00017324 l     F .text	0000004c findslot
00017370 l     F .text	00000028 remap_handle
2007c6f0 l     O .bss	00000004 g_input_dev_fptr
2007c6f4 l     O .bss	00000004 g_output_dev_fptr
2007c6f8 l     O .bss	00000001 initialized.8352
2007c6fc l     O .bss	00000060 openfiles
2007c75c l     O .bss	00000004 slot.8318
2007c0d8 l     O .data	00000004 lastfh.8319
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 GpioInterrupt.cpp
00000000 l    df *ABS*	00000000 disp.cpp
00000000 l    df *ABS*	00000000 labgpio.cpp
00000000 l    df *ABS*	00000000 main.cpp
00018428 l     F .text	0000000c _GLOBAL__sub_I_pressed
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 del_ops.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0001994c l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
00019d18 l     F .text	000001c0 validate_structure
000210cc l     O .text	00000030 DAYS_IN_MONTH
000210fc l     O .text	00000030 _DAYS_BEFORE_MONTH
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 refill.c
0001b1f8 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strtod.c
0001b708 l     F .text	00000042 sulp
000211c4 l     O .text	00000014 fpi.6129
000211d8 l     O .text	00000014 fpinan.6165
000211f0 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
0001c360 l     F .text	00000100 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tzcalc_limits.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 tzset.c
00000000 l    df *ABS*	00000000 tzset_r.c
2007c8a0 l     O .bss	0000000b __tzname_dst
2007c8ab l     O .bss	0000000b __tzname_std
2007c8b8 l     O .bss	00000004 prev_tzenv
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
0001cbb8 l     F .text	00000118 quorem
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0001d89c l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0001dd6e l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getenv_r.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c2b8 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mprec.c
00021458 l     O .text	0000000c p05.6047
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
0001ee10 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 strtoul.c
0001f6ba l     F .text	000000fa _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 envlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 impure.c
2007c0e4 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 month_lengths.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 tzvars.c
00000000 l    df *ABS*	00000000 environ.c
2007c8c4 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 reent.c
00012934 g     F .text	0000001c Uart3::Uart3()
0001f960 g     F .text	00000012 _malloc_usable_size_r
0001a3b8 g     F .text	000000b8 __cvt
000104c4 g     F .text	00000054 lpc_sys_setup_system_timer
0001f384 g     F .text	000000c6 _scanf_chars
00017890 g     F .text	00000030 LabGPIO_1::setHigh()
00018acc g     F .text	00000004 std::type_info::__is_function_p() const
0001fea8 g     F .text	0000002c .hidden __aeabi_dcmpun
0001263c g     F .text	000000d0 rtc_init
0001e786 g     F .text	00000042 __any_on
0001df94 g     F .text	00000020 _isatty_r
0001fe6c g     F .text	00000012 .hidden __aeabi_dcmple
0001b69a g     F .text	00000010 strcpy
00018b20 g     F .text	00000018 .hidden __ashldi3
000173d0 g     F .text	00000004 _getpid
0001b06c g     F .text	000000b8 _puts_r
2007c762 g     O .bss	00000001 btn3
00010148  w    F .text	00000010 TIMER2_IRQHandler
0001fda8 g     F .text	0000007a .hidden __cmpdf2
0001dfd4 g     F .text	00000024 _lseek_r
0001403e g     F .text	000000a6 get_fat
000124e4 g     F .text	0000001c RIT_IRQHandler
00015dfc g     F .text	000000f8 mesh_form_pkt
0001fda8 g     F .text	0000007a .hidden __eqdf2
00013ab8 g     F .text	00000010 flash_supports_metadata
000201e4 g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
0001df68 g     F .text	00000024 _gettimeofday_r
00010ac4 g     F .text	00000014 vPortExitCritical
00018e4c g     F .text	0000005a .hidden __floatdidf
00010148  w    F .text	00000010 I2C0_IRQHandler
2007c6c4  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001b538 g     F .text	00000024 _kill_r
0001b03c g     F .text	00000030 printf
00010518 g     F .text	0000002c sys_get_uptime_us
000178c0 g     F .text	00000030 LabGPIO_1::setLow()
0001b65a g     F .text	00000024 __sseek
000199c0 g     F .text	00000060 __sinit
0001290c  w    F .text	00000014 Uart3::~Uart3()
0001c9b0 g     F .text	000000a4 __swbuf_r
2007c8bc g     O .bss	00000004 _daylight
000177d0 g     F .text	0000000c Disp::none()
2007c6dc  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
00018518 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00020f94 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00020338  w    O .text	0000001c vtable for Uart3
00019994 g     F .text	0000002c __sfmoreglue
000171a0 g     F .text	00000004 __malloc_unlock
0001596e g     F .text	00000030 I2C_Temp::getCelsius()
000189a0 g     F .text	0000012a __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001c340 g     F .text	00000020 _strtod_r
0001930c g     F .text	00000136 .hidden __divsf3
00013360 g     F .text	00000098 sd_read
000202ec  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
0001d906 g     F .text	0000002a __hexdig_fun
00011f80 g     F .text	0000006c UartDev::getChar(char*, unsigned int)
00020308  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00012520 g     F .text	0000006c lpc_timer_enable
00010148  w    F .text	00000010 PWM1_IRQHandler
00019cd4 g     F .text	00000034 memmove
00016558 g     F .text	00000008 nordic_clear_packet_sent_flag
2007c494  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
00019b5c g     F .text	0000001c __locale_ctype_ptr
00010f5c g     F .text	00000080 xQueueGenericSendFromISR
0001dff8 g     F .text	00000068 _Balloc
000214ac g       .ARM.exidx	00000000 __exidx_end
0001258c g     F .text	00000048 rtc_gettime
000100d8 g       .text	00000000 __data_section_table_end
0001240c g     F .text	00000030 eint3_enable_port0
0001774c g     F .text	00000038 GpioInterrupt::HandleInterrupt()
00010148  w    F .text	00000010 I2C1_IRQHandler
00012e08 g     F .text	0000000e is_freertos_running
000129c0 g     F .text	0000002c c_list_find_elm
00010148  w    F .text	00000010 EINT2_IRQHandler
00010148  w    F .text	00000010 UART1_IRQHandler
0001fd98 g     F .text	0000008a .hidden __gtdf2
000197ac g     F .text	0000000c __errno
000201d8 g     O .text	0000000c typeinfo for UartDev
00010780 g     F .text	000000b4 sys_clock_configure()
0001a298 g     F .text	00000064 _mallinfo_r
00011a84 g     F .text	00000010 vRunTimeStatIsrExit
0001dfb4 g     F .text	00000004 __localeconv_l
00016a90  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007c328 g     O .bss	00000004 pxCurrentTCB
00013008 g     F .text	0000002e wait_ready
0001238c g     F .text	00000080 EINT3_IRQHandler
00015794 g     F .text	00000064 IR_Sensor::decodeIrCode()
0001650c g     F .text	00000016 nordic_standby1_to_tx_mode1
00015df0 g     F .text	0000000c mesh_get_node_address
000157f8 g     F .text	00000034 IR_Sensor::init()
0001d878 g     F .text	00000024 _fstat_r
00017924 g     F .text	0000073c vControlLED(void*)
2007c8c8 g     O .bss	00000004 errno
000178f0 g     F .text	00000034 LabGPIO_1::getLevel()
0001f44c g     F .text	000001ec _scanf_i
0001b61e g     F .text	00000004 __seofread
000214ac g       .ARM.exidx	00000000 _etext
000165f0 g     F .text	0000003e nordic_set_intr_signals
0001fe34 g     F .text	00000010 .hidden __aeabi_cdcmple
2007c4a4  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
000164f8 g     F .text	00000008 nordic_clear_all_intr_flags
00011c3a g     F .text	00000018 I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)
00018f94 g     F .text	00000160 .hidden __aeabi_fadd
00018f90 g     F .text	00000164 .hidden __subsf3
000156a0 g     F .text	00000024 ff_wtoupper
0001f334 g     F .text	00000050 _vfiscanf_r
0001047c g     F .text	00000048 lpc_pclk
00010148  w    F .text	00000010 TIMER3_IRQHandler
000124a8 g     F .text	00000014 I2C2::I2C2()
0001676a g     F .text	0000000c nordic_set_rx_pipe0_addr
00012880 g     F .text	00000024 UART0_IRQHandler
00010b64 g     F .text	00000030 xPortStartScheduler
00018060 g     F .text	00000038 vButtonPress(void*)
00019cbe g     F .text	00000016 memcpy
00011824 g     F .text	00000020 vTaskPlaceOnEventList
0001ddb8 g     F .text	00000120 __hexnan
00012728 g     F .text	000000c0 ssp1_dma_transfer_block
0001fe24 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007c318 g     O .bss	00000004 gp_timer_ptr
0001b374 g     F .text	0000015c setvbuf
00016b10  w    F .text	0000004c Storage::getFlashDrive()
00020284  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
00019940 g     F .text	0000000c _cleanup_r
00018468 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001e8cc g     F .text	000001e8 _svfprintf_r
00018ddc g     F .text	00000022 .hidden __floatsidf
00010b50  w    F .text	00000014 vPortSetupTimerInterrupt
000165e4 g     F .text	0000000c nordic_flush_rx_fifo
0001fda0 g     F .text	00000082 .hidden __ltdf2
00010b24 g     F .text	0000002c xPortSysTickHandler
000100fa  w    F .text	0000000e isr_nmi
00012ed8 g     F .text	00000026 disk_initialize
00018474 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00019484 g     F .text	00000000 .hidden __aeabi_uldivmod
00011d98  w    F .text	0000010a I2C_Base::i2cStateMachine()
0001b124 g     F .text	00000010 puts
00020fe8 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
000109a4 g     F .text	0000001a vPortFree
0001f334 g     F .text	00000050 _vfscanf_r
0001e702 g     F .text	00000050 __ratio
0001b344 g     F .text	00000030 iscanf
000158ce g     F .text	00000004 LED::init()
000156d8 g     F .text	00000004 ff_del_syncobj
00020240  w    O .text	00000007 typeinfo name for Uart0
00019c40 g     F .text	00000010 malloc
00011a94  w    F .text	00000004 CharDev::flush()
000100e0  w    F .text	0000001a isr_hard_fault
0001582c g     F .text	00000018 LED_Display::setLeftDigit(char)
0001b4d8 g     F .text	00000050 _raise_r
00017600 g     F .text	00000010 _fstat
000127e8 g     F .text	00000030 spi1_lock
000190fc g     F .text	0000001c .hidden __aeabi_i2f
00021390 g     O .text	000000c8 __mprec_tens
0001c994 g     F .text	0000001c vsnprintf
00010ae0 g     F .text	00000044 xPortPendSVHandler
00017844 g     F .text	0000004c LabGPIO_1::setDirection(bool)
00018ea8 g     F .text	00000040 .hidden __fixunsdfsi
00010bd8 g     F .text	00000018 vListInsertEnd
00016748 g     F .text	00000016 nordic_set_addr_width
000131e4 g     F .text	0000016c sd_initialize
0001eb2e g     F .text	0000003a __ssrefill_r
00016778 g     F .text	000000c8 nordic_init
0001b55c g     F .text	00000004 _getpid_r
000214a4 g       .text	00000000 __symbol_table_end
00012efe g     F .text	00000010 disk_status
000169d8 g     F .text	0000004c wireless_init
0001f7d8 g     F .text	0000002c strtoul
00018dbc g     F .text	0000001e .hidden __aeabi_ui2d
0001243c g     F .text	0000006c I2C2::init(unsigned int)
0001dfb8 g     F .text	0000001c _localeconv_r
00018648 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001e21c g     F .text	00000012 __i2b
000184b4 g     F .text	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
000194b4 g     F .text	000002dc .hidden __udivmoddi4
00016694 g     F .text	00000024 nordic_set_channel
00018b38 g     F .text	00000000 .hidden __aeabi_drsub
00010194 g     F .text	0000006c isr_reset
0001b324 g     F .text	00000020 _sbrk_r
000176c0 g     F .text	0000008c GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)
0001604c g     F .text	0000003e mesh_send
000202a0  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
0001f638 g     F .text	00000024 _read_r
00010bd2 g     F .text	00000006 vListInitialiseItem
00012f7e g     F .text	00000032 disk_ioctl
00010148  w    F .text	00000010 PLL0_IRQHandler
0001fe58 g     F .text	00000012 .hidden __aeabi_dcmplt
00012300 g     F .text	00000028 CAN_IRQHandler
0001991c g     F .text	00000024 fflush
00010118  w    F .text	00000010 isr_bus_fault
00010148  w    F .text	00000010 PLL1_IRQHandler
000201b0 g     O .text	00000009 typeinfo name for CharDev
00010b94 g     F .text	00000014 rts_not_full_trace_init
0001585c g     F .text	00000038 LED_Display::init()
00018e00 g     F .text	0000003a .hidden __extendsfdf2
0001eb68 g     F .text	000002a8 __ssvfscanf_r
0001fbc8 g     F .text	000001d0 .hidden __aeabi_ddiv
00010148  w    F .text	00000010 SSP0_IRQHandler
000166b8 g     F .text	0000002c nordic_set_air_data_rate
00018b44 g     F .text	00000276 .hidden __adddf3
2007c764 g     O .bss	00000004 button_press_semaphore
00010148  w    F .text	00000010 CANAct_IRQHandler
00020fbc g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
0001e5c0 g     F .text	000000a4 __b2d
000214a4 g       .text	00000000 __exidx_start
0001f974 g     F .text	00000254 .hidden __aeabi_dmul
00010214 g     F .text	0000000c sys_get_boot_type
00017610 g     F .text	00000024 _isatty
0001849c g     F .text	00000018 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001675e g     F .text	0000000c nordic_set_tx_address
00017214 g     F .text	00000004 operator delete(void*)
000210c0 g     O .text	00000004 _global_impure_ptr
0001865c g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001e7c8 g     F .text	0000004c _realloc_r
00019b0c g     F .text	00000048 __libc_init_array
000130e8 g     F .text	0000004c xmit_datablock
00011edc g     F .text	0000005c UartDev::putChar(char, unsigned int)
000165d0 g     F .text	00000014 nordic_read_rx_fifo
00012e6c g     F .text	0000006c tlm_component_add
00021368 g     O .text	00000028 __mprec_bigtens
0001e104 g     F .text	0000007c __s2b
00019794 g     F .text	0000000e abort
00018dbc g     F .text	0000001e .hidden __floatunsidf
000138b4 g     F .text	00000098 flash_initialize
000171a4 g     F .text	0000006c _sbrk
0001e486 g     F .text	00000034 __mcmp
00010986 g     F .text	0000001e pvPortMalloc
000182a8 g     F .text	00000048 extBtnISR()
000202a8  w    O .text	00000007 typeinfo name for Uart2
00012850  w    F .text	00000014 Uart0::~Uart0()
00010148  w    F .text	00000010 I2S_IRQHandler
000173d4 g     F .text	00000004 _init
0001057c  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
000124bc g     F .text	00000028 I2C2_IRQHandler
00010bbc g     F .text	00000016 vListInitialise
000177dc g     F .text	00000006 LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)
000173d8 g     F .text	00000034 syscalls_init
0001290c  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001c484 g     F .text	0000002c strtol
000128a4  w    F .text	00000014 Uart2::~Uart2()
00018b14 g     F .text	0000000a std::terminate()
00018ee8 g     F .text	0000009e .hidden __aeabi_d2f
00011c52 g     F .text	00000018 I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)
000114e8 g     F .text	0000000c xTaskGetTickCount
00010e34 g     F .text	00000104 xQueueGenericSend
00018f90 g     F .text	00000164 .hidden __aeabi_fsub
00012d40 g     F .text	000000ac RTC_IRQHandler
0001b750 g     F .text	00000bf0 _strtod_l
0001dd92 g     F .text	00000026 __match
2007c8cc g       .bss	00000000 _ebss
00018670 g     F .text	00000074 __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00010148  w    F .text	00000010 TIMER0_IRQHandler
00010200 g     F .text	00000006 __set_PSP
00011f60 g     F .text	00000020 UartDev::flush()
0001c994 g     F .text	0000001c vsniprintf
00020f38 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0001c62a g     F .text	00000002 __tz_unlock
00010148  w    F .text	00000010 SPI_IRQHandler
0001e180 g     F .text	0000003e __hi0bits
00010158  w    F .text	00000012 isr_sys_tick
00016734 g     F .text	00000014 nordic_set_payload_for_pipe
0001fed4 g     F .text	0000004e .hidden __fixdfsi
000119d4 g     F .text	00000070 xTaskPriorityDisinherit
00013a20 g     F .text	00000044 flash_write_permanent_id
2007c480 g     O .bss	00000004 g_adc_result_queue
00019128 g     F .text	0000007c .hidden __floatdisf
000202d0  w    O .text	0000001c vtable for Uart2
00016c3c g     F .text	00000560 high_level_init()
000120ac g     F .text	00000028 UartDev::UartDev(unsigned int*)
000176ae g     F .text	00000002 GpioInterrupt::GpioInterrupt()
00018aca g     F .text	00000002 std::type_info::~type_info()
00010834 g     F .text	000000a8 sys_get_cpu_clock
0001572c  w    F .text	0000002a i2c2_device::get16BitRegister(unsigned char)
00010220 g     F .text	00000228 low_level_init()
2007c2b0 g     O .data	00000008 _tzname
00016ab8  w    F .text	00000024 SingletonTemplate<LED_Display>::getInstance()
00011844 g     F .text	00000070 xTaskRemoveFromEventList
000109fc g     F .text	00000024 vApplicationMallocFailedHook
2007c2f8 g     O .data	00000004 environ
00012864 g     F .text	0000001c Uart0::Uart0()
0001069c g     F .text	00000058 isr_hard_fault_handler
0001861e g     F .text	00000004 operator delete(void*, unsigned int)
00018b44 g     F .text	00000276 .hidden __aeabi_dadd
0001fda0 g     F .text	00000082 .hidden __ledf2
2007c6cc  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
00011be4 g     F .text	00000028 I2C_Base::readReg(unsigned char, unsigned char)
000129ec g     F .text	0000002a c_list_for_each_elm
00012988 g     F .text	00000038 c_list_insert_elm_end
0001e348 g     F .text	0000009c __pow5mult
00018e3c g     F .text	0000006a .hidden __aeabi_ul2d
000176ae g     F .text	00000002 GpioInterrupt::GpioInterrupt()
00016534 g     F .text	00000024 nordic_standby1_to_rx
00010148  w    F .text	00000010 EINT1_IRQHandler
00010594 g     F .text	000000bc TIMER1_IRQHandler
00015934 g     F .text	00000018 Switches::getSwitchValues()
00021060 g     O .text	00000020 __sf_fake_stderr
000202b0  w    O .text	00000020 typeinfo for Uart2
2007c761 g     O .bss	00000001 btn2
00018b04 g     F .text	00000010 std::get_terminate()
0001656c g     F .text	0000004c nordic_mode1_send_single_packet
0001305c g     F .text	0000008c rcvr_datablock
000128e8 g     F .text	00000024 UART2_IRQHandler
00011f38  w    F .text	00000014 UartDev::~UartDev()
000160a4 g     F .text	0000001c mesh_get_num_routing_entries
00010ba8 g     F .text	00000014 rts_not_full_trace_get
0001e814 g     F .text	000000b6 __ssputs_r
000177c4 g     F .text	0000000c Disp::end()
00015dd8 g     F .text	00000018 mesh_set_node_address
00011a44 g     F .text	00000018 pvTaskIncrementMutexHeldCount
0001283c  w    F .text	00000014 Uart0::~Uart0()
000184de g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00018648 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001fe94 g     F .text	00000012 .hidden __aeabi_dcmpgt
00018434 g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c6b8  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
0001ee3c g     F .text	00000024 __sfputs_r
00015928 g     F .text	00000006 Light_Sensor::getRawValue()
00019c84 g     F .text	0000001c memchr
0001a4dc  w    F .text	00000470 _printf_float
00012818 g     F .text	00000024 spi1_unlock
000118cc g     F .text	0000004c xTaskCheckForTimeOut
0001a200 g     F .text	00000098 _free_r
0001fe80 g     F .text	00000012 .hidden __aeabi_dcmpge
000128cc g     F .text	0000001c Uart2::Uart2()
00016a70  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
000108dc g     F .text	00000060 uart0_init
2007c300 g       .bss	00000000 _bss
0001eab4 g     F .text	0000007a _sungetc_r
00016c24  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00014f34 g     F .text	00000024 f_close
00013350 g     F .text	00000010 sd_status
00018b40 g     F .text	0000027a .hidden __aeabi_dsub
00019ed8 g     F .text	000002f8 mktime
00010148 g     F .text	00000010 isr_default_handler
000165c8 g     F .text	00000008 nordic_clear_packet_available_flag
00020238  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
000114d8 g     F .text	00000010 vTaskSuspendAll
2007c4a8  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
00021050 g     O .text	0000000d typeinfo name for std::type_info
000114f4 g     F .text	0000000c xTaskGetTickCountFromISR
00018e3c g     F .text	0000006a .hidden __floatundidf
00013aac g     F .text	0000000c flash_get_page_size
0001b184 g     F .text	00000074 rand
000174a8 g     F .text	00000060 _lseek
00018640 g     F .text	00000006 __cxa_pure_virtual
0001e3e4 g     F .text	000000a2 __lshift
000190fc g     F .text	0000001c .hidden __floatsisf
2007c86d g     O .bss	00000001 rst
00010c1e g     F .text	00000020 uxListRemove
00015720  w    F .text	0000000c i2c2_device::writeReg(unsigned char, unsigned char)
000176b0 g     F .text	00000010 GpioInterrupt::Initialize()
000159c4 g     F .text	00000044 Storage::read(char const*, void*, unsigned int, unsigned int)
00014b8e g     F .text	00000170 f_read
0001b6ba g     F .text	00000024 strncmp
000120f8 g     F .text	00000048 ADC_IRQHandler
00018578 g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001093c g     F .text	00000018 uart0_getchar
0001829c g     F .text	0000000c Eint3Handler()
0001e22e g     F .text	00000118 __multiply
0001068c g     F .text	00000010 isr_register
00011944 g     F .text	00000090 vTaskPriorityInherit
000156c4 g     F .text	00000014 ff_cre_syncobj
20083fe0 g       .bss	00000000 _vStackTop
0002112c g     O .text	00000060 __month_lengths
0001b6de g     F .text	0000002a strncpy
2007c870 g     O .bss	00000028 __malloc_current_mallinfo
0001e664 g     F .text	0000009e __d2b
2007c6d4  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
0001176c g     F .text	000000b8 vTaskSwitchContext
00018aca g     F .text	00000002 std::type_info::~type_info()
00012864 g     F .text	0000001c Uart0::Uart0()
00010148  w    F .text	00000010 SSP1_IRQHandler
000201bc g     O .text	0000001c vtable for CharDev
000185f4 g     F .text	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00020ff4 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
00016a24 g     F .text	0000004c wireless_service
0001f7b4 g     F .text	00000024 _strtoul_r
000165b8 g     F .text	00000010 nordic_is_packet_available
0001394c g     F .text	00000050 flash_read_sectors
000100e0 g       .text	00000000 __bss_section_table_end
0001930c g     F .text	00000136 .hidden __aeabi_fdiv
0001cb70 g     F .text	00000020 _close_r
2007c4a0  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
00018ddc g     F .text	00000022 .hidden __aeabi_i2d
00015f4c g     F .text	00000100 mesh_init
00010180 g     F .text	00000014 bss_init(unsigned int, unsigned int)
00011ad0 g     F .text	00000108 I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
00011ea4 g     F .text	00000038 I2C_Base::handleInterrupt()
00019ca0 g     F .text	0000001e memcmp
00010148  w    F .text	00000010 USB_IRQHandler
00019118 g     F .text	0000008c .hidden __floatundisf
00018518 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001b5a8 g     F .text	00000054 sscanf
0001ca94 g     F .text	000000dc __swsetup_r
2007c47c g     O .bss	00000004 g_adc_mutex
000109c4 g     F .text	00000038 vApplicationStackOverflowHook
00019790  w    F .text	00000002 .hidden __aeabi_ldiv0
0001fbc8 g     F .text	000001d0 .hidden __divdf3
00019a20 g     F .text	00000078 __sfp
0001e752 g     F .text	00000034 __copybits
00018acc g     F .text	00000004 std::type_info::__is_pointer_p() const
00016af4  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
000190f4 g     F .text	00000024 .hidden __aeabi_ui2f
00010148  w    F .text	00000010 BOD_IRQHandler
2007c08c g     O .data	00000040 g_can_structs
0001c93c g     F .text	00000058 _vsnprintf_r
0001f974 g     F .text	00000254 .hidden __muldf3
0001b5fc g     F .text	00000022 __sread
00013b80 g     F .text	00000052 get_fattime
00012dec g     F .text	0000001c delay_us
0001662e g     F .text	00000038 nordic_set_crc
00011f4c  w    F .text	00000014 UartDev::~UartDev()
0001096c g     F .text	0000001a uart0_puts
000128a4  w    F .text	00000014 Uart2::~Uart2()
00011a98 g     F .text	00000020 CharDev::CharDev()
0001719c g     F .text	00000004 __malloc_lock
00020f5c g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
2007c86c g     O .bss	00000001 pressed
000198c8 g     F .text	00000054 _fflush_r
0001a1e4 g     F .text	0000001c _calloc_r
00011cdc g     F .text	00000094 I2C_Base::init(unsigned long, unsigned long)
00021080 g     O .text	00000020 __sf_fake_stdin
0001c628 g     F .text	00000002 __tz_lock
00019d08 g     F .text	00000010 memset
0001016a g     F .text	00000016 data_init(unsigned int, unsigned int, unsigned int)
0001833c g     F .text	000000ec main
0002021c  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
00012e16 g     F .text	00000022 delay_ms
000164ea g     F .text	0000000e nordic_is_tx_fifo_empty
0001592e g     F .text	00000004 Switches::init()
00017218 g     F .text	000000b4 sys_get_mem_info
2007c310  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00016560 g     F .text	0000000c nordic_flush_tx_fifo
00019128 g     F .text	0000007c .hidden __aeabi_l2f
0001b134 g     F .text	00000050 srand
000120ac g     F .text	00000028 UartDev::UartDev(unsigned int*)
00014eaa g     F .text	0000008a f_sync
00011c80 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00010148  w    F .text	00000010 WDT_IRQHandler
00015844 g     F .text	00000018 LED_Display::setRightDigit(char)
000160c0 g     F .text	000002d0 mesh_service
00010bf0 g     F .text	0000002e vListInsert
0001b67e g     F .text	00000008 __sclose
2007c6d0  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
0001c460 g     F .text	00000024 _strtol_r
00018ee8 g     F .text	0000009e .hidden __truncdfsf2
00012140 g     F .text	00000074 adc0_init
0001ded8 g     F .text	00000080 _findenv_r
000214a4 g       .text	00000000 __init_array_end
00010a80 g     F .text	00000024 vPortSVCHandler
0001ccd0 g     F .text	00000ba8 _dtoa_r
0001a2fc g     F .text	000000bc _malloc_r
000177e4 g     F .text	00000030 LabGPIO_1::setAsInput()
0001ca54 g     F .text	0000001a __ascii_wctomb
0001c4b0 g     F .text	00000028 time
00015ef4 g     F .text	00000058 mesh_send_formed_pkt
00015170 g     F .text	000004f4 f_mkfs
00018e4c g     F .text	0000005a .hidden __aeabi_l2d
000158d4 g     F .text	00000050 LED::setAll(unsigned char)
000149e4 g     F .text	0000007c f_mount
000116e4 g     F .text	00000058 vTaskDelayUntil
0001f804 g     F .text	00000072 __submore
0001f95e g     F .text	00000002 __env_unlock
00020f2c g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00015778 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
00019a98 g     F .text	00000038 _fwalk
00011178 g     F .text	00000068 xQueueReceiveFromISR
00019118 g     F .text	0000008c .hidden __aeabi_ul2f
000133f8 g     F .text	000000b4 sd_write
00010e00 g     F .text	00000032 xQueueGenericCreate
00020318  w    O .text	00000020 typeinfo for Uart3
000191a4 g     F .text	00000168 .hidden __mulsf3
00010108  w    F .text	00000010 isr_mem_fault
00011c0c g     F .text	0000001a I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)
0001c62c g     F .text	0000000c _tzset_unlocked
0001b686 g     F .text	00000014 strcmp
0001b5a8 g     F .text	00000054 siscanf
00016666 g     F .text	00000018 nordic_power_up
000173a4 g     F .text	0000000c sys_set_inchar_func
00014164 g     F .text	000000d2 put_fat
00010148  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
000182f0 g     F .text	0000004c myButtonPressISR()
0001fda8 g     F .text	0000007a .hidden __nedf2
000201a8 g     O .text	00000008 typeinfo for CharDev
00016adc  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001b03c g     F .text	00000030 iprintf
00015702 g     F .text	0000001e ff_rel_grant
00012934 g     F .text	0000001c Uart3::Uart3()
0001852c g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001160c g     F .text	000000d8 xTaskResumeAll
0001f08c g     F .text	000002a8 __svfiscanf_r
00014f58 g     F .text	0000014e f_lseek
0001b560 g     F .text	00000048 sprintf
00017784 g     F .text	00000020 Disp::line(unsigned char)
00011f38  w    F .text	00000014 UartDev::~UartDev()
00011474 g     F .text	00000064 vTaskStartScheduler
0001a470 g     F .text	0000006a __exponent
00020310  w    O .text	00000007 typeinfo name for Uart3
00015756 g     F .text	00000020 Acceleration_Sensor::init()
0001863a g     F .text	00000006 __cxa_guard_release
00011a98 g     F .text	00000020 CharDev::CharDev()
0001ca70 g     F .text	00000024 _write_r
000201f0 g     O .text	0000001c vtable for UartDev
0001b344 g     F .text	00000030 scanf
2007c6c0  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
00018f88 g     F .text	0000016c .hidden __aeabi_frsub
0002101c g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
00010148  w    F .text	00000010 EINT0_IRQHandler
00017398 g     F .text	0000000c sys_set_outchar_func
00013b54 g     F .text	0000002c flash_chip_erase
0001b4d0 g     F .text	00000008 nanf
0001a94c g     F .text	000000ee _printf_common
000121b4 g     F .text	00000074 adc0_get_reading
2007c0e0 g     O .data	00000004 _impure_ptr
00012c86 g     F .text	0000003c u0_dbg_printf
000197b8 g     F .text	00000110 __sflush_r
000191a4 g     F .text	00000168 .hidden __aeabi_fmul
00020268  w    O .text	0000001c vtable for Uart0
000214a0 g       .text	00000000 __preinit_array_end
0001e8cc g     F .text	000001e8 _svfiprintf_r
0001b20c g     F .text	00000118 __srefill_r
00013038 g     F .text	00000024 power_off
000159a0 g     F .text	00000024 I2C_Temp::getFarenheit()
00019c60 g     F .text	00000024 __ascii_mbtowc
2007c000 g       .data	00000000 _data
000124a8 g     F .text	00000014 I2C2::I2C2()
00010206 g     F .text	00000006 __set_MSP
0001e578 g     F .text	00000048 __ulp
00012920  w    F .text	00000014 Uart3::~Uart3()
000128b8  w    F .text	00000014 Uart2::~Uart2()
00016500 g     F .text	0000000c nordic_queue_tx_fifo
00011918 g     F .text	0000000c vTaskMissedYield
2007c760 g     O .bss	00000001 btn1
2007c8cc g       .bss	00000000 _pvHeapStart
00010954 g     F .text	00000018 uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001a1d0 g     F .text	00000014 mallinfo
00011c26 g     F .text	00000014 I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)
00012c68 g     F .text	0000001e u0_dbg_put
00011fec g     F .text	000000c0 UartDev::handleInterrupt()
00011c6a g     F .text	00000014 I2C_Base::checkDeviceResponse(unsigned char)
0001c93c g     F .text	00000058 _vsniprintf_r
000111e0 g     F .text	00000012 uxQueueMessagesWaiting
00011044 g     F .text	00000134 xQueueGenericReceive
000177dc g     F .text	00000006 LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)
00018ea8 g     F .text	00000040 .hidden __aeabi_d2uiz
00011c80 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
2007c8c0 g     O .bss	00000004 _timezone
00013134 g     F .text	0000008c send_cmd
00018474 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001283c  w    F .text	00000014 Uart0::~Uart0()
00011500 g     F .text	0000010c xTaskIncrementTick
0001eb68 g     F .text	000002a8 __ssvfiscanf_r
0001667e g     F .text	00000016 nordic_power_down
000125d4 g     F .text	00000068 rtc_settime
2007c6d8  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
00014028 g     F .text	00000016 clust2sect
00018b20 g     F .text	00000018 .hidden __aeabi_llsl
00010544 g     F .text	00000038 sys_get_mem_info_str
00019b78 g     F .text	00000048 __swhatbuf_r
2007c0dc g     O .data	00000004 __cxxabiv1::__terminate_handler
0001020c g     F .text	00000006 __set_BASEPRI
0001fe44 g     F .text	00000012 .hidden __aeabi_dcmpeq
0001270c g     F .text	0000001c ssp1_dma_init
000128cc g     F .text	0000001c Uart2::Uart2()
00020f88 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00010d94 g     F .text	0000006c xQueueGenericReset
00017508 g     F .text	000000a4 _write
2007c2fc g       .data	00000000 _edata
0001870e g     F .text	00000292 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00016390 g     F .text	00000034 mesh_get_pnd_pkt_count
00015894 g     F .text	0000003a LED_Display::setNumber(char)
00013a8c g     F .text	00000020 flash_get_page_count
00011bd8 g     F .text	0000000c I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)
00014cfe g     F .text	000001ac f_write
0001594c g     F .text	00000022 I2C_Temp::init()
0001399c g     F .text	0000004c flash_write_sectors
0001c638 g     F .text	00000304 _tzset_unlocked_r
000112d0 g     F .text	000001a4 xTaskCreate
00019444 g     F .text	0000003e .hidden __aeabi_f2uiz
00011ab8 g     F .text	00000018 CharDev::~CharDev()
0001b622 g     F .text	00000038 __swrite
00017210 g     F .text	00000004 operator new(unsigned int)
00014a60 g     F .text	0000012e f_open
000186e4  w    F .text	0000002a __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00012f46 g     F .text	00000038 disk_write
000139e8 g     F .text	00000036 flash_ioctl
00016708 g     F .text	0000002c nordic_set_auto_transmit_options
00012974 g     F .text	00000014 c_list_create
0001ee60 g     F .text	0000022c _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00019ad0 g     F .text	0000003c _fwalk_reent
00018540 g     F .text	00000038 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000190f4 g     F .text	00000024 .hidden __floatunsisf
0001e4ba g     F .text	000000be __mdiff
00018098 g     F .text	00000204 vReadSwitch(void*)
00011ab8 g     F .text	00000018 CharDev::~CharDev()
0001fed4 g     F .text	0000004e .hidden __aeabi_d2iz
00018afc g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
000156dc g     F .text	00000026 ff_req_grant
2007c6bc  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
000173b0 g     F .text	00000010 _kill
00010148  w    F .text	00000010 DMA_IRQHandler
00012e48 g     F .text	00000024 tlm_component_get_by_name
0001173c g     F .text	00000030 vTaskDelay
00011d70  w    F .text	00000028 I2C_Base::setStop()
000210a0 g     O .text	00000020 __sf_fake_stdout
0001b560 g     F .text	00000048 siprintf
0001f65c g     F .text	0000005e __sccl
000197a2 g     F .text	00000008 atoi
00017634 g     F .text	0000007a _gettimeofday
00011924 g     F .text	00000020 xTaskGetSchedulerState
00021254 g     O .text	00000101 _ctype_
0001740c g     F .text	0000009c _read
000214a0 g       .text	00000000 __init_array_start
00019790  w    F .text	00000002 .hidden __aeabi_idiv0
000177a4 g     F .text	00000020 Disp::dot(unsigned char)
0001fea8 g     F .text	0000002c .hidden __unorddf2
00012b9c g     F .text	000000cc logger_init
00019444 g     F .text	0000003e .hidden __fixunssfsi
000173c0 g     F .text	00000010 _exit
00010128  w    F .text	00000010 isr_usage_fault
00015924 g     F .text	00000004 Light_Sensor::init()
00019bc0 g     F .text	00000080 __smakebuf_r
0001b6aa g     F .text	00000010 strlen
00012f0e g     F .text	00000038 disk_read
00010a54 g     F .text	00000024 pxPortInitialiseStack
0001aa3c g     F .text	00000240 _printf_i
00019b54 g     F .text	00000006 __locale_ctype_ptr_l
00021048 g     O .text	00000008 typeinfo for std::type_info
0001fe34 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0001fd98 g     F .text	0000008a .hidden __gedf2
00012950 g     F .text	00000024 UART3_IRQHandler
0001d930 g     F .text	0000043e __gethex
2007c89c g     O .bss	00000004 __malloc_sbrk_start
00010148  w    F .text	00000010 MCPWM_IRQHandler
0001cb90 g     F .text	00000028 div
000150a6 g     F .text	000000c8 f_getfree
000118b4 g     F .text	00000018 vTaskSetTimeOutState
00015664 g     F .text	0000003c ff_convert
2007c768 g     O .bss	00000100 intr
00018e00 g     F .text	0000003a .hidden __aeabi_f2d
00010aa4 g     F .text	00000020 vPortEnterCritical
000214a4 g       .text	00000000 __symbol_table_start
000131c0 g     F .text	00000024 sd_update_card_status
00013a64 g     F .text	00000028 flash_read_permanent_id
2007c898 g     O .bss	00000004 __malloc_free_list
2007c6c8  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00016524 g     F .text	00000010 nordic_rx_to_Stanby1
000111f2 g     F .text	00000004 uxQueueMessagesWaitingFromISR
0001f95c g     F .text	00000002 __env_lock
2007c868 g     O .bss	00000004 led_sema
00018b40 g     F .text	0000027a .hidden __subdf3
0001ee60 g     F .text	0000022c _vfprintf_r
000214a0 g       .text	00000000 __preinit_array_start
0001e1be g     F .text	0000005e __lo0bits
0001f08c g     F .text	000002a8 __svfscanf_r
0001c4d8 g     F .text	00000150 __tzcalc_limits
00011a5c g     F .text	00000028 vRunTimeStatIsrEntry
0001f878 g     F .text	000000e4 _ungetc_r
00018ad0 g     F .text	0000002c std::type_info::operator==(std::type_info const&) const
00018622 g     F .text	00000018 __cxa_guard_acquire
00010148  w    F .text	00000010 ENET_IRQHandler
00010148  w    F .text	00000010 USBAct_IRQHandler
00010f38 g     F .text	00000024 xQueueCreateMutex
00018f94 g     F .text	00000160 .hidden __addsf3
2007c144 g     O .data	0000016c __global_locale
000166e4 g     F .text	00000024 nordic_set_power_level
00017814 g     F .text	00000030 LabGPIO_1::setAsOutput()
00010138  w    F .text	00000010 isr_debug_mon
00010fdc g     F .text	00000068 xQueueGiveFromISR
0001df8c g     F .text	00000008 __gettzinfo
0001b528 g     F .text	00000010 raise
000175ac g     F .text	00000054 _close
00019c50 g     F .text	00000010 free
000134ac g     F .text	0000021c sd_ioctl
0001ac7c  w    F .text	000003c0 _scanf_float
00020248  w    O .text	00000020 typeinfo for Uart0
0001e08e g     F .text	00000076 __multadd
00018488 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001e060 g     F .text	0000002e _Bfree
0001df58 g     F .text	0000000e _getenv_r
00010448 g     F .text	00000034 lpc_pconp
000109be g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
   10000:	e0 3f 08 20 95 01 01 00 fb 00 01 00 e1 00 01 00     .?. ............
   10010:	09 01 01 00 19 01 01 00 29 01 01 00 00 00 00 00     ........).......
	...
   1002c:	81 0a 01 00 39 01 01 00 00 00 00 00 e1 0a 01 00     ....9...........
   1003c:	59 01 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Y...Q...Q...Q...
   1004c:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   1005c:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   1006c:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   1007c:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   1008c:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   1009c:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   100ac:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...
   100bc:	51 06 01 00 51 06 01 00 51 06 01 00 51 06 01 00     Q...Q...Q...Q...

000100cc <__data_section_table>:
__data_section_table():
   100cc:	000214ac 	.word	0x000214ac
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000002fc 	.word	0x000002fc

000100d8 <__bss_section_table>:
__bss_section_table():
   100d8:	2007c300 	.word	0x2007c300
   100dc:	000005cc 	.word	0x000005cc

000100e0 <isr_hard_fault>:
isr_hard_fault():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:396
            "MRS    R0, PSP \n"
            "B      isr_hard_fault_handler  \n"
            "_MSP:  \n"
            "MRS    R0, MSP \n"
            "B      isr_hard_fault_handler  \n"
    ) ;
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	d003      	beq.n	100f0 <_MSP>
   100e8:	f3ef 8009 	mrs	r0, PSP
   100ec:	f000 bad6 	b.w	1069c <isr_hard_fault_handler>

000100f0 <_MSP>:
   100f0:	f3ef 8008 	mrs	r0, MSP
   100f4:	f000 bad2 	b.w	1069c <isr_hard_fault_handler>
   100f8:	4770      	bx	lr

000100fa <isr_nmi>:
isr_nmi():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:399
}

__attribute__ ((section(".after_vectors"))) void isr_nmi(void)        { u0_dbg_put("NMI Fault\n"); while(1); }
   100fa:	b508      	push	{r3, lr}
   100fc:	4801      	ldr	r0, [pc, #4]	; (10104 <isr_nmi+0xa>)
   100fe:	f002 fdb3 	bl	12c68 <u0_dbg_put>
   10102:	e7fe      	b.n	10102 <isr_nmi+0x8>
   10104:	0002009e 	.word	0x0002009e

00010108 <isr_mem_fault>:
isr_mem_fault():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:400
__attribute__ ((section(".after_vectors"))) void isr_mem_fault(void)  { u0_dbg_put("Mem Fault\n"); while(1); }
   10108:	b508      	push	{r3, lr}
   1010a:	4802      	ldr	r0, [pc, #8]	; (10114 <isr_mem_fault+0xc>)
   1010c:	f002 fdac 	bl	12c68 <u0_dbg_put>
   10110:	e7fe      	b.n	10110 <isr_mem_fault+0x8>
   10112:	bf00      	nop
   10114:	000200a9 	.word	0x000200a9

00010118 <isr_bus_fault>:
isr_bus_fault():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:401
__attribute__ ((section(".after_vectors"))) void isr_bus_fault(void)  { u0_dbg_put("BUS Fault\n"); while(1); }
   10118:	b508      	push	{r3, lr}
   1011a:	4802      	ldr	r0, [pc, #8]	; (10124 <isr_bus_fault+0xc>)
   1011c:	f002 fda4 	bl	12c68 <u0_dbg_put>
   10120:	e7fe      	b.n	10120 <isr_bus_fault+0x8>
   10122:	bf00      	nop
   10124:	000200b4 	.word	0x000200b4

00010128 <isr_usage_fault>:
isr_usage_fault():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:402
__attribute__ ((section(".after_vectors"))) void isr_usage_fault(void){ u0_dbg_put("Usage Fault\n"); while(1); }
   10128:	b508      	push	{r3, lr}
   1012a:	4802      	ldr	r0, [pc, #8]	; (10134 <isr_usage_fault+0xc>)
   1012c:	f002 fd9c 	bl	12c68 <u0_dbg_put>
   10130:	e7fe      	b.n	10130 <isr_usage_fault+0x8>
   10132:	bf00      	nop
   10134:	000200bf 	.word	0x000200bf

00010138 <isr_debug_mon>:
isr_debug_mon():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:403
__attribute__ ((section(".after_vectors"))) void isr_debug_mon(void)  { u0_dbg_put("DBGMON Fault\n"); while(1); }
   10138:	b508      	push	{r3, lr}
   1013a:	4802      	ldr	r0, [pc, #8]	; (10144 <isr_debug_mon+0xc>)
   1013c:	f002 fd94 	bl	12c68 <u0_dbg_put>
   10140:	e7fe      	b.n	10140 <isr_debug_mon+0x8>
   10142:	bf00      	nop
   10144:	000200cc 	.word	0x000200cc

00010148 <isr_default_handler>:
TIMER2_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:406

/// If an IRQ is not registered, we end up at this stub function
__attribute__ ((section(".after_vectors"))) void isr_default_handler(void) { u0_dbg_put("IRQ not registered!"); while(1); }
   10148:	b508      	push	{r3, lr}
   1014a:	4802      	ldr	r0, [pc, #8]	; (10154 <isr_default_handler+0xc>)
   1014c:	f002 fd8c 	bl	12c68 <u0_dbg_put>
   10150:	e7fe      	b.n	10150 <isr_default_handler+0x8>
   10152:	bf00      	nop
   10154:	000200da 	.word	0x000200da

00010158 <isr_sys_tick>:
isr_sys_tick():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:410

/// Wrap the FreeRTOS tick function such that we get a true measure of how much CPU tasks are using
__attribute__ ((section(".after_vectors"))) void isr_sys_tick(void)
{
   10158:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:411
    vRunTimeStatIsrEntry();
   1015a:	f001 fc7f 	bl	11a5c <vRunTimeStatIsrEntry>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:412
    xPortSysTickHandler();
   1015e:	f000 fce1 	bl	10b24 <xPortSysTickHandler>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:414
    vRunTimeStatIsrExit();
}
   10162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:413
    vRunTimeStatIsrExit();
   10166:	f001 bc8d 	b.w	11a84 <vRunTimeStatIsrExit>

0001016a <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:195
{
   1016a:	460b      	mov	r3, r1
   1016c:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:200
        *pulDest++ = *pulSrc++;
   1016e:	1a40      	subs	r0, r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10170:	1a5c      	subs	r4, r3, r1
   10172:	42a2      	cmp	r2, r4
   10174:	d903      	bls.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:200 (discriminator 2)
        *pulDest++ = *pulSrc++;
   10176:	58c4      	ldr	r4, [r0, r3]
   10178:	f843 4b04 	str.w	r4, [r3], #4
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:199 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   1017c:	e7f8      	b.n	10170 <data_init(unsigned int, unsigned int, unsigned int)+0x6>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:206
    unsigned int *pulDest = (unsigned int*) start;
   10180:	4603      	mov	r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:209
        *pulDest++ = 0;
   10182:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:205
{
   10184:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 3)
    for (loop = 0; loop < len; loop = loop + 4)
   10186:	1a1c      	subs	r4, r3, r0
   10188:	42a1      	cmp	r1, r4
   1018a:	d902      	bls.n	10192 <bss_init(unsigned int, unsigned int)+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:209 (discriminator 2)
        *pulDest++ = 0;
   1018c:	f843 2b04 	str.w	r2, [r3], #4
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:208 (discriminator 2)
    for (loop = 0; loop < len; loop = loop + 4)
   10190:	e7f9      	b.n	10186 <bss_init(unsigned int, unsigned int)+0x6>
   10192:	bd10      	pop	{r4, pc}

00010194 <isr_reset>:
isr_reset():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:238
        __set_PSP(topOfStack);
   10194:	4815      	ldr	r0, [pc, #84]	; (101ec <isr_reset+0x58>)
   10196:	f000 f833 	bl	10200 <__set_PSP>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:239
        __set_MSP(topOfStack);
   1019a:	4814      	ldr	r0, [pc, #80]	; (101ec <isr_reset+0x58>)
   1019c:	f000 f833 	bl	10206 <__set_MSP>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:248
        SectionTableAddr = &__data_section_table;
   101a0:	4c13      	ldr	r4, [pc, #76]	; (101f0 <isr_reset+0x5c>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101a2:	4d14      	ldr	r5, [pc, #80]	; (101f4 <isr_reset+0x60>)
   101a4:	42ac      	cmp	r4, r5
   101a6:	d309      	bcc.n	101bc <isr_reset+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101a8:	4d13      	ldr	r5, [pc, #76]	; (101f8 <isr_reset+0x64>)
   101aa:	42ac      	cmp	r4, r5
   101ac:	d20e      	bcs.n	101cc <isr_reset+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:263
            ExeAddr = *SectionTableAddr++;
   101ae:	f854 0b08 	ldr.w	r0, [r4], #8
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:265
            bss_init(ExeAddr, SectionLen);
   101b2:	f854 1c04 	ldr.w	r1, [r4, #-4]
   101b6:	f7ff ffe3 	bl	10180 <bss_init(unsigned int, unsigned int)>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:261
        while (SectionTableAddr < &__bss_section_table_end)
   101ba:	e7f6      	b.n	101aa <isr_reset+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:254
            ExeAddr = *SectionTableAddr++;
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	340c      	adds	r4, #12
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:256
            data_init(LoadAddr, ExeAddr, SectionLen);
   101c2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101c6:	f7ff ffd0 	bl	1016a <data_init(unsigned int, unsigned int, unsigned int)>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:251
        while (SectionTableAddr < &__data_section_table_end)
   101ca:	e7eb      	b.n	101a4 <isr_reset+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:270
        __libc_init_array();    // Call C++ library initialization
   101cc:	f009 fc9e 	bl	19b0c <__libc_init_array>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:274
        low_level_init();   // Initialize minimal system, such as Clock & UART
   101d0:	f000 f826 	bl	10220 <low_level_init()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:275
        high_level_init();  // Initialize high level board specific features
   101d4:	f006 fd32 	bl	16c3c <high_level_init()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:276
        main();             // Finally call main()
   101d8:	f008 f8b0 	bl	1833c <main>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:280
    uart0_init(SYS_CFG_UART0_BPS);
   101dc:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101e0:	f000 fb7c 	bl	108dc <uart0_init>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:281
    u0_dbg_put("main() should never exit on this system\n");
   101e4:	4805      	ldr	r0, [pc, #20]	; (101fc <isr_reset+0x68>)
   101e6:	f002 fd3f 	bl	12c68 <u0_dbg_put>
   101ea:	e7fe      	b.n	101ea <isr_reset+0x56>
   101ec:	20083fe0 	.word	0x20083fe0
   101f0:	000100cc 	.word	0x000100cc
   101f4:	000100d8 	.word	0x000100d8
   101f8:	000100e0 	.word	0x000100e0
   101fc:	000200ee 	.word	0x000200ee

00010200 <__set_PSP>:
__set_PSP():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/core_cm3.c:464
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
   10200:	f380 8809 	msr	PSP, r0
   10204:	4770      	bx	lr

00010206 <__set_MSP>:
__set_MSP():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/core_cm3.c:498
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
   10206:	f380 8808 	msr	MSP, r0
   1020a:	4770      	bx	lr

0001020c <__set_BASEPRI>:
__set_BASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/core_cm3.c:526
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
   1020c:	f380 8811 	msr	BASEPRI, r0
   10210:	4770      	bx	lr
   10212:	Address 0x0000000000010212 is out of bounds.


00010214 <sys_get_boot_type>:
sys_get_boot_type():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:124
static rtc_t g_rtc_boot_time = {0};

sys_boot_t sys_get_boot_type()
{
    return g_sys_boot_type;
}
   10214:	4b01      	ldr	r3, [pc, #4]	; (1021c <sys_get_boot_type+0x8>)
   10216:	7818      	ldrb	r0, [r3, #0]
   10218:	4770      	bx	lr
   1021a:	bf00      	nop
   1021c:	2007c30c 	.word	0x2007c30c

00010220 <low_level_init()>:
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:165
 * Initializes the minimal system including CPU Clock, UART, and Flash accelerator
 * Be careful of the order of the operations!!!
 */
#include "FreeRTOS.h"
void low_level_init(void)
{
   10220:	b530      	push	{r4, r5, lr}
   10222:	b085      	sub	sp, #20
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:177
        // logs all the way up until the RTOS starts
        // I tried starting it early but it didn't work :(
        // uiTraceStart();
    #endif

    rtc_init();
   10224:	f002 fa0a 	bl	1263c <rtc_init>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:178
    g_rtc_boot_time = rtc_gettime();
   10228:	4668      	mov	r0, sp
   1022a:	f002 f9af 	bl	1258c <rtc_gettime>
   1022e:	4c77      	ldr	r4, [pc, #476]	; (1040c <low_level_init()+0x1ec>)
   10230:	9b00      	ldr	r3, [sp, #0]
   10232:	6023      	str	r3, [r4, #0]
   10234:	9b01      	ldr	r3, [sp, #4]
   10236:	6063      	str	r3, [r4, #4]
   10238:	9b02      	ldr	r3, [sp, #8]
   1023a:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:181

    /* Configure System Clock based on desired clock rate @ sys_config.h */
    sys_clock_configure();
   1023c:	f000 faa0 	bl	10780 <sys_clock_configure()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:182
    configure_flash_acceleration(sys_get_cpu_clock());
   10240:	f000 faf8 	bl	10834 <sys_get_cpu_clock>
configure_flash_acceleration():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:36
    const uint32_t clockMhz = clock / (1000 * 1000);
   10244:	4b72      	ldr	r3, [pc, #456]	; (10410 <low_level_init()+0x1f0>)
   10246:	fbb0 f0f3 	udiv	r0, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   1024a:	283c      	cmp	r0, #60	; 0x3c
   1024c:	4b71      	ldr	r3, [pc, #452]	; (10414 <low_level_init()+0x1f4>)
   1024e:	f200 809a 	bhi.w	10386 <low_level_init()+0x166>
   10252:	2829      	cmp	r0, #41	; 0x29
   10254:	f080 80a1 	bcs.w	1039a <low_level_init()+0x17a>
   10258:	2814      	cmp	r0, #20
   1025a:	f200 809b 	bhi.w	10394 <low_level_init()+0x174>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:42
        case  0 ... 20  : LPC_SC->FLASHCFG = (0 << 12) | const_val; break;
   1025e:	223a      	movs	r2, #58	; 0x3a
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   10260:	601a      	str	r2, [r3, #0]
NVIC_SetPriority():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1574
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10262:	2308      	movs	r3, #8
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1576
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10264:	2298      	movs	r2, #152	; 0x98
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1574
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
   10266:	496c      	ldr	r1, [pc, #432]	; (10418 <low_level_init()+0x1f8>)
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
    /* Setup default interrupt priorities that will work with FreeRTOS */
    configure_interrupt_priorities();

    /* These methods shouldn't be needed but doing it anyway to be safe */
    NVIC_SetPriorityGrouping(0);
    __set_BASEPRI(0);
   10268:	2000      	movs	r0, #0
NVIC_SetPriority():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1574
   1026a:	760b      	strb	r3, [r1, #24]
   1026c:	764b      	strb	r3, [r1, #25]
   1026e:	768b      	strb	r3, [r1, #26]
   10270:	f881 3020 	strb.w	r3, [r1, #32]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   10274:	4b69      	ldr	r3, [pc, #420]	; (1041c <low_level_init()+0x1fc>)
   10276:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1027a:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1027e:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   10282:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   10286:	2290      	movs	r2, #144	; 0x90
   10288:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1028c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   10290:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   10294:	2270      	movs	r2, #112	; 0x70
   10296:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1029a:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1029e:	2258      	movs	r2, #88	; 0x58
   102a0:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   102a4:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   102a8:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   102ac:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   102b0:	2278      	movs	r2, #120	; 0x78
   102b2:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   102b6:	22a0      	movs	r2, #160	; 0xa0
   102b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   102bc:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   102c0:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   102c4:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   102c8:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   102cc:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   102d0:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   102d4:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   102d8:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   102dc:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   102e0:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   102e4:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   102e8:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   102ec:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   102f0:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   102f4:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   102f8:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   102fc:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   10300:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   10304:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   10308:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
NVIC_SetPriorityGrouping():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1458
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
   1030c:	68cb      	ldr	r3, [r1, #12]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1459
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
   1030e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
   10312:	041b      	lsls	r3, r3, #16
   10314:	0c1b      	lsrs	r3, r3, #16
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1460
  reg_value  =  (reg_value                       |
   10316:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1031a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1463
  SCB->AIRCR =  reg_value;
   1031e:	60cb      	str	r3, [r1, #12]
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:189
   10320:	f7ff ff74 	bl	1020c <__set_BASEPRI>
__enable_fault_irq():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1192
static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
   10324:	b661      	cpsie	f
__enable_irq():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1189
static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
   10326:	b662      	cpsie	i
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:194
    __enable_fault_irq();
    __enable_irq();

    /* Setup UART with minimal I/O functions */
    uart0_init(SYS_CFG_UART0_BPS);
   10328:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1032c:	f000 fad6 	bl	108dc <uart0_init>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:195
    sys_set_outchar_func(uart0_putchar);
   10330:	483b      	ldr	r0, [pc, #236]	; (10420 <low_level_init()+0x200>)
   10332:	f007 f831 	bl	17398 <sys_set_outchar_func>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:196
    sys_set_inchar_func(uart0_getchar);
   10336:	483b      	ldr	r0, [pc, #236]	; (10424 <low_level_init()+0x204>)
   10338:	f007 f834 	bl	173a4 <sys_set_inchar_func>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:202

    /**
     * Turn off I/O buffering otherwise sometimes printf/scanf doesn't behave
     * correctly due to strange buffering and/or flushing effects.
     */
    setvbuf(stdout, 0, _IONBF, 0);
   1033c:	2300      	movs	r3, #0
   1033e:	4c3a      	ldr	r4, [pc, #232]	; (10428 <low_level_init()+0x208>)
   10340:	4619      	mov	r1, r3
   10342:	6820      	ldr	r0, [r4, #0]
   10344:	2202      	movs	r2, #2
   10346:	6880      	ldr	r0, [r0, #8]
   10348:	f00b f814 	bl	1b374 <setvbuf>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   1034c:	2300      	movs	r3, #0
   1034e:	6820      	ldr	r0, [r4, #0]
print_boot_info():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10350:	4c30      	ldr	r4, [pc, #192]	; (10414 <low_level_init()+0x1f4>)
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:203
    setvbuf(stdin,  0, _IONBF, 0);
   10352:	4619      	mov	r1, r3
   10354:	2202      	movs	r2, #2
   10356:	6840      	ldr	r0, [r0, #4]
   10358:	f00b f80c 	bl	1b374 <setvbuf>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:206

    /* Initialize newlib fopen() fread() calls support */
    syscalls_init();
   1035c:	f007 f83c 	bl	173d8 <syscalls_init>
print_boot_info():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:132
    if (LPC_SC->RSID & boot_power_on) {
   10360:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   10364:	4d31      	ldr	r5, [pc, #196]	; (1042c <low_level_init()+0x20c>)
   10366:	f013 0f01 	tst.w	r3, #1
   1036a:	d01f      	beq.n	103ac <low_level_init()+0x18c>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:133
        uart0_puts("System Power-on: Booting ...");
   1036c:	4830      	ldr	r0, [pc, #192]	; (10430 <low_level_init()+0x210>)
   1036e:	f000 fafd 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:134
        g_sys_boot_type = boot_power_on;
   10372:	2301      	movs	r3, #1
   10374:	702b      	strb	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:135
        LPC_SC->RSID |= boot_power_on; // Clear POR bit
   10376:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1037a:	f043 0301 	orr.w	r3, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   1037e:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
    sys_watchdog_enable();
    #endif

    /* Uart and printf() are initialized, so print our boot-up message */
    print_boot_info();
}
   10382:	b005      	add	sp, #20
   10384:	bd30      	pop	{r4, r5, pc}
configure_flash_acceleration():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:40
    switch(clockMhz)
   10386:	2850      	cmp	r0, #80	; 0x50
   10388:	d90a      	bls.n	103a0 <low_level_init()+0x180>
   1038a:	2864      	cmp	r0, #100	; 0x64
   1038c:	d90b      	bls.n	103a6 <low_level_init()+0x186>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:48
            LPC_SC->FLASHCFG = (5 << 12) | const_val; /* works for all clock settings */
   1038e:	f245 023a 	movw	r2, #20538	; 0x503a
   10392:	e765      	b.n	10260 <low_level_init()+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:43
        case 21 ... 40  : LPC_SC->FLASHCFG = (1 << 12) | const_val; break;
   10394:	f241 023a 	movw	r2, #4154	; 0x103a
   10398:	e762      	b.n	10260 <low_level_init()+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:44
        case 41 ... 60  : LPC_SC->FLASHCFG = (2 << 12) | const_val; break;
   1039a:	f242 023a 	movw	r2, #8250	; 0x203a
   1039e:	e75f      	b.n	10260 <low_level_init()+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:45
        case 61 ... 80  : LPC_SC->FLASHCFG = (3 << 12) | const_val; break;
   103a0:	f243 023a 	movw	r2, #12346	; 0x303a
   103a4:	e75c      	b.n	10260 <low_level_init()+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:46
        case 81 ... 100 : LPC_SC->FLASHCFG = (4 << 12) | const_val; break;
   103a6:	f244 023a 	movw	r2, #16442	; 0x403a
   103aa:	e759      	b.n	10260 <low_level_init()+0x40>
print_boot_info():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:137
    else if(LPC_SC->RSID & boot_reset) {
   103ac:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103b0:	079b      	lsls	r3, r3, #30
   103b2:	d509      	bpl.n	103c8 <low_level_init()+0x1a8>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:138
        uart0_puts("System Reset: Booting ...");
   103b4:	481f      	ldr	r0, [pc, #124]	; (10434 <low_level_init()+0x214>)
   103b6:	f000 fad9 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:139
        g_sys_boot_type = boot_reset;
   103ba:	2302      	movs	r3, #2
   103bc:	702b      	strb	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:140
        LPC_SC->RSID |= boot_reset; // Clear RESET bit
   103be:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103c2:	f043 0302 	orr.w	r3, r3, #2
   103c6:	e7da      	b.n	1037e <low_level_init()+0x15e>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:142
    else if(LPC_SC->RSID & boot_watchdog) {
   103c8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103cc:	f013 0304 	ands.w	r3, r3, #4
   103d0:	d019      	beq.n	10406 <low_level_init()+0x1e6>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:143
        if(FAULT_PRESENT_VAL == FAULT_EXISTS) {
   103d2:	4b19      	ldr	r3, [pc, #100]	; (10438 <low_level_init()+0x218>)
   103d4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   103d6:	4b19      	ldr	r3, [pc, #100]	; (1043c <low_level_init()+0x21c>)
   103d8:	429a      	cmp	r2, r3
   103da:	d108      	bne.n	103ee <low_level_init()+0x1ce>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103dc:	2305      	movs	r3, #5
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103de:	4818      	ldr	r0, [pc, #96]	; (10440 <low_level_init()+0x220>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:144
            g_sys_boot_type = boot_watchdog_recover;
   103e0:	702b      	strb	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:145
            uart0_puts("System Crash: Re-booting ...");
   103e2:	f000 fac3 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:152
        FAULT_EXISTS = 0;
   103e6:	2200      	movs	r2, #0
   103e8:	4b13      	ldr	r3, [pc, #76]	; (10438 <low_level_init()+0x218>)
   103ea:	649a      	str	r2, [r3, #72]	; 0x48
   103ec:	e7c9      	b.n	10382 <low_level_init()+0x162>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103ee:	2304      	movs	r3, #4
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f0:	4814      	ldr	r0, [pc, #80]	; (10444 <low_level_init()+0x224>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:148
            g_sys_boot_type = boot_watchdog;
   103f2:	702b      	strb	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:149
            uart0_puts("Watchdog System Reset: Booting ...");
   103f4:	f000 faba 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:150
            LPC_SC->RSID |= boot_watchdog; // Clear WDTR bit
   103f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   103fc:	f043 0304 	orr.w	r3, r3, #4
   10400:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   10404:	e7ef      	b.n	103e6 <low_level_init()+0x1c6>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:155
        g_sys_boot_type = boot_unknown;
   10406:	702b      	strb	r3, [r5, #0]
_Z14low_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/low_level_init.cpp:215
}
   10408:	e7bb      	b.n	10382 <low_level_init()+0x162>
   1040a:	bf00      	nop
   1040c:	2007c300 	.word	0x2007c300
   10410:	000f4240 	.word	0x000f4240
   10414:	400fc000 	.word	0x400fc000
   10418:	e000ed00 	.word	0xe000ed00
   1041c:	e000e100 	.word	0xe000e100
   10420:	00010955 	.word	0x00010955
   10424:	0001093d 	.word	0x0001093d
   10428:	2007c0e0 	.word	0x2007c0e0
   1042c:	2007c30c 	.word	0x2007c30c
   10430:	0001ff24 	.word	0x0001ff24
   10434:	0001ff67 	.word	0x0001ff67
   10438:	40024000 	.word	0x40024000
   1043c:	deadbeef 	.word	0xdeadbeef
   10440:	0001ff41 	.word	0x0001ff41
   10444:	0001ff5e 	.word	0x0001ff5e

00010448 <lpc_pconp>:
lpc_pconp():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:31
#include "FreeRTOS.h"



void lpc_pconp(lpc_pconp_t peripheral, bool on)
{
   10448:	b538      	push	{r3, r4, r5, lr}
   1044a:	460d      	mov	r5, r1
   1044c:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:32
    vPortEnterCritical();
   1044e:	f000 fb29 	bl	10aa4 <vPortEnterCritical>
   10452:	4a09      	ldr	r2, [pc, #36]	; (10478 <lpc_pconp+0x30>)
   10454:	2301      	movs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:33
    if (on) {
   10456:	b14d      	cbz	r5, 1046c <lpc_pconp+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:34
        LPC_SC->PCONP |= (UINT32_C(1) << peripheral);
   10458:	f8d2 00c4 	ldr.w	r0, [r2, #196]	; 0xc4
   1045c:	40a3      	lsls	r3, r4
   1045e:	4303      	orrs	r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
    }
    else {
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   10460:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:40
    }
    vPortExitCritical();
}
   10464:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:39
    vPortExitCritical();
   10468:	f000 bb2c 	b.w	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:37
        LPC_SC->PCONP &= ~(UINT32_C(1) << peripheral);
   1046c:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
   10470:	40a3      	lsls	r3, r4
   10472:	ea21 0303 	bic.w	r3, r1, r3
   10476:	e7f3      	b.n	10460 <lpc_pconp+0x18>
   10478:	400fc000 	.word	0x400fc000

0001047c <lpc_pclk>:
lpc_pclk():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43

void lpc_pclk(lpc_pclk_t peripheral, clkdiv_t divider)
{
   1047c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:49
    /**
     * This is a quick and dirty trick to use uint64_t such that we don't have to
     * use if/else statements to pick either PCLKSEL0 or PCLKSEL1 register.
     */
    uint64_t *pclk_ptr = (uint64_t*)  &(LPC_SC->PCLKSEL0);
    const uint32_t bitpos = ((uint32_t)peripheral * 2);
   10480:	ea4f 0840 	mov.w	r8, r0, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:43
{
   10484:	460e      	mov	r6, r1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:52
    const uint32_t b11 = 3; // 0b11 in binary = 3

    vPortEnterCritical();
   10486:	f000 fb0d 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   1048a:	4642      	mov	r2, r8
   1048c:	2003      	movs	r0, #3
   1048e:	2100      	movs	r1, #0
   10490:	f008 fb46 	bl	18b20 <__aeabi_llsl>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   10494:	4f0a      	ldr	r7, [pc, #40]	; (104c0 <lpc_pclk+0x44>)
   10496:	4642      	mov	r2, r8
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:53
    *pclk_ptr &= ~((uint64_t)b11 << bitpos);
   10498:	e9d7 4500 	ldrd	r4, r5, [r7]
   1049c:	ea24 0400 	bic.w	r4, r4, r0
   104a0:	ea25 0501 	bic.w	r5, r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:54
    *pclk_ptr |=  ((uint64_t)(divider & b11) << bitpos);
   104a4:	f006 0003 	and.w	r0, r6, #3
   104a8:	2100      	movs	r1, #0
   104aa:	f008 fb39 	bl	18b20 <__aeabi_llsl>
   104ae:	4320      	orrs	r0, r4
   104b0:	4329      	orrs	r1, r5
   104b2:	e9c7 0100 	strd	r0, r1, [r7]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:56
    vPortExitCritical();
}
   104b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_peripherals.c:55
    vPortExitCritical();
   104ba:	f000 bb03 	b.w	10ac4 <vPortExitCritical>
   104be:	bf00      	nop
   104c0:	400fc1a8 	.word	0x400fc1a8

000104c4 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    // Initialize the timer structure pointer
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);

    // Setup the timer to tick with a fine-grain resolution
    const uint32_t one_micro_second = 1;
    lpc_timer_enable(sys_timer_source, one_micro_second);
   104c4:	2101      	movs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:54
{
   104c6:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   104c8:	4b0f      	ldr	r3, [pc, #60]	; (10508 <lpc_sys_setup_system_timer+0x44>)
   104ca:	4c10      	ldr	r4, [pc, #64]	; (1050c <lpc_sys_setup_system_timer+0x48>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   104cc:	4608      	mov	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:62
    gp_timer_ptr = lpc_timer_get_struct(sys_timer_source);
   104ce:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:66
    lpc_timer_enable(sys_timer_source, one_micro_second);
   104d0:	f002 f826 	bl	12520 <lpc_timer_enable>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:72

    /**
     * MR0: Setup the match register to take care of the overflow.
     * Upon the roll-over, we increment the roll-over count and the timer restarts from zero.
     */
    gp_timer_ptr->MR0 = UINT32_MAX;
   104d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   104d8:	6823      	ldr	r3, [r4, #0]
   104da:	619a      	str	r2, [r3, #24]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:75

    // MR1: Setup the periodic interrupt to do background processing
    gp_timer_ptr->MR1 = LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   104dc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   104e0:	61da      	str	r2, [r3, #28]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:79

#if (1 == SYS_CFG_SYS_TIMER)
    // MR2: IR code timeout when timer1 is used since IR receiver is tied to timer1 capture pin
    gp_timer_ptr->MR2 = 0;
   104e2:	2200      	movs	r2, #0
   104e4:	621a      	str	r2, [r3, #32]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:85
#else
    #warning "IR receiver will not work unless SYS_CFG_SYS_TIMER uses TIMER1, so set it to 1 if possible"
#endif

    /* Setup the first match interrupt to reset the watchdog */
    gp_timer_ptr->MR3 = LPC_SYS_WATCHDOG_RESET_TIME_US;
   104e6:	4a0a      	ldr	r2, [pc, #40]	; (10510 <lpc_sys_setup_system_timer+0x4c>)
   104e8:	625a      	str	r2, [r3, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:88

    // Enable the timer match interrupts
    gp_timer_ptr->MCR = (mr0_mcr_for_overflow | mr1_mcr_for_mesh_bckgnd_task | mr3_mcr_for_watchdog_reset);
   104ea:	f240 2209 	movw	r2, #521	; 0x209
   104ee:	615a      	str	r2, [r3, #20]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:92

    // Only if we have got TIMER1, we can use IR sensor timeout match interrupt
#if (1 == SYS_CFG_SYS_TIMER)
    gp_timer_ptr->MCR |= (mr2_mcr_for_ir_sensor_timeout);
   104f0:	695a      	ldr	r2, [r3, #20]
   104f2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   104f6:	615a      	str	r2, [r3, #20]
NVIC_SetPriority():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1576
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   104f8:	2218      	movs	r2, #24
   104fa:	4b06      	ldr	r3, [pc, #24]	; (10514 <lpc_sys_setup_system_timer+0x50>)
   104fc:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   10500:	2204      	movs	r2, #4
   10502:	601a      	str	r2, [r3, #0]
   10504:	bd10      	pop	{r4, pc}
   10506:	bf00      	nop
   10508:	40008000 	.word	0x40008000
   1050c:	2007c318 	.word	0x2007c318
   10510:	0016e360 	.word	0x0016e360
   10514:	e000e100 	.word	0xe000e100

00010518 <sys_get_uptime_us>:
sys_get_uptime_us():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
     * and pick up the new rollover count.  This avoid critical section and simplifies
     * the logic of reading higher 16-bit (roll-over) and lower 32-bit (timer value).
     */
    do
    {
        before    = gp_timer_ptr->TC;
   10518:	4b08      	ldr	r3, [pc, #32]	; (1053c <sys_get_uptime_us+0x24>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:104
{
   1051a:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   1051c:	681b      	ldr	r3, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   1051e:	4c08      	ldr	r4, [pc, #32]	; (10540 <sys_get_uptime_us+0x28>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:118
        before    = gp_timer_ptr->TC;
   10520:	689a      	ldr	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10522:	8821      	ldrh	r1, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:120
        after     = gp_timer_ptr->TC;
   10524:	6898      	ldr	r0, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:119
        rollovers = g_timer_rollover_count;
   10526:	b289      	uxth	r1, r1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:121
    } while (after < before);
   10528:	4282      	cmp	r2, r0
   1052a:	d8f9      	bhi.n	10520 <sys_get_uptime_us+0x8>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:124

    // each rollover is 2^32 or UINT32_MAX
    return (((uint64_t)rollovers << 32) | after);
   1052c:	460b      	mov	r3, r1
   1052e:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:125
}
   10530:	ea42 0200 	orr.w	r2, r2, r0
   10534:	4610      	mov	r0, r2
   10536:	4619      	mov	r1, r3
   10538:	bd10      	pop	{r4, pc}
   1053a:	bf00      	nop
   1053c:	2007c318 	.word	0x2007c318
   10540:	2007c314 	.word	0x2007c314

00010544 <sys_get_mem_info_str>:
sys_get_mem_info_str():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:220
        }
    }
}

extern "C" void sys_get_mem_info_str(char buffer[280])
{
   10544:	b510      	push	{r4, lr}
   10546:	4604      	mov	r4, r0
   10548:	b08e      	sub	sp, #56	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:221
    sys_mem_t info = sys_get_mem_info();
   1054a:	a806      	add	r0, sp, #24
   1054c:	f006 fe64 	bl	17218 <sys_get_mem_info>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:238

            (int)info.used_global, (int)info.used_heap, (int)info.avail_heap, (int)info.avail_sys,
            (unsigned int)info.next_malloc_ptr,
            (unsigned int)info.last_sbrk_ptr,
            (unsigned int)info.last_sbrk_size,
            (unsigned int)info.num_sbrk_calls);
   10550:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   10552:	9a06      	ldr	r2, [sp, #24]
   10554:	9305      	str	r3, [sp, #20]
   10556:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   10558:	4907      	ldr	r1, [pc, #28]	; (10578 <sys_get_mem_info_str+0x34>)
   1055a:	9304      	str	r3, [sp, #16]
   1055c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1055e:	4620      	mov	r0, r4
   10560:	9303      	str	r3, [sp, #12]
   10562:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   10564:	9302      	str	r3, [sp, #8]
   10566:	9b09      	ldr	r3, [sp, #36]	; 0x24
   10568:	9301      	str	r3, [sp, #4]
   1056a:	9b08      	ldr	r3, [sp, #32]
   1056c:	9300      	str	r3, [sp, #0]
   1056e:	9b07      	ldr	r3, [sp, #28]
   10570:	f00a fff6 	bl	1b560 <siprintf>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:239
}
   10574:	b00e      	add	sp, #56	; 0x38
   10576:	bd10      	pop	{r4, pc}
   10578:	0001ffa2 	.word	0x0001ffa2

0001057c <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
#elif (SINGLETON_INIT_METHOD == STATIC_PRIVATE_POINTER_INSTANCE)
    template <typename classType>
    SingletonTemplate<classType>* SingletonTemplate<classType>::mpSingletonInstance = 0;

    template <typename classType>
    classType& SingletonTemplate<classType>::getInstance()
   1057c:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
    {
        if(0 == mpSingletonInstance)
   1057e:	4c04      	ldr	r4, [pc, #16]	; (10590 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   10580:	6823      	ldr	r3, [r4, #0]
   10582:	b91b      	cbnz	r3, 1058c <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
        {
            mpSingletonInstance = new classType();
   10584:	2001      	movs	r0, #1
   10586:	f006 fe43 	bl	17210 <operator new(unsigned int)>
   1058a:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
        }
        return *(classType*)mpSingletonInstance;
    }
   1058c:	6820      	ldr	r0, [r4, #0]
   1058e:	bd10      	pop	{r4, pc}
   10590:	2007c310 	.word	0x2007c310

00010594 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:142
{
   10594:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:153
    const uint32_t intr_reason = gp_timer_ptr->IR;
   10596:	4c2b      	ldr	r4, [pc, #172]	; (10644 <TIMER1_IRQHandler+0xb0>)
   10598:	6823      	ldr	r3, [r4, #0]
   1059a:	4625      	mov	r5, r4
   1059c:	681a      	ldr	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:157
    if (intr_reason & timer_capt0_intr_ir_sensor_edge_time_captured)
   1059e:	f012 0f10 	tst.w	r2, #16
   105a2:	d00e      	beq.n	105c2 <TIMER1_IRQHandler+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:159
        gp_timer_ptr->IR = timer_capt0_intr_ir_sensor_edge_time_captured;
   105a4:	2210      	movs	r2, #16
   105a6:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:162
        IS.storeIrCode(gp_timer_ptr->CR0);
   105a8:	f7ff ffe8 	bl	1057c <SingletonTemplate<IR_Sensor>::getInstance()>
   105ac:	6823      	ldr	r3, [r4, #0]
   105ae:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   105b0:	f005 f8e2 	bl	15778 <IR_Sensor::storeIrCode(unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:163
        gp_timer_ptr->MR2 = 10000 + gp_timer_ptr->TC;
   105b4:	6822      	ldr	r2, [r4, #0]
   105b6:	6893      	ldr	r3, [r2, #8]
   105b8:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   105bc:	3310      	adds	r3, #16
   105be:	6213      	str	r3, [r2, #32]
   105c0:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:166
    else if (intr_reason & timer_mr2_intr_ir_sensor_timeout)
   105c2:	0754      	lsls	r4, r2, #29
   105c4:	d507      	bpl.n	105d6 <TIMER1_IRQHandler+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:168
        gp_timer_ptr->IR = timer_mr2_intr_ir_sensor_timeout;
   105c6:	2204      	movs	r2, #4
   105c8:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   105ca:	f7ff ffd7 	bl	1057c <SingletonTemplate<IR_Sensor>::getInstance()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:217
}
   105ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:169
        IS.decodeIrCode();
   105d2:	f005 b8df 	b.w	15794 <IR_Sensor::decodeIrCode()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:174
    if(intr_reason & timer_mr0_intr_timer_rollover)
   105d6:	07d0      	lsls	r0, r2, #31
   105d8:	d507      	bpl.n	105ea <TIMER1_IRQHandler+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:176
        gp_timer_ptr->IR = timer_mr0_intr_timer_rollover;
   105da:	2201      	movs	r2, #1
   105dc:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:177
        ++g_timer_rollover_count;
   105de:	4a1a      	ldr	r2, [pc, #104]	; (10648 <TIMER1_IRQHandler+0xb4>)
   105e0:	8813      	ldrh	r3, [r2, #0]
   105e2:	3301      	adds	r3, #1
   105e4:	b29b      	uxth	r3, r3
   105e6:	8013      	strh	r3, [r2, #0]
   105e8:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:179
    else if(intr_reason & timer_mr1_intr_mesh_servicing)
   105ea:	0791      	lsls	r1, r2, #30
   105ec:	d515      	bpl.n	1061a <TIMER1_IRQHandler+0x86>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:181
        gp_timer_ptr->IR = timer_mr1_intr_mesh_servicing;
   105ee:	2202      	movs	r2, #2
   105f0:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:186
        if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   105f2:	f001 f997 	bl	11924 <xTaskGetSchedulerState>
   105f6:	2802      	cmp	r0, #2
   105f8:	d009      	beq.n	1060e <TIMER1_IRQHandler+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:187
            wireless_service();
   105fa:	f006 fa13 	bl	16a24 <wireless_service>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:195
        gp_timer_ptr->MR1 += gp_timer_ptr->TC + LPC_SYS_TIME_FOR_BCKGND_TASK_US;
   105fe:	682a      	ldr	r2, [r5, #0]
   10600:	6893      	ldr	r3, [r2, #8]
   10602:	69d1      	ldr	r1, [r2, #28]
   10604:	440b      	add	r3, r1
   10606:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
   1060a:	61d3      	str	r3, [r2, #28]
   1060c:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:191
            gp_timer_ptr->MCR &= ~(mr1_mcr_for_mesh_bckgnd_task);
   1060e:	682a      	ldr	r2, [r5, #0]
   10610:	6953      	ldr	r3, [r2, #20]
   10612:	f023 0308 	bic.w	r3, r3, #8
   10616:	6153      	str	r3, [r2, #20]
   10618:	e7f1      	b.n	105fe <TIMER1_IRQHandler+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:197
    else if (intr_reason & timer_mr3_intr_for_watchdog_rst) {
   1061a:	0712      	lsls	r2, r2, #28
   1061c:	d50e      	bpl.n	1063c <TIMER1_IRQHandler+0xa8>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
        gp_timer_ptr->IR = timer_mr3_intr_for_watchdog_rst;
   1061e:	2208      	movs	r2, #8
sys_watchdog_feed():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:143
 * Periodic feeds should keep the system running, if the  watchdog
 * feeds stop, system will reset after watchdog timeout.
 */
static inline void sys_watchdog_feed()
{
    LPC_WDT->WDFEED = 0xAA;
   10620:	21aa      	movs	r1, #170	; 0xaa
TIMER1_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:198
   10622:	601a      	str	r2, [r3, #0]
sys_watchdog_feed():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:143
   10624:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   10628:	7211      	strb	r1, [r2, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:144
    LPC_WDT->WDFEED = 0x55;
   1062a:	2155      	movs	r1, #85	; 0x55
   1062c:	7211      	strb	r1, [r2, #8]
TIMER1_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:207
        gp_timer_ptr->MR3 = gp_timer_ptr->TC + LPC_SYS_WATCHDOG_RESET_TIME_US;
   1062e:	689a      	ldr	r2, [r3, #8]
   10630:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   10634:	f502 7258 	add.w	r2, r2, #864	; 0x360
   10638:	625a      	str	r2, [r3, #36]	; 0x24
   1063a:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/lpc_sys.cpp:212
        puts("Unexpected ISR call at lpc_sys.c");
   1063c:	4803      	ldr	r0, [pc, #12]	; (1064c <TIMER1_IRQHandler+0xb8>)
   1063e:	f00a fd71 	bl	1b124 <puts>
   10642:	e7fe      	b.n	10642 <TIMER1_IRQHandler+0xae>
   10644:	2007c318 	.word	0x2007c318
   10648:	2007c314 	.word	0x2007c314
   1064c:	0001ff81 	.word	0x0001ff81

00010650 <isr_forwarder_routine>:
isr_forwarder_routine():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:350
{
   10650:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:354
    vRunTimeStatIsrEntry();
   10652:	f001 fa03 	bl	11a5c <vRunTimeStatIsrEntry>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   10656:	4b09      	ldr	r3, [pc, #36]	; (1067c <isr_forwarder_routine+0x2c>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   10658:	4a09      	ldr	r2, [pc, #36]	; (10680 <isr_forwarder_routine+0x30>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   1065a:	7819      	ldrb	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   1065c:	4b09      	ldr	r3, [pc, #36]	; (10684 <isr_forwarder_routine+0x34>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:359
    const unsigned char isr_num = (*((unsigned char*) 0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
   1065e:	3910      	subs	r1, #16
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:363
    isr_func_t isr_to_service = g_isr_array[isr_num];
   10660:	b2c9      	uxtb	r1, r1
   10662:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:368
    if (isr_default_handler == isr_to_service)
   10666:	4293      	cmp	r3, r2
   10668:	d103      	bne.n	10672 <isr_forwarder_routine+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:370
        u0_dbg_printf("%u IRQ was triggered, but no IRQ service was defined!\n", isr_num);
   1066a:	4807      	ldr	r0, [pc, #28]	; (10688 <isr_forwarder_routine+0x38>)
   1066c:	f002 fb0b 	bl	12c86 <u0_dbg_printf>
   10670:	e7fe      	b.n	10670 <isr_forwarder_routine+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:375
        isr_to_service();
   10672:	4798      	blx	r3
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:381
}
   10674:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:380
    vRunTimeStatIsrExit();
   10678:	f001 ba04 	b.w	11a84 <vRunTimeStatIsrExit>
   1067c:	e000ed04 	.word	0xe000ed04
   10680:	00010149 	.word	0x00010149
   10684:	2007c000 	.word	0x2007c000
   10688:	00020067 	.word	0x00020067

0001068c <isr_register>:
isr_register():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:338
    if (num >= 0) {
   1068c:	2800      	cmp	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:339
        g_isr_array[num] = isr_func_ptr;
   1068e:	bfa4      	itt	ge
   10690:	4b01      	ldrge	r3, [pc, #4]	; (10698 <isr_register+0xc>)
   10692:	f843 1020 	strge.w	r1, [r3, r0, lsl #2]
   10696:	4770      	bx	lr
   10698:	2007c000 	.word	0x2007c000

0001069c <isr_hard_fault_handler>:
isr_hard_fault_handler():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:433
    volatile unsigned int stacked_r12 ;
    volatile unsigned int stacked_lr ;
    volatile unsigned int stacked_pc ;
    volatile unsigned int stacked_psr ;

    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   1069c:	6803      	ldr	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:423
{
   1069e:	b088      	sub	sp, #32
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:433
    stacked_r0 = ((unsigned long)hardfault_args[0]) ;
   106a0:	9300      	str	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   106a2:	6843      	ldr	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:442
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
    stacked_psr = ((unsigned long)hardfault_args[7]) ;

    FAULT_EXISTS = FAULT_PRESENT_VAL;
   106a4:	4a11      	ldr	r2, [pc, #68]	; (106ec <isr_hard_fault_handler+0x50>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:434
    stacked_r1 = ((unsigned long)hardfault_args[1]) ;
   106a6:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:435
    stacked_r2 = ((unsigned long)hardfault_args[2]) ;
   106a8:	6883      	ldr	r3, [r0, #8]
   106aa:	9302      	str	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:436
    stacked_r3 = ((unsigned long)hardfault_args[3]) ;
   106ac:	68c3      	ldr	r3, [r0, #12]
   106ae:	9303      	str	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:437
    stacked_r12 = ((unsigned long)hardfault_args[4]) ;
   106b0:	6903      	ldr	r3, [r0, #16]
   106b2:	9304      	str	r3, [sp, #16]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:438
    stacked_lr = ((unsigned long)hardfault_args[5]) ;
   106b4:	6943      	ldr	r3, [r0, #20]
   106b6:	9305      	str	r3, [sp, #20]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:439
    stacked_pc = ((unsigned long)hardfault_args[6]) ;
   106b8:	6983      	ldr	r3, [r0, #24]
   106ba:	9306      	str	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:440
    stacked_psr = ((unsigned long)hardfault_args[7]) ;
   106bc:	69c3      	ldr	r3, [r0, #28]
   106be:	9307      	str	r3, [sp, #28]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:442
    FAULT_EXISTS = FAULT_PRESENT_VAL;
   106c0:	4b0b      	ldr	r3, [pc, #44]	; (106f0 <isr_hard_fault_handler+0x54>)
   106c2:	649a      	str	r2, [r3, #72]	; 0x48
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:443
    FAULT_PC = stacked_pc;
   106c4:	9a06      	ldr	r2, [sp, #24]
   106c6:	64da      	str	r2, [r3, #76]	; 0x4c
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:444
    FAULT_LR = stacked_lr - 1;
   106c8:	9a05      	ldr	r2, [sp, #20]
   106ca:	3a01      	subs	r2, #1
   106cc:	651a      	str	r2, [r3, #80]	; 0x50
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:445
    FAULT_PSR = stacked_psr;
   106ce:	9a07      	ldr	r2, [sp, #28]
   106d0:	655a      	str	r2, [r3, #84]	; 0x54
sys_reboot():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:157
    /**
     * From the datasheet:
     * After writing 0xAA to WDFEED, access to any Watchdog register other than writing
     * 0x55 to WDFEED causes an immediate reset/interrupt when the Watchdog is enabled.
     */
    LPC_WDT->WDFEED = 0xAA;
   106d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   106d6:	22aa      	movs	r2, #170	; 0xaa
   106d8:	721a      	strb	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   106da:	2200      	movs	r2, #0
   106dc:	701a      	strb	r2, [r3, #0]
isr_hard_fault_handler():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:450

    sys_reboot();

    /* Prevent compiler warnings */
    (void) stacked_r0 ;
   106de:	9b00      	ldr	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:451
    (void) stacked_r1 ;
   106e0:	9b01      	ldr	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:452
    (void) stacked_r2 ;
   106e2:	9b02      	ldr	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:453
    (void) stacked_r3 ;
   106e4:	9b03      	ldr	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:454
    (void) stacked_r12 ;
   106e6:	9b04      	ldr	r3, [sp, #16]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/startup.cpp:455
}
   106e8:	b008      	add	sp, #32
   106ea:	4770      	bx	lr
   106ec:	deadbeef 	.word	0xdeadbeef
   106f0:	40024000 	.word	0x40024000

000106f4 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:255
/**
 * Feed is used to make PLL register contents take effect
 */
static inline void sys_clock_pll0_feed()
{
    LPC_SC->PLL0FEED = 0xAA;
   106f4:	22aa      	movs	r2, #170	; 0xaa
   106f6:	4b03      	ldr	r3, [pc, #12]	; (10704 <sys_clock_pll0_feed()+0x10>)
   106f8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:256
    LPC_SC->PLL0FEED = 0x55;
   106fc:	2255      	movs	r2, #85	; 0x55
   106fe:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   10702:	4770      	bx	lr
   10704:	400fc000 	.word	0x400fc000

00010708 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:59
static bool sys_clock_configure_pll(const unsigned int desiredCpuSpeedKhz,
   10708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:63
    *pPLL_M = 0;
   1070c:	2400      	movs	r4, #0
   1070e:	600c      	str	r4, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:64
    *pPLL_N = 0;
   10710:	6014      	str	r4, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:65
    *pCPU_D = 0;
   10712:	601c      	str	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10714:	f240 14ff 	movw	r4, #511	; 0x1ff
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   10718:	f8df a060 	ldr.w	sl, [pc, #96]	; 1077c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   1071c:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10720:	2600      	movs	r6, #0
   10722:	fb04 5b05 	mla	fp, r4, r5, r5
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:80
            const unsigned int FccoKhz = (2 * (m + 1) * inputFreqKhz) / (n + 1);
   10726:	f106 0c01 	add.w	ip, r6, #1
   1072a:	fbbb f8fc 	udiv	r8, fp, ip
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   1072e:	4f12      	ldr	r7, [pc, #72]	; (10778 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   10730:	f5a8 2586 	sub.w	r5, r8, #274432	; 0x43000
   10734:	f5a5 750e 	sub.w	r5, r5, #568	; 0x238
   10738:	42bd      	cmp	r5, r7
   1073a:	d91a      	bls.n	10772 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x6a>
   1073c:	4666      	mov	r6, ip
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:76
        for (int n = 0; n < 32; n++)
   1073e:	2e20      	cmp	r6, #32
   10740:	d1f1      	bne.n	10726 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:74
    for (int m = 511; m >= 6; m--)
   10742:	3c01      	subs	r4, #1
   10744:	2c05      	cmp	r4, #5
   10746:	d1e9      	bne.n	1071c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:113
    return false;
   10748:	2000      	movs	r0, #0
   1074a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:86
                for (int cpudiv = 3; cpudiv < 256; cpudiv++)
   1074e:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
   10752:	464d      	mov	r5, r9
   10754:	d0f2      	beq.n	1073c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:88
                    const unsigned int cpuClockKhz = FccoKhz / (cpudiv + 1);
   10756:	f105 0901 	add.w	r9, r5, #1
   1075a:	fbb8 fef9 	udiv	lr, r8, r9
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:95
                    if (cpuClockKhz <= maxCpuSpeedKhz)
   1075e:	45d6      	cmp	lr, sl
   10760:	d8f5      	bhi.n	1074e <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   10762:	4586      	cmp	lr, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:97
                        *pPLL_M = m;
   10764:	600c      	str	r4, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:98
                        *pPLL_N = n;
   10766:	6016      	str	r6, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:99
                        *pCPU_D = cpudiv;
   10768:	601d      	str	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:102
                        if (cpuClockKhz == desiredCpuSpeedKhz)
   1076a:	d1f0      	bne.n	1074e <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:105
                            return true;
   1076c:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:114
}
   1076e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:83
            if (FccoKhz >= FccoMinKhz && FccoKhz <= FccoMaxKhz)
   10772:	2503      	movs	r5, #3
   10774:	e7ef      	b.n	10756 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4e>
   10776:	bf00      	nop
   10778:	00043238 	.word	0x00043238
   1077c:	000186a0 	.word	0x000186a0

00010780 <sys_clock_configure()>:
_Z19sys_clock_configurev():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
    sys_clock_pll0_feed();
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
}

void sys_clock_configure()
{
   10780:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:287
        struct {
            uint32_t msel :16;
            uint32_t nsel :8;
            uint32_t : 8; ///< Not used (reserved)
        }__attribute__ ((packed));
    } PLL0ConfigValue = { 0 };
   10782:	2400      	movs	r4, #0
sys_clock_disable_pll_use_internal_4mhz():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10784:	492a      	ldr	r1, [pc, #168]	; (10830 <sys_clock_configure()+0xb0>)
_Z19sys_clock_configurev():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:279
{
   10786:	b085      	sub	sp, #20
sys_clock_disable_pll_use_internal_4mhz():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   10788:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
_Z19sys_clock_configurev():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291

	int m = 0;
	int n = 0;
	int d = 0;
   1078c:	ad04      	add	r5, sp, #16
sys_clock_disable_pll_use_internal_4mhz():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1078e:	f023 0302 	bic.w	r3, r3, #2
_Z19sys_clock_configurev():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:291
	int d = 0;
   10792:	f845 4d04 	str.w	r4, [r5, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:289
	int m = 0;
   10796:	9401      	str	r4, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:290
	int n = 0;
   10798:	9402      	str	r4, [sp, #8]
sys_clock_disable_pll_use_internal_4mhz():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:265
    LPC_SC->PLL0CON &= ~(1 << 1);
   1079a:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:266
    sys_clock_pll0_feed();
   1079e:	f7ff ffa9 	bl	106f4 <sys_clock_pll0_feed()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:269
    LPC_SC->PLL0CON &= ~(1 << 0);
   107a2:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
   107a6:	f023 0301 	bic.w	r3, r3, #1
   107aa:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:270
    sys_clock_pll0_feed();
   107ae:	f7ff ffa1 	bl	106f4 <sys_clock_pll0_feed()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:272
    LPC_SC->CLKSRCSEL = 0;
   107b2:	f8c1 410c 	str.w	r4, [r1, #268]	; 0x10c
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:273
    LPC_SC->PLL0CFG = 0;    // M=1, N=1 (disregarded anyway after PLL is disabled)
   107b6:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:274
    sys_clock_pll0_feed();
   107ba:	f7ff ff9b 	bl	106f4 <sys_clock_pll0_feed()>
_Z19sys_clock_configurev():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
#error "Clock source must be CLOCK_SOURCE_INTERNAL, CLOCK_SOURCE_EXTERNAL or CLOCK_SOURCE_RTC"
#endif

#if (CLOCK_SOURCE_INTERNAL == SYS_CFG_CLOCK_SOURCE || CLOCK_SOURCE_EXTERNAL == SYS_CFG_CLOCK_SOURCE)
	// If we cannot calculate desired CPU clock, then default to a safe value
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   107be:	462b      	mov	r3, r5
sys_clock_disable_pll_use_internal_4mhz():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:275
    LPC_SC->CCLKCFG = 0;    // Divider = 1 when PLL is not used
   107c0:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
_Z19sys_clock_configurev():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:313
	if(!sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d)) {
   107c4:	aa02      	add	r2, sp, #8
   107c6:	a901      	add	r1, sp, #4
   107c8:	f64b 3080 	movw	r0, #48000	; 0xbb80
   107cc:	f7ff ff9c 	bl	10708 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   107d0:	b930      	cbnz	r0, 107e0 <sys_clock_configure()+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:315
	    cpuClockKhz = SYS_CFG_DEFAULT_CPU_CLK / 1000;
	    sys_clock_configure_pll(cpuClockKhz, PLLInputClockKhz, &m, &n, &d);
   107d2:	462b      	mov	r3, r5
   107d4:	aa02      	add	r2, sp, #8
   107d6:	a901      	add	r1, sp, #4
   107d8:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   107dc:	f7ff ff94 	bl	10708 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	}
#else
	sys_clock_get_pll_params_for_rtc(SYS_CFG_DESIRED_CPU_CLK, &m, &n, &d);
#endif

	PLL0ConfigValue.msel = m;
   107e0:	9b01      	ldr	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
		; // Wait for main oscillator to be ready
#endif

	// Select the clock source and if the clock source is the desired clock, then
	// do not use PLL at all and simply return!
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   107e2:	4913      	ldr	r1, [pc, #76]	; (10830 <sys_clock_configure()+0xb0>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:321
	PLL0ConfigValue.msel = m;
   107e4:	f363 040f 	bfi	r4, r3, #0, #16
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:322
	PLL0ConfigValue.nsel = n;
   107e8:	9b02      	ldr	r3, [sp, #8]
   107ea:	f363 4417 	bfi	r4, r3, #16, #8
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:339
	LPC_SC->CLKSRCSEL = SYS_CFG_CLOCK_SOURCE;
   107ee:	2300      	movs	r3, #0
   107f0:	f8c1 310c 	str.w	r3, [r1, #268]	; 0x10c
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:351
	    return;
	}
	else
#endif
	{
	    LPC_SC->PLL0CFG = PLL0ConfigValue.raw; // Set values of PLL Multiplier and divider
   107f4:	f8c1 4084 	str.w	r4, [r1, #132]	; 0x84
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:352
	    sys_clock_pll0_feed();
   107f8:	f7ff ff7c 	bl	106f4 <sys_clock_pll0_feed()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:355

	    // Enable PLL0
	    LPC_SC->PLL0CON = 0x01;
   107fc:	2301      	movs	r3, #1
   107fe:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:356
	    sys_clock_pll0_feed();
   10802:	f7ff ff77 	bl	106f4 <sys_clock_pll0_feed()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:357
	    while (!(LPC_SC->PLL0STAT & (1 << 26))) {
   10806:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
   1080a:	015b      	lsls	r3, r3, #5
   1080c:	d5fb      	bpl.n	10806 <sys_clock_configure()+0x86>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:366
	    /**
	     * Connect PLL0 as our clock source.
	     * Right before we make the PLL clock as CPU clock, set our divider so our
	     * CPU clock doesn't go out of range once the faster PLL clock is established.
	     */
        LPC_SC->CCLKCFG  = d;
   1080e:	9b03      	ldr	r3, [sp, #12]
   10810:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:367
	    LPC_SC->PLL0CON = 0x03;
   10814:	2303      	movs	r3, #3
   10816:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:368
	    sys_clock_pll0_feed();
   1081a:	f7ff ff6b 	bl	106f4 <sys_clock_pll0_feed()>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:371

	    // Finally, wait for PLLC0_STAT & PLLE0_STAT
	    while (!(LPC_SC->PLL0STAT & ((1 << 25) | (1 << 24)))) {
   1081e:	4a04      	ldr	r2, [pc, #16]	; (10830 <sys_clock_configure()+0xb0>)
   10820:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
   10824:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   10828:	d0fa      	beq.n	10820 <sys_clock_configure()+0xa0>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:375
	        ;
	    }
	}
}
   1082a:	b005      	add	sp, #20
   1082c:	bd30      	pop	{r4, r5, pc}
   1082e:	bf00      	nop
   10830:	400fc000 	.word	0x400fc000

00010834 <sys_get_cpu_clock>:
sys_get_cpu_clock():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
unsigned int sys_get_cpu_clock()
{
	unsigned clock = 0;

	/* Determine clock frequency according to clock register values             */
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   10834:	4b24      	ldr	r3, [pc, #144]	; (108c8 <sys_get_cpu_clock+0x94>)
   10836:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1083a:	f3c2 6201 	ubfx	r2, r2, #24, #2
   1083e:	2a03      	cmp	r2, #3
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	{ /* If PLL0 enabled and connected */
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   10840:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   10844:	f002 0203 	and.w	r2, r2, #3
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:382
	if (((LPC_SC->PLL0STAT >> 24) & 3) == 3)
   10848:	d12d      	bne.n	108a6 <sys_get_cpu_clock+0x72>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:384
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   1084a:	2a01      	cmp	r2, #1
   1084c:	d016      	beq.n	1087c <sys_get_cpu_clock+0x48>
   1084e:	2a02      	cmp	r2, #2
   10850:	d01e      	beq.n	10890 <sys_get_cpu_clock+0x5c>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	    {
	        case 0: /* Int. RC oscillator => PLL0    */
	        case 3: /* Reserved, default to Int. RC  */
	            clock = (INTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10852:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:390
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10856:	481d      	ldr	r0, [pc, #116]	; (108cc <sys_get_cpu_clock+0x98>)
   10858:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:391
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1085c:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:389
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10860:	f3c1 010e 	ubfx	r1, r1, #0, #15
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	            break;

	        case 1: /* Main oscillator => PLL0       */
	            clock = (EXTERNAL_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10864:	fb01 0000 	mla	r0, r1, r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	            break;

	        case 2: /* RTC oscillator => PLL0        */
	            clock = (RTC_CLOCK
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10868:	f3c2 4207 	ubfx	r2, r2, #16, #8
   1086c:	3201      	adds	r2, #1
   1086e:	fbb0 f0f2 	udiv	r0, r0, r2
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   10872:	b2db      	uxtb	r3, r3
   10874:	3301      	adds	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            break;
	        case 1: /* Main oscillator => PLL0       */
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
	            break;
	        case 2: /* RTC oscillator => PLL0        */
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   10876:	fbb0 f0f3 	udiv	r0, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:427
	            break;
	    }
	}

	return clock;
}
   1087a:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   1087c:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:397
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10880:	4813      	ldr	r0, [pc, #76]	; (108d0 <sys_get_cpu_clock+0x9c>)
   10882:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:396
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10886:	f3c1 010e 	ubfx	r1, r1, #0, #15
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:398
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1088a:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   1088e:	e7e9      	b.n	10864 <sys_get_cpu_clock+0x30>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10890:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   10894:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:403
	                    * ((2 * ((LPC_SC->PLL0STAT & 0x7FFF) + 1)))
   10898:	f3c0 000e 	ubfx	r0, r0, #0, #15
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   1089c:	3001      	adds	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:405
	                    / ((LPC_SC->CCLKCFG & 0xFF) + 1));
   1089e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:404
	                    / (((LPC_SC->PLL0STAT >> 16) & 0xFF) + 1)
   108a2:	0400      	lsls	r0, r0, #16
   108a4:	e7e0      	b.n	10868 <sys_get_cpu_clock+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   108a6:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   108aa:	2a01      	cmp	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   108ac:	b2c0      	uxtb	r0, r0
   108ae:	f100 0301 	add.w	r3, r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:411
	    switch (LPC_SC->CLKSRCSEL & 0x03)
   108b2:	d003      	beq.n	108bc <sys_get_cpu_clock+0x88>
   108b4:	2a02      	cmp	r2, #2
   108b6:	d003      	beq.n	108c0 <sys_get_cpu_clock+0x8c>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:415
	            clock = INTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   108b8:	4806      	ldr	r0, [pc, #24]	; (108d4 <sys_get_cpu_clock+0xa0>)
   108ba:	e7dc      	b.n	10876 <sys_get_cpu_clock+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:418
	            clock = EXTERNAL_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   108bc:	4806      	ldr	r0, [pc, #24]	; (108d8 <sys_get_cpu_clock+0xa4>)
   108be:	e7da      	b.n	10876 <sys_get_cpu_clock+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/sys_clock.cpp:421
	            clock = RTC_CLOCK / ((LPC_SC->CCLKCFG & 0xFF) + 1);
   108c0:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   108c4:	e7d7      	b.n	10876 <sys_get_cpu_clock+0x42>
   108c6:	bf00      	nop
   108c8:	400fc000 	.word	0x400fc000
   108cc:	007a1200 	.word	0x007a1200
   108d0:	016e3600 	.word	0x016e3600
   108d4:	003d0900 	.word	0x003d0900
   108d8:	00b71b00 	.word	0x00b71b00

000108dc <uart0_init>:
uart0_init():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:25
#include "sys_config.h"



void uart0_init(unsigned int baud_rate)
{
   108dc:	b510      	push	{r4, lr}
   108de:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    /* Adding 0.5 to perform rounding correctly since we do not want
     * 1.9 to round down to 1, but we want it to round-up to 2.
     */
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   108e0:	f7ff ffa8 	bl	10834 <sys_get_cpu_clock>
   108e4:	0124      	lsls	r4, r4, #4
   108e6:	fbb0 f0f4 	udiv	r0, r0, r4
   108ea:	f008 fa67 	bl	18dbc <__aeabi_ui2d>
   108ee:	2200      	movs	r2, #0
   108f0:	4b10      	ldr	r3, [pc, #64]	; (10934 <uart0_init+0x58>)
   108f2:	f008 f927 	bl	18b44 <__adddf3>
   108f6:	f008 fad7 	bl	18ea8 <__aeabi_d2uiz>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    const uint8_t dlab_bit = (1 << 7);
    const uint8_t eight_bit_datalen = 3;

    lpc_pconp(pconp_uart0, true);
   108fa:	2101      	movs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:29
    const uint16_t divider = (sys_get_cpu_clock() / (16 * baud_rate) + 0.5);
   108fc:	b284      	uxth	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:33
    lpc_pconp(pconp_uart0, true);
   108fe:	2003      	movs	r0, #3
   10900:	f7ff fda2 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:34
    lpc_pclk(pclk_uart0, clkdiv_1);
   10904:	2101      	movs	r1, #1
   10906:	2003      	movs	r0, #3
   10908:	f7ff fdb8 	bl	1047c <lpc_pclk>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:36

    LPC_PINCON->PINSEL0 &= ~(0xF << 4); // Clear values
   1090c:	4b0a      	ldr	r3, [pc, #40]	; (10938 <uart0_init+0x5c>)
   1090e:	681a      	ldr	r2, [r3, #0]
   10910:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   10914:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:37
    LPC_PINCON->PINSEL0 |= (0x5 << 4);  // Set values for UART0 Rx/Tx
   10916:	681a      	ldr	r2, [r3, #0]
   10918:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1091c:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:39

    LPC_UART0->LCR = dlab_bit;          // Set DLAB bit to access DLM & DLL
   1091e:	2280      	movs	r2, #128	; 0x80
   10920:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   10924:	731a      	strb	r2, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:40
    LPC_UART0->DLM = (divider >> 8);
   10926:	0a22      	lsrs	r2, r4, #8
   10928:	711a      	strb	r2, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->DLL = (divider >> 0);
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   1092a:	2203      	movs	r2, #3
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:41
    LPC_UART0->DLL = (divider >> 0);
   1092c:	b2e4      	uxtb	r4, r4
   1092e:	701c      	strb	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:42
    LPC_UART0->LCR = eight_bit_datalen; // DLAB is reset back to zero
   10930:	731a      	strb	r2, [r3, #12]
   10932:	bd10      	pop	{r4, pc}
   10934:	3fe00000 	.word	0x3fe00000
   10938:	4002c000 	.word	0x4002c000

0001093c <uart0_getchar>:
uart0_getchar():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:47
}

char uart0_getchar(char notused)
{
    while(! BIT(LPC_UART0->LSR).b0);
   1093c:	4a03      	ldr	r2, [pc, #12]	; (1094c <uart0_getchar+0x10>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:47 (discriminator 1)
   1093e:	6813      	ldr	r3, [r2, #0]
   10940:	07db      	lsls	r3, r3, #31
   10942:	d5fc      	bpl.n	1093e <uart0_getchar+0x2>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:49

    return LPC_UART0->RBR;
   10944:	4b02      	ldr	r3, [pc, #8]	; (10950 <uart0_getchar+0x14>)
   10946:	7818      	ldrb	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:50
}
   10948:	4770      	bx	lr
   1094a:	bf00      	nop
   1094c:	4000c014 	.word	0x4000c014
   10950:	4000c000 	.word	0x4000c000

00010954 <uart0_putchar>:
uart0_putchar():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:55

char uart0_putchar(char out)
{
    //while(! (LPC_UART0->LSR & (1 << 6)));
    LPC_UART0->THR = out;
   10954:	4b03      	ldr	r3, [pc, #12]	; (10964 <uart0_putchar+0x10>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:57

    while(! BIT(LPC_UART0->LSR).b6);
   10956:	4a04      	ldr	r2, [pc, #16]	; (10968 <uart0_putchar+0x14>)
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:55
    LPC_UART0->THR = out;
   10958:	7018      	strb	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:57 (discriminator 1)
    while(! BIT(LPC_UART0->LSR).b6);
   1095a:	6813      	ldr	r3, [r2, #0]
   1095c:	065b      	lsls	r3, r3, #25
   1095e:	d5fc      	bpl.n	1095a <uart0_putchar+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:60

    return 1;
}
   10960:	2001      	movs	r0, #1
   10962:	4770      	bx	lr
   10964:	4000c000 	.word	0x4000c000
   10968:	4000c014 	.word	0x4000c014

0001096c <uart0_puts>:
uart0_puts():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:63

void uart0_puts(const char* c_string)
{
   1096c:	b508      	push	{r3, lr}
   1096e:	1e41      	subs	r1, r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:65
    char* p = (char*) c_string;
    while(*p)
   10970:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   10974:	b920      	cbnz	r0, 10980 <uart0_puts+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    uart0_putchar('\n');
   10976:	200a      	movs	r0, #10
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:71
}
   10978:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:70
    uart0_putchar('\n');
   1097c:	f7ff bfea 	b.w	10954 <uart0_putchar>
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/source/uart0_min.c:67
        uart0_putchar(*p);
   10980:	f7ff ffe8 	bl	10954 <uart0_putchar>
   10984:	e7f4      	b.n	10970 <uart0_puts+0x4>

00010986 <pvPortMalloc>:
pvPortMalloc():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:101
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
   10986:	b510      	push	{r4, lr}
   10988:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:104
void *pvReturn;

	vTaskSuspendAll();
   1098a:	f000 fda5 	bl	114d8 <vTaskSuspendAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:106
	{
		pvReturn = malloc( xWantedSize );
   1098e:	4620      	mov	r0, r4
   10990:	f009 f956 	bl	19c40 <malloc>
   10994:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:109
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
   10996:	f000 fe39 	bl	1160c <xTaskResumeAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:113

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
   1099a:	b90c      	cbnz	r4, 109a0 <pvPortMalloc+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:116
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
   1099c:	f000 f82e 	bl	109fc <vApplicationMallocFailedHook>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:122
		}
	}
	#endif

	return pvReturn;
}
   109a0:	4620      	mov	r0, r4
   109a2:	bd10      	pop	{r4, pc}

000109a4 <vPortFree>:
vPortFree():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:126
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
   109a4:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:127
	if( pv )
   109a6:	4604      	mov	r4, r0
   109a8:	b140      	cbz	r0, 109bc <vPortFree+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:129
	{
		vTaskSuspendAll();
   109aa:	f000 fd95 	bl	114d8 <vTaskSuspendAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:131
		{
			free( pv );
   109ae:	4620      	mov	r0, r4
   109b0:	f009 f94e 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:136
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
   109b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/MemMang/heap_3.c.inc:134
		( void ) xTaskResumeAll();
   109b8:	f000 be28 	b.w	1160c <xTaskResumeAll>
   109bc:	bd10      	pop	{r4, pc}

000109be <vApplicationIdleHook>:
__WFI():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1196
static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
   109be:	bf30      	wfi
   109c0:	4770      	bx	lr
vApplicationIdleHook():
   109c2:	Address 0x00000000000109c2 is out of bounds.


000109c4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:18
	// Put CPU to IDLE here. RTOS will wake up CPU from OS timer interrupt.
	__WFI(); // Wait for Event: Puts the CPU in low powered mode
}

void vApplicationStackOverflowHook( TaskHandle_t *pxTask, char *pcTaskName )
{
   109c4:	b510      	push	{r4, lr}
   109c6:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:19
    u0_dbg_put("HALTING SYSTEM: Stack overflow by task: ");
   109c8:	4809      	ldr	r0, [pc, #36]	; (109f0 <vApplicationStackOverflowHook+0x2c>)
   109ca:	f002 f94d 	bl	12c68 <u0_dbg_put>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:20
    u0_dbg_put((char*)pcTaskName);
   109ce:	4620      	mov	r0, r4
   109d0:	f002 f94a 	bl	12c68 <u0_dbg_put>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:21
    u0_dbg_put("\nTry increasing stack memory of this task.\n");
   109d4:	4807      	ldr	r0, [pc, #28]	; (109f4 <vApplicationStackOverflowHook+0x30>)
   109d6:	f002 f947 	bl	12c68 <u0_dbg_put>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:23

	delay_us(3000 * 1000);
   109da:	4807      	ldr	r0, [pc, #28]	; (109f8 <vApplicationStackOverflowHook+0x34>)
   109dc:	f002 fa06 	bl	12dec <delay_us>
sys_reboot():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   109e0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   109e4:	22aa      	movs	r2, #170	; 0xaa
   109e6:	721a      	strb	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   109e8:	2200      	movs	r2, #0
   109ea:	701a      	strb	r2, [r3, #0]
   109ec:	bd10      	pop	{r4, pc}
   109ee:	bf00      	nop
   109f0:	0002014d 	.word	0x0002014d
   109f4:	00020176 	.word	0x00020176
   109f8:	002dc6c0 	.word	0x002dc6c0

000109fc <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:39
}
#endif

#if( configUSE_MALLOC_FAILED_HOOK == 1 )
void vApplicationMallocFailedHook( void )
{
   109fc:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:40
    u0_dbg_put("HALTING SYSTEM: Your system ran out of memory (RAM)!\n");
   109fe:	4806      	ldr	r0, [pc, #24]	; (10a18 <vApplicationMallocFailedHook+0x1c>)
   10a00:	f002 f932 	bl	12c68 <u0_dbg_put>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/hooks/hooks.c:42

    delay_us(3000 * 1000);
   10a04:	4805      	ldr	r0, [pc, #20]	; (10a1c <vApplicationMallocFailedHook+0x20>)
   10a06:	f002 f9f1 	bl	12dec <delay_us>
sys_reboot():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:157
    LPC_WDT->WDFEED = 0xAA;
   10a0a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   10a0e:	22aa      	movs	r2, #170	; 0xaa
   10a10:	721a      	strb	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:158
    LPC_WDT->WDMOD = 0;
   10a12:	2200      	movs	r2, #0
   10a14:	701a      	strb	r2, [r3, #0]
   10a16:	bd08      	pop	{r3, pc}
   10a18:	00020117 	.word	0x00020117
   10a1c:	002dc6c0 	.word	0x002dc6c0

00010a20 <prvTaskExitError>:
vPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
   10a20:	f04f 0310 	mov.w	r3, #16
   10a24:	f383 8811 	msr	BASEPRI, r3
   10a28:	f3bf 8f6f 	isb	sy
   10a2c:	f3bf 8f4f 	dsb	sy
   10a30:	e7fe      	b.n	10a30 <prvTaskExitError+0x10>
prvTaskExitError():
   10a32:	Address 0x0000000000010a32 is out of bounds.


00010a34 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:270
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
   10a34:	4806      	ldr	r0, [pc, #24]	; (10a50 <prvPortStartFirstTask+0x1c>)
   10a36:	6800      	ldr	r0, [r0, #0]
   10a38:	6800      	ldr	r0, [r0, #0]
   10a3a:	f380 8808 	msr	MSP, r0
   10a3e:	b662      	cpsie	i
   10a40:	b661      	cpsie	f
   10a42:	f3bf 8f4f 	dsb	sy
   10a46:	f3bf 8f6f 	isb	sy
   10a4a:	df00      	svc	0
   10a4c:	bf00      	nop
   10a4e:	0000      	.short	0x0000
   10a50:	e000ed08 	.word	0xe000ed08

00010a54 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:221
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
   10a54:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   10a58:	f840 3c04 	str.w	r3, [r0, #-4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   10a5c:	4b05      	ldr	r3, [pc, #20]	; (10a74 <pxPortInitialiseStack+0x20>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:223
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
   10a5e:	f021 0101 	bic.w	r1, r1, #1
   10a62:	f840 1c08 	str.w	r1, [r0, #-8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:225
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
   10a66:	f840 3c0c 	str.w	r3, [r0, #-12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:227
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
   10a6a:	f840 2c20 	str.w	r2, [r0, #-32]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:231
}
   10a6e:	3840      	subs	r0, #64	; 0x40
   10a70:	4770      	bx	lr
   10a72:	bf00      	nop
   10a74:	00010a21 	.word	0x00010a21
   10a78:	ffffffff 	.word	0xffffffff
   10a7c:	ffffffff 	.word	0xffffffff

00010a80 <vPortSVCHandler>:
vPortSVCHandler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:250
	__asm volatile (
   10a80:	4b07      	ldr	r3, [pc, #28]	; (10aa0 <pxCurrentTCBConst2>)
   10a82:	6819      	ldr	r1, [r3, #0]
   10a84:	6808      	ldr	r0, [r1, #0]
   10a86:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   10a8a:	f380 8809 	msr	PSP, r0
   10a8e:	f3bf 8f6f 	isb	sy
   10a92:	f04f 0000 	mov.w	r0, #0
   10a96:	f380 8811 	msr	BASEPRI, r0
   10a9a:	f04e 0e0d 	orr.w	lr, lr, #13
   10a9e:	4770      	bx	lr

00010aa0 <pxCurrentTCBConst2>:
   10aa0:	2007c328 	.word	0x2007c328

00010aa4 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
   10aa4:	f04f 0310 	mov.w	r3, #16
   10aa8:	f383 8811 	msr	BASEPRI, r3
   10aac:	f3bf 8f6f 	isb	sy
   10ab0:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:374
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
	portDISABLE_INTERRUPTS();
	uxCriticalNesting++;
   10ab4:	4a02      	ldr	r2, [pc, #8]	; (10ac0 <vPortEnterCritical+0x1c>)
   10ab6:	6813      	ldr	r3, [r2, #0]
   10ab8:	3301      	adds	r3, #1
   10aba:	6013      	str	r3, [r2, #0]
   10abc:	4770      	bx	lr
   10abe:	bf00      	nop
   10ac0:	2007c31c 	.word	0x2007c31c

00010ac4 <vPortExitCritical>:
vPortExitCritical():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:391
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
	configASSERT( uxCriticalNesting );
	uxCriticalNesting--;
   10ac4:	4a03      	ldr	r2, [pc, #12]	; (10ad4 <vPortExitCritical+0x10>)
   10ac6:	6813      	ldr	r3, [r2, #0]
   10ac8:	3b01      	subs	r3, #1
   10aca:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:392
	if( uxCriticalNesting == 0 )
   10acc:	b90b      	cbnz	r3, 10ad2 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
   10ace:	f383 8811 	msr	BASEPRI, r3
   10ad2:	4770      	bx	lr
   10ad4:	2007c31c 	.word	0x2007c31c
vPortExitCritical():
   10ad8:	ffffffff 	.word	0xffffffff
   10adc:	ffffffff 	.word	0xffffffff

00010ae0 <xPortPendSVHandler>:
xPortPendSVHandler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:403

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
   10ae0:	f3ef 8009 	mrs	r0, PSP
   10ae4:	f3bf 8f6f 	isb	sy
   10ae8:	4b0d      	ldr	r3, [pc, #52]	; (10b20 <pxCurrentTCBConst>)
   10aea:	681a      	ldr	r2, [r3, #0]
   10aec:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   10af0:	6010      	str	r0, [r2, #0]
   10af2:	e92d 4008 	stmdb	sp!, {r3, lr}
   10af6:	f04f 0010 	mov.w	r0, #16
   10afa:	f380 8811 	msr	BASEPRI, r0
   10afe:	f000 fe35 	bl	1176c <vTaskSwitchContext>
   10b02:	f04f 0000 	mov.w	r0, #0
   10b06:	f380 8811 	msr	BASEPRI, r0
   10b0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   10b0e:	6819      	ldr	r1, [r3, #0]
   10b10:	6808      	ldr	r0, [r1, #0]
   10b12:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   10b16:	f380 8809 	msr	PSP, r0
   10b1a:	f3bf 8f6f 	isb	sy
   10b1e:	4770      	bx	lr

00010b20 <pxCurrentTCBConst>:
   10b20:	2007c328 	.word	0x2007c328

00010b24 <xPortSysTickHandler>:
xPortSysTickHandler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:437
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
   10b24:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   10b26:	f04f 0310 	mov.w	r3, #16
   10b2a:	f383 8811 	msr	BASEPRI, r3
   10b2e:	f3bf 8f6f 	isb	sy
   10b32:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:445
	save and then restore the interrupt mask value as its value is already
	known. */
	portDISABLE_INTERRUPTS();
	{
		/* Increment the RTOS tick. */
		if( xTaskIncrementTick() != pdFALSE )
   10b36:	f000 fce3 	bl	11500 <xTaskIncrementTick>
   10b3a:	b118      	cbz	r0, 10b44 <xPortSysTickHandler+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:449
		{
			/* A context switch is required.  Context switching is performed in
			the PendSV interrupt.  Pend the PendSV interrupt. */
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
   10b3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10b40:	4b02      	ldr	r3, [pc, #8]	; (10b4c <xPortSysTickHandler+0x28>)
   10b42:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   10b44:	2300      	movs	r3, #0
   10b46:	f383 8811 	msr	BASEPRI, r3
   10b4a:	bd08      	pop	{r3, pc}
   10b4c:	e000ed04 	.word	0xe000ed04

00010b50 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:626
		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
	}
	#endif /* configUSE_TICKLESS_IDLE */

	/* Configure SysTick to interrupt at the requested rate. */
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
   10b50:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   10b54:	4b02      	ldr	r3, [pc, #8]	; (10b60 <vPortSetupTimerInterrupt+0x10>)
   10b56:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:627
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
   10b58:	2207      	movs	r2, #7
   10b5a:	f843 2c04 	str.w	r2, [r3, #-4]
   10b5e:	4770      	bx	lr
   10b60:	e000e014 	.word	0xe000e014

00010b64 <xPortStartScheduler>:
xPortStartScheduler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:289
{
   10b64:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:339
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
   10b66:	4b09      	ldr	r3, [pc, #36]	; (10b8c <xPortStartScheduler+0x28>)
   10b68:	681a      	ldr	r2, [r3, #0]
   10b6a:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   10b6e:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:340
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
   10b70:	681a      	ldr	r2, [r3, #0]
   10b72:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   10b76:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:344
	vPortSetupTimerInterrupt();
   10b78:	f7ff ffea 	bl	10b50 <vPortSetupTimerInterrupt>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:347
	uxCriticalNesting = 0;
   10b7c:	2200      	movs	r2, #0
   10b7e:	4b04      	ldr	r3, [pc, #16]	; (10b90 <xPortStartScheduler+0x2c>)
   10b80:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:350
	prvPortStartFirstTask();
   10b82:	f7ff ff57 	bl	10a34 <prvPortStartFirstTask>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/port.c:356
	prvTaskExitError();
   10b86:	f7ff ff4b 	bl	10a20 <prvTaskExitError>
   10b8a:	bf00      	nop
   10b8c:	e000ed20 	.word	0xe000ed20
   10b90:	2007c31c 	.word	0x2007c31c

00010b94 <rts_not_full_trace_init>:
rts_not_full_trace_init():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:36



// Init the run time counter that is not used by the full trace
void rts_not_full_trace_init( void )
{
   10b94:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:38
    /* Nothing to do, system timer should already be setup by high_level_init.cpp */
    g_freertos_runtime_timer_start = sys_get_uptime_us();
   10b96:	f7ff fcbf 	bl	10518 <sys_get_uptime_us>
   10b9a:	4b02      	ldr	r3, [pc, #8]	; (10ba4 <rts_not_full_trace_init+0x10>)
   10b9c:	e9c3 0100 	strd	r0, r1, [r3]
   10ba0:	bd08      	pop	{r3, pc}
   10ba2:	bf00      	nop
   10ba4:	2007c320 	.word	0x2007c320

00010ba8 <rts_not_full_trace_get>:
rts_not_full_trace_get():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:42
}

unsigned int rts_not_full_trace_get()
{
   10ba8:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:43
    return (sys_get_uptime_us() - g_freertos_runtime_timer_start);
   10baa:	f7ff fcb5 	bl	10518 <sys_get_uptime_us>
   10bae:	4b02      	ldr	r3, [pc, #8]	; (10bb8 <rts_not_full_trace_get+0x10>)
   10bb0:	681b      	ldr	r3, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/run_time_stats.c:44
}
   10bb2:	1ac0      	subs	r0, r0, r3
   10bb4:	bd08      	pop	{r3, pc}
   10bb6:	bf00      	nop
   10bb8:	2007c320 	.word	0x2007c320

00010bbc <vListInitialise>:
vListInitialise():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:84
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   10bbc:	f100 0308 	add.w	r3, r0, #8
   10bc0:	6043      	str	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   10bc2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   10bc6:	60c3      	str	r3, [r0, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   10bc8:	6103      	str	r3, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   10bca:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:88
	pxList->xListEnd.xItemValue = portMAX_DELAY;
   10bcc:	6082      	str	r2, [r0, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:95
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
   10bce:	6003      	str	r3, [r0, #0]
   10bd0:	4770      	bx	lr

00010bd2 <vListInitialiseItem>:
vListInitialiseItem():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:107
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
   10bd2:	2300      	movs	r3, #0
   10bd4:	6103      	str	r3, [r0, #16]
   10bd6:	4770      	bx	lr

00010bd8 <vListInsertEnd>:
vListInsertEnd():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:118
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
   10bd8:	6843      	ldr	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:130

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   10bda:	689a      	ldr	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:129
	pxNewListItem->pxNext = pxIndex;
   10bdc:	604b      	str	r3, [r1, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
   10bde:	608a      	str	r2, [r1, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
   10be0:	689a      	ldr	r2, [r3, #8]
   10be2:	6051      	str	r1, [r2, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
   10be4:	6099      	str	r1, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:141

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   10be6:	6803      	ldr	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:139
	pxNewListItem->pvContainer = ( void * ) pxList;
   10be8:	6108      	str	r0, [r1, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:141
	( pxList->uxNumberOfItems )++;
   10bea:	3301      	adds	r3, #1
   10bec:	6003      	str	r3, [r0, #0]
   10bee:	4770      	bx	lr

00010bf0 <vListInsert>:
vListInsert():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:148
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
   10bf0:	680a      	ldr	r2, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:146
{
   10bf2:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
   10bf4:	1c53      	adds	r3, r2, #1
   10bf6:	d10a      	bne.n	10c0e <vListInsert+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
   10bf8:	6903      	ldr	r3, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
   10bfa:	685a      	ldr	r2, [r3, #4]
   10bfc:	604a      	str	r2, [r1, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
   10bfe:	6091      	str	r1, [r2, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
   10c00:	608b      	str	r3, [r1, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:202
	pxIterator->pxNext = pxNewListItem;
   10c02:	6059      	str	r1, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:208

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;

	( pxList->uxNumberOfItems )++;
   10c04:	6803      	ldr	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:206
	pxNewListItem->pvContainer = ( void * ) pxList;
   10c06:	6108      	str	r0, [r1, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:208
	( pxList->uxNumberOfItems )++;
   10c08:	3301      	adds	r3, #1
   10c0a:	6003      	str	r3, [r0, #0]
   10c0c:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:192
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
   10c0e:	f100 0308 	add.w	r3, r0, #8
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:192 (discriminator 1)
   10c12:	685c      	ldr	r4, [r3, #4]
   10c14:	6825      	ldr	r5, [r4, #0]
   10c16:	42aa      	cmp	r2, r5
   10c18:	d3ef      	bcc.n	10bfa <vListInsert+0xa>
   10c1a:	4623      	mov	r3, r4
   10c1c:	e7f9      	b.n	10c12 <vListInsert+0x22>

00010c1e <uxListRemove>:
uxListRemove():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:218
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   10c1e:	6841      	ldr	r1, [r0, #4]
   10c20:	6882      	ldr	r2, [r0, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:216
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
   10c22:	6903      	ldr	r3, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:218
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   10c24:	608a      	str	r2, [r1, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   10c26:	6882      	ldr	r2, [r0, #8]
   10c28:	6051      	str	r1, [r2, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
   10c2a:	6859      	ldr	r1, [r3, #4]
   10c2c:	4288      	cmp	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
   10c2e:	bf08      	it	eq
   10c30:	605a      	streq	r2, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
   10c32:	2200      	movs	r2, #0
   10c34:	6102      	str	r2, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:235
	( pxList->uxNumberOfItems )--;
   10c36:	6818      	ldr	r0, [r3, #0]
   10c38:	3801      	subs	r0, #1
   10c3a:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/list.c:238

	return pxList->uxNumberOfItems;
}
   10c3c:	4770      	bx	lr

00010c3e <prvCopyDataToQueue>:
prvCopyDataToQueue():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1698

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
   10c3e:	b570      	push	{r4, r5, r6, lr}
   10c40:	4615      	mov	r5, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1706

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   10c42:	6c02      	ldr	r2, [r0, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1698
{
   10c44:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1704
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   10c46:	6b86      	ldr	r6, [r0, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1706
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
   10c48:	b942      	cbnz	r2, 10c5c <prvCopyDataToQueue+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1710
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   10c4a:	6805      	ldr	r5, [r0, #0]
   10c4c:	b99d      	cbnz	r5, 10c76 <prvCopyDataToQueue+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1713
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
   10c4e:	6840      	ldr	r0, [r0, #4]
   10c50:	f000 fec0 	bl	119d4 <xTaskPriorityDisinherit>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1714
				pxQueue->pxMutexHolder = NULL;
   10c54:	6065      	str	r5, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1770
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   10c56:	3601      	adds	r6, #1
   10c58:	63a6      	str	r6, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1773

	return xReturn;
}
   10c5a:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1723
	else if( xPosition == queueSEND_TO_BACK )
   10c5c:	b96d      	cbnz	r5, 10c7a <prvCopyDataToQueue+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1725
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
   10c5e:	6880      	ldr	r0, [r0, #8]
   10c60:	f009 f82d 	bl	19cbe <memcpy>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   10c64:	68a3      	ldr	r3, [r4, #8]
   10c66:	6c22      	ldr	r2, [r4, #64]	; 0x40
   10c68:	4413      	add	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   10c6a:	6862      	ldr	r2, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1726
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
   10c6c:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1727
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   10c6e:	4293      	cmp	r3, r2
   10c70:	d301      	bcc.n	10c76 <prvCopyDataToQueue+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1729
			pxQueue->pcWriteTo = pxQueue->pcHead;
   10c72:	6823      	ldr	r3, [r4, #0]
   10c74:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   10c76:	2000      	movs	r0, #0
   10c78:	e7ed      	b.n	10c56 <prvCopyDataToQueue+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1738
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   10c7a:	68c0      	ldr	r0, [r0, #12]
   10c7c:	f009 f81f 	bl	19cbe <memcpy>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   10c80:	6c23      	ldr	r3, [r4, #64]	; 0x40
   10c82:	68e2      	ldr	r2, [r4, #12]
   10c84:	425b      	negs	r3, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   10c86:	6821      	ldr	r1, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   10c88:	441a      	add	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1740
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
   10c8a:	428a      	cmp	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1739
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
   10c8c:	60e2      	str	r2, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1742
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
   10c8e:	bf3e      	ittt	cc
   10c90:	6862      	ldrcc	r2, [r4, #4]
   10c92:	189b      	addcc	r3, r3, r2
   10c94:	60e3      	strcc	r3, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1749
		if( xPosition == queueOVERWRITE )
   10c96:	2d02      	cmp	r5, #2
   10c98:	d1ed      	bne.n	10c76 <prvCopyDataToQueue+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1751
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   10c9a:	b10e      	cbz	r6, 10ca0 <prvCopyDataToQueue+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1757
				--uxMessagesWaiting;
   10c9c:	3e01      	subs	r6, #1
   10c9e:	e7ea      	b.n	10c76 <prvCopyDataToQueue+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1699
BaseType_t xReturn = pdFALSE;
   10ca0:	4630      	mov	r0, r6
   10ca2:	e7d8      	b.n	10c56 <prvCopyDataToQueue+0x18>

00010ca4 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2504
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
   10ca4:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2505
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
   10ca6:	6c85      	ldr	r5, [r0, #72]	; 0x48
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   10ca8:	460a      	mov	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   10caa:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   10cac:	6ba9      	ldr	r1, [r5, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2504
	{
   10cae:	9001      	str	r0, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2513
		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
   10cb0:	4299      	cmp	r1, r3
   10cb2:	d21a      	bcs.n	10cea <prvNotifyQueueSetContainer+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   10cb4:	a901      	add	r1, sp, #4
   10cb6:	4628      	mov	r0, r5
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   10cb8:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   10cbc:	f7ff ffbf 	bl	10c3e <prvCopyDataToQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2515
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
   10cc0:	b264      	sxtb	r4, r4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2522

			if( cTxLock == queueUNLOCKED )
   10cc2:	1c63      	adds	r3, r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2520
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
   10cc4:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2522
			if( cTxLock == queueUNLOCKED )
   10cc6:	d10b      	bne.n	10ce0 <prvNotifyQueueSetContainer+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2524
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
   10cc8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   10cca:	b133      	cbz	r3, 10cda <prvNotifyQueueSetContainer+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2526
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
   10ccc:	f105 0024 	add.w	r0, r5, #36	; 0x24
   10cd0:	f000 fdb8 	bl	11844 <xTaskRemoveFromEventList>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2529
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
   10cd4:	2800      	cmp	r0, #0
   10cd6:	bf18      	it	ne
   10cd8:	2601      	movne	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2552
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
   10cda:	4630      	mov	r0, r6
   10cdc:	b002      	add	sp, #8
   10cde:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2543
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
   10ce0:	3401      	adds	r4, #1
   10ce2:	b264      	sxtb	r4, r4
   10ce4:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
   10ce8:	e7f7      	b.n	10cda <prvNotifyQueueSetContainer+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2506
	BaseType_t xReturn = pdFALSE;
   10cea:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:2551
		return xReturn;
   10cec:	e7f5      	b.n	10cda <prvNotifyQueueSetContainer+0x36>

00010cee <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   10cee:	4603      	mov	r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   10cf0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1777
{
   10cf2:	b410      	push	{r4}
   10cf4:	4608      	mov	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1778
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
   10cf6:	b162      	cbz	r2, 10d12 <prvCopyDataFromQueue+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   10cf8:	68d9      	ldr	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   10cfa:	685c      	ldr	r4, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   10cfc:	4411      	add	r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1781
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
   10cfe:	42a1      	cmp	r1, r4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1780
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
   10d00:	60d9      	str	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   10d02:	bf28      	it	cs
   10d04:	6819      	ldrcs	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   10d06:	bc10      	pop	{r4}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1783
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
   10d08:	bf28      	it	cs
   10d0a:	60d9      	strcs	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1789
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
   10d0c:	68d9      	ldr	r1, [r3, #12]
   10d0e:	f008 bfd6 	b.w	19cbe <memcpy>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1791
}
   10d12:	bc10      	pop	{r4}
   10d14:	4770      	bx	lr

00010d16 <prvUnlockQueue>:
prvUnlockQueue():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1795
{
   10d16:	b570      	push	{r4, r5, r6, lr}
   10d18:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1802
	taskENTER_CRITICAL();
   10d1a:	f7ff fec3 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   10d1e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   10d22:	f104 0624 	add.w	r6, r4, #36	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1804
		int8_t cTxLock = pxQueue->cTxLock;
   10d26:	b26d      	sxtb	r5, r5
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1807
		while( cTxLock > queueLOCKED_UNMODIFIED )
   10d28:	2d00      	cmp	r5, #0
   10d2a:	dc14      	bgt.n	10d56 <prvUnlockQueue+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1878
		pxQueue->cTxLock = queueUNLOCKED;
   10d2c:	23ff      	movs	r3, #255	; 0xff
   10d2e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1880
	taskEXIT_CRITICAL();
   10d32:	f7ff fec7 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1883
	taskENTER_CRITICAL();
   10d36:	f7ff feb5 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   10d3a:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   10d3e:	f104 0610 	add.w	r6, r4, #16
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1885
		int8_t cRxLock = pxQueue->cRxLock;
   10d42:	b26d      	sxtb	r5, r5
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1887
		while( cRxLock > queueLOCKED_UNMODIFIED )
   10d44:	2d00      	cmp	r5, #0
   10d46:	dc19      	bgt.n	10d7c <prvUnlockQueue+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1908
		pxQueue->cRxLock = queueUNLOCKED;
   10d48:	23ff      	movs	r3, #255	; 0xff
   10d4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1911
}
   10d4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1910
	taskEXIT_CRITICAL();
   10d52:	f7ff beb7 	b.w	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1813
				if( pxQueue->pxQueueSetContainer != NULL )
   10d56:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   10d58:	b14b      	cbz	r3, 10d6e <prvUnlockQueue+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1815
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   10d5a:	2100      	movs	r1, #0
   10d5c:	4620      	mov	r0, r4
   10d5e:	f7ff ffa1 	bl	10ca4 <prvNotifyQueueSetContainer>
   10d62:	b108      	cbz	r0, 10d68 <prvUnlockQueue+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1820
						vTaskMissedYield();
   10d64:	f000 fdd8 	bl	11918 <vTaskMissedYield>
   10d68:	3d01      	subs	r5, #1
   10d6a:	b26d      	sxtb	r5, r5
   10d6c:	e7dc      	b.n	10d28 <prvUnlockQueue+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1832
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   10d6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   10d70:	2b00      	cmp	r3, #0
   10d72:	d0db      	beq.n	10d2c <prvUnlockQueue+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1834
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   10d74:	4630      	mov	r0, r6
   10d76:	f000 fd65 	bl	11844 <xTaskRemoveFromEventList>
   10d7a:	e7f2      	b.n	10d62 <prvUnlockQueue+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1889
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   10d7c:	6923      	ldr	r3, [r4, #16]
   10d7e:	2b00      	cmp	r3, #0
   10d80:	d0e2      	beq.n	10d48 <prvUnlockQueue+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1891
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   10d82:	4630      	mov	r0, r6
   10d84:	f000 fd5e 	bl	11844 <xTaskRemoveFromEventList>
   10d88:	b108      	cbz	r0, 10d8e <prvUnlockQueue+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1893
					vTaskMissedYield();
   10d8a:	f000 fdc5 	bl	11918 <vTaskMissedYield>
   10d8e:	3d01      	subs	r5, #1
   10d90:	b26d      	sxtb	r5, r5
   10d92:	e7d7      	b.n	10d44 <prvUnlockQueue+0x2e>

00010d94 <xQueueGenericReset>:
xQueueGenericReset():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:280
{
   10d94:	b538      	push	{r3, r4, r5, lr}
   10d96:	4604      	mov	r4, r0
   10d98:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:285
	taskENTER_CRITICAL();
   10d9a:	f7ff fe83 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   10d9e:	6c20      	ldr	r0, [r4, #64]	; 0x40
   10da0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   10da2:	6822      	ldr	r2, [r4, #0]
   10da4:	4343      	muls	r3, r0
   10da6:	18d1      	adds	r1, r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   10da8:	1a1b      	subs	r3, r3, r0
   10daa:	4413      	add	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:287
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
   10dac:	6061      	str	r1, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:290
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
   10dae:	60e3      	str	r3, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   10db0:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   10db2:	23ff      	movs	r3, #255	; 0xff
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:288
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
   10db4:	63a1      	str	r1, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:289
		pxQueue->pcWriteTo = pxQueue->pcHead;
   10db6:	60a2      	str	r2, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:291
		pxQueue->cRxLock = queueUNLOCKED;
   10db8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:292
		pxQueue->cTxLock = queueUNLOCKED;
   10dbc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:294
		if( xNewQueue == pdFALSE )
   10dc0:	b995      	cbnz	r5, 10de8 <xQueueGenericReset+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:301
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   10dc2:	6923      	ldr	r3, [r4, #16]
   10dc4:	b163      	cbz	r3, 10de0 <xQueueGenericReset+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:303
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   10dc6:	f104 0010 	add.w	r0, r4, #16
   10dca:	f000 fd3b 	bl	11844 <xTaskRemoveFromEventList>
   10dce:	b138      	cbz	r0, 10de0 <xQueueGenericReset+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:305
					queueYIELD_IF_USING_PREEMPTION();
   10dd0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10dd4:	4b09      	ldr	r3, [pc, #36]	; (10dfc <xQueueGenericReset+0x68>)
   10dd6:	601a      	str	r2, [r3, #0]
   10dd8:	f3bf 8f4f 	dsb	sy
   10ddc:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:324
	taskEXIT_CRITICAL();
   10de0:	f7ff fe70 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:329
}
   10de4:	2001      	movs	r0, #1
   10de6:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:320
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
   10de8:	f104 0010 	add.w	r0, r4, #16
   10dec:	f7ff fee6 	bl	10bbc <vListInitialise>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:321
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
   10df0:	f104 0024 	add.w	r0, r4, #36	; 0x24
   10df4:	f7ff fee2 	bl	10bbc <vListInitialise>
   10df8:	e7f2      	b.n	10de0 <xQueueGenericReset+0x4c>
   10dfa:	bf00      	nop
   10dfc:	e000ed04 	.word	0xe000ed04

00010e00 <xQueueGenericCreate>:
xQueueGenericCreate():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   10e00:	b570      	push	{r4, r5, r6, lr}
   10e02:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:403
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   10e04:	4348      	muls	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   10e06:	304c      	adds	r0, #76	; 0x4c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:387
	{
   10e08:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:406
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
   10e0a:	f7ff fdbc 	bl	10986 <pvPortMalloc>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:408
		if( pxNewQueue != NULL )
   10e0e:	4604      	mov	r4, r0
   10e10:	b148      	cbz	r0, 10e26 <xQueueGenericCreate+0x26>
prvInitialiseNewQueue():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:438
	if( uxItemSize == ( UBaseType_t ) 0 )
   10e12:	b955      	cbnz	r5, 10e2a <xQueueGenericCreate+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:444
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
   10e14:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:454
	pxNewQueue->uxLength = uxQueueLength;
   10e16:	63e6      	str	r6, [r4, #60]	; 0x3c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:455
	pxNewQueue->uxItemSize = uxItemSize;
   10e18:	6425      	str	r5, [r4, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:456
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
   10e1a:	2101      	movs	r1, #1
   10e1c:	4620      	mov	r0, r4
   10e1e:	f7ff ffb9 	bl	10d94 <xQueueGenericReset>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:466
		pxNewQueue->pxQueueSetContainer = NULL;
   10e22:	2300      	movs	r3, #0
   10e24:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:427
	}
   10e26:	4620      	mov	r0, r4
   10e28:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:412
			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
   10e2a:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:449
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
   10e2e:	6003      	str	r3, [r0, #0]
   10e30:	e7f1      	b.n	10e16 <xQueueGenericCreate+0x16>
xQueueGenericCreate():
   10e32:	Address 0x0000000000010e32 is out of bounds.


00010e34 <xQueueGenericSend>:
xQueueGenericSend():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   10e34:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:725
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
   10e38:	2700      	movs	r7, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   10e3a:	4604      	mov	r4, r0
   10e3c:	4689      	mov	r9, r1
   10e3e:	461e      	mov	r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   10e40:	46b8      	mov	r8, r7
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   10e42:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 10f34 <xQueueGenericSend+0x100>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:724
{
   10e46:	9201      	str	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:744
		taskENTER_CRITICAL();
   10e48:	f7ff fe2c 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:750
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   10e4c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   10e4e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   10e50:	429a      	cmp	r2, r3
   10e52:	d301      	bcc.n	10e58 <xQueueGenericSend+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:750 (discriminator 1)
   10e54:	2e02      	cmp	r6, #2
   10e56:	d121      	bne.n	10e9c <xQueueGenericSend+0x68>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:753
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   10e58:	4632      	mov	r2, r6
   10e5a:	4649      	mov	r1, r9
   10e5c:	4620      	mov	r0, r4
   10e5e:	f7ff feee 	bl	10c3e <prvCopyDataToQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:757
					if( pxQueue->pxQueueSetContainer != NULL )
   10e62:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   10e64:	b193      	cbz	r3, 10e8c <xQueueGenericSend+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:759
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   10e66:	4631      	mov	r1, r6
   10e68:	4620      	mov	r0, r4
   10e6a:	f7ff ff1b 	bl	10ca4 <prvNotifyQueueSetContainer>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:790
						else if( xYieldRequired != pdFALSE )
   10e6e:	b138      	cbz	r0, 10e80 <xQueueGenericSend+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:796
							queueYIELD_IF_USING_PREEMPTION();
   10e70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   10e74:	4b2f      	ldr	r3, [pc, #188]	; (10f34 <xQueueGenericSend+0x100>)
   10e76:	601a      	str	r2, [r3, #0]
   10e78:	f3bf 8f4f 	dsb	sy
   10e7c:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:838
				taskEXIT_CRITICAL();
   10e80:	f7ff fe20 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:839
				return pdPASS;
   10e84:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:918
}
   10e86:	b004      	add	sp, #16
   10e88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:775
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   10e8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   10e8e:	2b00      	cmp	r3, #0
   10e90:	d0ed      	beq.n	10e6e <xQueueGenericSend+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:777
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   10e92:	f104 0024 	add.w	r0, r4, #36	; 0x24
   10e96:	f000 fcd5 	bl	11844 <xTaskRemoveFromEventList>
   10e9a:	e7e8      	b.n	10e6e <xQueueGenericSend+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:843
				if( xTicksToWait == ( TickType_t ) 0 )
   10e9c:	9d01      	ldr	r5, [sp, #4]
   10e9e:	b91d      	cbnz	r5, 10ea8 <xQueueGenericSend+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:847
					taskEXIT_CRITICAL();
   10ea0:	f7ff fe10 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:915
			return errQUEUE_FULL;
   10ea4:	2000      	movs	r0, #0
   10ea6:	e7ee      	b.n	10e86 <xQueueGenericSend+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:854
				else if( xEntryTimeSet == pdFALSE )
   10ea8:	b917      	cbnz	r7, 10eb0 <xQueueGenericSend+0x7c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:858
					vTaskSetTimeOutState( &xTimeOut );
   10eaa:	a802      	add	r0, sp, #8
   10eac:	f000 fd02 	bl	118b4 <vTaskSetTimeOutState>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:868
		taskEXIT_CRITICAL();
   10eb0:	f7ff fe08 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:873
		vTaskSuspendAll();
   10eb4:	f000 fb10 	bl	114d8 <vTaskSuspendAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:874
		prvLockQueue( pxQueue );
   10eb8:	f7ff fdf4 	bl	10aa4 <vPortEnterCritical>
   10ebc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   10ec0:	2bff      	cmp	r3, #255	; 0xff
   10ec2:	bf08      	it	eq
   10ec4:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
   10ec8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   10ecc:	2bff      	cmp	r3, #255	; 0xff
   10ece:	bf08      	it	eq
   10ed0:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
   10ed4:	f7ff fdf6 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:877
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   10ed8:	a901      	add	r1, sp, #4
   10eda:	a802      	add	r0, sp, #8
   10edc:	f000 fcf6 	bl	118cc <xTaskCheckForTimeOut>
   10ee0:	bb10      	cbnz	r0, 10f28 <xQueueGenericSend+0xf4>
prvIsQueueFull():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1957
	taskENTER_CRITICAL();
   10ee2:	f7ff fddf 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1959
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
   10ee6:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   10ee8:	6be5      	ldr	r5, [r4, #60]	; 0x3c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1968
	taskEXIT_CRITICAL();
   10eea:	f7ff fdeb 	bl	10ac4 <vPortExitCritical>
xQueueGenericSend():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:879
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
   10eee:	42af      	cmp	r7, r5
   10ef0:	d114      	bne.n	10f1c <xQueueGenericSend+0xe8>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:882
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
   10ef2:	9901      	ldr	r1, [sp, #4]
   10ef4:	f104 0010 	add.w	r0, r4, #16
   10ef8:	f000 fc94 	bl	11824 <vTaskPlaceOnEventList>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:889
				prvUnlockQueue( pxQueue );
   10efc:	4620      	mov	r0, r4
   10efe:	f7ff ff0a 	bl	10d16 <prvUnlockQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:896
				if( xTaskResumeAll() == pdFALSE )
   10f02:	f000 fb83 	bl	1160c <xTaskResumeAll>
   10f06:	b938      	cbnz	r0, 10f18 <xQueueGenericSend+0xe4>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:898
					portYIELD_WITHIN_API();
   10f08:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   10f0c:	f8ca 3000 	str.w	r3, [sl]
   10f10:	f3bf 8f4f 	dsb	sy
   10f14:	f3bf 8f6f 	isb	sy
   10f18:	2701      	movs	r7, #1
   10f1a:	e795      	b.n	10e48 <xQueueGenericSend+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:904
				prvUnlockQueue( pxQueue );
   10f1c:	4620      	mov	r0, r4
   10f1e:	f7ff fefa 	bl	10d16 <prvUnlockQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:905
				( void ) xTaskResumeAll();
   10f22:	f000 fb73 	bl	1160c <xTaskResumeAll>
   10f26:	e7f7      	b.n	10f18 <xQueueGenericSend+0xe4>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:911
			prvUnlockQueue( pxQueue );
   10f28:	4620      	mov	r0, r4
   10f2a:	f7ff fef4 	bl	10d16 <prvUnlockQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:912
			( void ) xTaskResumeAll();
   10f2e:	f000 fb6d 	bl	1160c <xTaskResumeAll>
   10f32:	e7b7      	b.n	10ea4 <xQueueGenericSend+0x70>
   10f34:	e000ed04 	.word	0xe000ed04

00010f38 <xQueueCreateMutex>:
xQueueCreateMutex():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:507
	{
   10f38:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:511
		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
   10f3a:	4602      	mov	r2, r0
   10f3c:	2100      	movs	r1, #0
   10f3e:	2001      	movs	r0, #1
   10f40:	f7ff ff5e 	bl	10e00 <xQueueGenericCreate>
prvInitialiseMutex():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:478
		if( pxNewQueue != NULL )
   10f44:	4604      	mov	r4, r0
   10f46:	b138      	cbz	r0, 10f58 <xQueueCreateMutex+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:484
			pxNewQueue->pxMutexHolder = NULL;
   10f48:	2300      	movs	r3, #0
   10f4a:	6043      	str	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:485
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
   10f4c:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:488
			pxNewQueue->u.uxRecursiveCallCount = 0;
   10f4e:	60c3      	str	r3, [r0, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:493
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
   10f50:	461a      	mov	r2, r3
   10f52:	4619      	mov	r1, r3
   10f54:	f7ff ff6e 	bl	10e34 <xQueueGenericSend>
xQueueCreateMutex():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:515
	}
   10f58:	4620      	mov	r0, r4
   10f5a:	bd10      	pop	{r4, pc}

00010f5c <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:922
{
   10f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10f60:	4604      	mov	r4, r0
   10f62:	4690      	mov	r8, r2
   10f64:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   10f66:	f3ef 8611 	mrs	r6, BASEPRI
   10f6a:	f04f 0310 	mov.w	r3, #16
   10f6e:	f383 8811 	msr	BASEPRI, r3
   10f72:	f3bf 8f6f 	isb	sy
   10f76:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:954
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
   10f7a:	6b82      	ldr	r2, [r0, #56]	; 0x38
   10f7c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
   10f7e:	429a      	cmp	r2, r3
   10f80:	d301      	bcc.n	10f86 <xQueueGenericSendFromISR+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:954 (discriminator 1)
   10f82:	2f02      	cmp	r7, #2
   10f84:	d128      	bne.n	10fd8 <xQueueGenericSendFromISR+0x7c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   10f86:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   10f8a:	463a      	mov	r2, r7
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:956
			const int8_t cTxLock = pxQueue->cTxLock;
   10f8c:	b26d      	sxtb	r5, r5
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:965
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
   10f8e:	4620      	mov	r0, r4
   10f90:	f7ff fe55 	bl	10c3e <prvCopyDataToQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:969
			if( cTxLock == queueUNLOCKED )
   10f94:	1c6b      	adds	r3, r5, #1
   10f96:	d11a      	bne.n	10fce <xQueueGenericSendFromISR+0x72>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:973
					if( pxQueue->pxQueueSetContainer != NULL )
   10f98:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   10f9a:	b183      	cbz	r3, 10fbe <xQueueGenericSendFromISR+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:975
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
   10f9c:	4639      	mov	r1, r7
   10f9e:	4620      	mov	r0, r4
   10fa0:	f7ff fe80 	bl	10ca4 <prvNotifyQueueSetContainer>
   10fa4:	b908      	cbnz	r0, 10faa <xQueueGenericSendFromISR+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1058
			xReturn = pdPASS;
   10fa6:	2001      	movs	r0, #1
   10fa8:	e005      	b.n	10fb6 <xQueueGenericSendFromISR+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:980
							if( pxHigherPriorityTaskWoken != NULL )
   10faa:	f1b8 0f00 	cmp.w	r8, #0
   10fae:	d0fa      	beq.n	10fa6 <xQueueGenericSendFromISR+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:982
								*pxHigherPriorityTaskWoken = pdTRUE;
   10fb0:	2001      	movs	r0, #1
   10fb2:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   10fb6:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1069
}
   10fba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:996
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   10fbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
   10fc0:	2b00      	cmp	r3, #0
   10fc2:	d0f0      	beq.n	10fa6 <xQueueGenericSendFromISR+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:998
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   10fc4:	f104 0024 	add.w	r0, r4, #36	; 0x24
   10fc8:	f000 fc3c 	bl	11844 <xTaskRemoveFromEventList>
   10fcc:	e7ea      	b.n	10fa4 <xQueueGenericSendFromISR+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1055
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   10fce:	3501      	adds	r5, #1
   10fd0:	b26d      	sxtb	r5, r5
   10fd2:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
   10fd6:	e7e6      	b.n	10fa6 <xQueueGenericSendFromISR+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1063
			xReturn = errQUEUE_FULL;
   10fd8:	2000      	movs	r0, #0
   10fda:	e7ec      	b.n	10fb6 <xQueueGenericSendFromISR+0x5a>

00010fdc <xQueueGiveFromISR>:
xQueueGiveFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1073
{
   10fdc:	b538      	push	{r3, r4, r5, lr}
   10fde:	460d      	mov	r5, r1
ulPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   10fe0:	f3ef 8411 	mrs	r4, BASEPRI
   10fe4:	f04f 0210 	mov.w	r2, #16
   10fe8:	f382 8811 	msr	BASEPRI, r2
   10fec:	f3bf 8f6f 	isb	sy
   10ff0:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1113
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   10ff4:	6b81      	ldr	r1, [r0, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1118
		if( uxMessagesWaiting < pxQueue->uxLength )
   10ff6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
   10ff8:	4291      	cmp	r1, r2
   10ffa:	d221      	bcs.n	11040 <xQueueGiveFromISR+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   10ffc:	f890 2045 	ldrb.w	r2, [r0, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   11000:	3101      	adds	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1120
			const int8_t cTxLock = pxQueue->cTxLock;
   11002:	b252      	sxtb	r2, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1130
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
   11004:	6381      	str	r1, [r0, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1134
			if( cTxLock == queueUNLOCKED )
   11006:	1c51      	adds	r1, r2, #1
   11008:	d115      	bne.n	11036 <xQueueGiveFromISR+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1138
					if( pxQueue->pxQueueSetContainer != NULL )
   1100a:	6c82      	ldr	r2, [r0, #72]	; 0x48
   1100c:	b162      	cbz	r2, 11028 <xQueueGiveFromISR+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1140
						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
   1100e:	2100      	movs	r1, #0
   11010:	f7ff fe48 	bl	10ca4 <prvNotifyQueueSetContainer>
   11014:	b908      	cbnz	r0, 1101a <xQueueGiveFromISR+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1223
			xReturn = pdPASS;
   11016:	2001      	movs	r0, #1
   11018:	e003      	b.n	11022 <xQueueGiveFromISR+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1145
							if( pxHigherPriorityTaskWoken != NULL )
   1101a:	2d00      	cmp	r5, #0
   1101c:	d0fb      	beq.n	11016 <xQueueGiveFromISR+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1147
								*pxHigherPriorityTaskWoken = pdTRUE;
   1101e:	2001      	movs	r0, #1
   11020:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   11022:	f384 8811 	msr	BASEPRI, r4
xQueueGiveFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1234
}
   11026:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1161
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   11028:	6a42      	ldr	r2, [r0, #36]	; 0x24
   1102a:	2a00      	cmp	r2, #0
   1102c:	d0f3      	beq.n	11016 <xQueueGiveFromISR+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1163
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   1102e:	3024      	adds	r0, #36	; 0x24
   11030:	f000 fc08 	bl	11844 <xTaskRemoveFromEventList>
   11034:	e7ee      	b.n	11014 <xQueueGiveFromISR+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1220
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
   11036:	3201      	adds	r2, #1
   11038:	b252      	sxtb	r2, r2
   1103a:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
   1103e:	e7ea      	b.n	11016 <xQueueGiveFromISR+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1228
			xReturn = errQUEUE_FULL;
   11040:	2000      	movs	r0, #0
   11042:	e7ee      	b.n	11022 <xQueueGiveFromISR+0x46>

00011044 <xQueueGenericReceive>:
xQueueGenericReceive():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   11044:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1239
BaseType_t xEntryTimeSet = pdFALSE;
   11048:	f04f 0a00 	mov.w	sl, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   1104c:	4604      	mov	r4, r0
   1104e:	460f      	mov	r7, r1
   11050:	4698      	mov	r8, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   11052:	4656      	mov	r6, sl
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   11054:	f8df 911c 	ldr.w	r9, [pc, #284]	; 11174 <xQueueGenericReceive+0x130>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1238
{
   11058:	9201      	str	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1258
		taskENTER_CRITICAL();
   1105a:	f7ff fd23 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1260
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   1105e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1264
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   11060:	b355      	cbz	r5, 110b8 <xQueueGenericReceive+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   11062:	4639      	mov	r1, r7
   11064:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1268
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
   11066:	68e6      	ldr	r6, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1270
				prvCopyDataFromQueue( pxQueue, pvBuffer );
   11068:	f7ff fe41 	bl	10cee <prvCopyDataFromQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1272
				if( xJustPeeking == pdFALSE )
   1106c:	f1b8 0f00 	cmp.w	r8, #0
   11070:	d11b      	bne.n	110aa <xQueueGenericReceive+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   11072:	6823      	ldr	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1277
					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   11074:	3d01      	subs	r5, #1
   11076:	63a5      	str	r5, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1281
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   11078:	b913      	cbnz	r3, 11080 <xQueueGenericReceive+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1285
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
   1107a:	f000 fce3 	bl	11a44 <pvTaskIncrementMutexHeldCount>
   1107e:	6060      	str	r0, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1294
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   11080:	6923      	ldr	r3, [r4, #16]
   11082:	b163      	cbz	r3, 1109e <xQueueGenericReceive+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1296
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   11084:	f104 0010 	add.w	r0, r4, #16
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   11088:	f000 fbdc 	bl	11844 <xTaskRemoveFromEventList>
   1108c:	b138      	cbz	r0, 1109e <xQueueGenericReceive+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1325
							queueYIELD_IF_USING_PREEMPTION();
   1108e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   11092:	4b38      	ldr	r3, [pc, #224]	; (11174 <xQueueGenericReceive+0x130>)
   11094:	601a      	str	r2, [r3, #0]
   11096:	f3bf 8f4f 	dsb	sy
   1109a:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1338
				taskEXIT_CRITICAL();
   1109e:	f7ff fd11 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1339
				return pdPASS;
   110a2:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1431
}
   110a4:	b004      	add	sp, #16
   110a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   110aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1316
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
   110ac:	60e6      	str	r6, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1320
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
   110ae:	2b00      	cmp	r3, #0
   110b0:	d0f5      	beq.n	1109e <xQueueGenericReceive+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1322
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
   110b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
   110b6:	e7e7      	b.n	11088 <xQueueGenericReceive+0x44>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1343
				if( xTicksToWait == ( TickType_t ) 0 )
   110b8:	9d01      	ldr	r5, [sp, #4]
   110ba:	b91d      	cbnz	r5, 110c4 <xQueueGenericReceive+0x80>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1347
					taskEXIT_CRITICAL();
   110bc:	f7ff fd02 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1423
				return errQUEUE_EMPTY;
   110c0:	4628      	mov	r0, r5
   110c2:	e7ef      	b.n	110a4 <xQueueGenericReceive+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1351
				else if( xEntryTimeSet == pdFALSE )
   110c4:	f1ba 0f00 	cmp.w	sl, #0
   110c8:	d102      	bne.n	110d0 <xQueueGenericReceive+0x8c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1355
					vTaskSetTimeOutState( &xTimeOut );
   110ca:	a802      	add	r0, sp, #8
   110cc:	f000 fbf2 	bl	118b4 <vTaskSetTimeOutState>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1365
		taskEXIT_CRITICAL();
   110d0:	f7ff fcf8 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1370
		vTaskSuspendAll();
   110d4:	f000 fa00 	bl	114d8 <vTaskSuspendAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1371
		prvLockQueue( pxQueue );
   110d8:	f7ff fce4 	bl	10aa4 <vPortEnterCritical>
   110dc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   110e0:	2bff      	cmp	r3, #255	; 0xff
   110e2:	bf08      	it	eq
   110e4:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
   110e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   110ec:	2bff      	cmp	r3, #255	; 0xff
   110ee:	bf08      	it	eq
   110f0:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
   110f4:	f7ff fce6 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1374
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
   110f8:	a901      	add	r1, sp, #4
   110fa:	a802      	add	r0, sp, #8
   110fc:	f000 fbe6 	bl	118cc <xTaskCheckForTimeOut>
   11100:	bb50      	cbnz	r0, 11158 <xQueueGenericReceive+0x114>
prvIsQueueEmpty():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   11102:	f7ff fccf 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   11106:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   11108:	f7ff fcdc 	bl	10ac4 <vPortExitCritical>
xQueueGenericReceive():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1376
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   1110c:	b9f5      	cbnz	r5, 1114c <xQueueGenericReceive+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1382
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
   1110e:	6823      	ldr	r3, [r4, #0]
   11110:	b933      	cbnz	r3, 11120 <xQueueGenericReceive+0xdc>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1384
						taskENTER_CRITICAL();
   11112:	f7ff fcc7 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1386
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
   11116:	6860      	ldr	r0, [r4, #4]
   11118:	f000 fc14 	bl	11944 <vTaskPriorityInherit>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1388
						taskEXIT_CRITICAL();
   1111c:	f7ff fcd2 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1397
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
   11120:	9901      	ldr	r1, [sp, #4]
   11122:	f104 0024 	add.w	r0, r4, #36	; 0x24
   11126:	f000 fb7d 	bl	11824 <vTaskPlaceOnEventList>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1398
				prvUnlockQueue( pxQueue );
   1112a:	4620      	mov	r0, r4
   1112c:	f7ff fdf3 	bl	10d16 <prvUnlockQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1399
				if( xTaskResumeAll() == pdFALSE )
   11130:	f000 fa6c 	bl	1160c <xTaskResumeAll>
   11134:	b938      	cbnz	r0, 11146 <xQueueGenericReceive+0x102>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1401
					portYIELD_WITHIN_API();
   11136:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1113a:	f8c9 3000 	str.w	r3, [r9]
   1113e:	f3bf 8f4f 	dsb	sy
   11142:	f3bf 8f6f 	isb	sy
   11146:	f04f 0a01 	mov.w	sl, #1
   1114a:	e786      	b.n	1105a <xQueueGenericReceive+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1411
				prvUnlockQueue( pxQueue );
   1114c:	4620      	mov	r0, r4
   1114e:	f7ff fde2 	bl	10d16 <prvUnlockQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1412
				( void ) xTaskResumeAll();
   11152:	f000 fa5b 	bl	1160c <xTaskResumeAll>
   11156:	e7f6      	b.n	11146 <xQueueGenericReceive+0x102>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1417
			prvUnlockQueue( pxQueue );
   11158:	4620      	mov	r0, r4
   1115a:	f7ff fddc 	bl	10d16 <prvUnlockQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1418
			( void ) xTaskResumeAll();
   1115e:	f000 fa55 	bl	1160c <xTaskResumeAll>
prvIsQueueEmpty():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1918
	taskENTER_CRITICAL();
   11162:	f7ff fc9f 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1920
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
   11166:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1929
	taskEXIT_CRITICAL();
   11168:	f7ff fcac 	bl	10ac4 <vPortExitCritical>
xQueueGenericReceive():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1420
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
   1116c:	2d00      	cmp	r5, #0
   1116e:	d1ea      	bne.n	11146 <xQueueGenericReceive+0x102>
   11170:	e7a6      	b.n	110c0 <xQueueGenericReceive+0x7c>
   11172:	bf00      	nop
   11174:	e000ed04 	.word	0xe000ed04

00011178 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1435
{
   11178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1117c:	4607      	mov	r7, r0
   1117e:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:253
	__asm volatile
   11180:	f3ef 8611 	mrs	r6, BASEPRI
   11184:	f04f 0310 	mov.w	r3, #16
   11188:	f383 8811 	msr	BASEPRI, r3
   1118c:	f3bf 8f6f 	isb	sy
   11190:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1461
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
   11194:	6b84      	ldr	r4, [r0, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1464
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
   11196:	b30c      	cbz	r4, 111dc <xQueueReceiveFromISR+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   11198:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   1119c:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1466
			const int8_t cRxLock = pxQueue->cRxLock;
   1119e:	b26d      	sxtb	r5, r5
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1470
			prvCopyDataFromQueue( pxQueue, pvBuffer );
   111a0:	f7ff fda5 	bl	10cee <prvCopyDataFromQueue>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   111a4:	1c6b      	adds	r3, r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1471
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
   111a6:	63bc      	str	r4, [r7, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1477
			if( cRxLock == queueUNLOCKED )
   111a8:	d113      	bne.n	111d2 <xQueueReceiveFromISR+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1479
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
   111aa:	693b      	ldr	r3, [r7, #16]
   111ac:	b90b      	cbnz	r3, 111b2 <xQueueReceiveFromISR+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1511
			xReturn = pdPASS;
   111ae:	2001      	movs	r0, #1
   111b0:	e00b      	b.n	111ca <xQueueReceiveFromISR+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1481
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
   111b2:	f107 0010 	add.w	r0, r7, #16
   111b6:	f000 fb45 	bl	11844 <xTaskRemoveFromEventList>
   111ba:	2800      	cmp	r0, #0
   111bc:	d0f7      	beq.n	111ae <xQueueReceiveFromISR+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1485
						if( pxHigherPriorityTaskWoken != NULL )
   111be:	f1b8 0f00 	cmp.w	r8, #0
   111c2:	d0f4      	beq.n	111ae <xQueueReceiveFromISR+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1487
							*pxHigherPriorityTaskWoken = pdTRUE;
   111c4:	2001      	movs	r0, #1
   111c6:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:271
	__asm volatile
   111ca:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1522
}
   111ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1508
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
   111d2:	3501      	adds	r5, #1
   111d4:	b26d      	sxtb	r5, r5
   111d6:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
   111da:	e7e8      	b.n	111ae <xQueueReceiveFromISR+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1515
			xReturn = pdFAIL;
   111dc:	4620      	mov	r0, r4
   111de:	e7f4      	b.n	111ca <xQueueReceiveFromISR+0x52>

000111e0 <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1580
{
   111e0:	b510      	push	{r4, lr}
   111e2:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1585
	taskENTER_CRITICAL();
   111e4:	f7ff fc5e 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1587
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   111e8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1589
	taskEXIT_CRITICAL();
   111ea:	f7ff fc6b 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1592
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   111ee:	4620      	mov	r0, r4
   111f0:	bd10      	pop	{r4, pc}

000111f2 <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1619
	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
   111f2:	6b80      	ldr	r0, [r0, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/queue.c:1622
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
   111f4:	4770      	bx	lr
   111f6:	Address 0x00000000000111f6 is out of bounds.


000111f8 <prvIdleTask>:
prvIdleTask():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
			{
				taskYIELD();
   111f8:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3132
{
   111fc:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   111fe:	4c06      	ldr	r4, [pc, #24]	; (11218 <prvIdleTask+0x20>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   11200:	4d06      	ldr	r5, [pc, #24]	; (1121c <prvIdleTask+0x24>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3166
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
   11202:	6823      	ldr	r3, [r4, #0]
   11204:	2b01      	cmp	r3, #1
   11206:	d904      	bls.n	11212 <prvIdleTask+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3168
				taskYIELD();
   11208:	602e      	str	r6, [r5, #0]
   1120a:	f3bf 8f4f 	dsb	sy
   1120e:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3186
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
   11212:	f7ff fbd4 	bl	109be <vApplicationIdleHook>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3143
		prvCheckTasksWaitingTermination();
   11216:	e7f4      	b.n	11202 <prvIdleTask+0xa>
   11218:	2007c334 	.word	0x2007c334
   1121c:	e000ed04 	.word	0xe000ed04

00011220 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3639

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   11220:	4a06      	ldr	r2, [pc, #24]	; (1123c <prvResetNextTaskUnblockTime+0x1c>)
   11222:	6813      	ldr	r3, [r2, #0]
   11224:	6819      	ldr	r1, [r3, #0]
   11226:	4b06      	ldr	r3, [pc, #24]	; (11240 <prvResetNextTaskUnblockTime+0x20>)
   11228:	b919      	cbnz	r1, 11232 <prvResetNextTaskUnblockTime+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3645
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
   1122a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   1122e:	601a      	str	r2, [r3, #0]
   11230:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3653
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   11232:	6812      	ldr	r2, [r2, #0]
   11234:	68d2      	ldr	r2, [r2, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3654
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
   11236:	68d2      	ldr	r2, [r2, #12]
   11238:	6852      	ldr	r2, [r2, #4]
   1123a:	e7f8      	b.n	1122e <prvResetNextTaskUnblockTime+0xe>
   1123c:	2007c32c 	.word	0x2007c32c
   11240:	2007c440 	.word	0x2007c440

00011244 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
#endif /* configUSE_TASK_NOTIFICATIONS */
/*-----------------------------------------------------------*/


static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
   11244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
   11246:	4b1b      	ldr	r3, [pc, #108]	; (112b4 <prvAddCurrentTaskToDelayedList+0x70>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   11248:	4e1b      	ldr	r6, [pc, #108]	; (112b8 <prvAddCurrentTaskToDelayedList+0x74>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4695
const TickType_t xConstTickCount = xTickCount;
   1124a:	681d      	ldr	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   1124c:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   1124e:	6830      	ldr	r0, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4693
{
   11250:	460f      	mov	r7, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4708
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   11252:	3004      	adds	r0, #4
   11254:	f7ff fce3 	bl	10c1e <uxListRemove>
   11258:	4633      	mov	r3, r6
   1125a:	b940      	cbnz	r0, 1126e <prvAddCurrentTaskToDelayedList+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4712
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
   1125c:	2001      	movs	r0, #1
   1125e:	6831      	ldr	r1, [r6, #0]
   11260:	4e16      	ldr	r6, [pc, #88]	; (112bc <prvAddCurrentTaskToDelayedList+0x78>)
   11262:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   11264:	6832      	ldr	r2, [r6, #0]
   11266:	4088      	lsls	r0, r1
   11268:	ea22 0200 	bic.w	r2, r2, r0
   1126c:	6032      	str	r2, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4721
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
   1126e:	1c62      	adds	r2, r4, #1
   11270:	d107      	bne.n	11282 <prvAddCurrentTaskToDelayedList+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4721 (discriminator 1)
   11272:	b137      	cbz	r7, 11282 <prvAddCurrentTaskToDelayedList+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   11274:	6819      	ldr	r1, [r3, #0]
   11276:	4812      	ldr	r0, [pc, #72]	; (112c0 <prvAddCurrentTaskToDelayedList+0x7c>)
   11278:	3104      	adds	r1, #4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4801

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
   1127a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4726
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1127e:	f7ff bcab 	b.w	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4733
			xTimeToWake = xConstTickCount + xTicksToWait;
   11282:	442c      	add	r4, r5
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   11284:	681a      	ldr	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   11286:	42a5      	cmp	r5, r4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4736
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
   11288:	6054      	str	r4, [r2, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4738
			if( xTimeToWake < xConstTickCount )
   1128a:	d907      	bls.n	1129c <prvAddCurrentTaskToDelayedList+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1128c:	4a0d      	ldr	r2, [pc, #52]	; (112c4 <prvAddCurrentTaskToDelayedList+0x80>)
   1128e:	6810      	ldr	r0, [r2, #0]
   11290:	6819      	ldr	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4801
}
   11292:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4742
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   11296:	3104      	adds	r1, #4
   11298:	f7ff bcaa 	b.w	10bf0 <vListInsert>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4748
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
   1129c:	4a0a      	ldr	r2, [pc, #40]	; (112c8 <prvAddCurrentTaskToDelayedList+0x84>)
   1129e:	6810      	ldr	r0, [r2, #0]
   112a0:	6819      	ldr	r1, [r3, #0]
   112a2:	3104      	adds	r1, #4
   112a4:	f7ff fca4 	bl	10bf0 <vListInsert>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4753
				if( xTimeToWake < xNextTaskUnblockTime )
   112a8:	4b08      	ldr	r3, [pc, #32]	; (112cc <prvAddCurrentTaskToDelayedList+0x88>)
   112aa:	681a      	ldr	r2, [r3, #0]
   112ac:	4294      	cmp	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4755
					xNextTaskUnblockTime = xTimeToWake;
   112ae:	bf38      	it	cc
   112b0:	601c      	strcc	r4, [r3, #0]
   112b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   112b4:	2007c474 	.word	0x2007c474
   112b8:	2007c328 	.word	0x2007c328
   112bc:	2007c410 	.word	0x2007c410
   112c0:	2007c460 	.word	0x2007c460
   112c4:	2007c330 	.word	0x2007c330
   112c8:	2007c32c 	.word	0x2007c32c
   112cc:	2007c440 	.word	0x2007c440

000112d0 <xTaskCreate>:
xTaskCreate():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   112d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   112d4:	ea4f 0a82 	mov.w	sl, r2, lsl #2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   112d8:	4680      	mov	r8, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   112da:	4650      	mov	r0, sl
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:682
	{
   112dc:	460d      	mov	r5, r1
   112de:	4699      	mov	r9, r3
   112e0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:716
			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   112e2:	f7ff fb50 	bl	10986 <pvPortMalloc>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:718
			if( pxStack != NULL )
   112e6:	4607      	mov	r7, r0
   112e8:	2800      	cmp	r0, #0
   112ea:	f000 809b 	beq.w	11424 <xTaskCreate+0x154>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:721
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the casts are only redundant for some paths. */
   112ee:	2058      	movs	r0, #88	; 0x58
   112f0:	f7ff fb49 	bl	10986 <pvPortMalloc>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:723
				if( pxNewTCB != NULL )
   112f4:	4604      	mov	r4, r0
   112f6:	2800      	cmp	r0, #0
   112f8:	f000 8091 	beq.w	1141e <xTaskCreate+0x14e>
prvInitialiseNewTask():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   112fc:	4652      	mov	r2, sl
xTaskCreate():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:726
					pxNewTCB->pxStack = pxStack;
   112fe:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:797
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
   11300:	21a5      	movs	r1, #165	; 0xa5
   11302:	4638      	mov	r0, r7
   11304:	f008 fd00 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:807
		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
   11308:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1130a:	f1aa 0a04 	sub.w	sl, sl, #4
   1130e:	449a      	add	sl, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:808
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
   11310:	f02a 0a07 	bic.w	sl, sl, #7
   11314:	1e6b      	subs	r3, r5, #1
   11316:	f104 0234 	add.w	r2, r4, #52	; 0x34
   1131a:	3507      	adds	r5, #7
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:829
		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
   1131c:	7859      	ldrb	r1, [r3, #1]
   1131e:	f802 1b01 	strb.w	r1, [r2], #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:834
		if( pcName[ x ] == 0x00 )
   11322:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   11326:	b109      	cbz	r1, 1132c <xTaskCreate+0x5c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:827
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
   11328:	42ab      	cmp	r3, r5
   1132a:	d1f7      	bne.n	1131c <xTaskCreate+0x4c>
   1132c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   1132e:	f04f 0b00 	mov.w	fp, #0
   11332:	2d09      	cmp	r5, #9
   11334:	bf28      	it	cs
   11336:	2509      	movcs	r5, #9
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   11338:	1d27      	adds	r7, r4, #4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:859
	pxNewTCB->uxPriority = uxPriority;
   1133a:	62e5      	str	r5, [r4, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:862
		pxNewTCB->uxBasePriority = uxPriority;
   1133c:	6465      	str	r5, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   1133e:	4638      	mov	r0, r7
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:846
	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
   11340:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:863
		pxNewTCB->uxMutexesHeld = 0;
   11344:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:867
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
   11348:	f7ff fc43 	bl	10bd2 <vListInitialiseItem>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1134c:	f1c5 050a 	rsb	r5, r5, #10
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:868
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
   11350:	f104 0018 	add.w	r0, r4, #24
   11354:	f7ff fc3d 	bl	10bd2 <vListInitialiseItem>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:918
		pxNewTCB->ulNotifiedValue = 0;
   11358:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:872
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
   1135c:	6124      	str	r4, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:875
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1135e:	61a5      	str	r5, [r4, #24]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:876
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
   11360:	6264      	str	r4, [r4, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:892
		pxNewTCB->ulRunTimeCounter = 0UL;
   11362:	f8c4 b04c 	str.w	fp, [r4, #76]	; 0x4c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:919
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
   11366:	f884 b054 	strb.w	fp, [r4, #84]	; 0x54
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:946
		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
   1136a:	464a      	mov	r2, r9
   1136c:	4641      	mov	r1, r8
   1136e:	4650      	mov	r0, sl
   11370:	f7ff fb70 	bl	10a54 <pxPortInitialiseStack>
   11374:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:950
	if( ( void * ) pxCreatedTask != NULL )
   11376:	b106      	cbz	r6, 1137a <xTaskCreate+0xaa>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:954
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
   11378:	6034      	str	r4, [r6, #0]
prvAddNewTaskToReadyList():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:967
	taskENTER_CRITICAL();
   1137a:	f7ff fb93 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   1137e:	4b30      	ldr	r3, [pc, #192]	; (11440 <xTaskCreate+0x170>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   11380:	4e30      	ldr	r6, [pc, #192]	; (11444 <xTaskCreate+0x174>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:969
		uxCurrentNumberOfTasks++;
   11382:	681a      	ldr	r2, [r3, #0]
   11384:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 1146c <xTaskCreate+0x19c>
   11388:	3201      	adds	r2, #1
   1138a:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:970
		if( pxCurrentTCB == NULL )
   1138c:	6835      	ldr	r5, [r6, #0]
   1138e:	2d00      	cmp	r5, #0
   11390:	d14b      	bne.n	1142a <xTaskCreate+0x15a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:974
			pxCurrentTCB = pxNewTCB;
   11392:	6034      	str	r4, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:976
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
   11394:	681b      	ldr	r3, [r3, #0]
   11396:	2b01      	cmp	r3, #1
   11398:	d11a      	bne.n	113d0 <xTaskCreate+0x100>
prvInitialiseTaskLists():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3339
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
   1139a:	eb08 0005 	add.w	r0, r8, r5
   1139e:	3514      	adds	r5, #20
   113a0:	f7ff fc0c 	bl	10bbc <vListInitialise>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3337
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
   113a4:	2dc8      	cmp	r5, #200	; 0xc8
   113a6:	d1f8      	bne.n	1139a <xTaskCreate+0xca>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   113a8:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 11470 <xTaskCreate+0x1a0>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   113ac:	4d26      	ldr	r5, [pc, #152]	; (11448 <xTaskCreate+0x178>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3342
	vListInitialise( &xDelayedTaskList1 );
   113ae:	4648      	mov	r0, r9
   113b0:	f7ff fc04 	bl	10bbc <vListInitialise>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3343
	vListInitialise( &xDelayedTaskList2 );
   113b4:	4628      	mov	r0, r5
   113b6:	f7ff fc01 	bl	10bbc <vListInitialise>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3344
	vListInitialise( &xPendingReadyList );
   113ba:	4824      	ldr	r0, [pc, #144]	; (1144c <xTaskCreate+0x17c>)
   113bc:	f7ff fbfe 	bl	10bbc <vListInitialise>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3354
		vListInitialise( &xSuspendedTaskList );
   113c0:	4823      	ldr	r0, [pc, #140]	; (11450 <xTaskCreate+0x180>)
   113c2:	f7ff fbfb 	bl	10bbc <vListInitialise>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3360
	pxDelayedTaskList = &xDelayedTaskList1;
   113c6:	4b23      	ldr	r3, [pc, #140]	; (11454 <xTaskCreate+0x184>)
   113c8:	f8c3 9000 	str.w	r9, [r3]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3361
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
   113cc:	4b22      	ldr	r3, [pc, #136]	; (11458 <xTaskCreate+0x188>)
   113ce:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   113d0:	2501      	movs	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   113d2:	4a22      	ldr	r2, [pc, #136]	; (1145c <xTaskCreate+0x18c>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   113d4:	4922      	ldr	r1, [pc, #136]	; (11460 <xTaskCreate+0x190>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   113d6:	6813      	ldr	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   113d8:	6808      	ldr	r0, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1010
		uxTaskNumber++;
   113da:	3301      	adds	r3, #1
   113dc:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1020
		prvAddTaskToReadyList( pxNewTCB );
   113de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   113e0:	fa05 f302 	lsl.w	r3, r5, r2
   113e4:	4303      	orrs	r3, r0
   113e6:	2014      	movs	r0, #20
   113e8:	600b      	str	r3, [r1, #0]
   113ea:	fb00 8002 	mla	r0, r0, r2, r8
   113ee:	4639      	mov	r1, r7
   113f0:	f7ff fbf2 	bl	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1024
	taskEXIT_CRITICAL();
   113f4:	f7ff fb66 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1026
	if( xSchedulerRunning != pdFALSE )
   113f8:	4b1a      	ldr	r3, [pc, #104]	; (11464 <xTaskCreate+0x194>)
   113fa:	681b      	ldr	r3, [r3, #0]
   113fc:	b163      	cbz	r3, 11418 <xTaskCreate+0x148>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1030
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
   113fe:	6833      	ldr	r3, [r6, #0]
   11400:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   11402:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   11404:	429a      	cmp	r2, r3
   11406:	d207      	bcs.n	11418 <xTaskCreate+0x148>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1032
			taskYIELD_IF_USING_PREEMPTION();
   11408:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1140c:	4b16      	ldr	r3, [pc, #88]	; (11468 <xTaskCreate+0x198>)
   1140e:	601a      	str	r2, [r3, #0]
   11410:	f3bf 8f4f 	dsb	sy
   11414:	f3bf 8f6f 	isb	sy
xTaskCreate():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:762
	}
   11418:	4628      	mov	r0, r5
   1141a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:732
					vPortFree( pxStack );
   1141e:	4638      	mov	r0, r7
   11420:	f7ff fac0 	bl	109a4 <vPortFree>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:758
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
   11424:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   11428:	e7f6      	b.n	11418 <xTaskCreate+0x148>
prvAddNewTaskToReadyList():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:993
			if( xSchedulerRunning == pdFALSE )
   1142a:	4b0e      	ldr	r3, [pc, #56]	; (11464 <xTaskCreate+0x194>)
   1142c:	681b      	ldr	r3, [r3, #0]
   1142e:	2b00      	cmp	r3, #0
   11430:	d1ce      	bne.n	113d0 <xTaskCreate+0x100>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:995
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
   11432:	6833      	ldr	r3, [r6, #0]
   11434:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   11436:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   11438:	429a      	cmp	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:997
					pxCurrentTCB = pxNewTCB;
   1143a:	bf98      	it	ls
   1143c:	6034      	strls	r4, [r6, #0]
   1143e:	e7c7      	b.n	113d0 <xTaskCreate+0x100>
   11440:	2007c400 	.word	0x2007c400
   11444:	2007c328 	.word	0x2007c328
   11448:	2007c428 	.word	0x2007c428
   1144c:	2007c448 	.word	0x2007c448
   11450:	2007c460 	.word	0x2007c460
   11454:	2007c32c 	.word	0x2007c32c
   11458:	2007c330 	.word	0x2007c330
   1145c:	2007c40c 	.word	0x2007c40c
   11460:	2007c410 	.word	0x2007c410
   11464:	2007c45c 	.word	0x2007c45c
   11468:	e000ed04 	.word	0xe000ed04
   1146c:	2007c334 	.word	0x2007c334
   11470:	2007c414 	.word	0x2007c414

00011474 <vTaskStartScheduler>:
vTaskStartScheduler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1827
{
   11474:	b513      	push	{r0, r1, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1860
		xReturn = xTaskCreate(	prvIdleTask,
   11476:	2400      	movs	r4, #0
   11478:	4b11      	ldr	r3, [pc, #68]	; (114c0 <vTaskStartScheduler+0x4c>)
   1147a:	9400      	str	r4, [sp, #0]
   1147c:	9301      	str	r3, [sp, #4]
   1147e:	2280      	movs	r2, #128	; 0x80
   11480:	4623      	mov	r3, r4
   11482:	4910      	ldr	r1, [pc, #64]	; (114c4 <vTaskStartScheduler+0x50>)
   11484:	4810      	ldr	r0, [pc, #64]	; (114c8 <vTaskStartScheduler+0x54>)
   11486:	f7ff ff23 	bl	112d0 <xTaskCreate>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1881
	if( xReturn == pdPASS )
   1148a:	2801      	cmp	r0, #1
   1148c:	d116      	bne.n	114bc <vTaskStartScheduler+0x48>
vPortRaiseBASEPRI():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:237
	__asm volatile
   1148e:	f04f 0310 	mov.w	r3, #16
   11492:	f383 8811 	msr	BASEPRI, r3
   11496:	f3bf 8f6f 	isb	sy
   1149a:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1898
		xNextTaskUnblockTime = portMAX_DELAY;
   1149e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   114a2:	4b0a      	ldr	r3, [pc, #40]	; (114cc <vTaskStartScheduler+0x58>)
   114a4:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1899
		xSchedulerRunning = pdTRUE;
   114a6:	4b0a      	ldr	r3, [pc, #40]	; (114d0 <vTaskStartScheduler+0x5c>)
   114a8:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1900
		xTickCount = ( TickType_t ) 0U;
   114aa:	4b0a      	ldr	r3, [pc, #40]	; (114d4 <vTaskStartScheduler+0x60>)
   114ac:	601c      	str	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1905
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
   114ae:	f7ff fb71 	bl	10b94 <rts_not_full_trace_init>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   114b2:	b002      	add	sp, #8
   114b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1909
		if( xPortStartScheduler() != pdFALSE )
   114b8:	f7ff bb54 	b.w	10b64 <xPortStartScheduler>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1930
}
   114bc:	b002      	add	sp, #8
   114be:	bd10      	pop	{r4, pc}
   114c0:	2007c43c 	.word	0x2007c43c
   114c4:	000201a2 	.word	0x000201a2
   114c8:	000111f9 	.word	0x000111f9
   114cc:	2007c440 	.word	0x2007c440
   114d0:	2007c45c 	.word	0x2007c45c
   114d4:	2007c474 	.word	0x2007c474

000114d8 <vTaskSuspendAll>:
vTaskSuspendAll():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1950
	++uxSchedulerSuspended;
   114d8:	4a02      	ldr	r2, [pc, #8]	; (114e4 <vTaskSuspendAll+0xc>)
   114da:	6813      	ldr	r3, [r2, #0]
   114dc:	3301      	adds	r3, #1
   114de:	6013      	str	r3, [r2, #0]
   114e0:	4770      	bx	lr
   114e2:	bf00      	nop
   114e4:	2007c408 	.word	0x2007c408

000114e8 <xTaskGetTickCount>:
xTaskGetTickCount():
   114e8:	4b01      	ldr	r3, [pc, #4]	; (114f0 <xTaskGetTickCount+0x8>)
   114ea:	6818      	ldr	r0, [r3, #0]
   114ec:	4770      	bx	lr
   114ee:	bf00      	nop
   114f0:	2007c474 	.word	0x2007c474

000114f4 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2165
		xReturn = xTickCount;
   114f4:	4b01      	ldr	r3, [pc, #4]	; (114fc <xTaskGetTickCountFromISR+0x8>)
   114f6:	6818      	ldr	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2170
}
   114f8:	4770      	bx	lr
   114fa:	bf00      	nop
   114fc:	2007c474 	.word	0x2007c474

00011500 <xTaskIncrementTick>:
xTaskIncrementTick():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2500
{
   11500:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2509
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   11504:	4b36      	ldr	r3, [pc, #216]	; (115e0 <xTaskIncrementTick+0xe0>)
   11506:	681b      	ldr	r3, [r3, #0]
   11508:	2b00      	cmp	r3, #0
   1150a:	d147      	bne.n	1159c <xTaskIncrementTick+0x9c>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2513
		const TickType_t xConstTickCount = xTickCount + 1;
   1150c:	4b35      	ldr	r3, [pc, #212]	; (115e4 <xTaskIncrementTick+0xe4>)
   1150e:	681c      	ldr	r4, [r3, #0]
   11510:	3401      	adds	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2517
		xTickCount = xConstTickCount;
   11512:	601c      	str	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2519
		if( xConstTickCount == ( TickType_t ) 0U )
   11514:	b95c      	cbnz	r4, 1152e <xTaskIncrementTick+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2521
			taskSWITCH_DELAYED_LISTS();
   11516:	4a34      	ldr	r2, [pc, #208]	; (115e8 <xTaskIncrementTick+0xe8>)
   11518:	4b34      	ldr	r3, [pc, #208]	; (115ec <xTaskIncrementTick+0xec>)
   1151a:	6811      	ldr	r1, [r2, #0]
   1151c:	6818      	ldr	r0, [r3, #0]
   1151e:	6010      	str	r0, [r2, #0]
   11520:	4a33      	ldr	r2, [pc, #204]	; (115f0 <xTaskIncrementTick+0xf0>)
   11522:	6019      	str	r1, [r3, #0]
   11524:	6813      	ldr	r3, [r2, #0]
   11526:	3301      	adds	r3, #1
   11528:	6013      	str	r3, [r2, #0]
   1152a:	f7ff fe79 	bl	11220 <prvResetNextTaskUnblockTime>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2532
		if( xConstTickCount >= xNextTaskUnblockTime )
   1152e:	4d31      	ldr	r5, [pc, #196]	; (115f4 <xTaskIncrementTick+0xf4>)
   11530:	f04f 0b00 	mov.w	fp, #0
   11534:	682b      	ldr	r3, [r5, #0]
   11536:	4f30      	ldr	r7, [pc, #192]	; (115f8 <xTaskIncrementTick+0xf8>)
   11538:	429c      	cmp	r4, r3
   1153a:	d33e      	bcc.n	115ba <xTaskIncrementTick+0xba>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   1153c:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 115e8 <xTaskIncrementTick+0xe8>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   11540:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 11608 <xTaskIncrementTick+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2536
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
   11544:	f8d8 2000 	ldr.w	r2, [r8]
   11548:	6812      	ldr	r2, [r2, #0]
   1154a:	bb72      	cbnz	r2, 115aa <xTaskIncrementTick+0xaa>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2543
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1154c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   11550:	602a      	str	r2, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2544
					break;
   11552:	e032      	b.n	115ba <xTaskIncrementTick+0xba>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2571
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   11554:	f106 0a04 	add.w	sl, r6, #4
   11558:	4650      	mov	r0, sl
   1155a:	f7ff fb60 	bl	10c1e <uxListRemove>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2575
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
   1155e:	6ab1      	ldr	r1, [r6, #40]	; 0x28
   11560:	b119      	cbz	r1, 1156a <xTaskIncrementTick+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2577
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   11562:	f106 0018 	add.w	r0, r6, #24
   11566:	f7ff fb5a 	bl	10c1e <uxListRemove>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2586
					prvAddTaskToReadyList( pxTCB );
   1156a:	2201      	movs	r2, #1
   1156c:	f04f 0e14 	mov.w	lr, #20
   11570:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   11572:	f8d9 3000 	ldr.w	r3, [r9]
   11576:	fa02 f100 	lsl.w	r1, r2, r0
   1157a:	4319      	orrs	r1, r3
   1157c:	4b1f      	ldr	r3, [pc, #124]	; (115fc <xTaskIncrementTick+0xfc>)
   1157e:	f8c9 1000 	str.w	r1, [r9]
   11582:	fb0e 3000 	mla	r0, lr, r0, r3
   11586:	4651      	mov	r1, sl
   11588:	f7ff fb26 	bl	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2596
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   1158c:	6838      	ldr	r0, [r7, #0]
   1158e:	6af1      	ldr	r1, [r6, #44]	; 0x2c
   11590:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2598
							xSwitchRequired = pdTRUE;
   11592:	4291      	cmp	r1, r2
   11594:	bf28      	it	cs
   11596:	f04f 0b01 	movcs.w	fp, #1
   1159a:	e7d3      	b.n	11544 <xTaskIncrementTick+0x44>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   1159c:	4a18      	ldr	r2, [pc, #96]	; (11600 <xTaskIncrementTick+0x100>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2503
BaseType_t xSwitchRequired = pdFALSE;
   1159e:	f04f 0b00 	mov.w	fp, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2643
		++uxPendedTicks;
   115a2:	6813      	ldr	r3, [r2, #0]
   115a4:	3301      	adds	r3, #1
   115a6:	6013      	str	r3, [r2, #0]
   115a8:	e011      	b.n	115ce <xTaskIncrementTick+0xce>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2552
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
   115aa:	f8d8 2000 	ldr.w	r2, [r8]
   115ae:	68d2      	ldr	r2, [r2, #12]
   115b0:	68d6      	ldr	r6, [r2, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2553
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
   115b2:	6871      	ldr	r1, [r6, #4]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2555
					if( xConstTickCount < xItemValue )
   115b4:	428c      	cmp	r4, r1
   115b6:	d2cd      	bcs.n	11554 <xTaskIncrementTick+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2562
						xNextTaskUnblockTime = xItemValue;
   115b8:	6029      	str	r1, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2615
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
   115ba:	683a      	ldr	r2, [r7, #0]
   115bc:	4b0f      	ldr	r3, [pc, #60]	; (115fc <xTaskIncrementTick+0xfc>)
   115be:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
   115c0:	2214      	movs	r2, #20
   115c2:	434a      	muls	r2, r1
   115c4:	589a      	ldr	r2, [r3, r2]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2617
				xSwitchRequired = pdTRUE;
   115c6:	2a02      	cmp	r2, #2
   115c8:	bf28      	it	cs
   115ca:	f04f 0b01 	movcs.w	fp, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2656
		if( xYieldPending != pdFALSE )
   115ce:	4a0d      	ldr	r2, [pc, #52]	; (11604 <xTaskIncrementTick+0x104>)
   115d0:	6812      	ldr	r2, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2658
			xSwitchRequired = pdTRUE;
   115d2:	2a00      	cmp	r2, #0
   115d4:	bf18      	it	ne
   115d6:	f04f 0b01 	movne.w	fp, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2668
}
   115da:	4658      	mov	r0, fp
   115dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115e0:	2007c408 	.word	0x2007c408
   115e4:	2007c474 	.word	0x2007c474
   115e8:	2007c32c 	.word	0x2007c32c
   115ec:	2007c330 	.word	0x2007c330
   115f0:	2007c444 	.word	0x2007c444
   115f4:	2007c440 	.word	0x2007c440
   115f8:	2007c328 	.word	0x2007c328
   115fc:	2007c334 	.word	0x2007c334
   11600:	2007c404 	.word	0x2007c404
   11604:	2007c478 	.word	0x2007c478
   11608:	2007c410 	.word	0x2007c410

0001160c <xTaskResumeAll>:
xTaskResumeAll():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2018
{
   1160c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2031
	taskENTER_CRITICAL();
   11610:	f7ff fa48 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2033
		--uxSchedulerSuspended;
   11614:	4b2a      	ldr	r3, [pc, #168]	; (116c0 <xTaskResumeAll+0xb4>)
   11616:	681a      	ldr	r2, [r3, #0]
   11618:	3a01      	subs	r2, #1
   1161a:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2035
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1161c:	681c      	ldr	r4, [r3, #0]
   1161e:	b12c      	cbz	r4, 1162c <xTaskResumeAll+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2020
BaseType_t xAlreadyYielded = pdFALSE;
   11620:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2121
	taskEXIT_CRITICAL();
   11622:	f7ff fa4f 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2124
}
   11626:	4620      	mov	r0, r4
   11628:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2037
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
   1162c:	4b25      	ldr	r3, [pc, #148]	; (116c4 <xTaskResumeAll+0xb8>)
   1162e:	681b      	ldr	r3, [r3, #0]
   11630:	2b00      	cmp	r3, #0
   11632:	d0f5      	beq.n	11620 <xTaskResumeAll+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   11634:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 116dc <xTaskResumeAll+0xd0>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   11638:	4f23      	ldr	r7, [pc, #140]	; (116c8 <xTaskResumeAll+0xbc>)
   1163a:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 116e0 <xTaskResumeAll+0xd4>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2041
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
   1163e:	f8d9 3000 	ldr.w	r3, [r9]
   11642:	b9e3      	cbnz	r3, 1167e <xTaskResumeAll+0x72>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2060
				if( pxTCB != NULL )
   11644:	b10c      	cbz	r4, 1164a <xTaskResumeAll+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2068
					prvResetNextTaskUnblockTime();
   11646:	f7ff fdeb 	bl	11220 <prvResetNextTaskUnblockTime>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2076
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
   1164a:	4d20      	ldr	r5, [pc, #128]	; (116cc <xTaskResumeAll+0xc0>)
   1164c:	682c      	ldr	r4, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2078
					if( uxPendedCounts > ( UBaseType_t ) 0U )
   1164e:	b144      	cbz	r4, 11662 <xTaskResumeAll+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   11650:	2701      	movs	r7, #1
   11652:	4e1f      	ldr	r6, [pc, #124]	; (116d0 <xTaskResumeAll+0xc4>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2082
							if( xTaskIncrementTick() != pdFALSE )
   11654:	f7ff ff54 	bl	11500 <xTaskIncrementTick>
   11658:	b100      	cbz	r0, 1165c <xTaskResumeAll+0x50>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2084
								xYieldPending = pdTRUE;
   1165a:	6037      	str	r7, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2091
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
   1165c:	3c01      	subs	r4, #1
   1165e:	d1f9      	bne.n	11654 <xTaskResumeAll+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2093
						uxPendedTicks = 0;
   11660:	602c      	str	r4, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2101
				if( xYieldPending != pdFALSE )
   11662:	4b1b      	ldr	r3, [pc, #108]	; (116d0 <xTaskResumeAll+0xc4>)
   11664:	681b      	ldr	r3, [r3, #0]
   11666:	2b00      	cmp	r3, #0
   11668:	d0da      	beq.n	11620 <xTaskResumeAll+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2108
					taskYIELD_IF_USING_PREEMPTION();
   1166a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1166e:	4b19      	ldr	r3, [pc, #100]	; (116d4 <xTaskResumeAll+0xc8>)
   11670:	601a      	str	r2, [r3, #0]
   11672:	f3bf 8f4f 	dsb	sy
   11676:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2105
						xAlreadyYielded = pdTRUE;
   1167a:	2401      	movs	r4, #1
   1167c:	e7d1      	b.n	11622 <xTaskResumeAll+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   1167e:	f8d9 300c 	ldr.w	r3, [r9, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   11682:	2501      	movs	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2043
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
   11684:	68dc      	ldr	r4, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   11686:	1d26      	adds	r6, r4, #4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2044
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
   11688:	f104 0018 	add.w	r0, r4, #24
   1168c:	f7ff fac7 	bl	10c1e <uxListRemove>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2045
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
   11690:	4630      	mov	r0, r6
   11692:	f7ff fac4 	bl	10c1e <uxListRemove>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2046
					prvAddTaskToReadyList( pxTCB );
   11696:	2014      	movs	r0, #20
   11698:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1169a:	6839      	ldr	r1, [r7, #0]
   1169c:	fa05 f302 	lsl.w	r3, r5, r2
   116a0:	430b      	orrs	r3, r1
   116a2:	fb00 8002 	mla	r0, r0, r2, r8
   116a6:	4631      	mov	r1, r6
   116a8:	603b      	str	r3, [r7, #0]
   116aa:	f7ff fa95 	bl	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2050
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
   116ae:	4b0a      	ldr	r3, [pc, #40]	; (116d8 <xTaskResumeAll+0xcc>)
   116b0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   116b2:	681b      	ldr	r3, [r3, #0]
   116b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   116b6:	429a      	cmp	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2052
						xYieldPending = pdTRUE;
   116b8:	bf24      	itt	cs
   116ba:	4b05      	ldrcs	r3, [pc, #20]	; (116d0 <xTaskResumeAll+0xc4>)
   116bc:	601d      	strcs	r5, [r3, #0]
   116be:	e7be      	b.n	1163e <xTaskResumeAll+0x32>
   116c0:	2007c408 	.word	0x2007c408
   116c4:	2007c400 	.word	0x2007c400
   116c8:	2007c410 	.word	0x2007c410
   116cc:	2007c404 	.word	0x2007c404
   116d0:	2007c478 	.word	0x2007c478
   116d4:	e000ed04 	.word	0xe000ed04
   116d8:	2007c328 	.word	0x2007c328
   116dc:	2007c448 	.word	0x2007c448
   116e0:	2007c334 	.word	0x2007c334

000116e4 <vTaskDelayUntil>:
vTaskDelayUntil():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1141
	{
   116e4:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1149
		vTaskSuspendAll();
   116e6:	f7ff fef7 	bl	114d8 <vTaskSuspendAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   116ea:	4b12      	ldr	r3, [pc, #72]	; (11734 <vTaskDelayUntil+0x50>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   116ec:	6804      	ldr	r4, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1153
			const TickType_t xConstTickCount = xTickCount;
   116ee:	681a      	ldr	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1156
			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
   116f0:	1863      	adds	r3, r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1158
			if( xConstTickCount < *pxPreviousWakeTime )
   116f2:	42a2      	cmp	r2, r4
   116f4:	d217      	bcs.n	11726 <vTaskDelayUntil+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1165
				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
   116f6:	429c      	cmp	r4, r3
   116f8:	d919      	bls.n	1172e <vTaskDelayUntil+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1179 (discriminator 1)
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   116fa:	429a      	cmp	r2, r3
   116fc:	bf2c      	ite	cs
   116fe:	2100      	movcs	r1, #0
   11700:	2101      	movcc	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1190
			*pxPreviousWakeTime = xTimeToWake;
   11702:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1192
			if( xShouldDelay != pdFALSE )
   11704:	b119      	cbz	r1, 1170e <vTaskDelayUntil+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1198
				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
   11706:	2100      	movs	r1, #0
   11708:	1a98      	subs	r0, r3, r2
   1170a:	f7ff fd9b 	bl	11244 <prvAddCurrentTaskToDelayedList>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1205
		xAlreadyYielded = xTaskResumeAll();
   1170e:	f7ff ff7d 	bl	1160c <xTaskResumeAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1209
		if( xAlreadyYielded == pdFALSE )
   11712:	b938      	cbnz	r0, 11724 <vTaskDelayUntil+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1211
			portYIELD_WITHIN_API();
   11714:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   11718:	4b07      	ldr	r3, [pc, #28]	; (11738 <vTaskDelayUntil+0x54>)
   1171a:	601a      	str	r2, [r3, #0]
   1171c:	f3bf 8f4f 	dsb	sy
   11720:	f3bf 8f6f 	isb	sy
   11724:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1179
				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
   11726:	429c      	cmp	r4, r3
   11728:	d9e7      	bls.n	116fa <vTaskDelayUntil+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1181
					xShouldDelay = pdTRUE;
   1172a:	2101      	movs	r1, #1
   1172c:	e7e9      	b.n	11702 <vTaskDelayUntil+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1143
	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
   1172e:	2100      	movs	r1, #0
   11730:	e7e7      	b.n	11702 <vTaskDelayUntil+0x1e>
   11732:	bf00      	nop
   11734:	2007c474 	.word	0x2007c474
   11738:	e000ed04 	.word	0xe000ed04

0001173c <vTaskDelay>:
vTaskDelay():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1225
	{
   1173c:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1229
		if( xTicksToDelay > ( TickType_t ) 0U )
   1173e:	b940      	cbnz	r0, 11752 <vTaskDelay+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1256
			portYIELD_WITHIN_API();
   11740:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   11744:	4b08      	ldr	r3, [pc, #32]	; (11768 <vTaskDelay+0x2c>)
   11746:	601a      	str	r2, [r3, #0]
   11748:	f3bf 8f4f 	dsb	sy
   1174c:	f3bf 8f6f 	isb	sy
   11750:	bd08      	pop	{r3, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1232
			vTaskSuspendAll();
   11752:	f7ff fec1 	bl	114d8 <vTaskSuspendAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1243
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
   11756:	2100      	movs	r1, #0
   11758:	f7ff fd74 	bl	11244 <prvAddCurrentTaskToDelayedList>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1245
			xAlreadyYielded = xTaskResumeAll();
   1175c:	f7ff ff56 	bl	1160c <xTaskResumeAll>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:1254
		if( xAlreadyYielded == pdFALSE )
   11760:	2800      	cmp	r0, #0
   11762:	d0ed      	beq.n	11740 <vTaskDelay+0x4>
   11764:	bd08      	pop	{r3, pc}
   11766:	bf00      	nop
   11768:	e000ed04 	.word	0xe000ed04

0001176c <vTaskSwitchContext>:
vTaskSwitchContext():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   1176c:	4b26      	ldr	r3, [pc, #152]	; (11808 <vTaskSwitchContext+0x9c>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2762
{
   1176e:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2763
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
   11770:	681a      	ldr	r2, [r3, #0]
   11772:	4b26      	ldr	r3, [pc, #152]	; (1180c <vTaskSwitchContext+0xa0>)
   11774:	b112      	cbz	r2, 1177c <vTaskSwitchContext+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2767
		xYieldPending = pdTRUE;
   11776:	2201      	movs	r2, #1
   11778:	601a      	str	r2, [r3, #0]
   1177a:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2771
		xYieldPending = pdFALSE;
   1177c:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2779
					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
   1177e:	f7ff fa13 	bl	10ba8 <rts_not_full_trace_get>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2789
				if( ulTotalRunTime > ulTaskSwitchedInTime )
   11782:	4a23      	ldr	r2, [pc, #140]	; (11810 <vTaskSwitchContext+0xa4>)
   11784:	4c23      	ldr	r4, [pc, #140]	; (11814 <vTaskSwitchContext+0xa8>)
   11786:	6815      	ldr	r5, [r2, #0]
   11788:	42a8      	cmp	r0, r5
   1178a:	d904      	bls.n	11796 <vTaskSwitchContext+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2791
					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
   1178c:	6821      	ldr	r1, [r4, #0]
   1178e:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   11790:	1b5b      	subs	r3, r3, r5
   11792:	4403      	add	r3, r0
   11794:	64cb      	str	r3, [r1, #76]	; 0x4c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   11796:	6823      	ldr	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2797
				ulTaskSwitchedInTime = ulTotalRunTime;
   11798:	6010      	str	r0, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2802
		taskCHECK_FOR_STACK_OVERFLOW();
   1179a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   1179c:	681a      	ldr	r2, [r3, #0]
   1179e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   117a2:	d10b      	bne.n	117bc <vTaskSwitchContext+0x50>
   117a4:	685a      	ldr	r2, [r3, #4]
   117a6:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   117aa:	d107      	bne.n	117bc <vTaskSwitchContext+0x50>
   117ac:	689a      	ldr	r2, [r3, #8]
   117ae:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
   117b2:	d103      	bne.n	117bc <vTaskSwitchContext+0x50>
   117b4:	68db      	ldr	r3, [r3, #12]
   117b6:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
   117ba:	d004      	beq.n	117c6 <vTaskSwitchContext+0x5a>
   117bc:	6820      	ldr	r0, [r4, #0]
   117be:	6821      	ldr	r1, [r4, #0]
   117c0:	3134      	adds	r1, #52	; 0x34
   117c2:	f7ff f8ff 	bl	109c4 <vApplicationStackOverflowHook>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
		taskSELECT_HIGHEST_PRIORITY_TASK();
   117c6:	4b14      	ldr	r3, [pc, #80]	; (11818 <vTaskSwitchContext+0xac>)
   117c8:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
   117ca:	fab3 f383 	clz	r3, r3
vTaskSwitchContext():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   117ce:	2014      	movs	r0, #20
ucPortCountLeadingZeros():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/portable/no_mpu/portmacro.h:176
   117d0:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2806
   117d2:	f1c3 031f 	rsb	r3, r3, #31
   117d6:	fb00 f203 	mul.w	r2, r0, r3
   117da:	4910      	ldr	r1, [pc, #64]	; (1181c <vTaskSwitchContext+0xb0>)
   117dc:	188d      	adds	r5, r1, r2
   117de:	686e      	ldr	r6, [r5, #4]
   117e0:	3208      	adds	r2, #8
   117e2:	6876      	ldr	r6, [r6, #4]
   117e4:	440a      	add	r2, r1
   117e6:	4296      	cmp	r6, r2
   117e8:	fb00 1303 	mla	r3, r0, r3, r1
   117ec:	bf08      	it	eq
   117ee:	6872      	ldreq	r2, [r6, #4]
   117f0:	606e      	str	r6, [r5, #4]
   117f2:	bf08      	it	eq
   117f4:	606a      	streq	r2, [r5, #4]
   117f6:	685b      	ldr	r3, [r3, #4]
   117f8:	68db      	ldr	r3, [r3, #12]
   117fa:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2807
		traceTASK_SWITCHED_IN();
   117fc:	6823      	ldr	r3, [r4, #0]
   117fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   11800:	4b07      	ldr	r3, [pc, #28]	; (11820 <vTaskSwitchContext+0xb4>)
   11802:	645a      	str	r2, [r3, #68]	; 0x44
   11804:	bd70      	pop	{r4, r5, r6, pc}
   11806:	bf00      	nop
   11808:	2007c408 	.word	0x2007c408
   1180c:	2007c478 	.word	0x2007c478
   11810:	2007c3fc 	.word	0x2007c3fc
   11814:	2007c328 	.word	0x2007c328
   11818:	2007c410 	.word	0x2007c410
   1181c:	2007c334 	.word	0x2007c334
   11820:	40024000 	.word	0x40024000

00011824 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2821
{
   11824:	b510      	push	{r4, lr}
   11826:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2831
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
   11828:	4b05      	ldr	r3, [pc, #20]	; (11840 <vTaskPlaceOnEventList+0x1c>)
   1182a:	6819      	ldr	r1, [r3, #0]
   1182c:	3118      	adds	r1, #24
   1182e:	f7ff f9df 	bl	10bf0 <vListInsert>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   11832:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2834
}
   11834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2833
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
   11838:	2101      	movs	r1, #1
   1183a:	f7ff bd03 	b.w	11244 <prvAddCurrentTaskToDelayedList>
   1183e:	bf00      	nop
   11840:	2007c328 	.word	0x2007c328

00011844 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2895
{
   11844:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2912
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
   11846:	68c3      	ldr	r3, [r0, #12]
   11848:	68dc      	ldr	r4, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2914
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
   1184a:	f104 0518 	add.w	r5, r4, #24
   1184e:	4628      	mov	r0, r5
   11850:	f7ff f9e5 	bl	10c1e <uxListRemove>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2916
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   11854:	4b11      	ldr	r3, [pc, #68]	; (1189c <xTaskRemoveFromEventList+0x58>)
   11856:	681b      	ldr	r3, [r3, #0]
   11858:	b9e3      	cbnz	r3, 11894 <xTaskRemoveFromEventList+0x50>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2918
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
   1185a:	1d25      	adds	r5, r4, #4
   1185c:	4628      	mov	r0, r5
   1185e:	f7ff f9de 	bl	10c1e <uxListRemove>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2919
		prvAddTaskToReadyList( pxUnblockedTCB );
   11862:	2301      	movs	r3, #1
   11864:	490e      	ldr	r1, [pc, #56]	; (118a0 <xTaskRemoveFromEventList+0x5c>)
   11866:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   11868:	6808      	ldr	r0, [r1, #0]
   1186a:	4093      	lsls	r3, r2
   1186c:	4303      	orrs	r3, r0
   1186e:	2014      	movs	r0, #20
   11870:	600b      	str	r3, [r1, #0]
   11872:	4629      	mov	r1, r5
   11874:	4b0b      	ldr	r3, [pc, #44]	; (118a4 <xTaskRemoveFromEventList+0x60>)
   11876:	fb00 3002 	mla	r0, r0, r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   1187a:	f7ff f9ad 	bl	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2928
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
   1187e:	4b0a      	ldr	r3, [pc, #40]	; (118a8 <xTaskRemoveFromEventList+0x64>)
   11880:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   11882:	681b      	ldr	r3, [r3, #0]
   11884:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   11886:	429a      	cmp	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   11888:	bf85      	ittet	hi
   1188a:	2001      	movhi	r0, #1
   1188c:	4b07      	ldrhi	r3, [pc, #28]	; (118ac <xTaskRemoveFromEventList+0x68>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2941
		xReturn = pdFALSE;
   1188e:	2000      	movls	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2937
		xYieldPending = pdTRUE;
   11890:	6018      	strhi	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2959
}
   11892:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:2925
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
   11894:	4629      	mov	r1, r5
   11896:	4806      	ldr	r0, [pc, #24]	; (118b0 <xTaskRemoveFromEventList+0x6c>)
   11898:	e7ef      	b.n	1187a <xTaskRemoveFromEventList+0x36>
   1189a:	bf00      	nop
   1189c:	2007c408 	.word	0x2007c408
   118a0:	2007c410 	.word	0x2007c410
   118a4:	2007c334 	.word	0x2007c334
   118a8:	2007c328 	.word	0x2007c328
   118ac:	2007c478 	.word	0x2007c478
   118b0:	2007c448 	.word	0x2007c448

000118b4 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3010
	pxTimeOut->xOverflowCount = xNumOfOverflows;
   118b4:	4b03      	ldr	r3, [pc, #12]	; (118c4 <vTaskSetTimeOutState+0x10>)
   118b6:	681b      	ldr	r3, [r3, #0]
   118b8:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3011
	pxTimeOut->xTimeOnEntering = xTickCount;
   118ba:	4b03      	ldr	r3, [pc, #12]	; (118c8 <vTaskSetTimeOutState+0x14>)
   118bc:	681b      	ldr	r3, [r3, #0]
   118be:	6043      	str	r3, [r0, #4]
   118c0:	4770      	bx	lr
   118c2:	bf00      	nop
   118c4:	2007c444 	.word	0x2007c444
   118c8:	2007c474 	.word	0x2007c474

000118cc <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3016
{
   118cc:	b538      	push	{r3, r4, r5, lr}
   118ce:	460d      	mov	r5, r1
   118d0:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3022
	taskENTER_CRITICAL();
   118d2:	f7ff f8e7 	bl	10aa4 <vPortEnterCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   118d6:	4b0e      	ldr	r3, [pc, #56]	; (11910 <xTaskCheckForTimeOut+0x44>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   118d8:	682a      	ldr	r2, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3025
		const TickType_t xConstTickCount = xTickCount;
   118da:	6818      	ldr	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3039
			if( *pxTicksToWait == portMAX_DELAY )
   118dc:	1c53      	adds	r3, r2, #1
   118de:	d010      	beq.n	11902 <xTaskCheckForTimeOut+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3049
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
   118e0:	4b0c      	ldr	r3, [pc, #48]	; (11914 <xTaskCheckForTimeOut+0x48>)
   118e2:	6821      	ldr	r1, [r4, #0]
   118e4:	681b      	ldr	r3, [r3, #0]
   118e6:	4299      	cmp	r1, r3
   118e8:	6863      	ldr	r3, [r4, #4]
   118ea:	d001      	beq.n	118f0 <xTaskCheckForTimeOut+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3049 (discriminator 1)
   118ec:	4298      	cmp	r0, r3
   118ee:	d20d      	bcs.n	1190c <xTaskCheckForTimeOut+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3058
		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
   118f0:	1ac1      	subs	r1, r0, r3
   118f2:	428a      	cmp	r2, r1
   118f4:	d90a      	bls.n	1190c <xTaskCheckForTimeOut+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3061
			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
   118f6:	1a1b      	subs	r3, r3, r0
   118f8:	4413      	add	r3, r2
   118fa:	602b      	str	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3062
			vTaskSetTimeOutState( pxTimeOut );
   118fc:	4620      	mov	r0, r4
   118fe:	f7ff ffd9 	bl	118b4 <vTaskSetTimeOutState>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3044
				xReturn = pdFALSE;
   11902:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3070
	taskEXIT_CRITICAL();
   11904:	f7ff f8de 	bl	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3073
}
   11908:	4620      	mov	r0, r4
   1190a:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3056
			xReturn = pdTRUE;
   1190c:	2401      	movs	r4, #1
   1190e:	e7f9      	b.n	11904 <xTaskCheckForTimeOut+0x38>
   11910:	2007c474 	.word	0x2007c474
   11914:	2007c444 	.word	0x2007c444

00011918 <vTaskMissedYield>:
vTaskMissedYield():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3078
	xYieldPending = pdTRUE;
   11918:	2201      	movs	r2, #1
   1191a:	4b01      	ldr	r3, [pc, #4]	; (11920 <vTaskMissedYield+0x8>)
   1191c:	601a      	str	r2, [r3, #0]
   1191e:	4770      	bx	lr
   11920:	2007c478 	.word	0x2007c478

00011924 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3682
		if( xSchedulerRunning == pdFALSE )
   11924:	4b05      	ldr	r3, [pc, #20]	; (1193c <xTaskGetSchedulerState+0x18>)
   11926:	681b      	ldr	r3, [r3, #0]
   11928:	b133      	cbz	r3, 11938 <xTaskGetSchedulerState+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3688
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
   1192a:	4b05      	ldr	r3, [pc, #20]	; (11940 <xTaskGetSchedulerState+0x1c>)
   1192c:	681b      	ldr	r3, [r3, #0]
   1192e:	2b00      	cmp	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3694
				xReturn = taskSCHEDULER_SUSPENDED;
   11930:	bf0c      	ite	eq
   11932:	2002      	moveq	r0, #2
   11934:	2000      	movne	r0, #0
   11936:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3684
			xReturn = taskSCHEDULER_NOT_STARTED;
   11938:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3699
	}
   1193a:	4770      	bx	lr
   1193c:	2007c45c 	.word	0x2007c45c
   11940:	2007c408 	.word	0x2007c408

00011944 <vTaskPriorityInherit>:
vTaskPriorityInherit():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3707
	{
   11944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3712
		if( pxMutexHolder != NULL )
   11948:	4604      	mov	r4, r0
   1194a:	2800      	cmp	r0, #0
   1194c:	d039      	beq.n	119c2 <vTaskPriorityInherit+0x7e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3717
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
   1194e:	4d1e      	ldr	r5, [pc, #120]	; (119c8 <vTaskPriorityInherit+0x84>)
   11950:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   11952:	682a      	ldr	r2, [r5, #0]
   11954:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   11956:	4293      	cmp	r3, r2
   11958:	d233      	bcs.n	119c2 <vTaskPriorityInherit+0x7e>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   1195a:	2714      	movs	r7, #20
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   1195c:	6982      	ldr	r2, [r0, #24]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   1195e:	4e1b      	ldr	r6, [pc, #108]	; (119cc <vTaskPriorityInherit+0x88>)
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3722
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
   11960:	2a00      	cmp	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   11962:	bfa8      	it	ge
   11964:	682a      	ldrge	r2, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   11966:	fb07 6303 	mla	r3, r7, r3, r6
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3724
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   1196a:	bfa2      	ittt	ge
   1196c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
   1196e:	f1c2 020a 	rsbge	r2, r2, #10
   11972:	6182      	strge	r2, [r0, #24]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3733
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
   11974:	6942      	ldr	r2, [r0, #20]
   11976:	429a      	cmp	r2, r3
   11978:	d120      	bne.n	119bc <vTaskPriorityInherit+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3735
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   1197a:	f100 0804 	add.w	r8, r0, #4
   1197e:	4640      	mov	r0, r8
   11980:	f7ff f94d 	bl	10c1e <uxListRemove>
   11984:	4a12      	ldr	r2, [pc, #72]	; (119d0 <vTaskPriorityInherit+0x8c>)
   11986:	b948      	cbnz	r0, 1199c <vTaskPriorityInherit+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3737
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   11988:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   1198a:	4347      	muls	r7, r0
   1198c:	59f3      	ldr	r3, [r6, r7]
   1198e:	b92b      	cbnz	r3, 1199c <vTaskPriorityInherit+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3737 (discriminator 1)
   11990:	2101      	movs	r1, #1
   11992:	6813      	ldr	r3, [r2, #0]
   11994:	4081      	lsls	r1, r0
   11996:	ea23 0301 	bic.w	r3, r3, r1
   1199a:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   1199c:	682b      	ldr	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   1199e:	6811      	ldr	r1, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   119a0:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   119a2:	2301      	movs	r3, #1
   119a4:	4083      	lsls	r3, r0
   119a6:	430b      	orrs	r3, r1
   119a8:	6013      	str	r3, [r2, #0]
   119aa:	2314      	movs	r3, #20
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3745
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   119ac:	62e0      	str	r0, [r4, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   119ae:	4641      	mov	r1, r8
   119b0:	fb03 6000 	mla	r0, r3, r0, r6
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3765
	}
   119b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3746
					prvAddTaskToReadyList( pxTCB );
   119b8:	f7ff b90e 	b.w	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3751
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
   119bc:	682b      	ldr	r3, [r5, #0]
   119be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   119c0:	62c3      	str	r3, [r0, #44]	; 0x2c
   119c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   119c6:	bf00      	nop
   119c8:	2007c328 	.word	0x2007c328
   119cc:	2007c334 	.word	0x2007c334
   119d0:	2007c410 	.word	0x2007c410

000119d4 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3773
	{
   119d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3777
		if( pxMutexHolder != NULL )
   119d6:	4604      	mov	r4, r0
   119d8:	b908      	cbnz	r0, 119de <xTaskPriorityDisinherit+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3775
	BaseType_t xReturn = pdFALSE;
   119da:	2000      	movs	r0, #0
   119dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   119de:	6c83      	ldr	r3, [r0, #72]	; 0x48
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   119e0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   119e2:	6c42      	ldr	r2, [r0, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   119e4:	3b01      	subs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   119e6:	4291      	cmp	r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3786
			( pxTCB->uxMutexesHeld )--;
   119e8:	6483      	str	r3, [r0, #72]	; 0x48
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3790
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
   119ea:	d0f6      	beq.n	119da <xTaskPriorityDisinherit+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3793
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
   119ec:	2b00      	cmp	r3, #0
   119ee:	d1f4      	bne.n	119da <xTaskPriorityDisinherit+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3800
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
   119f0:	1d05      	adds	r5, r0, #4
   119f2:	4628      	mov	r0, r5
   119f4:	f7ff f913 	bl	10c1e <uxListRemove>
   119f8:	4e10      	ldr	r6, [pc, #64]	; (11a3c <xTaskPriorityDisinherit+0x68>)
   119fa:	4a11      	ldr	r2, [pc, #68]	; (11a40 <xTaskPriorityDisinherit+0x6c>)
   119fc:	b950      	cbnz	r0, 11a14 <xTaskPriorityDisinherit+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3802
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
   119fe:	2114      	movs	r1, #20
   11a00:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   11a02:	4379      	muls	r1, r7
   11a04:	5873      	ldr	r3, [r6, r1]
   11a06:	b92b      	cbnz	r3, 11a14 <xTaskPriorityDisinherit+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3802 (discriminator 1)
   11a08:	2001      	movs	r0, #1
   11a0a:	6813      	ldr	r3, [r2, #0]
   11a0c:	40b8      	lsls	r0, r7
   11a0e:	ea23 0300 	bic.w	r3, r3, r0
   11a12:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   11a14:	6c63      	ldr	r3, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   11a16:	f1c3 010a 	rsb	r1, r3, #10
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3812
					pxTCB->uxPriority = pxTCB->uxBasePriority;
   11a1a:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3817
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
   11a1c:	61a1      	str	r1, [r4, #24]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3818
					prvAddTaskToReadyList( pxTCB );
   11a1e:	2401      	movs	r4, #1
   11a20:	6811      	ldr	r1, [r2, #0]
   11a22:	fa04 f003 	lsl.w	r0, r4, r3
   11a26:	4308      	orrs	r0, r1
   11a28:	6010      	str	r0, [r2, #0]
   11a2a:	2014      	movs	r0, #20
   11a2c:	4629      	mov	r1, r5
   11a2e:	fb00 6003 	mla	r0, r0, r3, r6
   11a32:	f7ff f8d1 	bl	10bd8 <vListInsertEnd>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3828
					xReturn = pdTRUE;
   11a36:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:3846
	}
   11a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   11a3a:	bf00      	nop
   11a3c:	2007c334 	.word	0x2007c334
   11a40:	2007c410 	.word	0x2007c410

00011a44 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4182
		if( pxCurrentTCB != NULL )
   11a44:	4b04      	ldr	r3, [pc, #16]	; (11a58 <pvTaskIncrementMutexHeldCount+0x14>)
   11a46:	681a      	ldr	r2, [r3, #0]
   11a48:	b11a      	cbz	r2, 11a52 <pvTaskIncrementMutexHeldCount+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4184
			( pxCurrentTCB->uxMutexesHeld )++;
   11a4a:	6819      	ldr	r1, [r3, #0]
   11a4c:	6c8a      	ldr	r2, [r1, #72]	; 0x48
   11a4e:	3201      	adds	r2, #1
   11a50:	648a      	str	r2, [r1, #72]	; 0x48
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4187
		return pxCurrentTCB;
   11a52:	6818      	ldr	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks.c:4188
	}
   11a54:	4770      	bx	lr
   11a56:	bf00      	nop
   11a58:	2007c328 	.word	0x2007c328

00011a5c <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:99
    }
    xTaskResumeAll();
}

    void vRunTimeStatIsrEntry()
    {
   11a5c:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:100
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   11a5e:	f7ff f8a3 	bl	10ba8 <rts_not_full_trace_get>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:103
        
        // Add the time spent in the previously running task's counter.
        if (NULL != pxCurrentTCB) {
   11a62:	4b06      	ldr	r3, [pc, #24]	; (11a7c <vRunTimeStatIsrEntry+0x20>)
   11a64:	4a06      	ldr	r2, [pc, #24]	; (11a80 <vRunTimeStatIsrEntry+0x24>)
   11a66:	6819      	ldr	r1, [r3, #0]
   11a68:	b129      	cbz	r1, 11a76 <vRunTimeStatIsrEntry+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:104
            pxCurrentTCB->ulRunTimeCounter += ( ulTempCounter - ulTaskSwitchedInTime );
   11a6a:	6819      	ldr	r1, [r3, #0]
   11a6c:	6814      	ldr	r4, [r2, #0]
   11a6e:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
   11a70:	1b1b      	subs	r3, r3, r4
   11a72:	4403      	add	r3, r0
   11a74:	64cb      	str	r3, [r1, #76]	; 0x4c
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:108
        }
        
        // Save the current time to log how long the ISR is going to take.
        ulTaskSwitchedInTime = ulTempCounter;
   11a76:	6010      	str	r0, [r2, #0]
   11a78:	bd10      	pop	{r4, pc}
   11a7a:	bf00      	nop
   11a7c:	2007c328 	.word	0x2007c328
   11a80:	2007c3fc 	.word	0x2007c3fc

00011a84 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:111
    }
    void vRunTimeStatIsrExit()
    {
   11a84:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:112
        unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
   11a86:	f7ff f88f 	bl	10ba8 <rts_not_full_trace_get>
/home/bionia/SJSU-DEV/firmware/lib/L1_FreeRTOS/src/tasks_mod.c.inc:120
        // We don't need this because whatever is the "leftover" for the counters, that is 
        // is the overhead itself!
        // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );
        
        // Save the current time so next time when task is switched out, it will use this time-stamp.
        ulTaskSwitchedInTime = ulTempCounter;
   11a8a:	4b01      	ldr	r3, [pc, #4]	; (11a90 <vRunTimeStatIsrExit+0xc>)
   11a8c:	6018      	str	r0, [r3, #0]
   11a8e:	bd08      	pop	{r3, pc}
   11a90:	2007c3fc 	.word	0x2007c3fc

00011a94 <CharDev::flush()>:
_ZN7CharDev5flushEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.hpp:67
        virtual bool putChar(char out, unsigned int timeout=portMAX_DELAY) = 0;

        /**
         * Optional flush to flush out all the data
         */
        virtual bool flush(void) { return true; }
   11a94:	2001      	movs	r0, #1
   11a96:	4770      	bx	lr

00011a98 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:145
    va_end(args);

    return parsed;
}

CharDev::CharDev() : mpPrintfMem(NULL), mPrintfMemSize(0), mReady(false)
   11a98:	4b06      	ldr	r3, [pc, #24]	; (11ab4 <CharDev::CharDev()+0x1c>)
   11a9a:	b510      	push	{r4, lr}
   11a9c:	6003      	str	r3, [r0, #0]
   11a9e:	2300      	movs	r3, #0
   11aa0:	4604      	mov	r4, r0
   11aa2:	6043      	str	r3, [r0, #4]
   11aa4:	8103      	strh	r3, [r0, #8]
   11aa6:	7403      	strb	r3, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:147
{
    mPrintfSemaphore = xSemaphoreCreateMutex();
   11aa8:	2001      	movs	r0, #1
   11aaa:	f7ff fa45 	bl	10f38 <xQueueCreateMutex>
   11aae:	60e0      	str	r0, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:149
    vTraceSetMutexName(mPrintfSemaphore, "printf sem");
}
   11ab0:	4620      	mov	r0, r4
   11ab2:	bd10      	pop	{r4, pc}
   11ab4:	000201c4 	.word	0x000201c4

00011ab8 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:151

CharDev::~CharDev()
   11ab8:	4b04      	ldr	r3, [pc, #16]	; (11acc <CharDev::~CharDev()+0x14>)
   11aba:	b510      	push	{r4, lr}
   11abc:	4604      	mov	r4, r0
   11abe:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:153
{
    if (mpPrintfMem) {
   11ac0:	6840      	ldr	r0, [r0, #4]
   11ac2:	b108      	cbz	r0, 11ac8 <CharDev::~CharDev()+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:154
        free(mpPrintfMem);
   11ac4:	f008 f8c4 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/char_dev.cpp:156
    }
}
   11ac8:	4620      	mov	r0, r4
   11aca:	bd10      	pop	{r4, pc}
   11acc:	000201c4 	.word	0x000201c4

00011ad0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base8transferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
    I2C_SET_READ_MODE(address);
    return transfer(address, NULL, 0, rdata, rlength);
}

bool I2C_Base::transfer(uint8_t address, uint8_t * wdata, uint32_t wlength, uint8_t * rdata, uint32_t rlength)
{
   11ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    bool status = false;
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   11ad4:	f890 5105 	ldrb.w	r5, [r0, #261]	; 0x105
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:90
{
   11ad8:	4604      	mov	r4, r0
   11ada:	468a      	mov	sl, r1
   11adc:	4617      	mov	r7, r2
   11ade:	4699      	mov	r9, r3
   11ae0:	9e08      	ldr	r6, [sp, #32]
   11ae2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:92
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   11ae6:	b11d      	cbz	r5, 11af0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:94
    {
        return status;
   11ae8:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:130

        xSemaphoreGive(mI2CMutex);
    }

    return status;
}
   11aea:	4628      	mov	r0, r5
   11aec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 1)
    if (mDisableOperation || (wdata == NULL && rdata == NULL))
   11af0:	b90a      	cbnz	r2, 11af6 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:92 (discriminator 2)
   11af2:	2e00      	cmp	r6, #0
   11af4:	d0f8      	beq.n	11ae8 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:98
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState())
   11af6:	f7ff ff15 	bl	11924 <xTaskGetSchedulerState>
   11afa:	2802      	cmp	r0, #2
   11afc:	d035      	beq.n	11b6a <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x9a>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
/// Private ///

void I2C_Base::i2cKickOffTransfer(uint8_t addr, uint8_t * wbytes, uint32_t wlength, uint8_t * rbytes, uint32_t rlength)
{
    mTransaction.slaveAddr      = addr;
    mTransaction.error          = 0;
   11afe:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mTransaction.dataWrite      = wbytes;
    mTransaction.writeLength    = wlength;
    mTransaction.dataRead       = rbytes;
    mTransaction.readLength     = rlength;
    // Send START, I2C State Machine will finish the rest.
    mpI2CRegs->I2CONSET = 0x20;
   11b00:	2220      	movs	r2, #32
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   11b02:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   11b06:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   11b0a:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   11b0e:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   11b12:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   11b16:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   11b1a:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   11b1e:	601a      	str	r2, [r3, #0]
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
static inline uint64_t sys_get_uptime_ms(void) { return sys_get_uptime_us() / 1000; }
   11b20:	f7fe fcfa 	bl	10518 <sys_get_uptime_us>
   11b24:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11b28:	2300      	movs	r3, #0
   11b2a:	f007 fcab 	bl	19484 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:103
        const uint64_t timeout = sys_get_uptime_ms() + I2C_TIMEOUT_MS;
   11b2e:	f510 767a 	adds.w	r6, r0, #1000	; 0x3e8
   11b32:	f141 0700 	adc.w	r7, r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:104
        while (!xSemaphoreTake(mTransferCompleteSignal, 0))
   11b36:	2300      	movs	r3, #0
   11b38:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   11b3c:	461a      	mov	r2, r3
   11b3e:	4619      	mov	r1, r3
   11b40:	f7ff fa80 	bl	11044 <xQueueGenericReceive>
   11b44:	b128      	cbz	r0, 11b52 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x82>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:112
        status = (0 == mTransaction.error);
   11b46:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   11b4a:	fab5 f585 	clz	r5, r5
   11b4e:	096d      	lsrs	r5, r5, #5
   11b50:	e7cb      	b.n	11aea <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   11b52:	f7fe fce1 	bl	10518 <sys_get_uptime_us>
   11b56:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11b5a:	2300      	movs	r3, #0
   11b5c:	f007 fc92 	bl	19484 <__aeabi_uldivmod>
_ZN8I2C_Base8transferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:106
            if (sys_get_uptime_ms() > timeout)
   11b60:	428f      	cmp	r7, r1
   11b62:	bf08      	it	eq
   11b64:	4286      	cmpeq	r6, r0
   11b66:	d2e6      	bcs.n	11b36 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x66>
   11b68:	e7ed      	b.n	11b46 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x76>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:114
    else if (xSemaphoreTake(mI2CMutex, OS_MS(I2C_TIMEOUT_MS)))
   11b6a:	2300      	movs	r3, #0
   11b6c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11b70:	4619      	mov	r1, r3
   11b72:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   11b76:	f7ff fa65 	bl	11044 <xQueueGenericReceive>
   11b7a:	2800      	cmp	r0, #0
   11b7c:	d0b4      	beq.n	11ae8 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:117
        xSemaphoreTake(mTransferCompleteSignal, 0);
   11b7e:	2300      	movs	r3, #0
   11b80:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   11b84:	461a      	mov	r2, r3
   11b86:	4619      	mov	r1, r3
   11b88:	f7ff fa5c 	bl	11044 <xQueueGenericReceive>
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   11b8c:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   11b8e:	2120      	movs	r1, #32
   11b90:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:217
    mTransaction.slaveAddr      = addr;
   11b94:	f884 a110 	strb.w	sl, [r4, #272]	; 0x110
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:218
    mTransaction.error          = 0;
   11b98:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:219
    mTransaction.dataWrite      = wbytes;
   11b9c:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:220
    mTransaction.writeLength    = wlength;
   11ba0:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:221
    mTransaction.dataRead       = rbytes;
   11ba4:	f8c4 611c 	str.w	r6, [r4, #284]	; 0x11c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:222
    mTransaction.readLength     = rlength;
   11ba8:	f8c4 8120 	str.w	r8, [r4, #288]	; 0x120
_ZN8I2C_Base8transferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   11bac:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
_ZN8I2C_Base18i2cKickOffTransferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:224
    mpI2CRegs->I2CONSET = 0x20;
   11bb0:	6011      	str	r1, [r2, #0]
_ZN8I2C_Base8transferEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:121
        if (xSemaphoreTake(mTransferCompleteSignal, OS_MS(I2C_TIMEOUT_MS)))
   11bb2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11bb6:	4619      	mov	r1, r3
   11bb8:	f7ff fa44 	bl	11044 <xQueueGenericReceive>
   11bbc:	b120      	cbz	r0, 11bc8 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0xf8>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:123
            status = (0 == mTransaction.error);
   11bbe:	f894 5111 	ldrb.w	r5, [r4, #273]	; 0x111
   11bc2:	fab5 f585 	clz	r5, r5
   11bc6:	096d      	lsrs	r5, r5, #5
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:126
        xSemaphoreGive(mI2CMutex);
   11bc8:	2300      	movs	r3, #0
   11bca:	f8d4 0108 	ldr.w	r0, [r4, #264]	; 0x108
   11bce:	461a      	mov	r2, r3
   11bd0:	4619      	mov	r1, r3
   11bd2:	f7ff f92f 	bl	10e34 <xQueueGenericSend>
   11bd6:	e788      	b.n	11aea <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)+0x1a>

00011bd8 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>:
_ZN8I2C_Base21writeRegisterThenReadEhPhmS0_m():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:62
{
   11bd8:	b410      	push	{r4}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   11bda:	f041 0101 	orr.w	r1, r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:65
}
   11bde:	bc10      	pop	{r4}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:64
    return transfer(address, wdata, wlength, rdata, rlength);
   11be0:	f7ff bf76 	b.w	11ad0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>

00011be4 <I2C_Base::readReg(unsigned char, unsigned char)>:
_ZN8I2C_Base7readRegEhh():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   11be4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:48
    uint8_t register_return = 0;
   11be6:	2300      	movs	r3, #0
   11be8:	f88d 3017 	strb.w	r3, [sp, #23]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   11bec:	2301      	movs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:47
{
   11bee:	f88d 200f 	strb.w	r2, [sp, #15]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:49
    writeRegisterThenRead(deviceAddress, &registerAddress, 1, &register_return, 1);
   11bf2:	f10d 0217 	add.w	r2, sp, #23
   11bf6:	9200      	str	r2, [sp, #0]
   11bf8:	9301      	str	r3, [sp, #4]
   11bfa:	f10d 020f 	add.w	r2, sp, #15
   11bfe:	f7ff ffeb 	bl	11bd8 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:51
}
   11c02:	f89d 0017 	ldrb.w	r0, [sp, #23]
   11c06:	b007      	add	sp, #28
   11c08:	f85d fb04 	ldr.w	pc, [sp], #4

00011c0c <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhhPhm():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:80
{
   11c0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   11c0e:	ac04      	add	r4, sp, #16
   11c10:	f804 2d01 	strb.w	r2, [r4, #-1]!
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:81
    return writeRegisterThenRead(deviceAddress, &firstReg, 1, pData, transferSize);
   11c14:	9a06      	ldr	r2, [sp, #24]
   11c16:	9300      	str	r3, [sp, #0]
   11c18:	9201      	str	r2, [sp, #4]
   11c1a:	2301      	movs	r3, #1
   11c1c:	4622      	mov	r2, r4
   11c1e:	f7ff ffdb 	bl	11bd8 <I2C_Base::writeRegisterThenRead(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:82
}
   11c22:	b004      	add	sp, #16
   11c24:	bd10      	pop	{r4, pc}

00011c26 <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base14writeRegistersEhPhm():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:75
{
   11c26:	b513      	push	{r0, r1, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:77
    return transfer(address, wdata, wlength, NULL, 0);
   11c28:	2400      	movs	r4, #0
   11c2a:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   11c2e:	9401      	str	r4, [sp, #4]
   11c30:	9400      	str	r4, [sp, #0]
   11c32:	f7ff ff4d 	bl	11ad0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:78
}
   11c36:	b002      	add	sp, #8
   11c38:	bd10      	pop	{r4, pc}

00011c3a <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>:
_ZN8I2C_Base8writeRegEhhh():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:53
{
   11c3a:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:55
    writeBytes[0] = registerAddress;
   11c3c:	f88d 2004 	strb.w	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:56
    writeBytes[1] = value;
   11c40:	f88d 3005 	strb.w	r3, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:58
    return writeRegisters(deviceAddress, writeBytes, 2);
   11c44:	aa01      	add	r2, sp, #4
   11c46:	2302      	movs	r3, #2
   11c48:	f7ff ffed 	bl	11c26 <I2C_Base::writeRegisters(unsigned char, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:59
}
   11c4c:	b003      	add	sp, #12
   11c4e:	f85d fb04 	ldr.w	pc, [sp], #4

00011c52 <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>:
_ZN8I2C_Base13readRegistersEhPhm():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:84
{
   11c52:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:86
    return transfer(address, NULL, 0, rdata, rlength);
   11c54:	e88d 000c 	stmia.w	sp, {r2, r3}
   11c58:	2300      	movs	r3, #0
   11c5a:	f041 0101 	orr.w	r1, r1, #1
   11c5e:	461a      	mov	r2, r3
   11c60:	f7ff ff36 	bl	11ad0 <I2C_Base::transfer(unsigned char, unsigned char*, unsigned long, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:87
}
   11c64:	b003      	add	sp, #12
   11c66:	f85d fb04 	ldr.w	pc, [sp], #4

00011c6a <I2C_Base::checkDeviceResponse(unsigned char)>:
_ZN8I2C_Base19checkDeviceResponseEh():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   11c6a:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:133
{
   11c6c:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:134
    uint8_t notUsed = 0;
   11c6e:	aa02      	add	r2, sp, #8
   11c70:	f802 3d01 	strb.w	r3, [r2, #-1]!
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:139
    return readRegisters(address, &notUsed, lenZeroToTestDeviceReady);
   11c74:	f7ff ffed 	bl	11c52 <I2C_Base::readRegisters(unsigned char, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:140
}
   11c78:	b003      	add	sp, #12
   11c7a:	f85d fb04 	ldr.w	pc, [sp], #4
   11c7e:	Address 0x0000000000011c7e is out of bounds.


00011c80 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC2EP15LPC_I2C_TypeDef():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   11c80:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   11c82:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:142
I2C_Base::I2C_Base(LPC_I2C_TypeDef* pI2CBaseAddr):
   11c84:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:144
    mDisableOperation(false)
   11c86:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
   11c8a:	f880 5105 	strb.w	r5, [r0, #261]	; 0x105
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   11c8e:	2001      	movs	r0, #1
   11c90:	f7ff f952 	bl	10f38 <xQueueCreateMutex>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   11c94:	2203      	movs	r2, #3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:146
    mI2CMutex = xSemaphoreCreateMutex();
   11c96:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   11c9a:	4629      	mov	r1, r5
   11c9c:	2001      	movs	r0, #1
   11c9e:	f7ff f8af 	bl	10e00 <xQueueGenericCreate>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   11ca2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
   11ca6:	4a0c      	ldr	r2, [pc, #48]	; (11cd8 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:147
    mTransferCompleteSignal = xSemaphoreCreateBinary();
   11ca8:	f8c4 010c 	str.w	r0, [r4, #268]	; 0x10c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:153
    switch((unsigned int)mpI2CRegs)
   11cac:	4293      	cmp	r3, r2
   11cae:	d00c      	beq.n	11cca <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4a>
   11cb0:	f502 2288 	add.w	r2, r2, #278528	; 0x44000
   11cb4:	4293      	cmp	r3, r2
   11cb6:	d00a      	beq.n	11cce <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x4e>
   11cb8:	f5a2 2204 	sub.w	r2, r2, #540672	; 0x84000
   11cbc:	4293      	cmp	r3, r2
   11cbe:	d108      	bne.n	11cd2 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:156
            mIRQ = I2C0_IRQn;
   11cc0:	230a      	movs	r3, #10
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   11cc2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:168
}
   11cc6:	4620      	mov	r0, r4
   11cc8:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:159
            mIRQ = I2C1_IRQn;
   11cca:	230b      	movs	r3, #11
   11ccc:	e7f9      	b.n	11cc2 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:162
            mIRQ = I2C2_IRQn;
   11cce:	230c      	movs	r3, #12
   11cd0:	e7f7      	b.n	11cc2 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:165
            mIRQ = (IRQn_Type)(99); // Using invalid IRQ on purpose
   11cd2:	2363      	movs	r3, #99	; 0x63
   11cd4:	e7f5      	b.n	11cc2 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x42>
   11cd6:	bf00      	nop
   11cd8:	4005c000 	.word	0x4005c000

00011cdc <I2C_Base::init(unsigned long, unsigned long)>:
_ZN8I2C_Base4initEmm():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   11cdc:	f990 3104 	ldrsb.w	r3, [r0, #260]	; 0x104
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   11ce0:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   11ce2:	2b0b      	cmp	r3, #11
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:171
{
   11ce4:	4605      	mov	r5, r0
   11ce6:	460c      	mov	r4, r1
   11ce8:	4616      	mov	r6, r2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:173
    switch (mIRQ)
   11cea:	d035      	beq.n	11d58 <I2C_Base::init(unsigned long, unsigned long)+0x7c>
   11cec:	2b0c      	cmp	r3, #12
   11cee:	d036      	beq.n	11d5e <I2C_Base::init(unsigned long, unsigned long)+0x82>
   11cf0:	2b0a      	cmp	r3, #10
   11cf2:	d137      	bne.n	11d64 <I2C_Base::init(unsigned long, unsigned long)+0x88>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:175
        case I2C0_IRQn: lpc_pconp(pconp_i2c0, true);  break;
   11cf4:	2101      	movs	r1, #1
   11cf6:	2007      	movs	r0, #7
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   11cf8:	f7fe fba6 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   11cfc:	f5b6 7f7a 	cmp.w	r6, #1000	; 0x3e8
   11d00:	bf98      	it	ls
   11d02:	f44f 717a 	movls.w	r1, #1000	; 0x3e8
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   11d06:	f04f 026c 	mov.w	r2, #108	; 0x6c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:194
    const uint32_t freq_hz = (busRateInKhz > 1000) ? (100 * 1000) : (busRateInKhz * 1000);
   11d0a:	bf94      	ite	ls
   11d0c:	4371      	mulls	r1, r6
   11d0e:	4916      	ldrhi	r1, [pc, #88]	; (11d68 <I2C_Base::init(unsigned long, unsigned long)+0x8c>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   11d10:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   11d14:	fbb4 f1f1 	udiv	r1, r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:181
    mpI2CRegs->I2CONCLR = 0x6C;           // Clear ALL I2C Flags
   11d18:	619a      	str	r2, [r3, #24]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   11d1a:	2228      	movs	r2, #40	; 0x28
   11d1c:	2064      	movs	r0, #100	; 0x64
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:195
    const uint32_t half_clock_divider = (pclk / freq_hz) / 2;
   11d1e:	0849      	lsrs	r1, r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:196
    mpI2CRegs->I2SCLH = (half_clock_divider * percent_high) / 100;
   11d20:	434a      	muls	r2, r1
   11d22:	fbb2 f2f0 	udiv	r2, r2, r0
   11d26:	611a      	str	r2, [r3, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   11d28:	223c      	movs	r2, #60	; 0x3c
   11d2a:	4351      	muls	r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   11d2c:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:197
    mpI2CRegs->I2SCLL = (half_clock_divider * percent_low ) / 100;
   11d2e:	fbb1 f1f0 	udiv	r1, r1, r0
   11d32:	6159      	str	r1, [r3, #20]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:200
    mpI2CRegs->I2ADR0 = 0;
   11d34:	60da      	str	r2, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:201
    mpI2CRegs->I2ADR1 = 0;
   11d36:	621a      	str	r2, [r3, #32]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:202
    mpI2CRegs->I2ADR2 = 0;
   11d38:	625a      	str	r2, [r3, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:203
    mpI2CRegs->I2ADR3 = 0;
   11d3a:	629a      	str	r2, [r3, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
    mpI2CRegs->I2CONSET = 0x40;
   11d3c:	2240      	movs	r2, #64	; 0x40
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   11d3e:	2001      	movs	r0, #1
_ZN8I2C_Base4initEmm():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:206
   11d40:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:208
    NVIC_EnableIRQ(mIRQ);
   11d42:	f995 3104 	ldrsb.w	r3, [r5, #260]	; 0x104
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   11d46:	4a09      	ldr	r2, [pc, #36]	; (11d6c <I2C_Base::init(unsigned long, unsigned long)+0x90>)
   11d48:	0959      	lsrs	r1, r3, #5
   11d4a:	f003 031f 	and.w	r3, r3, #31
   11d4e:	fa00 f303 	lsl.w	r3, r0, r3
   11d52:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   11d56:	bd70      	pop	{r4, r5, r6, pc}
_ZN8I2C_Base4initEmm():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:176
        case I2C1_IRQn: lpc_pconp(pconp_i2c1, true);  break;
   11d58:	2101      	movs	r1, #1
   11d5a:	2013      	movs	r0, #19
   11d5c:	e7cc      	b.n	11cf8 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:177
        case I2C2_IRQn: lpc_pconp(pconp_i2c2, true);  break;
   11d5e:	2101      	movs	r1, #1
   11d60:	201a      	movs	r0, #26
   11d62:	e7c9      	b.n	11cf8 <I2C_Base::init(unsigned long, unsigned long)+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:178
        default: return false;
   11d64:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:211
}
   11d66:	bd70      	pop	{r4, r5, r6, pc}
   11d68:	000186a0 	.word	0x000186a0
   11d6c:	e000e100 	.word	0xe000e100

00011d70 <I2C_Base::setStop()>:
_ZN8I2C_Base14clearSTARTFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
{
    mpI2CRegs->I2CONSET = (1 << 5);
}
inline void I2C_Base::clearSTARTFlag()
{
    mpI2CRegs->I2CONCLR = (1 << 5);
   11d70:	2220      	movs	r2, #32
   11d72:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
   11d76:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:250
    mpI2CRegs->I2CONCLR = (1 << 2);
}
inline void I2C_Base::setStop()
{
    clearSTARTFlag();
    mpI2CRegs->I2CONSET = (1 << 4);
   11d78:	2210      	movs	r2, #16
   11d7a:	601a      	str	r2, [r3, #0]
_ZN8I2C_Base11clearSIFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   11d7c:	2208      	movs	r2, #8
   11d7e:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base7setStopEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:252
    clearSIFlag();
    while ((mpI2CRegs->I2CONSET & (1 << 4)));
   11d80:	681a      	ldr	r2, [r3, #0]
   11d82:	06d2      	lsls	r2, r2, #27
   11d84:	d4fc      	bmi.n	11d80 <I2C_Base::setStop()+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:253
    if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   11d86:	f890 3110 	ldrb.w	r3, [r0, #272]	; 0x110
   11d8a:	07db      	lsls	r3, r3, #31
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:255
    {
        state = readComplete;
   11d8c:	bf4c      	ite	mi
   11d8e:	2301      	movmi	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:259
    }
    else
    {
        state = writeComplete;
   11d90:	2302      	movpl	r3, #2
   11d92:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
   11d96:	4770      	bx	lr

00011d98 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
        readModeNackedBySlave = 0x48,
        dataAvailableAckSent  = 0x50,
        dataAvailableNackSent = 0x58,
    };

    state = busy;
   11d98:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   11d9a:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:300
    state = busy;
   11d9c:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
     *  For 2+ bytes:  dataAvailableAckSent --> ... (dataAvailableAckSent) --> dataAvailableNackSent --> (stop)
     *  For 1  byte :  dataAvailableNackSent --> (stop)
     ***********************************************************************************************************
     */

    switch (mpI2CRegs->I2STAT)
   11da0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:278
{
   11da4:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   11da6:	685a      	ldr	r2, [r3, #4]
   11da8:	2a28      	cmp	r2, #40	; 0x28
   11daa:	d044      	beq.n	11e36 <I2C_Base::i2cStateMachine()+0x9e>
   11dac:	d80d      	bhi.n	11dca <I2C_Base::i2cStateMachine()+0x32>
   11dae:	2a10      	cmp	r2, #16
   11db0:	d027      	beq.n	11e02 <I2C_Base::i2cStateMachine()+0x6a>
   11db2:	2a18      	cmp	r2, #24
   11db4:	d028      	beq.n	11e08 <I2C_Base::i2cStateMachine()+0x70>
   11db6:	2a08      	cmp	r2, #8
   11db8:	d10c      	bne.n	11dd4 <I2C_Base::i2cStateMachine()+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:318
    {
        case start:
            //u0_dbg_printf("sta\n");
            if(mTransaction.writeLength == 0)
   11dba:	f8d0 1118 	ldr.w	r1, [r0, #280]	; 0x118
   11dbe:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   11dc2:	b9b1      	cbnz	r1, 11df2 <I2C_Base::i2cStateMachine()+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            }
            clearSIFlag();
            break;
        case repeatStart:
            //u0_dbg_printf("rsta-%X\n", I2C_READ_ADDR(mTransaction.slaveAddr));
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   11dc4:	f042 0201 	orr.w	r2, r2, #1
   11dc8:	e015      	b.n	11df6 <I2C_Base::i2cStateMachine()+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   11dca:	2a40      	cmp	r2, #64	; 0x40
   11dcc:	d03e      	beq.n	11e4c <I2C_Base::i2cStateMachine()+0xb4>
   11dce:	d805      	bhi.n	11ddc <I2C_Base::i2cStateMachine()+0x44>
   11dd0:	2a38      	cmp	r2, #56	; 0x38
   11dd2:	d059      	beq.n	11e88 <I2C_Base::i2cStateMachine()+0xf0>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:436
        case slaveAddressNacked:    // no break
        case dataNackedBySlave:     // no break
        case readModeNackedBySlave: // no break
        case busError:              // no break
        default:
            mTransaction.error = mpI2CRegs->I2STAT;
   11dd4:	685b      	ldr	r3, [r3, #4]
   11dd6:	f884 3111 	strb.w	r3, [r4, #273]	; 0x111
   11dda:	e01d      	b.n	11e18 <I2C_Base::i2cStateMachine()+0x80>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:314
    switch (mpI2CRegs->I2STAT)
   11ddc:	2a50      	cmp	r2, #80	; 0x50
   11dde:	d03f      	beq.n	11e60 <I2C_Base::i2cStateMachine()+0xc8>
   11de0:	2a58      	cmp	r2, #88	; 0x58
   11de2:	d1f7      	bne.n	11dd4 <I2C_Base::i2cStateMachine()+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:421
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   11de4:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   11de8:	689b      	ldr	r3, [r3, #8]
   11dea:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   11dec:	f7ff ffc0 	bl	11d70 <I2C_Base::setStop()>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:438
            break;
   11df0:	e004      	b.n	11dfc <I2C_Base::i2cStateMachine()+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:326
                mpI2CRegs->I2DAT = I2C_WRITE_ADDR(mTransaction.slaveAddr);
   11df2:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   11df6:	609a      	str	r2, [r3, #8]
_ZN8I2C_Base11clearSIFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:229
    mpI2CRegs->I2CONCLR = (1 << 3);
   11df8:	2208      	movs	r2, #8
   11dfa:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:442
    }

    return state;
}
   11dfc:	f894 0124 	ldrb.w	r0, [r4, #292]	; 0x124
   11e00:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:332
            mpI2CRegs->I2DAT = I2C_READ_ADDR(mTransaction.slaveAddr);
   11e02:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   11e06:	e7dd      	b.n	11dc4 <I2C_Base::i2cStateMachine()+0x2c>
_ZN8I2C_Base14clearSTARTFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   11e08:	2220      	movs	r2, #32
_ZN8I2C_Base15i2cStateMachineEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   11e0a:	f8d0 1120 	ldr.w	r1, [r0, #288]	; 0x120
_ZN8I2C_Base14clearSTARTFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   11e0e:	619a      	str	r2, [r3, #24]
   11e10:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
_ZN8I2C_Base15i2cStateMachineEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:340
            if (0 == mTransaction.readLength && 0 == mTransaction.writeLength)
   11e14:	b911      	cbnz	r1, 11e1c <I2C_Base::i2cStateMachine()+0x84>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:340 (discriminator 1)
   11e16:	b90a      	cbnz	r2, 11e1c <I2C_Base::i2cStateMachine()+0x84>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:437
            setStop();
   11e18:	4620      	mov	r0, r4
   11e1a:	e7e7      	b.n	11dec <I2C_Base::i2cStateMachine()+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:345
            else if(0 != mTransaction.writeLength)
   11e1c:	2a00      	cmp	r2, #0
   11e1e:	d0ed      	beq.n	11dfc <I2C_Base::i2cStateMachine()+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   11e20:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   11e24:	3a01      	subs	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:374
                mpI2CRegs->I2DAT = *(mTransaction.dataWrite);
   11e26:	f811 0b01 	ldrb.w	r0, [r1], #1
   11e2a:	6098      	str	r0, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:375
                ++mTransaction.dataWrite;
   11e2c:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:376
                --mTransaction.writeLength;
   11e30:	f8c4 2118 	str.w	r2, [r4, #280]	; 0x118
   11e34:	e7e0      	b.n	11df8 <I2C_Base::i2cStateMachine()+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:357
            if (0 == mTransaction.writeLength)
   11e36:	f8d0 2118 	ldr.w	r2, [r0, #280]	; 0x118
   11e3a:	2a00      	cmp	r2, #0
   11e3c:	d1f0      	bne.n	11e20 <I2C_Base::i2cStateMachine()+0x88>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:360
                if (I2C_CHECK_READ_MODE(mTransaction.slaveAddr))
   11e3e:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
   11e42:	07d2      	lsls	r2, r2, #31
   11e44:	d5e8      	bpl.n	11e18 <I2C_Base::i2cStateMachine()+0x80>
_ZN8I2C_Base12setSTARTFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:233
    mpI2CRegs->I2CONSET = (1 << 5);
   11e46:	2220      	movs	r2, #32
   11e48:	601a      	str	r2, [r3, #0]
   11e4a:	e7d5      	b.n	11df8 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base14clearSTARTFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:237
    mpI2CRegs->I2CONCLR = (1 << 5);
   11e4c:	2220      	movs	r2, #32
   11e4e:	619a      	str	r2, [r3, #24]
_ZN8I2C_Base15i2cStateMachineEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:387
            if (mTransaction.readLength > 1)
   11e50:	f8d0 2120 	ldr.w	r2, [r0, #288]	; 0x120
   11e54:	2a01      	cmp	r2, #1
   11e56:	f04f 0204 	mov.w	r2, #4
   11e5a:	d8f5      	bhi.n	11e48 <I2C_Base::i2cStateMachine()+0xb0>
_ZN8I2C_Base11setNackFlagEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:245
    mpI2CRegs->I2CONCLR = (1 << 2);
   11e5c:	619a      	str	r2, [r3, #24]
   11e5e:	e7cb      	b.n	11df8 <I2C_Base::i2cStateMachine()+0x60>
_ZN8I2C_Base15i2cStateMachineEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:400
            *mTransaction.dataRead = mpI2CRegs->I2DAT;
   11e60:	689b      	ldr	r3, [r3, #8]
   11e62:	f8d0 211c 	ldr.w	r2, [r0, #284]	; 0x11c
   11e66:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:401
            ++mTransaction.dataRead;
   11e68:	f8d0 311c 	ldr.w	r3, [r0, #284]	; 0x11c
   11e6c:	2204      	movs	r2, #4
   11e6e:	3301      	adds	r3, #1
   11e70:	f8c0 311c 	str.w	r3, [r0, #284]	; 0x11c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   11e74:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
   11e78:	3b01      	subs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   11e7a:	2b01      	cmp	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:402
            --mTransaction.readLength;
   11e7c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   11e80:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:406
            if (1 == mTransaction.readLength)  // Only 1 more byte remaining
   11e84:	d1e0      	bne.n	11e48 <I2C_Base::i2cStateMachine()+0xb0>
   11e86:	e7e9      	b.n	11e5c <I2C_Base::i2cStateMachine()+0xc4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   11e88:	f890 2110 	ldrb.w	r2, [r0, #272]	; 0x110
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   11e8c:	685b      	ldr	r3, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   11e8e:	f012 0f01 	tst.w	r2, #1
   11e92:	bf14      	ite	ne
   11e94:	2201      	movne	r2, #1
   11e96:	2202      	moveq	r2, #2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:428
            mTransaction.error = mpI2CRegs->I2STAT;
   11e98:	f880 3111 	strb.w	r3, [r0, #273]	; 0x111
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:427
            state = I2C_CHECK_READ_MODE(mTransaction.slaveAddr) ? readComplete : writeComplete;
   11e9c:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:429
            break;
   11ea0:	e7ac      	b.n	11dfc <I2C_Base::i2cStateMachine()+0x64>
   11ea2:	Address 0x0000000000011ea2 is out of bounds.


00011ea4 <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:36
{
   11ea4:	b513      	push	{r0, r1, r4, lr}
   11ea6:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:38
    if (busy != i2cStateMachine())
   11ea8:	f7ff ff76 	bl	11d98 <I2C_Base::i2cStateMachine()>
   11eac:	b188      	cbz	r0, 11ed2 <I2C_Base::handleInterrupt()+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:40
        long higherPriorityTaskWaiting = 0;
   11eae:	2300      	movs	r3, #0
   11eb0:	a902      	add	r1, sp, #8
   11eb2:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:41
        xSemaphoreGiveFromISR(mTransferCompleteSignal, &higherPriorityTaskWaiting);
   11eb6:	f8d4 010c 	ldr.w	r0, [r4, #268]	; 0x10c
   11eba:	f7ff f88f 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:42
        portEND_SWITCHING_ISR(higherPriorityTaskWaiting);
   11ebe:	9b01      	ldr	r3, [sp, #4]
   11ec0:	b13b      	cbz	r3, 11ed2 <I2C_Base::handleInterrupt()+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:42 (discriminator 1)
   11ec2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   11ec6:	4b04      	ldr	r3, [pc, #16]	; (11ed8 <I2C_Base::handleInterrupt()+0x34>)
   11ec8:	601a      	str	r2, [r3, #0]
   11eca:	f3bf 8f4f 	dsb	sy
   11ece:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.cpp:44
}
   11ed2:	b002      	add	sp, #8
   11ed4:	bd10      	pop	{r4, pc}
   11ed6:	bf00      	nop
   11ed8:	e000ed04 	.word	0xe000ed04

00011edc <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:51
    }
    return true;
}

bool UartDev::putChar(char out, unsigned int timeout)
{
   11edc:	b537      	push	{r0, r1, r2, r4, r5, lr}
   11ede:	4604      	mov	r4, r0
   11ee0:	4615      	mov	r5, r2
   11ee2:	f88d 1007 	strb.w	r1, [sp, #7]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:53
    /* If OS not running, just send data using polling and return */
    if (taskSCHEDULER_RUNNING != xTaskGetSchedulerState()) {
   11ee6:	f7ff fd1d 	bl	11924 <xTaskGetSchedulerState>
   11eea:	2802      	cmp	r0, #2
   11eec:	d009      	beq.n	11f02 <UartDev::putChar(char, unsigned int)+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:54
        mpUARTRegBase->THR = out;
   11eee:	6963      	ldr	r3, [r4, #20]
   11ef0:	f89d 2007 	ldrb.w	r2, [sp, #7]
   11ef4:	701a      	strb	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:55
        while(! (mpUARTRegBase->LSR & (1 << 6)));
   11ef6:	7d1a      	ldrb	r2, [r3, #20]
   11ef8:	0652      	lsls	r2, r2, #25
   11efa:	d5fc      	bpl.n	11ef6 <UartDev::putChar(char, unsigned int)+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:75
        if (xQueueReceive(mTxQueue, &out, 0)) {
            mpUARTRegBase->THR = out;
        }
    }

    return true;
   11efc:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:76
}
   11efe:	b003      	add	sp, #12
   11f00:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:60
    if(! xQueueSend(mTxQueue, &out, timeout)) {
   11f02:	2300      	movs	r3, #0
   11f04:	462a      	mov	r2, r5
   11f06:	f10d 0107 	add.w	r1, sp, #7
   11f0a:	69e0      	ldr	r0, [r4, #28]
   11f0c:	f7fe ff92 	bl	10e34 <xQueueGenericSend>
   11f10:	2800      	cmp	r0, #0
   11f12:	d0f4      	beq.n	11efe <UartDev::putChar(char, unsigned int)+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:68
    if (mpUARTRegBase->LSR & uart_tx_is_idle)
   11f14:	6963      	ldr	r3, [r4, #20]
   11f16:	7d1b      	ldrb	r3, [r3, #20]
   11f18:	065b      	lsls	r3, r3, #25
   11f1a:	d5ef      	bpl.n	11efc <UartDev::putChar(char, unsigned int)+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:70
        if (xQueueReceive(mTxQueue, &out, 0)) {
   11f1c:	2300      	movs	r3, #0
   11f1e:	f10d 0107 	add.w	r1, sp, #7
   11f22:	461a      	mov	r2, r3
   11f24:	69e0      	ldr	r0, [r4, #28]
   11f26:	f7ff f88d 	bl	11044 <xQueueGenericReceive>
   11f2a:	2800      	cmp	r0, #0
   11f2c:	d0e6      	beq.n	11efc <UartDev::putChar(char, unsigned int)+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:71
            mpUARTRegBase->THR = out;
   11f2e:	6963      	ldr	r3, [r4, #20]
   11f30:	f89d 2007 	ldrb.w	r2, [sp, #7]
   11f34:	701a      	strb	r2, [r3, #0]
   11f36:	e7e1      	b.n	11efc <UartDev::putChar(char, unsigned int)+0x20>

00011f38 <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        /**
         * Protected constructor that requires parent class to provide UART's
         * base register address for which to operate this UART driver
         */
        UartDev(unsigned int* pUARTBaseAddr);
        ~UartDev() { } /** Nothing to clean up */
   11f38:	b510      	push	{r4, lr}
   11f3a:	4604      	mov	r4, r0
   11f3c:	4b02      	ldr	r3, [pc, #8]	; (11f48 <UartDev::~UartDev()+0x10>)
   11f3e:	6003      	str	r3, [r0, #0]
   11f40:	f7ff fdba 	bl	11ab8 <CharDev::~CharDev()>
   11f44:	4620      	mov	r0, r4
   11f46:	bd10      	pop	{r4, pc}
   11f48:	000201f8 	.word	0x000201f8

00011f4c <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   11f4c:	b510      	push	{r4, lr}
   11f4e:	4604      	mov	r4, r0
   11f50:	f7ff fff2 	bl	11f38 <UartDev::~UartDev()>
   11f54:	4620      	mov	r0, r4
   11f56:	212c      	movs	r1, #44	; 0x2c
   11f58:	f006 fb61 	bl	1861e <operator delete(void*, unsigned int)>
   11f5c:	4620      	mov	r0, r4
   11f5e:	bd10      	pop	{r4, pc}

00011f60 <UartDev::flush()>:
_ZN7UartDev5flushEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:79

bool UartDev::flush(void)
{
   11f60:	b510      	push	{r4, lr}
   11f62:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:80
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   11f64:	f7ff fcde 	bl	11924 <xTaskGetSchedulerState>
   11f68:	2802      	cmp	r0, #2
   11f6a:	d107      	bne.n	11f7c <UartDev::flush()+0x1c>
_ZNK7UartDev14getTxQueueSizeEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.hpp:94
        inline unsigned int getTxQueueSize() const { return uxQueueMessagesWaiting(mTxQueue); }
   11f6c:	69e0      	ldr	r0, [r4, #28]
   11f6e:	f7ff f937 	bl	111e0 <uxQueueMessagesWaiting>
_ZN7UartDev5flushEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:81
        while (getTxQueueSize() > 0) {
   11f72:	b118      	cbz	r0, 11f7c <UartDev::flush()+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:82
            vTaskDelay(1);
   11f74:	2001      	movs	r0, #1
   11f76:	f7ff fbe1 	bl	1173c <vTaskDelay>
   11f7a:	e7f7      	b.n	11f6c <UartDev::flush()+0xc>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:87
        }
    }

    return true;
}
   11f7c:	2001      	movs	r0, #1
   11f7e:	bd10      	pop	{r4, pc}

00011f80 <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:32
{
   11f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11f82:	4606      	mov	r6, r0
   11f84:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:33
    if (!pInputChar || !mRxQueue) {
   11f86:	460f      	mov	r7, r1
   11f88:	b909      	cbnz	r1, 11f8e <UartDev::getChar(char*, unsigned int)+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:34
        return false;
   11f8a:	2000      	movs	r0, #0
   11f8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:33 (discriminator 1)
    if (!pInputChar || !mRxQueue) {
   11f8e:	6983      	ldr	r3, [r0, #24]
   11f90:	2b00      	cmp	r3, #0
   11f92:	d0fa      	beq.n	11f8a <UartDev::getChar(char*, unsigned int)+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:36
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   11f94:	f7ff fcc6 	bl	11924 <xTaskGetSchedulerState>
   11f98:	2802      	cmp	r0, #2
   11f9a:	d109      	bne.n	11fb0 <UartDev::getChar(char*, unsigned int)+0x30>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:37
        return xQueueReceive(mRxQueue, pInputChar, timeout);
   11f9c:	2300      	movs	r3, #0
   11f9e:	4622      	mov	r2, r4
   11fa0:	4639      	mov	r1, r7
   11fa2:	69b0      	ldr	r0, [r6, #24]
   11fa4:	f7ff f84e 	bl	11044 <xQueueGenericReceive>
   11fa8:	3000      	adds	r0, #0
   11faa:	bf18      	it	ne
   11fac:	2001      	movne	r0, #1
   11fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   11fb0:	f7fe fab2 	bl	10518 <sys_get_uptime_us>
   11fb4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11fb8:	2300      	movs	r3, #0
   11fba:	f007 fa63 	bl	19484 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   11fbe:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:40
        unsigned int timeout_of_char = sys_get_uptime_ms() + timeout;
   11fc0:	4404      	add	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:41
        while (! xQueueReceive(mRxQueue, pInputChar, 0)) {
   11fc2:	2300      	movs	r3, #0
   11fc4:	4639      	mov	r1, r7
   11fc6:	461a      	mov	r2, r3
   11fc8:	69b0      	ldr	r0, [r6, #24]
   11fca:	f7ff f83b 	bl	11044 <xQueueGenericReceive>
   11fce:	b958      	cbnz	r0, 11fe8 <UartDev::getChar(char*, unsigned int)+0x68>
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   11fd0:	f7fe faa2 	bl	10518 <sys_get_uptime_us>
   11fd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11fd8:	2300      	movs	r3, #0
   11fda:	f007 fa53 	bl	19484 <__aeabi_uldivmod>
_ZN7UartDev7getCharEPcj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:42
            if (sys_get_uptime_ms() > timeout_of_char) {
   11fde:	428d      	cmp	r5, r1
   11fe0:	bf08      	it	eq
   11fe2:	4284      	cmpeq	r4, r0
   11fe4:	d2ed      	bcs.n	11fc2 <UartDev::getChar(char*, unsigned int)+0x42>
   11fe6:	e7d0      	b.n	11f8a <UartDev::getChar(char*, unsigned int)+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:47
    return true;
   11fe8:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:48
}
   11fea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011fec <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
     */
    const uint16_t transmitterEmpty = (1 << 1);
    const uint16_t dataAvailable    = (2 << 1);
    const uint16_t dataTimeout      = (6 << 1);

    long higherPriorityTaskWoken = 0;
   11fec:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   11fee:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    long switchRequired = 0;
    char c = 0;
    unsigned charsSent = 0;

    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   11ff0:	6942      	ldr	r2, [r0, #20]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:121
    long higherPriorityTaskWoken = 0;
   11ff2:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:123
    char c = 0;
   11ff4:	f88d 3003 	strb.w	r3, [sp, #3]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:126
    uint16_t reasonForInterrupt = (mpUARTRegBase->IIR & 0xE);
   11ff8:	6893      	ldr	r3, [r2, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:112
{
   11ffa:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:132
    {
        /**
         * If multiple sources of interrupt arise, let this interrupt exit, and re-enter
         * for the new source of interrupt.
         */
        switch (reasonForInterrupt)
   11ffc:	f003 030e 	and.w	r3, r3, #14
   12000:	2b04      	cmp	r3, #4
   12002:	d021      	beq.n	12048 <UartDev::handleInterrupt()+0x5c>
   12004:	2b0c      	cmp	r3, #12
   12006:	d01f      	beq.n	12048 <UartDev::handleInterrupt()+0x5c>
   12008:	2b02      	cmp	r3, #2
   1200a:	d13f      	bne.n	1208c <UartDev::handleInterrupt()+0xa0>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:136
        {
            case transmitterEmpty:
            {
                if(uxQueueMessagesWaitingFromISR(mTxQueue) > mTxQWatermark) {
   1200c:	69c0      	ldr	r0, [r0, #28]
   1200e:	f7ff f8f0 	bl	111f2 <uxQueueMessagesWaitingFromISR>
   12012:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   12014:	4298      	cmp	r0, r3
   12016:	d903      	bls.n	12020 <UartDev::handleInterrupt()+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:137
                    mTxQWatermark = uxQueueMessagesWaitingFromISR(mTxQueue);
   12018:	69e0      	ldr	r0, [r4, #28]
   1201a:	f7ff f8ea 	bl	111f2 <uxQueueMessagesWaitingFromISR>
   1201e:	84e0      	strh	r0, [r4, #38]	; 0x26
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:112 (discriminator 1)
{
   12020:	2610      	movs	r6, #16
   12022:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:146 (discriminator 1)
                 * When THRE (Transmit Holding Register Empty) interrupt occurs,
                 * we can send as many bytes as the hardware FIFO supports (16)
                 */
                const unsigned char hwTxFifoSize = 16;
                for(charsSent=0;
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   12024:	aa01      	add	r2, sp, #4
   12026:	f10d 0103 	add.w	r1, sp, #3
   1202a:	69e0      	ldr	r0, [r4, #28]
   1202c:	f7ff f8a4 	bl	11178 <xQueueReceiveFromISR>
   12030:	2800      	cmp	r0, #0
   12032:	d12e      	bne.n	12092 <UartDev::handleInterrupt()+0xa6>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:188
                reasonForInterrupt = mpUARTRegBase->LSR;
                break;
        }
    }

    portEND_SWITCHING_ISR(switchRequired);
   12034:	b35d      	cbz	r5, 1208e <UartDev::handleInterrupt()+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:188 (discriminator 1)
   12036:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1203a:	4b1b      	ldr	r3, [pc, #108]	; (120a8 <UartDev::handleInterrupt()+0xbc>)
   1203c:	601a      	str	r2, [r3, #0]
   1203e:	f3bf 8f4f 	dsb	sy
   12042:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:189 (discriminator 1)
}
   12046:	e022      	b.n	1208e <UartDev::handleInterrupt()+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   12048:	f7ff fa54 	bl	114f4 <xTaskGetTickCountFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:122
    long switchRequired = 0;
   1204c:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:160
                mLastActivityTime = xTaskGetTickCountFromISR();
   1204e:	62a0      	str	r0, [r4, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:166
                while (0 != (mpUARTRegBase->LSR & (1 << 0)))
   12050:	6963      	ldr	r3, [r4, #20]
   12052:	7d1a      	ldrb	r2, [r3, #20]
   12054:	07d2      	lsls	r2, r2, #31
   12056:	d50e      	bpl.n	12076 <UartDev::handleInterrupt()+0x8a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   12058:	781b      	ldrb	r3, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   1205a:	aa01      	add	r2, sp, #4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:168
                    c = mpUARTRegBase->RBR;
   1205c:	f88d 3003 	strb.w	r3, [sp, #3]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:169
                    xQueueSendFromISR(mRxQueue, &c, &higherPriorityTaskWoken);
   12060:	f10d 0103 	add.w	r1, sp, #3
   12064:	2300      	movs	r3, #0
   12066:	69a0      	ldr	r0, [r4, #24]
   12068:	f7fe ff78 	bl	10f5c <xQueueGenericSendFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:170
                    if(higherPriorityTaskWoken) {
   1206c:	9b01      	ldr	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:171
                        switchRequired = 1;
   1206e:	2b00      	cmp	r3, #0
   12070:	bf18      	it	ne
   12072:	2501      	movne	r5, #1
   12074:	e7ec      	b.n	12050 <UartDev::handleInterrupt()+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:175
                if(uxQueueMessagesWaitingFromISR(mRxQueue) > mRxQWatermark) {
   12076:	69a0      	ldr	r0, [r4, #24]
   12078:	f7ff f8bb 	bl	111f2 <uxQueueMessagesWaitingFromISR>
   1207c:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   1207e:	4298      	cmp	r0, r3
   12080:	d9d8      	bls.n	12034 <UartDev::handleInterrupt()+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:176
                    mRxQWatermark = uxQueueMessagesWaitingFromISR(mRxQueue);
   12082:	69a0      	ldr	r0, [r4, #24]
   12084:	f7ff f8b5 	bl	111f2 <uxQueueMessagesWaitingFromISR>
   12088:	84a0      	strh	r0, [r4, #36]	; 0x24
   1208a:	e7d3      	b.n	12034 <UartDev::handleInterrupt()+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:183
                reasonForInterrupt = mpUARTRegBase->LSR;
   1208c:	7d13      	ldrb	r3, [r2, #20]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:189
}
   1208e:	b002      	add	sp, #8
   12090:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:149
                    mpUARTRegBase->THR = c;
   12092:	6963      	ldr	r3, [r4, #20]
   12094:	f89d 2003 	ldrb.w	r2, [sp, #3]
   12098:	701a      	strb	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:150
                    if(higherPriorityTaskWoken) {
   1209a:	9b01      	ldr	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:151
                        switchRequired = 1;
   1209c:	2b00      	cmp	r3, #0
   1209e:	bf18      	it	ne
   120a0:	2501      	movne	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:146
                        charsSent < hwTxFifoSize && xQueueReceiveFromISR(mTxQueue, &c, &higherPriorityTaskWoken);
   120a2:	3e01      	subs	r6, #1
   120a4:	d0c6      	beq.n	12034 <UartDev::handleInterrupt()+0x48>
   120a6:	e7bd      	b.n	12024 <UartDev::handleInterrupt()+0x38>
   120a8:	e000ed04 	.word	0xe000ed04

000120ac <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:194

///////////////
// Protected //
///////////////
UartDev::UartDev(unsigned int* pUARTBaseAddr) : CharDev(),
   120ac:	b538      	push	{r3, r4, r5, lr}
   120ae:	4604      	mov	r4, r0
   120b0:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mRxQueue(0),
        mTxQueue(0),
        mPeripheralClock(0),
        mRxQWatermark(0),
        mTxQWatermark(0),
        mLastActivityTime(0)
   120b2:	f7ff fcf1 	bl	11a98 <CharDev::CharDev()>
   120b6:	4b06      	ldr	r3, [pc, #24]	; (120d0 <UartDev::UartDev(unsigned int*)+0x24>)
   120b8:	6165      	str	r5, [r4, #20]
   120ba:	6023      	str	r3, [r4, #0]
   120bc:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
{

}
   120be:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:201
        mLastActivityTime(0)
   120c0:	61a3      	str	r3, [r4, #24]
   120c2:	61e3      	str	r3, [r4, #28]
   120c4:	6223      	str	r3, [r4, #32]
   120c6:	84a3      	strh	r3, [r4, #36]	; 0x24
   120c8:	84e3      	strh	r3, [r4, #38]	; 0x26
   120ca:	62a3      	str	r3, [r4, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.cpp:204
}
   120cc:	bd38      	pop	{r3, r4, r5, pc}
   120ce:	bf00      	nop
   120d0:	000201f8 	.word	0x000201f8

000120d4 <adc0_start_conversion>:
adc0_start_conversion():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:91
    const uint32_t start_conversion = (1 << 24);
    const uint32_t channel_masks = 0xFF;
    const uint32_t start_conversion_masks = (7 << 24); // Clear B26:B25:B24

    // Clear previously selected channel
    LPC_ADC->ADCR &= ~(channel_masks | start_conversion_masks);
   120d4:	4a07      	ldr	r2, [pc, #28]	; (120f4 <adc0_start_conversion+0x20>)
   120d6:	6813      	ldr	r3, [r2, #0]
   120d8:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
   120dc:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
   120e0:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:94

    // Set the channel number and start the conversion now
    LPC_ADC->ADCR |= (1 << channel_num) | start_conversion;
   120e2:	2301      	movs	r3, #1
   120e4:	6811      	ldr	r1, [r2, #0]
   120e6:	fa03 f000 	lsl.w	r0, r3, r0
   120ea:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   120ee:	4308      	orrs	r0, r1
   120f0:	6010      	str	r0, [r2, #0]
   120f2:	4770      	bx	lr
   120f4:	40034000 	.word	0x40034000

000120f8 <ADC_IRQHandler>:
ADC_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   120f8:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:44
{
   120fa:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   120fc:	4a0d      	ldr	r2, [pc, #52]	; (12134 <ADC_IRQHandler+0x3c>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:46
    BaseType_t switch_required = 0;
   120fe:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   12100:	6852      	ldr	r2, [r2, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   12102:	480d      	ldr	r0, [pc, #52]	; (12138 <ADC_IRQHandler+0x40>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:48
    uint16_t result = (LPC_ADC->ADGDR >> 4) & twelve_bits;
   12104:	f3c2 120b 	ubfx	r2, r2, #4, #12
   12108:	f8ad 2002 	strh.w	r2, [sp, #2]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:49
    xQueueSendFromISR(g_adc_result_queue, &result, &switch_required);
   1210c:	f10d 0102 	add.w	r1, sp, #2
   12110:	aa01      	add	r2, sp, #4
   12112:	6800      	ldr	r0, [r0, #0]
   12114:	f7fe ff22 	bl	10f5c <xQueueGenericSendFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:51
    portEND_SWITCHING_ISR(switch_required);
   12118:	9b01      	ldr	r3, [sp, #4]
   1211a:	b13b      	cbz	r3, 1212c <ADC_IRQHandler+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:51 (discriminator 1)
   1211c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   12120:	4b06      	ldr	r3, [pc, #24]	; (1213c <ADC_IRQHandler+0x44>)
   12122:	601a      	str	r2, [r3, #0]
   12124:	f3bf 8f4f 	dsb	sy
   12128:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:52
}
   1212c:	b003      	add	sp, #12
   1212e:	f85d fb04 	ldr.w	pc, [sp], #4
   12132:	bf00      	nop
   12134:	40034000 	.word	0x40034000
   12138:	2007c480 	.word	0x2007c480
   1213c:	e000ed04 	.word	0xe000ed04

00012140 <adc0_init>:
adc0_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:55
{
   12140:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   12142:	f7fe fb77 	bl	10834 <sys_get_cpu_clock>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   12146:	2101      	movs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:58
    const uint32_t adc_clock = (sys_get_cpu_clock() / 8);  // We configure ADC clock = CPU/8
   12148:	08c4      	lsrs	r4, r0, #3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:61
    lpc_pconp(pconp_adc, true);
   1214a:	200c      	movs	r0, #12
   1214c:	f7fe f97c 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:62
    lpc_pclk(pclk_adc, clkdiv_8);
   12150:	2103      	movs	r1, #3
   12152:	200c      	movs	r0, #12
   12154:	f7fe f992 	bl	1047c <lpc_pclk>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   12158:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   1215c:	4a10      	ldr	r2, [pc, #64]	; (121a0 <adc0_init+0x60>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   1215e:	4911      	ldr	r1, [pc, #68]	; (121a4 <adc0_init+0x64>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:63
    LPC_ADC->ADCR = enable_adc_bitmask;
   12160:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:66
    for(i=2; i < 255; i+=2) {
   12162:	2302      	movs	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:67
        if( (adc_clock / i) < max_adc_clock) {
   12164:	fbb4 f0f3 	udiv	r0, r4, r3
   12168:	4288      	cmp	r0, r1
   1216a:	d814      	bhi.n	12196 <adc0_init+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:68
            LPC_ADC->ADCR |= (i << 8);
   1216c:	6811      	ldr	r1, [r2, #0]
   1216e:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   12172:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   12174:	2001      	movs	r0, #1
   12176:	f7fe fedf 	bl	10f38 <xQueueCreateMutex>
   1217a:	4b0b      	ldr	r3, [pc, #44]	; (121a8 <adc0_init+0x68>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   1217c:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:73
    g_adc_mutex = xSemaphoreCreateMutex();
   1217e:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:74
    g_adc_result_queue = xQueueCreate(1, sizeof(uint16_t));
   12180:	2102      	movs	r1, #2
   12182:	2001      	movs	r0, #1
   12184:	f7fe fe3c 	bl	10e00 <xQueueGenericCreate>
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   12188:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
adc0_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:74
   1218c:	4b07      	ldr	r3, [pc, #28]	; (121ac <adc0_init+0x6c>)
   1218e:	6018      	str	r0, [r3, #0]
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   12190:	4b07      	ldr	r3, [pc, #28]	; (121b0 <adc0_init+0x70>)
   12192:	601a      	str	r2, [r3, #0]
   12194:	bd10      	pop	{r4, pc}
adc0_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:66 (discriminator 2)
    for(i=2; i < 255; i+=2) {
   12196:	3302      	adds	r3, #2
   12198:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   1219c:	d1e2      	bne.n	12164 <adc0_init+0x24>
   1219e:	e7e9      	b.n	12174 <adc0_init+0x34>
   121a0:	40034000 	.word	0x40034000
   121a4:	00c65d3f 	.word	0x00c65d3f
   121a8:	2007c47c 	.word	0x2007c47c
   121ac:	2007c480 	.word	0x2007c480
   121b0:	e000e100 	.word	0xe000e100

000121b4 <adc0_get_reading>:
adc0_get_reading():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:98
}

uint16_t adc0_get_reading(uint8_t channel_num)
{
   121b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   121b6:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:102
    const uint8_t max_channels = 8;

    if (channel_num >= max_channels) {
   121b8:	2807      	cmp	r0, #7
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:98
{
   121ba:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:99
    uint16_t result = 0;
   121bc:	f8ad 4006 	strh.w	r4, [sp, #6]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:102
    if (channel_num >= max_channels) {
   121c0:	d81d      	bhi.n	121fe <adc0_get_reading+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:105
        result = 0;
    }
    else if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   121c2:	f7ff fbaf 	bl	11924 <xTaskGetSchedulerState>
   121c6:	2802      	cmp	r0, #2
   121c8:	4e15      	ldr	r6, [pc, #84]	; (12220 <adc0_get_reading+0x6c>)
   121ca:	d11c      	bne.n	12206 <adc0_get_reading+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:107
    {
        xSemaphoreTake(g_adc_mutex, portMAX_DELAY);
   121cc:	4f15      	ldr	r7, [pc, #84]	; (12224 <adc0_get_reading+0x70>)
   121ce:	4623      	mov	r3, r4
   121d0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   121d4:	4621      	mov	r1, r4
   121d6:	6838      	ldr	r0, [r7, #0]
   121d8:	f7fe ff34 	bl	11044 <xQueueGenericReceive>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:109
        {
            adc0_start_conversion(channel_num);
   121dc:	4628      	mov	r0, r5
   121de:	f7ff ff79 	bl	120d4 <adc0_start_conversion>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:110
            xQueueReceive(g_adc_result_queue, &result, portMAX_DELAY);
   121e2:	4623      	mov	r3, r4
   121e4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   121e8:	f10d 0106 	add.w	r1, sp, #6
   121ec:	6830      	ldr	r0, [r6, #0]
   121ee:	f7fe ff29 	bl	11044 <xQueueGenericReceive>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:112
        }
        xSemaphoreGive(g_adc_mutex);
   121f2:	4623      	mov	r3, r4
   121f4:	4622      	mov	r2, r4
   121f6:	4621      	mov	r1, r4
   121f8:	6838      	ldr	r0, [r7, #0]
   121fa:	f7fe fe1b 	bl	10e34 <xQueueGenericSend>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:124
            ;
        }
    }

    return result;
}
   121fe:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   12202:	b003      	add	sp, #12
   12204:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:116
        adc0_start_conversion(channel_num);
   12206:	4628      	mov	r0, r5
   12208:	f7ff ff64 	bl	120d4 <adc0_start_conversion>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/adc.c:117 (discriminator 1)
        while(! xQueueReceive(g_adc_result_queue, &result, 0))
   1220c:	2300      	movs	r3, #0
   1220e:	f10d 0106 	add.w	r1, sp, #6
   12212:	461a      	mov	r2, r3
   12214:	6830      	ldr	r0, [r6, #0]
   12216:	f7fe ff15 	bl	11044 <xQueueGenericReceive>
   1221a:	2800      	cmp	r0, #0
   1221c:	d0f6      	beq.n	1220c <adc0_get_reading+0x58>
   1221e:	e7ee      	b.n	121fe <adc0_get_reading+0x4a>
   12220:	2007c480 	.word	0x2007c480
   12224:	2007c47c 	.word	0x2007c47c

00012228 <CAN_tx_now>:
CAN_tx_now():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:165
        go_cmd_tx1 = 0x21,
        go_cmd_tx2 = 0x41,
        go_cmd_tx3 = 0x81,
    };

    LPC_CAN_TypeDef *pCAN = struct_ptr->pCanRegs;
   12228:	6802      	ldr	r2, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:156
{
   1222a:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:166
    const uint32_t can_sr_reg = pCAN->SR;
   1222c:	69d3      	ldr	r3, [r2, #28]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:170
    volatile can_msg_t *pHwMsgRegs = NULL;
    uint32_t go_cmd = go_cmd_invalid;

    if (can_sr_reg & tx1_avail){
   1222e:	f013 0304 	ands.w	r3, r3, #4
   12232:	d010      	beq.n	12256 <CAN_tx_now+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:199
    // Higher number will be sent later, but how do we handle the rollover from 255 to 0 because then the
    // newly written 0 will be sent, and buffer that contains higher TPM can starve.
    const uint8_t tpm = struct_ptr->txMsgCount;
    msg_ptr->frame |= tpm;
#endif
    *pHwMsgRegs = *msg_ptr;
   12234:	f102 0330 	add.w	r3, r2, #48	; 0x30
   12238:	f101 0410 	add.w	r4, r1, #16
   1223c:	f851 5b04 	ldr.w	r5, [r1], #4
   12240:	42a1      	cmp	r1, r4
   12242:	f843 5b04 	str.w	r5, [r3], #4
   12246:	d1f9      	bne.n	1223c <CAN_tx_now+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:200
    struct_ptr->txMsgCount++;
   12248:	8a43      	ldrh	r3, [r0, #18]
   1224a:	3301      	adds	r3, #1
   1224c:	8243      	strh	r3, [r0, #18]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:208
    go_cmd &= (0xF0);
    go_cmd = (1 << 4); /* Self reception */
    #endif

    /* Send the message! */
    pCAN->CMR = go_cmd;
   1224e:	2321      	movs	r3, #33	; 0x21
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   12250:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:208
    pCAN->CMR = go_cmd;
   12252:	6053      	str	r3, [r2, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:209
    return true;
   12254:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:186
        return false;
   12256:	4618      	mov	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:210
}
   12258:	bd30      	pop	{r4, r5, pc}
   1225a:	Address 0x000000000001225a is out of bounds.


0001225c <CAN_handle_isr>:
CAN_handle_isr():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:213

static void CAN_handle_isr(const can_t can)
{
   1225c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:215
    can_struct_t *pStruct = CAN_STRUCT_PTR(can);
    LPC_CAN_TypeDef *pCAN = pStruct->pCanRegs;
   12260:	4c26      	ldr	r4, [pc, #152]	; (122fc <CAN_handle_isr+0xa0>)
   12262:	0145      	lsls	r5, r0, #5
   12264:	f854 8005 	ldr.w	r8, [r4, r5]
   12268:	1967      	adds	r7, r4, r5
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:217
    const uint32_t rbs = (1 << 0);
    const uint32_t ibits = pCAN->ICR;
   1226a:	f8d8 600c 	ldr.w	r6, [r8, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:222
    UBaseType_t count;
    can_msg_t msg;

    /* Handle the received message */
    if ((ibits & intr_rx) | (pCAN->GSR & rbs)) {
   1226e:	f8d8 3008 	ldr.w	r3, [r8, #8]
   12272:	4333      	orrs	r3, r6
   12274:	07d9      	lsls	r1, r3, #31
   12276:	d516      	bpl.n	122a6 <CAN_handle_isr+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   12278:	6878      	ldr	r0, [r7, #4]
   1227a:	f7fe ffba 	bl	111f2 <uxQueueMessagesWaitingFromISR>
   1227e:	89fb      	ldrh	r3, [r7, #14]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:228
            pStruct->rxQWatermark = count;
        }

        can_msg_t *pHwMsgRegs = (can_msg_t*) &(pCAN->RFS);
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   12280:	f108 0120 	add.w	r1, r8, #32
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:223
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->rxQ)) > pStruct->rxQWatermark) {
   12284:	4298      	cmp	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   12286:	f04f 0300 	mov.w	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:224
            pStruct->rxQWatermark = count;
   1228a:	bf88      	it	hi
   1228c:	81f8      	strhhi	r0, [r7, #14]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:228
        if (xQueueSendFromISR(pStruct->rxQ, pHwMsgRegs, NULL)) {
   1228e:	1967      	adds	r7, r4, r5
   12290:	461a      	mov	r2, r3
   12292:	6878      	ldr	r0, [r7, #4]
   12294:	f7fe fe62 	bl	10f5c <xQueueGenericSendFromISR>
   12298:	b358      	cbz	r0, 122f2 <CAN_handle_isr+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:229
            pStruct->rxMsgCount++;
   1229a:	8abb      	ldrh	r3, [r7, #20]
   1229c:	3301      	adds	r3, #1
   1229e:	82bb      	strh	r3, [r7, #20]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:234
        }
        else {
            pStruct->droppedRxMsgs++;
        }
        pCAN->CMR = 0x04; // Release the receive buffer, no need to bitmask
   122a0:	2304      	movs	r3, #4
   122a2:	f8c8 3004 	str.w	r3, [r8, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:238
    }

    /* A transmit finished, send any queued message(s) */
    if (ibits & intr_all_tx) {
   122a6:	f240 6302 	movw	r3, #1538	; 0x602
   122aa:	421e      	tst	r6, r3
   122ac:	d012      	beq.n	122d4 <CAN_handle_isr+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   122ae:	1967      	adds	r7, r4, r5
   122b0:	68b8      	ldr	r0, [r7, #8]
   122b2:	f7fe ff9e 	bl	111f2 <uxQueueMessagesWaitingFromISR>
   122b6:	8a3b      	ldrh	r3, [r7, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:242
            pStruct->txQWatermark = count;
        }
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   122b8:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:239
        if( (count = uxQueueMessagesWaitingFromISR(pStruct->txQ)) > pStruct->txQWatermark) {
   122ba:	4298      	cmp	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:240
            pStruct->txQWatermark = count;
   122bc:	bf88      	it	hi
   122be:	8238      	strhhi	r0, [r7, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:242
        if (xQueueReceiveFromISR(pStruct->txQ, &msg, NULL)) {
   122c0:	1967      	adds	r7, r4, r5
   122c2:	4669      	mov	r1, sp
   122c4:	68b8      	ldr	r0, [r7, #8]
   122c6:	f7fe ff57 	bl	11178 <xQueueReceiveFromISR>
   122ca:	b118      	cbz	r0, 122d4 <CAN_handle_isr+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:243
            CAN_tx_now(pStruct, &msg);
   122cc:	4669      	mov	r1, sp
   122ce:	4638      	mov	r0, r7
   122d0:	f7ff ffaa 	bl	12228 <CAN_tx_now>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:250
    }

    /* We only enable interrupt when a valid callback exists, so no need
     * to check for the callback function being NULL
     */
    if (ibits & g_can_bus_err_intr) {
   122d4:	06b2      	lsls	r2, r6, #26
   122d6:	d503      	bpl.n	122e0 <CAN_handle_isr+0x84>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:251
        pStruct->bus_error(ibits);
   122d8:	1963      	adds	r3, r4, r5
   122da:	699b      	ldr	r3, [r3, #24]
   122dc:	4630      	mov	r0, r6
   122de:	4798      	blx	r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:253
    }
    if (ibits & intr_ovrn) {
   122e0:	0733      	lsls	r3, r6, #28
   122e2:	d503      	bpl.n	122ec <CAN_handle_isr+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:254
        pStruct->data_overrun(ibits);
   122e4:	442c      	add	r4, r5
   122e6:	69e3      	ldr	r3, [r4, #28]
   122e8:	4630      	mov	r0, r6
   122ea:	4798      	blx	r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:256
    }
}
   122ec:	b004      	add	sp, #16
   122ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:232
            pStruct->droppedRxMsgs++;
   122f2:	89bb      	ldrh	r3, [r7, #12]
   122f4:	3301      	adds	r3, #1
   122f6:	81bb      	strh	r3, [r7, #12]
   122f8:	e7d2      	b.n	122a0 <CAN_handle_isr+0x44>
   122fa:	bf00      	nop
   122fc:	2007c08c 	.word	0x2007c08c

00012300 <CAN_IRQHandler>:
CAN_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:268
#ifdef __cplusplus
extern "C" {
#endif
void CAN_IRQHandler(void)
{
    const uint32_t pconp = LPC_SC->PCONP;
   12300:	4b08      	ldr	r3, [pc, #32]	; (12324 <CAN_IRQHandler+0x24>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:267
{
   12302:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:268
    const uint32_t pconp = LPC_SC->PCONP;
   12304:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:271

    /* Reading registers without CAN powered up will cause DABORT exception */
    if (pconp & can1_pconp_mask) {
   12308:	04a2      	lsls	r2, r4, #18
   1230a:	d502      	bpl.n	12312 <CAN_IRQHandler+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:272
        CAN_handle_isr(can1);
   1230c:	2000      	movs	r0, #0
   1230e:	f7ff ffa5 	bl	1225c <CAN_handle_isr>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:275
    }

    if (pconp & can2_pconp_mask) {
   12312:	0463      	lsls	r3, r4, #17
   12314:	d504      	bpl.n	12320 <CAN_IRQHandler+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:278
        CAN_handle_isr(can2);
    }
}
   12316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/can.c:276
        CAN_handle_isr(can2);
   1231a:	2001      	movs	r0, #1
   1231c:	f7ff bf9e 	b.w	1225c <CAN_handle_isr>
   12320:	bd10      	pop	{r4, pc}
   12322:	bf00      	nop
   12324:	400fc000 	.word	0x400fc000

00012328 <handle_eint_list>:
handle_eint_list():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:55
 * @note isr_bits_ptr are cleared if the callback was made.  If the bits are not cleared then
 *       the interrupt was set, and no callback was found.  This shouldn't happen though :)
 */
static inline void handle_eint_list(uint32_t *isr_bits_ptr, volatile uint32_t *int_clr_ptr,
                                    eint3_entry_t *list_head_ptr)
{
   12328:	b570      	push	{r4, r5, r6, lr}
   1232a:	4605      	mov	r5, r0
   1232c:	460e      	mov	r6, r1
   1232e:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:59
    eint3_entry_t *e = list_head_ptr;

    /* Loop through our list to find which pin triggered this interrupt */
    while (e && *isr_bits_ptr) {
   12330:	b10c      	cbz	r4, 12336 <handle_eint_list+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:59 (discriminator 1)
   12332:	682b      	ldr	r3, [r5, #0]
   12334:	b903      	cbnz	r3, 12338 <handle_eint_list+0x10>
   12336:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:61
        /* If we find the pin, make the callback and clear the interrupt source*/
        if (e->pin_mask & *isr_bits_ptr) {
   12338:	6822      	ldr	r2, [r4, #0]
   1233a:	4213      	tst	r3, r2
   1233c:	d008      	beq.n	12350 <handle_eint_list+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:62
            (e->callback)();
   1233e:	6863      	ldr	r3, [r4, #4]
   12340:	4798      	blx	r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:63
            *isr_bits_ptr &= ~(e->pin_mask);
   12342:	6822      	ldr	r2, [r4, #0]
   12344:	682b      	ldr	r3, [r5, #0]
   12346:	ea23 0302 	bic.w	r3, r3, r2
   1234a:	602b      	str	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:64
            *int_clr_ptr = e->pin_mask;
   1234c:	6823      	ldr	r3, [r4, #0]
   1234e:	6033      	str	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:66
        }
        e = e->next;
   12350:	68a4      	ldr	r4, [r4, #8]
   12352:	e7ed      	b.n	12330 <handle_eint_list+0x8>

00012354 <eint3_enable.isra.0>:
eint3_enable():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:114
 * @param [in] type           The type of the interrupt (rising or falling)
 * @param [in] func           The callback function.
 * @param [in] list_head_ptr  The pointer of the linked list to add the interrupt configuration to.
 * @param [in] int_en_reg_ptr The pointer of CPU register to enable the interrupt
 */
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   12354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:117
                         eint3_entry_t **list_head_ptr, volatile uint32_t *int_en_reg_ptr)
{
    const uint32_t pin_mask = (UINT32_C(1) << pin_num);
   12356:	2401      	movs	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:120
    eint3_entry_t *e = NULL;

    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   12358:	4084      	lsls	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:114
static void eint3_enable(uint8_t pin_num, eint_intr_t type, void_func_t func,
   1235a:	460f      	mov	r7, r1
   1235c:	4616      	mov	r6, r2
   1235e:	461d      	mov	r5, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:120
    if (0 != pin_mask && NULL != func && NULL != (e = malloc(sizeof(*e))) )
   12360:	d010      	beq.n	12384 <eint3_enable.isra.0+0x30>
   12362:	b179      	cbz	r1, 12384 <eint3_enable.isra.0+0x30>
   12364:	200c      	movs	r0, #12
   12366:	f007 fc6b 	bl	19c40 <malloc>
   1236a:	b158      	cbz	r0, 12384 <eint3_enable.isra.0+0x30>
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1236c:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
eint3_enable():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:125
    {
        /* Insert new entry at the head of the list */
        e->callback = func;
        e->pin_mask = pin_mask;
        e->next = *list_head_ptr;
   12370:	6833      	ldr	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:124
        e->pin_mask = pin_mask;
   12372:	e880 0090 	stmia.w	r0, {r4, r7}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:125
        e->next = *list_head_ptr;
   12376:	6083      	str	r3, [r0, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:129
        *list_head_ptr = e;

        /* Enable the interrupt */
        *int_en_reg_ptr |= e->pin_mask;
   12378:	682b      	ldr	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:126
        *list_head_ptr = e;
   1237a:	6030      	str	r0, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:129
        *int_en_reg_ptr |= e->pin_mask;
   1237c:	431c      	orrs	r4, r3
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   1237e:	4b02      	ldr	r3, [pc, #8]	; (12388 <eint3_enable.isra.0+0x34>)
eint3_enable():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:129
   12380:	602c      	str	r4, [r5, #0]
NVIC_EnableIRQ():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   12382:	601a      	str	r2, [r3, #0]
   12384:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12386:	bf00      	nop
   12388:	e000e100 	.word	0xe000e100

0001238c <EINT3_IRQHandler>:
EINT3_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:75
{
   1238c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   1238e:	4c18      	ldr	r4, [pc, #96]	; (123f0 <EINT3_IRQHandler+0x64>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   12390:	4918      	ldr	r1, [pc, #96]	; (123f4 <EINT3_IRQHandler+0x68>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   12392:	6863      	ldr	r3, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   12394:	4668      	mov	r0, sp
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:77
    uint32_t p0_rising  = LPC_GPIOINT->IO0IntStatR;
   12396:	9300      	str	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:78
    uint32_t p0_falling = LPC_GPIOINT->IO0IntStatF;
   12398:	68a3      	ldr	r3, [r4, #8]
   1239a:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:79
    uint32_t p2_rising  = LPC_GPIOINT->IO2IntStatR;
   1239c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1239e:	9302      	str	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:80
    uint32_t p2_falling = LPC_GPIOINT->IO2IntStatF;
   123a0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   123a2:	9303      	str	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:85
    handle_eint_list(&p0_rising,  &(LPC_GPIOINT->IO0IntClr), gp_port0_rising_list);
   123a4:	4b14      	ldr	r3, [pc, #80]	; (123f8 <EINT3_IRQHandler+0x6c>)
   123a6:	681a      	ldr	r2, [r3, #0]
   123a8:	f7ff ffbe 	bl	12328 <handle_eint_list>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:86
    handle_eint_list(&p0_falling, &(LPC_GPIOINT->IO0IntClr), gp_port0_falling_list);
   123ac:	4b13      	ldr	r3, [pc, #76]	; (123fc <EINT3_IRQHandler+0x70>)
   123ae:	4911      	ldr	r1, [pc, #68]	; (123f4 <EINT3_IRQHandler+0x68>)
   123b0:	681a      	ldr	r2, [r3, #0]
   123b2:	a801      	add	r0, sp, #4
   123b4:	f7ff ffb8 	bl	12328 <handle_eint_list>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:87
    handle_eint_list(&p2_rising,  &(LPC_GPIOINT->IO2IntClr), gp_port2_rising_list);
   123b8:	4b11      	ldr	r3, [pc, #68]	; (12400 <EINT3_IRQHandler+0x74>)
   123ba:	4912      	ldr	r1, [pc, #72]	; (12404 <EINT3_IRQHandler+0x78>)
   123bc:	681a      	ldr	r2, [r3, #0]
   123be:	a802      	add	r0, sp, #8
   123c0:	f7ff ffb2 	bl	12328 <handle_eint_list>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:88
    handle_eint_list(&p2_falling, &(LPC_GPIOINT->IO2IntClr), gp_port2_falling_list);
   123c4:	4b10      	ldr	r3, [pc, #64]	; (12408 <EINT3_IRQHandler+0x7c>)
   123c6:	490f      	ldr	r1, [pc, #60]	; (12404 <EINT3_IRQHandler+0x78>)
   123c8:	681a      	ldr	r2, [r3, #0]
   123ca:	a803      	add	r0, sp, #12
   123cc:	f7ff ffac 	bl	12328 <handle_eint_list>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:91
    if (p0_rising || p0_falling) {
   123d0:	9b00      	ldr	r3, [sp, #0]
   123d2:	b90b      	cbnz	r3, 123d8 <EINT3_IRQHandler+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:91 (discriminator 1)
   123d4:	9b01      	ldr	r3, [sp, #4]
   123d6:	b113      	cbz	r3, 123de <EINT3_IRQHandler+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:92
        LPC_GPIOINT->IO0IntClr = 0xFFFFFFFF;
   123d8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   123dc:	60e3      	str	r3, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:94
    if (p2_rising || p2_falling) {
   123de:	9b02      	ldr	r3, [sp, #8]
   123e0:	b90b      	cbnz	r3, 123e6 <EINT3_IRQHandler+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:94 (discriminator 1)
   123e2:	9b03      	ldr	r3, [sp, #12]
   123e4:	b113      	cbz	r3, 123ec <EINT3_IRQHandler+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:95
        LPC_GPIOINT->IO2IntClr = 0xFFFFFFFF;
   123e6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   123ea:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:97
}
   123ec:	b004      	add	sp, #16
   123ee:	bd10      	pop	{r4, pc}
   123f0:	40028080 	.word	0x40028080
   123f4:	4002808c 	.word	0x4002808c
   123f8:	2007c488 	.word	0x2007c488
   123fc:	2007c484 	.word	0x2007c484
   12400:	2007c490 	.word	0x2007c490
   12404:	400280ac 	.word	0x400280ac
   12408:	2007c48c 	.word	0x2007c48c

0001240c <eint3_enable_port0>:
eint3_enable_port0():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:138
        NVIC_EnableIRQ(EINT3_IRQn);
    }
}

void eint3_enable_port0(uint8_t pin_num, eint_intr_t type, void_func_t func)
{
   1240c:	b410      	push	{r4}
   1240e:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   12410:	2900      	cmp	r1, #0
   12412:	4a06      	ldr	r2, [pc, #24]	; (1242c <eint3_enable_port0+0x20>)
   12414:	4906      	ldr	r1, [pc, #24]	; (12430 <eint3_enable_port0+0x24>)
   12416:	4b07      	ldr	r3, [pc, #28]	; (12434 <eint3_enable_port0+0x28>)
   12418:	bf18      	it	ne
   1241a:	4613      	movne	r3, r2
   1241c:	4a06      	ldr	r2, [pc, #24]	; (12438 <eint3_enable_port0+0x2c>)
   1241e:	bf18      	it	ne
   12420:	460a      	movne	r2, r1
   12422:	4621      	mov	r1, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:142
                 (eint_rising_edge == type) ? &gp_port0_rising_list : &gp_port0_falling_list,
                 (eint_rising_edge == type) ? &(LPC_GPIOINT->IO0IntEnR) : &(LPC_GPIOINT->IO0IntEnF));
}
   12424:	bc10      	pop	{r4}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/eint.c:139
    eint3_enable(pin_num, type, func,
   12426:	f7ff bf95 	b.w	12354 <eint3_enable.isra.0>
   1242a:	bf00      	nop
   1242c:	40028094 	.word	0x40028094
   12430:	2007c484 	.word	0x2007c484
   12434:	40028090 	.word	0x40028090
   12438:	2007c488 	.word	0x2007c488

0001243c <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:41
}



bool I2C2::init(unsigned int speedInKhz)
{
   1243c:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:49
     * means that they are pulled high, otherwise there may be a short circuit.
     *
     * I2C2 is on P0.10, and P0.11
     */
    const uint32_t i2c_pin_mask = ( (1<<10) | (1<<11) );
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   1243e:	4b18      	ldr	r3, [pc, #96]	; (124a0 <I2C2::init(unsigned int)+0x64>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   12440:	460e      	mov	r6, r1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   12442:	695c      	ldr	r4, [r3, #20]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:51

    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   12444:	4b17      	ldr	r3, [pc, #92]	; (124a4 <I2C2::init(unsigned int)+0x68>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:41
{
   12446:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   12448:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;

    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL

    lpc_pclk(pclk_i2c2, clkdiv_8);
   1244a:	201a      	movs	r0, #26
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:51
    LPC_PINCON->PINMODE0 &= ~(0xF << 20); // Both pins with Pull-Up Enabled
   1244c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   12450:	641a      	str	r2, [r3, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   12452:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:49
    const bool i2c_wires_are_pulled_high = (i2c_pin_mask == (LPC_GPIO0->FIOPIN & i2c_pin_mask) );
   12454:	f404 6440 	and.w	r4, r4, #3072	; 0xc00
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:52
    LPC_PINCON->PINMODE0 |=  (0xA << 20); // Disable both pull-up and pull-down
   12458:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   1245c:	641a      	str	r2, [r3, #64]	; 0x40
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:55
    LPC_PINCON->PINMODE_OD0 |= i2c_pin_mask;
   1245e:	6e99      	ldr	r1, [r3, #104]	; 0x68
   12460:	f441 6140 	orr.w	r1, r1, #3072	; 0xc00
   12464:	6699      	str	r1, [r3, #104]	; 0x68
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:57
    LPC_PINCON->PINSEL0 &= ~(0xF << 20);  // Clear
   12466:	6819      	ldr	r1, [r3, #0]
   12468:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
   1246c:	6019      	str	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:58
    LPC_PINCON->PINSEL0 |=  (0xA << 20);  // Enable I2C Pins: SDA, SCL
   1246e:	6819      	ldr	r1, [r3, #0]
   12470:	f441 0120 	orr.w	r1, r1, #10485760	; 0xa00000
   12474:	6019      	str	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:60
    lpc_pclk(pclk_i2c2, clkdiv_8);
   12476:	2103      	movs	r1, #3
   12478:	f7fe f800 	bl	1047c <lpc_pclk>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:61
    const uint32_t pclk = sys_get_cpu_clock() / 8;
   1247c:	f7fe f9da 	bl	10834 <sys_get_cpu_clock>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:69
     * I2C wires should be pulled high for normal operation, so if they are, initialize I2C
     * otherwise disable operations on I2C since I2C has a likely hardware BUS fault such as:
     *  - I2C SDA/SCL with no pull-up
     *  - I2C SDA/SCL shorted to ground
     */
    if (i2c_wires_are_pulled_high) {
   12480:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
   12484:	d106      	bne.n	12494 <I2C2::init(unsigned int)+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   12486:	4632      	mov	r2, r6
   12488:	08c1      	lsrs	r1, r0, #3
   1248a:	4628      	mov	r0, r5
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:76
    }
    else {
        disableOperation();
        return false;
    }
}
   1248c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:70
        return I2C_Base::init(pclk, speedInKhz);
   12490:	f7ff bc24 	b.w	11cdc <I2C_Base::init(unsigned long, unsigned long)>
_ZN8I2C_Base16disableOperationEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
        /**
         * Disables I2C operation
         * This can be used to disable all I2C operations in case of severe I2C Bus Failure
         * @warning Once disabled, I2C cannot be enabled again
         */
        void disableOperation() { mDisableOperation = true; }
   12494:	2301      	movs	r3, #1
_ZN4I2C24initEj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:76
}
   12496:	2000      	movs	r0, #0
_ZN8I2C_Base16disableOperationEv():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/i2c_base.hpp:139
   12498:	f885 3105 	strb.w	r3, [r5, #261]	; 0x105
_ZN4I2C24initEj():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:76
   1249c:	bd70      	pop	{r4, r5, r6, pc}
   1249e:	bf00      	nop
   124a0:	2009c000 	.word	0x2009c000
   124a4:	4002c000 	.word	0x4002c000

000124a8 <I2C2::I2C2()>:
_ZN4I2C2C2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:83
__attribute__ ((weak)) bool I2C2::initSlave(const uint8_t slaveAddr, uint8_t * buffer, uint32_t buffer_size)
{
    return false;
}

I2C2::I2C2() : I2C_Base((LPC_I2C_TypeDef*) LPC_I2C2_BASE)
   124a8:	b510      	push	{r4, lr}
   124aa:	4604      	mov	r4, r0
   124ac:	4902      	ldr	r1, [pc, #8]	; (124b8 <I2C2::I2C2()+0x10>)
   124ae:	f7ff fbe7 	bl	11c80 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:86
{

}
   124b2:	4620      	mov	r0, r4
   124b4:	bd10      	pop	{r4, pc}
   124b6:	bf00      	nop
   124b8:	400a0000 	.word	0x400a0000

000124bc <I2C2_IRQHandler>:
I2C2_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:33
    {
   124bc:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   124be:	4c08      	ldr	r4, [pc, #32]	; (124e0 <I2C2_IRQHandler+0x24>)
   124c0:	6823      	ldr	r3, [r4, #0]
   124c2:	b93b      	cbnz	r3, 124d4 <I2C2_IRQHandler+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   124c4:	f44f 7094 	mov.w	r0, #296	; 0x128
   124c8:	f004 fea2 	bl	17210 <operator new(unsigned int)>
   124cc:	4605      	mov	r5, r0
   124ce:	f7ff ffeb 	bl	124a8 <I2C2::I2C2()>
   124d2:	6025      	str	r5, [r4, #0]
I2C2_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   124d4:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:35
    }
   124d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/i2c2.cpp:34
        I2C2::getInstance().handleInterrupt();
   124da:	f7ff bce3 	b.w	11ea4 <I2C_Base::handleInterrupt()>
   124de:	bf00      	nop
   124e0:	2007c494 	.word	0x2007c494

000124e4 <RIT_IRQHandler>:
RIT_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_rit.c:29
static void_func_t g_rit_callback = 0; /**< RIT Callback function pointer */


/** RIT Interrupt function (see startup.cpp) */
void RIT_IRQHandler()
{
   124e4:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_rit.c:31
    const uint32_t isr_flag_bitmask = (1 << 0);
    g_rit_callback();
   124e6:	4b04      	ldr	r3, [pc, #16]	; (124f8 <RIT_IRQHandler+0x14>)
   124e8:	681b      	ldr	r3, [r3, #0]
   124ea:	4798      	blx	r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_rit.c:32
    LPC_RIT->RICTRL |= isr_flag_bitmask;
   124ec:	4a03      	ldr	r2, [pc, #12]	; (124fc <RIT_IRQHandler+0x18>)
   124ee:	7a13      	ldrb	r3, [r2, #8]
   124f0:	f043 0301 	orr.w	r3, r3, #1
   124f4:	7213      	strb	r3, [r2, #8]
   124f6:	bd08      	pop	{r3, pc}
   124f8:	2007c498 	.word	0x2007c498
   124fc:	400b0000 	.word	0x400b0000

00012500 <lpc_timer_get_struct>:
lpc_timer_get_struct():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/lpc_timers.h:52

/**
 * @returns the timer structure pointer based on the timer parameter
 */
static inline LPC_TIM_TypeDef* lpc_timer_get_struct(const lpc_timer_t timer)
{
   12500:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   12502:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/lpc_timers.h:53
    const uint32_t timer_mem_bases[] = { LPC_TIM0_BASE, LPC_TIM1_BASE, LPC_TIM2_BASE, LPC_TIM3_BASE };
   12504:	4b05      	ldr	r3, [pc, #20]	; (1251c <lpc_timer_get_struct+0x1c>)
   12506:	f10d 0e10 	add.w	lr, sp, #16
   1250a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1250c:	e90e 000f 	stmdb	lr, {r0, r1, r2, r3}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/lpc_timers.h:54
    return (LPC_TIM_TypeDef*) timer_mem_bases[timer];
   12510:	eb0e 0484 	add.w	r4, lr, r4, lsl #2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/lpc_timers.h:55
}
   12514:	f854 0c10 	ldr.w	r0, [r4, #-16]
   12518:	b004      	add	sp, #16
   1251a:	bd10      	pop	{r4, pc}
   1251c:	0002020c 	.word	0x0002020c

00012520 <lpc_timer_enable>:
lpc_timer_enable():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:25
#include "lpc_sys.h"



void lpc_timer_enable(const lpc_timer_t timer, const uint32_t us_per_tick)
{
   12520:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12522:	460f      	mov	r7, r1
   12524:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   12526:	f7ff ffeb 	bl	12500 <lpc_timer_get_struct>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   1252a:	2317      	movs	r3, #23
   1252c:	2401      	movs	r4, #1
   1252e:	2216      	movs	r2, #22
   12530:	2102      	movs	r1, #2
   12532:	f88d 3003 	strb.w	r3, [sp, #3]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   12536:	f88d 3007 	strb.w	r3, [sp, #7]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:31

    /* Power on the timer, and set the pclk = cpu clock (divide by 1) */
    lpc_pconp(pconp[timer], true);
   1253a:	ab02      	add	r3, sp, #8
   1253c:	441e      	add	r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:27
    const lpc_pconp_t pconp[] = { pconp_timer0, pconp_timer1, pconp_timer2, pconp_timer3 };
   1253e:	f88d 2002 	strb.w	r2, [sp, #2]
   12542:	f88d 1001 	strb.w	r1, [sp, #1]
   12546:	f88d 4000 	strb.w	r4, [sp]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:26
    LPC_TIM_TypeDef *pTimerStruct = lpc_timer_get_struct(timer);
   1254a:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   1254c:	f88d 1005 	strb.w	r1, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   12550:	f816 0c08 	ldrb.w	r0, [r6, #-8]
   12554:	4621      	mov	r1, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:28
    const lpc_pclk_t  pclk[]  = { pclk_timer0,  pclk_timer1,  pclk_timer2,  pclk_timer3  };
   12556:	f88d 2006 	strb.w	r2, [sp, #6]
   1255a:	f88d 4004 	strb.w	r4, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:31
    lpc_pconp(pconp[timer], true);
   1255e:	f7fd ff73 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:32
    lpc_pclk (pclk [timer], clkdiv_1);
   12562:	4621      	mov	r1, r4
   12564:	f816 0c04 	ldrb.w	r0, [r6, #-4]
   12568:	f7fd ff88 	bl	1047c <lpc_pclk>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:35

    /* Enable the timer, and increment on PCLK */
    pTimerStruct->TC = 0;
   1256c:	2300      	movs	r3, #0
   1256e:	60ab      	str	r3, [r5, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:36
    pTimerStruct->TCR = 1;
   12570:	606c      	str	r4, [r5, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:37
    pTimerStruct->CTCR = 0;
   12572:	672b      	str	r3, [r5, #112]	; 0x70
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:40

    /* Set the resolution */
    pTimerStruct->PR = (sys_get_cpu_clock() / (1000*1000) * us_per_tick);
   12574:	f7fe f95e 	bl	10834 <sys_get_cpu_clock>
   12578:	4b03      	ldr	r3, [pc, #12]	; (12588 <lpc_timer_enable+0x68>)
   1257a:	fbb0 f0f3 	udiv	r0, r0, r3
   1257e:	4347      	muls	r7, r0
   12580:	60ef      	str	r7, [r5, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/lpc_timers.c:41
}
   12582:	b003      	add	sp, #12
   12584:	bdf0      	pop	{r4, r5, r6, r7, pc}
   12586:	bf00      	nop
   12588:	000f4240 	.word	0x000f4240

0001258c <rtc_gettime>:
rtc_gettime():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:56
        rtc_settime(&time);
    }
}

rtc_t rtc_gettime (void)
{
   1258c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1258e:	b087      	sub	sp, #28
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:58
    // Read the struct from LPC Memory Map
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   12590:	466c      	mov	r4, sp
   12592:	4d0f      	ldr	r5, [pc, #60]	; (125d0 <rtc_gettime+0x44>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:56
{
   12594:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:58
    rtc_t t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   12596:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   1259a:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:59
    rtc_t t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   1259e:	ae03      	add	r6, sp, #12
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:65

    // Two times read must be the same to make sure we don't read
    // the different registers in the middle of time update.
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
        t2 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   125a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   125a4:	e886 0007 	stmia.w	r6, {r0, r1, r2}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:63
    while (0 != memcmp(&t1, &t2, sizeof(t1))) {
   125a8:	220c      	movs	r2, #12
   125aa:	4631      	mov	r1, r6
   125ac:	4620      	mov	r0, r4
   125ae:	f007 fb77 	bl	19ca0 <memcmp>
   125b2:	b938      	cbnz	r0, 125c4 <rtc_gettime+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:68
    }

    return t1;
   125b4:	cc03      	ldmia	r4!, {r0, r1}
   125b6:	6038      	str	r0, [r7, #0]
   125b8:	6820      	ldr	r0, [r4, #0]
   125ba:	6079      	str	r1, [r7, #4]
   125bc:	60b8      	str	r0, [r7, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:69
}
   125be:	4638      	mov	r0, r7
   125c0:	b007      	add	sp, #28
   125c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:64
        t1 = *(rtc_t*) (&LPC_RTC->CTIME0) ;
   125c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   125c8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   125cc:	e7e8      	b.n	125a0 <rtc_gettime+0x14>
   125ce:	bf00      	nop
   125d0:	40024014 	.word	0x40024014

000125d4 <rtc_settime>:
rtc_settime():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:74

void rtc_settime (const rtc_t *rtc)
{
    /* Disable the RTC first */
    LPC_RTC->CCR = 0;
   125d4:	2200      	movs	r2, #0
   125d6:	4b18      	ldr	r3, [pc, #96]	; (12638 <rtc_settime+0x64>)
   125d8:	721a      	strb	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:80

    /*
     * Update RTC registers :
     * Note: Cannot write to consolidated registers since they are read-only
     */
    LPC_RTC->SEC   = rtc->sec;
   125da:	7802      	ldrb	r2, [r0, #0]
   125dc:	f3c2 0205 	ubfx	r2, r2, #0, #6
   125e0:	f883 2020 	strb.w	r2, [r3, #32]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:81
	LPC_RTC->MIN   = rtc->min;
   125e4:	7842      	ldrb	r2, [r0, #1]
   125e6:	f3c2 0205 	ubfx	r2, r2, #0, #6
   125ea:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:82
	LPC_RTC->HOUR  = rtc->hour;
   125ee:	7882      	ldrb	r2, [r0, #2]
   125f0:	f3c2 0204 	ubfx	r2, r2, #0, #5
   125f4:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:83
	LPC_RTC->DOW   = rtc->dow;
   125f8:	78c2      	ldrb	r2, [r0, #3]
   125fa:	f3c2 0202 	ubfx	r2, r2, #0, #3
   125fe:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:84
	LPC_RTC->DOM   = rtc->day;
   12602:	7902      	ldrb	r2, [r0, #4]
   12604:	f3c2 0204 	ubfx	r2, r2, #0, #5
   12608:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:85
	LPC_RTC->MONTH = rtc->month;
   1260c:	7942      	ldrb	r2, [r0, #5]
   1260e:	f3c2 0203 	ubfx	r2, r2, #0, #4
   12612:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   12616:	79c1      	ldrb	r1, [r0, #7]
   12618:	7982      	ldrb	r2, [r0, #6]
   1261a:	f001 010f 	and.w	r1, r1, #15
   1261e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   12622:	7a41      	ldrb	r1, [r0, #9]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:86
	LPC_RTC->YEAR  = rtc->year;
   12624:	879a      	strh	r2, [r3, #60]	; 0x3c
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:87
	LPC_RTC->DOY   = rtc->doy;
   12626:	7a02      	ldrb	r2, [r0, #8]
   12628:	f001 010f 	and.w	r1, r1, #15
   1262c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   12630:	869a      	strh	r2, [r3, #52]	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:90

	/* Restart RTC */
	LPC_RTC->CCR = 1;
   12632:	2201      	movs	r2, #1
   12634:	721a      	strb	r2, [r3, #8]
   12636:	4770      	bx	lr
   12638:	40024000 	.word	0x40024000

0001263c <rtc_init>:
rtc_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:30
{
   1263c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:31
    lpc_pconp(pconp_rtc, true);
   1263e:	2101      	movs	r1, #1
   12640:	2009      	movs	r0, #9
   12642:	f7fd ff01 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   12646:	2201      	movs	r2, #1
   12648:	4b2f      	ldr	r3, [pc, #188]	; (12708 <rtc_init+0xcc>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   1264a:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:32
    LPC_RTC->CCR = 1;           // Enable RTC
   1264c:	721a      	strb	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:35
    rtc_t time = rtc_gettime();
   1264e:	f7ff ff9d 	bl	1258c <rtc_gettime>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:38
    if(time.year < years[0] || time.year > years[1] ||
   12652:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   12656:	f603 0326 	addw	r3, r3, #2086	; 0x826
   1265a:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1265e:	2b0f      	cmp	r3, #15
   12660:	d81e      	bhi.n	126a0 <rtc_init+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   12662:	f89d 3005 	ldrb.w	r3, [sp, #5]
   12666:	f003 033f 	and.w	r3, r3, #63	; 0x3f
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:38 (discriminator 2)
    if(time.year < years[0] || time.year > years[1] ||
   1266a:	2b3b      	cmp	r3, #59	; 0x3b
   1266c:	dc18      	bgt.n	126a0 <rtc_init+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:39
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   1266e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   12672:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   12676:	2b3b      	cmp	r3, #59	; 0x3b
   12678:	dc12      	bgt.n	126a0 <rtc_init+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 1)
   1267a:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1267e:	f003 031f 	and.w	r3, r3, #31
   12682:	2b17      	cmp	r3, #23
   12684:	dc0c      	bgt.n	126a0 <rtc_init+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:40 (discriminator 2)
       time.doy > 365 || time.month > 12 || time.day > 31)
   12686:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   1268a:	f3c3 030b 	ubfx	r3, r3, #0, #12
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:39 (discriminator 2)
       time.min >= 60 || time.sec >= 60 || time.hour >= 24 ||
   1268e:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   12692:	da05      	bge.n	126a0 <rtc_init+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:40
       time.doy > 365 || time.month > 12 || time.day > 31)
   12694:	f89d 3009 	ldrb.w	r3, [sp, #9]
   12698:	f003 030f 	and.w	r3, r3, #15
   1269c:	2b0c      	cmp	r3, #12
   1269e:	dd2f      	ble.n	12700 <rtc_init+0xc4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   126a0:	2201      	movs	r2, #1
   126a2:	f89d 3008 	ldrb.w	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   126a6:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:42
        time.day = 1;
   126a8:	f362 0304 	bfi	r3, r2, #0, #5
   126ac:	f88d 3008 	strb.w	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   126b0:	f89d 3009 	ldrb.w	r3, [sp, #9]
   126b4:	f362 0303 	bfi	r3, r2, #0, #4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   126b8:	f240 72da 	movw	r2, #2010	; 0x7da
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:43
        time.month = 1;
   126bc:	f88d 3009 	strb.w	r3, [sp, #9]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:44
        time.year = years[0];
   126c0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   126c4:	f362 030b 	bfi	r3, r2, #0, #12
   126c8:	f8ad 300a 	strh.w	r3, [sp, #10]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:46
        time.dow  = 0;
   126cc:	f89d 3007 	ldrb.w	r3, [sp, #7]
   126d0:	f36f 0302 	bfc	r3, #0, #3
   126d4:	f88d 3007 	strb.w	r3, [sp, #7]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:47
        time.hour = 0;
   126d8:	f89d 3006 	ldrb.w	r3, [sp, #6]
   126dc:	f36f 0304 	bfc	r3, #0, #5
   126e0:	f88d 3006 	strb.w	r3, [sp, #6]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:48
        time.min  = 0;
   126e4:	f89d 3005 	ldrb.w	r3, [sp, #5]
   126e8:	f36f 0305 	bfc	r3, #0, #6
   126ec:	f88d 3005 	strb.w	r3, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:49
        time.sec  = 0;
   126f0:	f89d 3004 	ldrb.w	r3, [sp, #4]
   126f4:	f36f 0305 	bfc	r3, #0, #6
   126f8:	f88d 3004 	strb.w	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:51
        rtc_settime(&time);
   126fc:	f7ff ff6a 	bl	125d4 <rtc_settime>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/rtc.c:53
}
   12700:	b005      	add	sp, #20
   12702:	f85d fb04 	ldr.w	pc, [sp], #4
   12706:	bf00      	nop
   12708:	40024000 	.word	0x40024000

0001270c <ssp1_dma_init>:
ssp1_dma_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:47
    err_spiFifo = 3
};


void ssp1_dma_init()
{
   1270c:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:49
    // Power up and enable GPDMA
    lpc_pconp(pconp_gpdma, true);
   1270e:	2101      	movs	r1, #1
   12710:	201d      	movs	r0, #29
   12712:	f7fd fe99 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:50
    LPC_GPDMA->DMACConfig = 1;
   12716:	2201      	movs	r2, #1
   12718:	4b02      	ldr	r3, [pc, #8]	; (12724 <ssp1_dma_init+0x18>)
   1271a:	631a      	str	r2, [r3, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:51 (discriminator 1)
    while (!(LPC_GPDMA->DMACConfig & 1));
   1271c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   1271e:	07d2      	lsls	r2, r2, #31
   12720:	d5fc      	bpl.n	1271c <ssp1_dma_init+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:52
}
   12722:	bd08      	pop	{r3, pc}
   12724:	50004000 	.word	0x50004000

00012728 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:58

unsigned ssp1_dma_transfer_block(unsigned char* pBuffer, uint32_t num_bytes, char is_write_op)
{
    uint8_t errorMask = 0;

    uint32_t dummyBuffer = 0xffffffff;
   12728:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:55
{
   1272c:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:65
                                          (LPC_GPDMACH0_BASE + SPI_DMA_RX_NUM*0x20);
    LPC_GPDMACH_TypeDef *pDmaTxChannel = (LPC_GPDMACH_TypeDef *)
                                          (LPC_GPDMACH0_BASE + SPI_DMA_TX_NUM*0x20);

    // DMA is limited to 12-bit transfer size
    if(num_bytes >= 0x1000) {
   1272e:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:58
    uint32_t dummyBuffer = 0xffffffff;
   12732:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:65
    if(num_bytes >= 0x1000) {
   12734:	d24a      	bcs.n	127cc <ssp1_dma_transfer_block+0xa4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:70
        errorMask |= err_Len;
        return 1;
    }
    // DMA channels should not be busy
    if( (pDmaRxChannel->DMACCConfig & 1) || (pDmaTxChannel->DMACCConfig & 1) ) {
   12736:	4b27      	ldr	r3, [pc, #156]	; (127d4 <ssp1_dma_transfer_block+0xac>)
   12738:	691c      	ldr	r4, [r3, #16]
   1273a:	07e5      	lsls	r5, r4, #31
   1273c:	d448      	bmi.n	127d0 <ssp1_dma_transfer_block+0xa8>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:70 (discriminator 1)
   1273e:	4c26      	ldr	r4, [pc, #152]	; (127d8 <ssp1_dma_transfer_block+0xb0>)
   12740:	6924      	ldr	r4, [r4, #16]
   12742:	07e4      	lsls	r4, r4, #31
   12744:	d444      	bmi.n	127d0 <ssp1_dma_transfer_block+0xa8>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:74
        errorMask |= err_busy;
        return 2;
    }
    while( LPC_SSP1->SR & (1<<2)) {
   12746:	4c25      	ldr	r4, [pc, #148]	; (127dc <ssp1_dma_transfer_block+0xb4>)
   12748:	68e5      	ldr	r5, [r4, #12]
   1274a:	076d      	lsls	r5, r5, #29
   1274c:	d435      	bmi.n	127ba <ssp1_dma_transfer_block+0x92>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:130

    /**
     * Clear existing terminal count and error interrupts otherwise
     * DMA will not start.
     */
    LPC_GPDMA->DMACIntTCClear = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   1274e:	2503      	movs	r5, #3
   12750:	4c23      	ldr	r4, [pc, #140]	; (127e0 <ssp1_dma_transfer_block+0xb8>)
   12752:	60a5      	str	r5, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:131
    LPC_GPDMA->DMACIntErrClr  = (1 << SPI_DMA_RX_NUM) | (1 << SPI_DMA_TX_NUM);
   12754:	6125      	str	r5, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:142
     *      - Don't increment destination
     * For read operation:
     *      - Read data into pBuffer
     *      - Increment destination
     */
    pDmaRxChannel->DMACCSrcAddr  = (uint32_t)(&(LPC_SSP1->DR));
   12756:	4d23      	ldr	r5, [pc, #140]	; (127e4 <ssp1_dma_transfer_block+0xbc>)
   12758:	601d      	str	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:143
    if(is_write_op) {
   1275a:	2a00      	cmp	r2, #0
   1275c:	d02f      	beq.n	127be <ssp1_dma_transfer_block+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:144
        pDmaRxChannel->DMACCDestAddr = (uint32_t)(&dummyBuffer);
   1275e:	ac01      	add	r4, sp, #4
   12760:	605c      	str	r4, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:145
        pDmaRxChannel->DMACCControl = num_bytes | TCIE_BIT;
   12762:	f041 4400 	orr.w	r4, r1, #2147483648	; 0x80000000
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:149
    }
    else {
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   12766:	60dc      	str	r4, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:151
    }
    pDmaRxChannel->DMACCLLI = 0;
   12768:	2400      	movs	r4, #0
   1276a:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:152
    pDmaRxChannel->DMACCConfig = (SSP1_RX_CHAN << 1) | P_TO_M_BIT;
   1276c:	f241 0406 	movw	r4, #4102	; 0x1006
   12770:	611c      	str	r4, [r3, #16]
   12772:	4c19      	ldr	r4, [pc, #100]	; (127d8 <ssp1_dma_transfer_block+0xb0>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:163
     *      - Increment source data
     * For read operation:
     *      - Source data is buffer with 0xFF
     *      - Don't increment source data
     */
    if(is_write_op) {
   12774:	b33a      	cbz	r2, 127c6 <ssp1_dma_transfer_block+0x9e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:164
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(pBuffer);
   12776:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:165
        pDmaTxChannel->DMACCControl = num_bytes | SRC_INCR_BIT;
   12778:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:172
    else {
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
        pDmaTxChannel->DMACCControl = num_bytes;
    }
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
    pDmaTxChannel->DMACCLLI = 0;
   1277c:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:169
        pDmaTxChannel->DMACCControl = num_bytes;
   1277e:	60e1      	str	r1, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:171
    pDmaTxChannel->DMACCDestAddr = (uint32_t)(&(LPC_SSP1->DR));
   12780:	6065      	str	r5, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:172
    pDmaTxChannel->DMACCLLI = 0;
   12782:	60a2      	str	r2, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:173
    pDmaTxChannel->DMACCConfig = (SSP1_TX_CHAN << 6) | M_TO_P_BIT;
   12784:	f44f 6208 	mov.w	r2, #2176	; 0x880
   12788:	6122      	str	r2, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:179

    /**
     * Channel must be fully configured and then enabled separately.
     * Setting DMACR's Rx/Tx bits should trigger the DMA
     */
    pDmaRxChannel->DMACCConfig |= 1;
   1278a:	691a      	ldr	r2, [r3, #16]
   1278c:	f042 0201 	orr.w	r2, r2, #1
   12790:	611a      	str	r2, [r3, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:180
    pDmaTxChannel->DMACCConfig |= 1;
   12792:	6922      	ldr	r2, [r4, #16]
   12794:	f042 0201 	orr.w	r2, r2, #1
   12798:	6122      	str	r2, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:181
    LPC_SSP1->DMACR |= 3; // RX: B0, TX: B1
   1279a:	4a10      	ldr	r2, [pc, #64]	; (127dc <ssp1_dma_transfer_block+0xb4>)
   1279c:	6a51      	ldr	r1, [r2, #36]	; 0x24
   1279e:	f041 0103 	orr.w	r1, r1, #3
   127a2:	6251      	str	r1, [r2, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:183 (discriminator 1)

    while( (pDmaRxChannel->DMACCControl & 0xfff) );
   127a4:	68d8      	ldr	r0, [r3, #12]
   127a6:	f3c0 000b 	ubfx	r0, r0, #0, #12
   127aa:	2800      	cmp	r0, #0
   127ac:	d1fa      	bne.n	127a4 <ssp1_dma_transfer_block+0x7c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:184
    LPC_SSP1->DMACR &= ~3;
   127ae:	6a53      	ldr	r3, [r2, #36]	; 0x24
   127b0:	f023 0303 	bic.w	r3, r3, #3
   127b4:	6253      	str	r3, [r2, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:187

    return 0;
}
   127b6:	b003      	add	sp, #12
   127b8:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:76
        char dummy = LPC_SSP1->DR;
   127ba:	68a5      	ldr	r5, [r4, #8]
   127bc:	e7c4      	b.n	12748 <ssp1_dma_transfer_block+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:148
        pDmaRxChannel->DMACCDestAddr = (uint32_t)pBuffer;
   127be:	6058      	str	r0, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:149
        pDmaRxChannel->DMACCControl = num_bytes | DST_INCR_BIT | TCIE_BIT;
   127c0:	f041 4408 	orr.w	r4, r1, #2281701376	; 0x88000000
   127c4:	e7cf      	b.n	12766 <ssp1_dma_transfer_block+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:168
        pDmaTxChannel->DMACCSrcAddr = (uint32_t)(&dummyBuffer);
   127c6:	aa01      	add	r2, sp, #4
   127c8:	6022      	str	r2, [r4, #0]
   127ca:	e7d7      	b.n	1277c <ssp1_dma_transfer_block+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:67
        return 1;
   127cc:	2001      	movs	r0, #1
   127ce:	e7f2      	b.n	127b6 <ssp1_dma_transfer_block+0x8e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_dma.c:72
        return 2;
   127d0:	2002      	movs	r0, #2
   127d2:	e7f0      	b.n	127b6 <ssp1_dma_transfer_block+0x8e>
   127d4:	50004120 	.word	0x50004120
   127d8:	50004100 	.word	0x50004100
   127dc:	40030000 	.word	0x40030000
   127e0:	50004000 	.word	0x50004000
   127e4:	40030008 	.word	0x40030008

000127e8 <spi1_lock>:
spi1_lock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:29
static SemaphoreHandle_t mSpi0Lock = 0;



void spi1_lock(void)
{
   127e8:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:30
    if(!mSpi0Lock) {
   127ea:	4c0a      	ldr	r4, [pc, #40]	; (12814 <spi1_lock+0x2c>)
   127ec:	6823      	ldr	r3, [r4, #0]
   127ee:	b91b      	cbnz	r3, 127f8 <spi1_lock+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:31
        mSpi0Lock = xSemaphoreCreateMutex();
   127f0:	2001      	movs	r0, #1
   127f2:	f7fe fba1 	bl	10f38 <xQueueCreateMutex>
   127f6:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:37
        // Optional: Provide names of the FreeRTOS objects for the Trace Facility
        vTraceSetMutexName(mSpi0Lock, "SPI-0 Mutex");
    }


    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   127f8:	f7ff f894 	bl	11924 <xTaskGetSchedulerState>
   127fc:	2802      	cmp	r0, #2
   127fe:	d108      	bne.n	12812 <spi1_lock+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   12800:	2300      	movs	r3, #0
   12802:	6820      	ldr	r0, [r4, #0]
   12804:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:40
    }
}
   12808:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:38
        xSemaphoreTake(mSpi0Lock, portMAX_DELAY);
   1280c:	4619      	mov	r1, r3
   1280e:	f7fe bc19 	b.w	11044 <xQueueGenericReceive>
   12812:	bd10      	pop	{r4, pc}
   12814:	2007c49c 	.word	0x2007c49c

00012818 <spi1_unlock>:
spi1_unlock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:43

void spi1_unlock(void)
{
   12818:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:44
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1281a:	f7ff f883 	bl	11924 <xTaskGetSchedulerState>
   1281e:	2802      	cmp	r0, #2
   12820:	d108      	bne.n	12834 <spi1_unlock+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:47
        xSemaphoreGive(mSpi0Lock);
    }
}
   12822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/spi_sem.c:45
        xSemaphoreGive(mSpi0Lock);
   12826:	2300      	movs	r3, #0
   12828:	4803      	ldr	r0, [pc, #12]	; (12838 <spi1_unlock+0x20>)
   1282a:	461a      	mov	r2, r3
   1282c:	4619      	mov	r1, r3
   1282e:	6800      	ldr	r0, [r0, #0]
   12830:	f7fe bb00 	b.w	10e34 <xQueueGenericSend>
   12834:	bd10      	pop	{r4, pc}
   12836:	bf00      	nop
   12838:	2007c49c 	.word	0x2007c49c

0001283c <Uart0::~Uart0()>:
_ZN5Uart0D2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/uart0.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart0 : public UartDev, public SingletonTemplate<Uart0>
   1283c:	b510      	push	{r4, lr}
   1283e:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
        ~UartDev() { } /** Nothing to clean up */
   12840:	4b02      	ldr	r3, [pc, #8]	; (1284c <Uart0::~Uart0()+0x10>)
   12842:	6003      	str	r3, [r0, #0]
   12844:	f7ff f938 	bl	11ab8 <CharDev::~CharDev()>
_ZN5Uart0D2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/uart0.hpp:39
   12848:	4620      	mov	r0, r4
   1284a:	bd10      	pop	{r4, pc}
   1284c:	000201f8 	.word	0x000201f8

00012850 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   12850:	b510      	push	{r4, lr}
   12852:	4604      	mov	r4, r0
   12854:	f7ff fff2 	bl	1283c <Uart0::~Uart0()>
   12858:	4620      	mov	r0, r4
   1285a:	212c      	movs	r1, #44	; 0x2c
   1285c:	f005 fedf 	bl	1861e <operator delete(void*, unsigned int)>
   12860:	4620      	mov	r0, r4
   12862:	bd10      	pop	{r4, pc}

00012864 <Uart0::Uart0()>:
_ZN5Uart0C2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:52
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   12864:	b510      	push	{r4, lr}
   12866:	4604      	mov	r4, r0
   12868:	4903      	ldr	r1, [pc, #12]	; (12878 <Uart0::Uart0()+0x14>)
   1286a:	f7ff fc1f 	bl	120ac <UartDev::UartDev(unsigned int*)>
   1286e:	4b03      	ldr	r3, [pc, #12]	; (1287c <Uart0::Uart0()+0x18>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:55
{
    // Nothing to do here other than handing off LPC_UART0_Base address to UART_Base
}
   12870:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:52
Uart0::Uart0() : UartDev((unsigned int*)LPC_UART0_BASE)
   12872:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:55
}
   12874:	bd10      	pop	{r4, pc}
   12876:	bf00      	nop
   12878:	4000c000 	.word	0x4000c000
   1287c:	00020270 	.word	0x00020270

00012880 <UART0_IRQHandler>:
UART0_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:34
    {
   12880:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   12882:	4c07      	ldr	r4, [pc, #28]	; (128a0 <UART0_IRQHandler+0x20>)
   12884:	6823      	ldr	r3, [r4, #0]
   12886:	b933      	cbnz	r3, 12896 <UART0_IRQHandler+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   12888:	202c      	movs	r0, #44	; 0x2c
   1288a:	f004 fcc1 	bl	17210 <operator new(unsigned int)>
   1288e:	4605      	mov	r5, r0
   12890:	f7ff ffe8 	bl	12864 <Uart0::Uart0()>
   12894:	6025      	str	r5, [r4, #0]
UART0_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   12896:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:36
    }
   12898:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart0.cpp:35
        Uart0::getInstance().handleInterrupt();
   1289c:	f7ff bba6 	b.w	11fec <UartDev::handleInterrupt()>
   128a0:	2007c4a0 	.word	0x2007c4a0

000128a4 <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/uart2.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart2 : public UartDev, public SingletonTemplate<Uart2>
   128a4:	b510      	push	{r4, lr}
   128a6:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   128a8:	4b02      	ldr	r3, [pc, #8]	; (128b4 <Uart2::~Uart2()+0x10>)
   128aa:	6003      	str	r3, [r0, #0]
   128ac:	f7ff f904 	bl	11ab8 <CharDev::~CharDev()>
_ZN5Uart2D2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/uart2.hpp:39
   128b0:	4620      	mov	r0, r4
   128b2:	bd10      	pop	{r4, pc}
   128b4:	000201f8 	.word	0x000201f8

000128b8 <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   128b8:	b510      	push	{r4, lr}
   128ba:	4604      	mov	r4, r0
   128bc:	f7ff fff2 	bl	128a4 <Uart2::~Uart2()>
   128c0:	4620      	mov	r0, r4
   128c2:	212c      	movs	r1, #44	; 0x2c
   128c4:	f005 feab 	bl	1861e <operator delete(void*, unsigned int)>
   128c8:	4620      	mov	r0, r4
   128ca:	bd10      	pop	{r4, pc}

000128cc <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:54
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   128cc:	b510      	push	{r4, lr}
   128ce:	4604      	mov	r4, r0
   128d0:	4903      	ldr	r1, [pc, #12]	; (128e0 <Uart2::Uart2()+0x14>)
   128d2:	f7ff fbeb 	bl	120ac <UartDev::UartDev(unsigned int*)>
   128d6:	4b03      	ldr	r3, [pc, #12]	; (128e4 <Uart2::Uart2()+0x18>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:57
{
    // Nothing to do here other than handing off LPC_UART2_Base address to UART_Base
}
   128d8:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:54
Uart2::Uart2() : UartDev((unsigned int*)LPC_UART2_BASE)
   128da:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:57
}
   128dc:	bd10      	pop	{r4, pc}
   128de:	bf00      	nop
   128e0:	40098000 	.word	0x40098000
   128e4:	000202d8 	.word	0x000202d8

000128e8 <UART2_IRQHandler>:
UART2_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:34
    {
   128e8:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart2E11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   128ea:	4c07      	ldr	r4, [pc, #28]	; (12908 <UART2_IRQHandler+0x20>)
   128ec:	6823      	ldr	r3, [r4, #0]
   128ee:	b933      	cbnz	r3, 128fe <UART2_IRQHandler+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   128f0:	202c      	movs	r0, #44	; 0x2c
   128f2:	f004 fc8d 	bl	17210 <operator new(unsigned int)>
   128f6:	4605      	mov	r5, r0
   128f8:	f7ff ffe8 	bl	128cc <Uart2::Uart2()>
   128fc:	6025      	str	r5, [r4, #0]
UART2_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   128fe:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:36
    }
   12900:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart2.cpp:35
        Uart2::getInstance().handleInterrupt();
   12904:	f7ff bb72 	b.w	11fec <UartDev::handleInterrupt()>
   12908:	2007c4a4 	.word	0x2007c4a4

0001290c <Uart3::~Uart3()>:
_ZN5Uart3D2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/uart3.hpp:39
 * This simply uses UartDev, and forwards the UART3 IRQ to UartDev::handleInterrupt()
 * This enforces Singleton class, otherwise it's a thin wrapper around UartDev class.
 *
 * @ingroup Drivers
 */
class Uart3 : public UartDev, public SingletonTemplate<Uart3>
   1290c:	b510      	push	{r4, lr}
   1290e:	4604      	mov	r4, r0
_ZN7UartDevD4Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/uart_dev.hpp:136
   12910:	4b02      	ldr	r3, [pc, #8]	; (1291c <Uart3::~Uart3()+0x10>)
   12912:	6003      	str	r3, [r0, #0]
   12914:	f7ff f8d0 	bl	11ab8 <CharDev::~CharDev()>
_ZN5Uart3D2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/uart3.hpp:39
   12918:	4620      	mov	r0, r4
   1291a:	bd10      	pop	{r4, pc}
   1291c:	000201f8 	.word	0x000201f8

00012920 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   12920:	b510      	push	{r4, lr}
   12922:	4604      	mov	r4, r0
   12924:	f7ff fff2 	bl	1290c <Uart3::~Uart3()>
   12928:	4620      	mov	r0, r4
   1292a:	212c      	movs	r1, #44	; 0x2c
   1292c:	f005 fe77 	bl	1861e <operator delete(void*, unsigned int)>
   12930:	4620      	mov	r0, r4
   12932:	bd10      	pop	{r4, pc}

00012934 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:53
    const unsigned int pclk = sys_get_cpu_clock();

    return UartDev::init(pclk, baudRate, rxQSize, txQSize);
}

Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   12934:	b510      	push	{r4, lr}
   12936:	4604      	mov	r4, r0
   12938:	4903      	ldr	r1, [pc, #12]	; (12948 <Uart3::Uart3()+0x14>)
   1293a:	f7ff fbb7 	bl	120ac <UartDev::UartDev(unsigned int*)>
   1293e:	4b03      	ldr	r3, [pc, #12]	; (1294c <Uart3::Uart3()+0x18>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:56
{
    // Nothing to do here other than handing off LPC_UART3_Base address to UART_Base
}
   12940:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:53
Uart3::Uart3() : UartDev((unsigned int*)LPC_UART3_BASE)
   12942:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:56
}
   12944:	bd10      	pop	{r4, pc}
   12946:	bf00      	nop
   12948:	4009c000 	.word	0x4009c000
   1294c:	00020340 	.word	0x00020340

00012950 <UART3_IRQHandler>:
UART3_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:34
    {
   12950:	b538      	push	{r3, r4, r5, lr}
_ZN17SingletonTemplateI5Uart3E11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   12952:	4c07      	ldr	r4, [pc, #28]	; (12970 <UART3_IRQHandler+0x20>)
   12954:	6823      	ldr	r3, [r4, #0]
   12956:	b933      	cbnz	r3, 12966 <UART3_IRQHandler+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   12958:	202c      	movs	r0, #44	; 0x2c
   1295a:	f004 fc59 	bl	17210 <operator new(unsigned int)>
   1295e:	4605      	mov	r5, r0
   12960:	f7ff ffe8 	bl	12934 <Uart3::Uart3()>
   12964:	6025      	str	r5, [r4, #0]
UART3_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   12966:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:36
    }
   12968:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/src/uart3.cpp:35
        Uart3::getInstance().handleInterrupt();
   1296c:	f7ff bb3e 	b.w	11fec <UartDev::handleInterrupt()>
   12970:	2007c4a8 	.word	0x2007c4a8

00012974 <c_list_create>:
c_list_create():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:45
}c_list_type;



c_list_ptr c_list_create(void)
{
   12974:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:46
    c_list_type* new_list = (c_list_type*)malloc(sizeof(c_list_type));
   12976:	200c      	movs	r0, #12
   12978:	f007 f962 	bl	19c40 <malloc>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:47
    if(NULL != new_list) {
   1297c:	b118      	cbz	r0, 12986 <c_list_create+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:48
        memset(new_list, 0, sizeof(c_list_type));
   1297e:	2300      	movs	r3, #0
   12980:	6003      	str	r3, [r0, #0]
   12982:	6043      	str	r3, [r0, #4]
   12984:	6083      	str	r3, [r0, #8]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:51
    }
    return new_list;
}
   12986:	bd08      	pop	{r3, pc}

00012988 <c_list_insert_elm_end>:
c_list_insert_elm_end():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:87
    const c_list_type *list = p;
    return list ? list->node_count : 0;
}

bool c_list_insert_elm_end(c_list_ptr p, const void *elm_ptr)
{
   12988:	b538      	push	{r3, r4, r5, lr}
   1298a:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:89
    c_list_type *list = p;
    if(!list) {
   1298c:	4604      	mov	r4, r0
   1298e:	b908      	cbnz	r0, 12994 <c_list_insert_elm_end+0xc>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:90
        return false;
   12990:	2000      	movs	r0, #0
   12992:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:94
    }

    /* Allocate memory for the new node and copy the data */
    c_data_node_type *new_node = malloc(sizeof(c_data_node_type));
   12994:	2008      	movs	r0, #8
   12996:	f007 f953 	bl	19c40 <malloc>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:95
    if(NULL == new_node) {
   1299a:	2800      	cmp	r0, #0
   1299c:	d0f8      	beq.n	12990 <c_list_insert_elm_end+0x8>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:98
        return false;
    }
    new_node->next = NULL;
   1299e:	2300      	movs	r3, #0
   129a0:	6043      	str	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:101
    new_node->data_ptr = (void*)elm_ptr;

    if(NULL == list->head) {
   129a2:	6823      	ldr	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:99
    new_node->data_ptr = (void*)elm_ptr;
   129a4:	6005      	str	r5, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:101
    if(NULL == list->head) {
   129a6:	b933      	cbnz	r3, 129b6 <c_list_insert_elm_end+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:102
        list->head = new_node;
   129a8:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:112
            (list->tail)->next = new_node;
        }
        list->tail = new_node;
    }

    ++(list->node_count);
   129aa:	68a3      	ldr	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:109
        list->tail = new_node;
   129ac:	6060      	str	r0, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:112
    ++(list->node_count);
   129ae:	3301      	adds	r3, #1
   129b0:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:113
    return true;
   129b2:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:114
}
   129b4:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:106
        if (list->tail) {
   129b6:	6863      	ldr	r3, [r4, #4]
   129b8:	2b00      	cmp	r3, #0
   129ba:	d0f6      	beq.n	129aa <c_list_insert_elm_end+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:107
            (list->tail)->next = new_node;
   129bc:	6058      	str	r0, [r3, #4]
   129be:	e7f4      	b.n	129aa <c_list_insert_elm_end+0x22>

000129c0 <c_list_find_elm>:
c_list_find_elm():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:178
    }
}

void* c_list_find_elm(c_list_ptr p, c_list_callback_t callback,
                      void *arg1, void *arg2, void *arg3)
{
   129c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   129c2:	460d      	mov	r5, r1
   129c4:	4616      	mov	r6, r2
   129c6:	461f      	mov	r7, r3
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:180
    c_list_type *list = p;
    if(!list || !callback) {
   129c8:	b908      	cbnz	r0, 129ce <c_list_find_elm+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:181
        return NULL;
   129ca:	2000      	movs	r0, #0
   129cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:180 (discriminator 1)
    if(!list || !callback) {
   129ce:	2900      	cmp	r1, #0
   129d0:	d0fb      	beq.n	129ca <c_list_find_elm+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:184
    }

    c_data_node_type *iterator = list->head;
   129d2:	6804      	ldr	r4, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:185
    while(NULL != iterator) {
   129d4:	2c00      	cmp	r4, #0
   129d6:	d0f8      	beq.n	129ca <c_list_find_elm+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:186
        if(!callback(iterator->data_ptr, arg1, arg2, arg3)) {
   129d8:	9b06      	ldr	r3, [sp, #24]
   129da:	463a      	mov	r2, r7
   129dc:	4631      	mov	r1, r6
   129de:	6820      	ldr	r0, [r4, #0]
   129e0:	47a8      	blx	r5
   129e2:	b908      	cbnz	r0, 129e8 <c_list_find_elm+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:187
            return iterator->data_ptr;
   129e4:	6820      	ldr	r0, [r4, #0]
   129e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:189
        }
        iterator = iterator->next;
   129e8:	6864      	ldr	r4, [r4, #4]
   129ea:	e7f3      	b.n	129d4 <c_list_find_elm+0x14>

000129ec <c_list_for_each_elm>:
c_list_for_each_elm():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:233
    return false;
}

bool c_list_for_each_elm(const c_list_ptr p, c_list_callback_t func,
                           void *arg1, void *arg2, void *arg3)
{
   129ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   129ee:	460d      	mov	r5, r1
   129f0:	4616      	mov	r6, r2
   129f2:	461f      	mov	r7, r3
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:236
    const c_list_type *list = p;

    if(list && func) {
   129f4:	b908      	cbnz	r0, 129fa <c_list_for_each_elm+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:246
            }
            iterator = iterator->next;
        }
    }

    return true;
   129f6:	2001      	movs	r0, #1
   129f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:236 (discriminator 1)
    if(list && func) {
   129fa:	2900      	cmp	r1, #0
   129fc:	d0fb      	beq.n	129f6 <c_list_for_each_elm+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:237
        c_data_node_type *iterator = list->head;
   129fe:	6804      	ldr	r4, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:238
        while(NULL != iterator) {
   12a00:	2c00      	cmp	r4, #0
   12a02:	d0f8      	beq.n	129f6 <c_list_for_each_elm+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:239
            if(!func(iterator->data_ptr, arg1, arg2, arg3)) {
   12a04:	9b06      	ldr	r3, [sp, #24]
   12a06:	463a      	mov	r2, r7
   12a08:	4631      	mov	r1, r6
   12a0a:	6820      	ldr	r0, [r4, #0]
   12a0c:	47a8      	blx	r5
   12a0e:	b108      	cbz	r0, 12a14 <c_list_for_each_elm+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:242
            iterator = iterator->next;
   12a10:	6864      	ldr	r4, [r4, #4]
   12a12:	e7f5      	b.n	12a00 <c_list_for_each_elm+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/c_list.c:247
}
   12a14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12a16:	Address 0x0000000000012a16 is out of bounds.


00012a18 <logger_write_to_file>:
logger_write_to_file():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:61
 * Writes the buffer to the file.
 * @param [in] buffer   The data pointer to write from
 * @param [in] bytes_to_write  The number of bytes to write
 */
static bool logger_write_to_file(const void * buffer, const uint32_t bytes_to_write)
{
   12a18:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:64
    bool success = false;
    FRESULT err = 0;
    UINT bytes_written = 0;
   12a1a:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:61
{
   12a1c:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   12a20:	460d      	mov	r5, r1
   12a22:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:64
    UINT bytes_written = 0;
   12a24:	9402      	str	r4, [sp, #8]
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   12a26:	f7fd fd77 	bl	10518 <sys_get_uptime_us>
   12a2a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   12a2e:	2300      	movs	r3, #0
   12a30:	f006 fd28 	bl	19484 <__aeabi_uldivmod>
logger_write_to_file():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:69
    const UINT bytes_to_write_uint = bytes_to_write;
    const uint32_t start_time = sys_get_uptime_ms();

    #if (!FILE_LOGGER_KEEP_FILE_OPEN)
    FIL fatfs_file = { 0 };
   12a34:	f44f 7209 	mov.w	r2, #548	; 0x224
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   12a38:	4606      	mov	r6, r0
logger_write_to_file():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:69
   12a3a:	4621      	mov	r1, r4
   12a3c:	a803      	add	r0, sp, #12
   12a3e:	f007 f963 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:72
    #endif

    if (0 == bytes_to_write_uint) {
   12a42:	2d00      	cmp	r5, #0
   12a44:	d038      	beq.n	12ab8 <logger_write_to_file+0xa0>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:83
    {
        f_sync(gp_file_ptr);
    }
    #else
    /* File not opened, open it, seek it, and then write it */
    else if(FR_OK == (err = f_open(&fatfs_file, FILE_LOGGER_FILENAME, FA_OPEN_ALWAYS | FA_WRITE)))
   12a46:	2212      	movs	r2, #18
   12a48:	491c      	ldr	r1, [pc, #112]	; (12abc <logger_write_to_file+0xa4>)
   12a4a:	a803      	add	r0, sp, #12
   12a4c:	f002 f808 	bl	14a60 <f_open>
   12a50:	4604      	mov	r4, r0
   12a52:	bb68      	cbnz	r0, 12ab0 <logger_write_to_file+0x98>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:85
    {
        if (FR_OK == (err = f_lseek(&fatfs_file, f_size(&fatfs_file))))
   12a54:	9906      	ldr	r1, [sp, #24]
   12a56:	a803      	add	r0, sp, #12
   12a58:	f002 fa7e 	bl	14f58 <f_lseek>
   12a5c:	4604      	mov	r4, r0
   12a5e:	b930      	cbnz	r0, 12a6e <logger_write_to_file+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:87
        {
            err = f_write(&fatfs_file, buffer, bytes_to_write_uint, &bytes_written);
   12a60:	ab02      	add	r3, sp, #8
   12a62:	462a      	mov	r2, r5
   12a64:	4639      	mov	r1, r7
   12a66:	a803      	add	r0, sp, #12
   12a68:	f002 f949 	bl	14cfe <f_write>
   12a6c:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:89
        }
        f_close(&fatfs_file);
   12a6e:	a803      	add	r0, sp, #12
   12a70:	f002 fa60 	bl	14f34 <f_close>
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   12a74:	f7fd fd50 	bl	10518 <sys_get_uptime_us>
   12a78:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   12a7c:	2300      	movs	r3, #0
   12a7e:	f006 fd01 	bl	19484 <__aeabi_uldivmod>
logger_write_to_file():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:98
        printf("Failed file write: ");
    }

    /* Capture the time */
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
    if (diff_time > g_highest_file_write_time) {
   12a82:	4b0f      	ldr	r3, [pc, #60]	; (12ac0 <logger_write_to_file+0xa8>)
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:97
    const uint32_t diff_time = sys_get_uptime_ms() - start_time;
   12a84:	1b80      	subs	r0, r0, r6
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:98
    if (diff_time > g_highest_file_write_time) {
   12a86:	881a      	ldrh	r2, [r3, #0]
   12a88:	4290      	cmp	r0, r2
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:103
        g_highest_file_write_time = diff_time;
    }

    /* To be successful, bytes written should be the same count as the bytes intended to be written */
    success = (bytes_to_write_uint == bytes_written);
   12a8a:	9a02      	ldr	r2, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:99
        g_highest_file_write_time = diff_time;
   12a8c:	bf88      	it	hi
   12a8e:	8018      	strhhi	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:103
    success = (bytes_to_write_uint == bytes_written);
   12a90:	4295      	cmp	r5, r2
   12a92:	bf0c      	ite	eq
   12a94:	2601      	moveq	r6, #1
   12a96:	2600      	movne	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:106

    /* We don't want to silently fail, so print a message in case an error occurs */
    if (!success) {
   12a98:	d006      	beq.n	12aa8 <logger_write_to_file+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:107
        printf("Error %u writing logfile. %u/%u written. Fptr: %u\n",
   12a9a:	9b05      	ldr	r3, [sp, #20]
   12a9c:	4621      	mov	r1, r4
   12a9e:	9300      	str	r3, [sp, #0]
   12aa0:	4808      	ldr	r0, [pc, #32]	; (12ac4 <logger_write_to_file+0xac>)
   12aa2:	462b      	mov	r3, r5
   12aa4:	f008 faca 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:116
                (unsigned)err, (unsigned)bytes_written, (unsigned)bytes_to_write, (unsigned) fatfs_file.fptr);
#endif
    }

    return success;
}
   12aa8:	4630      	mov	r0, r6
   12aaa:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   12aae:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:93
        printf("Failed file write: ");
   12ab0:	4805      	ldr	r0, [pc, #20]	; (12ac8 <logger_write_to_file+0xb0>)
   12ab2:	f008 fac3 	bl	1b03c <iprintf>
   12ab6:	e7dd      	b.n	12a74 <logger_write_to_file+0x5c>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:63
    FRESULT err = 0;
   12ab8:	462c      	mov	r4, r5
   12aba:	e7db      	b.n	12a74 <logger_write_to_file+0x5c>
   12abc:	00020380 	.word	0x00020380
   12ac0:	2007c4b4 	.word	0x2007c4b4
   12ac4:	0002039e 	.word	0x0002039e
   12ac8:	0002038a 	.word	0x0002038a

00012acc <logger_task>:
logger_task():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:178
{
    /* Use "char * const" to disallow this pointer to be moved.
     * We don't want to use "const char *" because we do want to be able to
     * write to this pointer instead of using excessive casts later.
     */
    char * const start_ptr = gp_file_buffer;
   12acc:	4b2f      	ldr	r3, [pc, #188]	; (12b8c <logger_task+0xc0>)
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:173
{
   12ace:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   12ad2:	681d      	ldr	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:192
    {
        /* Receive the log message we wish to write to our buffer.
         * Timeout or NULL pointer received is the signal to flush the data.
         */
        log_msg = NULL;
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   12ad4:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 12b94 <logger_task+0xc8>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   12ad8:	462e      	mov	r6, r5
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:203
        }

        /* Update the watermark of the number of messages we see in the queue and note that we
         * add one to account for the message we just dequeued.
         */
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   12ada:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 12b98 <logger_task+0xcc>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:179
    char * const end_ptr = start_ptr + FILE_LOGGER_BUFFER_SIZE;
   12ade:	f505 6880 	add.w	r8, r5, #1024	; 0x400
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:191
        log_msg = NULL;
   12ae2:	2300      	movs	r3, #0
   12ae4:	af02      	add	r7, sp, #8
   12ae6:	f847 3d04 	str.w	r3, [r7, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:192
        if (!xQueueReceive(g_write_buffer_queue, &log_msg, OS_MS(1000 * FILE_LOGGER_FLUSH_TIME_SEC)) ||
   12aea:	f64e 2260 	movw	r2, #60000	; 0xea60
   12aee:	4639      	mov	r1, r7
   12af0:	f8d9 0000 	ldr.w	r0, [r9]
   12af4:	f7fe faa6 	bl	11044 <xQueueGenericReceive>
   12af8:	b108      	cbz	r0, 12afe <logger_task+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:192 (discriminator 1)
   12afa:	9b01      	ldr	r3, [sp, #4]
   12afc:	b92b      	cbnz	r3, 12b0a <logger_task+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:195
            logger_write_to_file(start_ptr, (write_ptr - start_ptr));
   12afe:	1b71      	subs	r1, r6, r5
   12b00:	4628      	mov	r0, r5
   12b02:	f7ff ff89 	bl	12a18 <logger_write_to_file>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:178
    char * const start_ptr = gp_file_buffer;
   12b06:	462e      	mov	r6, r5
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:197
            continue;
   12b08:	e7eb      	b.n	12ae2 <logger_task+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   12b0a:	f8d9 0000 	ldr.w	r0, [r9]
   12b0e:	f7fe fb67 	bl	111e0 <uxQueueMessagesWaiting>
   12b12:	f8ba 3000 	ldrh.w	r3, [sl]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:208
            g_buffer_watermark = len;
        }

        /* Get the length and append the newline character */
        len = strlen(log_msg);
   12b16:	9c01      	ldr	r4, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:203
        if ((len = (1 + uxQueueMessagesWaiting(g_write_buffer_queue)) ) > g_buffer_watermark) {
   12b18:	3001      	adds	r0, #1
   12b1a:	4298      	cmp	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:204
            g_buffer_watermark = len;
   12b1c:	bf88      	it	hi
   12b1e:	f8aa 0000 	strhhi.w	r0, [sl]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:208
        len = strlen(log_msg);
   12b22:	4620      	mov	r0, r4
   12b24:	f008 fdc1 	bl	1b6aa <strlen>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   12b28:	230a      	movs	r3, #10
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   12b2a:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:209
        log_msg[len] = '\n';
   12b2c:	5423      	strb	r3, [r4, r0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   12b2e:	f100 0b01 	add.w	fp, r0, #1
   12b32:	9a01      	ldr	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:224
            continue;
        }
        #endif

        /* If we will overflow our buffer we need to write the full buffer and do partial copy */
        if (len + write_ptr >= end_ptr)
   12b34:	eb06 040b 	add.w	r4, r6, fp
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:210
        log_msg[++len] = '\0';
   12b38:	f802 100b 	strb.w	r1, [r2, fp]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:224
        if (len + write_ptr >= end_ptr)
   12b3c:	45a0      	cmp	r8, r4
   12b3e:	9901      	ldr	r1, [sp, #4]
   12b40:	d81f      	bhi.n	12b82 <logger_task+0xb6>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:230
        {
            /* This could be zero when we write the last byte in the buffer */
            buffer_overflow_cnt = (len + write_ptr - end_ptr);

            /* Copy the partial message up until the end of the buffer */
            memcpy(write_ptr, log_msg, (end_ptr - write_ptr));
   12b42:	eba8 0206 	sub.w	r2, r8, r6
   12b46:	4630      	mov	r0, r6
   12b48:	f007 f8b9 	bl	19cbe <memcpy>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:227
            buffer_overflow_cnt = (len + write_ptr - end_ptr);
   12b4c:	eba4 0408 	sub.w	r4, r4, r8
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:233

            /* Write the entire buffer to the file */
            logger_write_to_file(start_ptr, (end_ptr - start_ptr));
   12b50:	f44f 6180 	mov.w	r1, #1024	; 0x400
   12b54:	4628      	mov	r0, r5
   12b56:	f7ff ff5f 	bl	12a18 <logger_write_to_file>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:239

            /* Optional: Zero out the buffer space */
            // memset(start_ptr, '\0', buffer_size);

            /* Copy the left-over message to the start of "fresh" buffer space (after writing to the file) */
            if (buffer_overflow_cnt > 0) {
   12b5a:	b13c      	cbz	r4, 12b6c <logger_task+0xa0>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:240
                memcpy(start_ptr, (log_msg + len - buffer_overflow_cnt), buffer_overflow_cnt);
   12b5c:	9901      	ldr	r1, [sp, #4]
   12b5e:	ebab 0b04 	sub.w	fp, fp, r4
   12b62:	4622      	mov	r2, r4
   12b64:	4459      	add	r1, fp
   12b66:	4628      	mov	r0, r5
   12b68:	f007 f8a9 	bl	19cbe <memcpy>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:242
            }
            write_ptr = start_ptr + buffer_overflow_cnt;
   12b6c:	442c      	add	r4, r5
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:251
            memcpy(write_ptr, log_msg, len);
            write_ptr += len;
        }

        /* Put the data pointer back to the available buffers */
        xQueueSend(g_empty_buffer_queue, &log_msg, portMAX_DELAY);
   12b6e:	4808      	ldr	r0, [pc, #32]	; (12b90 <logger_task+0xc4>)
   12b70:	2300      	movs	r3, #0
   12b72:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   12b76:	4639      	mov	r1, r7
   12b78:	6800      	ldr	r0, [r0, #0]
   12b7a:	f7fe f95b 	bl	10e34 <xQueueGenericSend>
   12b7e:	4626      	mov	r6, r4
   12b80:	e7af      	b.n	12ae2 <logger_task+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:246
            memcpy(write_ptr, log_msg, len);
   12b82:	465a      	mov	r2, fp
   12b84:	4630      	mov	r0, r6
   12b86:	f007 f89a 	bl	19cbe <memcpy>
   12b8a:	e7f0      	b.n	12b6e <logger_task+0xa2>
   12b8c:	2007c4bc 	.word	0x2007c4bc
   12b90:	2007c4b0 	.word	0x2007c4b0
   12b94:	2007c4b8 	.word	0x2007c4b8
   12b98:	2007c4ac 	.word	0x2007c4ac

00012b9c <logger_init>:
logger_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:376
{
    return g_buffer_watermark;
}

void logger_init(uint8_t logger_priority)
{
   12b9c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
logger_initialized():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:260
    return (NULL != gp_file_buffer);
   12ba0:	4c2b      	ldr	r4, [pc, #172]	; (12c50 <logger_init+0xb4>)
logger_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:376
{
   12ba2:	4680      	mov	r8, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:378
    /* Prevent double init */
    if (!logger_initialized())
   12ba4:	6825      	ldr	r5, [r4, #0]
   12ba6:	2d00      	cmp	r5, #0
   12ba8:	d14a      	bne.n	12c40 <logger_init+0xa4>
logger_internal_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   12baa:	f44f 6080 	mov.w	r0, #1024	; 0x400
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:271
    char * ptr = NULL;
   12bae:	9503      	str	r5, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:275
    gp_file_buffer = (char*) malloc(FILE_LOGGER_BUFFER_SIZE);
   12bb0:	f007 f846 	bl	19c40 <malloc>
   12bb4:	4e27      	ldr	r6, [pc, #156]	; (12c54 <logger_init+0xb8>)
   12bb6:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:276
    if (NULL == gp_file_buffer) {
   12bb8:	b9a8      	cbnz	r0, 12be6 <logger_init+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:327
        if (gp_file_buffer) {
   12bba:	6820      	ldr	r0, [r4, #0]
   12bbc:	2800      	cmp	r0, #0
   12bbe:	d142      	bne.n	12c46 <logger_init+0xaa>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:332
        if (g_empty_buffer_queue) {
   12bc0:	6833      	ldr	r3, [r6, #0]
   12bc2:	b163      	cbz	r3, 12bde <logger_init+0x42>
   12bc4:	240a      	movs	r4, #10
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:334
                if (xQueueReceive(g_empty_buffer_queue, &ptr, 0)) {
   12bc6:	2300      	movs	r3, #0
   12bc8:	a903      	add	r1, sp, #12
   12bca:	461a      	mov	r2, r3
   12bcc:	6830      	ldr	r0, [r6, #0]
   12bce:	f7fe fa39 	bl	11044 <xQueueGenericReceive>
   12bd2:	b110      	cbz	r0, 12bda <logger_init+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:335
                    free (ptr);
   12bd4:	9803      	ldr	r0, [sp, #12]
   12bd6:	f007 f83b 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:333
            for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++) {
   12bda:	3c01      	subs	r4, #1
   12bdc:	d1f3      	bne.n	12bc6 <logger_init+0x2a>
logger_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:381
    {
        if (!logger_internal_init(logger_priority)) {
            printf("ERROR: logger initialization failure\n");
   12bde:	481e      	ldr	r0, [pc, #120]	; (12c58 <logger_init+0xbc>)
   12be0:	f008 faa0 	bl	1b124 <puts>
   12be4:	e02c      	b.n	12c40 <logger_init+0xa4>
logger_internal_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   12be6:	462a      	mov	r2, r5
   12be8:	2104      	movs	r1, #4
   12bea:	200a      	movs	r0, #10
   12bec:	f7fe f908 	bl	10e00 <xQueueGenericCreate>
   12bf0:	4f1a      	ldr	r7, [pc, #104]	; (12c5c <logger_init+0xc0>)
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   12bf2:	462a      	mov	r2, r5
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:281
    g_write_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   12bf4:	6038      	str	r0, [r7, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   12bf6:	2104      	movs	r1, #4
   12bf8:	200a      	movs	r0, #10
   12bfa:	f7fe f901 	bl	10e00 <xQueueGenericCreate>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   12bfe:	683b      	ldr	r3, [r7, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:282
    g_empty_buffer_queue = xQueueCreate(FILE_LOGGER_NUM_BUFFERS, sizeof(char*));
   12c00:	6030      	str	r0, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:283
    if (NULL == g_write_buffer_queue || NULL == g_empty_buffer_queue) {
   12c02:	2b00      	cmp	r3, #0
   12c04:	d0d9      	beq.n	12bba <logger_init+0x1e>
   12c06:	2800      	cmp	r0, #0
   12c08:	d0d7      	beq.n	12bba <logger_init+0x1e>
   12c0a:	250a      	movs	r5, #10
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:293
        ptr = (char*) malloc(FILE_LOGGER_LOG_MSG_MAX_LEN);
   12c0c:	2096      	movs	r0, #150	; 0x96
   12c0e:	f007 f817 	bl	19c40 <malloc>
   12c12:	9003      	str	r0, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:295
        if (NULL == ptr) {
   12c14:	2800      	cmp	r0, #0
   12c16:	d0d0      	beq.n	12bba <logger_init+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:303
        xQueueSend(g_empty_buffer_queue, &ptr, 0);
   12c18:	2300      	movs	r3, #0
   12c1a:	a903      	add	r1, sp, #12
   12c1c:	461a      	mov	r2, r3
   12c1e:	6830      	ldr	r0, [r6, #0]
   12c20:	f7fe f908 	bl	10e34 <xQueueGenericSend>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:291
    for (i = 0; i < FILE_LOGGER_NUM_BUFFERS; i++)
   12c24:	3d01      	subs	r5, #1
   12c26:	d1f1      	bne.n	12c0c <logger_init+0x70>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   12c28:	9501      	str	r5, [sp, #4]
logger_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:380
        if (!logger_internal_init(logger_priority)) {
   12c2a:	f8cd 8000 	str.w	r8, [sp]
logger_internal_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:318
    if (!xTaskCreate(logger_task, "logger", FILE_LOGGER_STACK_SIZE, NULL, logger_priority, NULL))
   12c2e:	462b      	mov	r3, r5
   12c30:	f44f 72c0 	mov.w	r2, #384	; 0x180
   12c34:	490a      	ldr	r1, [pc, #40]	; (12c60 <logger_init+0xc4>)
   12c36:	480b      	ldr	r0, [pc, #44]	; (12c64 <logger_init+0xc8>)
   12c38:	f7fe fb4a 	bl	112d0 <xTaskCreate>
   12c3c:	2800      	cmp	r0, #0
   12c3e:	d0bc      	beq.n	12bba <logger_init+0x1e>
logger_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:384
        }
    }
}
   12c40:	b004      	add	sp, #16
   12c42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
logger_internal_init():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:328
            free(gp_file_buffer);
   12c46:	f007 f803 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/file_logger.c:329
            gp_file_buffer = NULL;
   12c4a:	2300      	movs	r3, #0
   12c4c:	6023      	str	r3, [r4, #0]
   12c4e:	e7b7      	b.n	12bc0 <logger_init+0x24>
   12c50:	2007c4bc 	.word	0x2007c4bc
   12c54:	2007c4b0 	.word	0x2007c4b0
   12c58:	0002035b 	.word	0x0002035b
   12c5c:	2007c4b8 	.word	0x2007c4b8
   12c60:	00020354 	.word	0x00020354
   12c64:	00012acd 	.word	0x00012acd

00012c68 <u0_dbg_put>:
u0_dbg_put():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:60

    return len;
}

void u0_dbg_put(const char *string)
{
   12c68:	b510      	push	{r4, lr}
   12c6a:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:63
    char* p = (char*) string;

    vPortEnterCritical();
   12c6c:	f7fd ff1a 	bl	10aa4 <vPortEnterCritical>
   12c70:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:64
    while(*p)
   12c72:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   12c76:	b918      	cbnz	r0, 12c80 <u0_dbg_put+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:70
    {
        uart0_putchar(*p);
        p++;
    }
    vPortExitCritical();
}
   12c78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:69
    vPortExitCritical();
   12c7c:	f7fd bf22 	b.w	10ac4 <vPortExitCritical>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:66
        uart0_putchar(*p);
   12c80:	f7fd fe68 	bl	10954 <uart0_putchar>
   12c84:	e7f5      	b.n	12c72 <u0_dbg_put+0xa>

00012c86 <u0_dbg_printf>:
u0_dbg_printf():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   12c86:	b40f      	push	{r0, r1, r2, r3}
   12c88:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   12c8a:	f44f 7580 	mov.w	r5, #256	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:45
{
   12c8e:	b0c2      	sub	sp, #264	; 0x108
   12c90:	ac46      	add	r4, sp, #280	; 0x118
   12c92:	f854 6b04 	ldr.w	r6, [r4], #4
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:47
    char buff[256] = { 0 };
   12c96:	462a      	mov	r2, r5
   12c98:	2100      	movs	r1, #0
   12c9a:	a802      	add	r0, sp, #8
   12c9c:	f007 f834 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   12ca0:	4623      	mov	r3, r4
   12ca2:	4632      	mov	r2, r6
   12ca4:	4629      	mov	r1, r5
   12ca6:	a802      	add	r0, sp, #8
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:50
    va_start(args, format);
   12ca8:	9401      	str	r4, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:51
    len = vsnprintf(buff, sizeof(buff), format, args);
   12caa:	f009 fe73 	bl	1c994 <vsniprintf>
   12cae:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:54
    u0_dbg_put(buff);
   12cb0:	a802      	add	r0, sp, #8
   12cb2:	f7ff ffd9 	bl	12c68 <u0_dbg_put>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/printf_lib.c:57
}
   12cb6:	4620      	mov	r0, r4
   12cb8:	b042      	add	sp, #264	; 0x108
   12cba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   12cbe:	b004      	add	sp, #16
   12cc0:	4770      	bx	lr

00012cc2 <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:50
}

static bool for_each_recur_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
    long *do_yield = arg1;
    long yield_required = 0;
   12cc2:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:48
{
   12cc4:	b513      	push	{r0, r1, r4, lr}
   12cc6:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:50
    long yield_required = 0;
   12cc8:	a902      	add	r1, sp, #8
   12cca:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:53

    SemaphoreHandle_t *signal = (SemaphoreHandle_t*)item;
    xSemaphoreGiveFromISR(*signal, &yield_required);
   12cce:	6800      	ldr	r0, [r0, #0]
   12cd0:	f7fe f984 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:54
    if (yield_required) {
   12cd4:	9b01      	ldr	r3, [sp, #4]
   12cd6:	b11b      	cbz	r3, 12ce0 <for_each_recur_alarm_callback+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:55
        *do_yield |= 1;
   12cd8:	6823      	ldr	r3, [r4, #0]
   12cda:	f043 0301 	orr.w	r3, r3, #1
   12cde:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:59
    }

    return 1;
}
   12ce0:	2001      	movs	r0, #1
   12ce2:	b002      	add	sp, #8
   12ce4:	bd10      	pop	{r4, pc}

00012ce6 <for_each_alarm_callback>:
for_each_alarm_callback():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:62

static bool for_each_alarm_callback(void *item, void *arg1, void *arg2, void *arg3)
{
   12ce6:	b530      	push	{r4, r5, lr}
   12ce8:	4604      	mov	r4, r0
   12cea:	b085      	sub	sp, #20
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   12cec:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:62
{
   12cee:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:63
    const rtc_t time = rtc_gettime();
   12cf0:	f7ff fc4c 	bl	1258c <rtc_gettime>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:66
    sem_alarm_t *a = (sem_alarm_t*)item;

    if(a->time.hour == time.hour &&
   12cf4:	f89d 3006 	ldrb.w	r3, [sp, #6]
   12cf8:	7922      	ldrb	r2, [r4, #4]
   12cfa:	f003 031f 	and.w	r3, r3, #31
   12cfe:	429a      	cmp	r2, r3
   12d00:	d11b      	bne.n	12d3a <for_each_alarm_callback+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:67 (discriminator 1)
       a->time.min == time.min &&
   12d02:	f89d 3005 	ldrb.w	r3, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:66 (discriminator 1)
    if(a->time.hour == time.hour &&
   12d06:	7962      	ldrb	r2, [r4, #5]
   12d08:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   12d0c:	429a      	cmp	r2, r3
   12d0e:	d114      	bne.n	12d3a <for_each_alarm_callback+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:68
       a->time.sec == time.sec)
   12d10:	f89d 3004 	ldrb.w	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:67
       a->time.min == time.min &&
   12d14:	79a2      	ldrb	r2, [r4, #6]
   12d16:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   12d1a:	429a      	cmp	r2, r3
   12d1c:	d10d      	bne.n	12d3a <for_each_alarm_callback+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:71
    {
        long *do_yield = arg1;
        long switch_required = 0;
   12d1e:	2300      	movs	r3, #0
   12d20:	a904      	add	r1, sp, #16
   12d22:	f841 3d10 	str.w	r3, [r1, #-16]!
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:72
        xSemaphoreGiveFromISR(*(a->pAlarm), &switch_required);
   12d26:	6823      	ldr	r3, [r4, #0]
   12d28:	6818      	ldr	r0, [r3, #0]
   12d2a:	f7fe f957 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:73
        if (switch_required) {
   12d2e:	9b00      	ldr	r3, [sp, #0]
   12d30:	b11b      	cbz	r3, 12d3a <for_each_alarm_callback+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:74
            *do_yield |= 1;
   12d32:	682b      	ldr	r3, [r5, #0]
   12d34:	f043 0301 	orr.w	r3, r3, #1
   12d38:	602b      	str	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:78
        }
    }
    return 1;
}
   12d3a:	2001      	movs	r0, #1
   12d3c:	b005      	add	sp, #20
   12d3e:	bd30      	pop	{r4, r5, pc}

00012d40 <RTC_IRQHandler>:
RTC_IRQHandler():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:133

#ifdef __cplusplus
extern "C" {
#endif
void RTC_IRQHandler(void)
{
   12d40:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
    long do_yield = 0;
   12d42:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   12d44:	4a23      	ldr	r2, [pc, #140]	; (12dd4 <RTC_IRQHandler+0x94>)
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:133
{
   12d46:	b087      	sub	sp, #28
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   12d48:	7813      	ldrb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:138

    const rtc_t time = rtc_gettime();
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   12d4a:	4c23      	ldr	r4, [pc, #140]	; (12dd8 <RTC_IRQHandler+0x98>)
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:134
    LPC_RTC->ILR |= (1 << 0); // Clear Increment Interrupt
   12d4c:	f043 0301 	orr.w	r3, r3, #1
   12d50:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   12d52:	a803      	add	r0, sp, #12
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:135
    long do_yield = 0;
   12d54:	9502      	str	r5, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:137
    const rtc_t time = rtc_gettime();
   12d56:	f7ff fc19 	bl	1258c <rtc_gettime>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:138
    c_list_for_each_elm(g_list_recur_alarms[everySecond], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   12d5a:	462b      	mov	r3, r5
   12d5c:	9500      	str	r5, [sp, #0]
   12d5e:	aa02      	add	r2, sp, #8
   12d60:	491e      	ldr	r1, [pc, #120]	; (12ddc <RTC_IRQHandler+0x9c>)
   12d62:	6820      	ldr	r0, [r4, #0]
   12d64:	f7ff fe42 	bl	129ec <c_list_for_each_elm>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:139
    if(0 == time.sec) {
   12d68:	f89d 300c 	ldrb.w	r3, [sp, #12]
   12d6c:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   12d70:	d11b      	bne.n	12daa <RTC_IRQHandler+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:140
        c_list_for_each_elm(g_list_recur_alarms[everyMinute], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   12d72:	9300      	str	r3, [sp, #0]
   12d74:	aa02      	add	r2, sp, #8
   12d76:	4919      	ldr	r1, [pc, #100]	; (12ddc <RTC_IRQHandler+0x9c>)
   12d78:	6860      	ldr	r0, [r4, #4]
   12d7a:	f7ff fe37 	bl	129ec <c_list_for_each_elm>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:141
        if(0 == time.min) {
   12d7e:	f89d 300d 	ldrb.w	r3, [sp, #13]
   12d82:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   12d86:	d110      	bne.n	12daa <RTC_IRQHandler+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:142
            c_list_for_each_elm(g_list_recur_alarms[everyHour], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   12d88:	9300      	str	r3, [sp, #0]
   12d8a:	aa02      	add	r2, sp, #8
   12d8c:	4913      	ldr	r1, [pc, #76]	; (12ddc <RTC_IRQHandler+0x9c>)
   12d8e:	68a0      	ldr	r0, [r4, #8]
   12d90:	f7ff fe2c 	bl	129ec <c_list_for_each_elm>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:143
            if(0 == time.hour) {
   12d94:	f89d 300e 	ldrb.w	r3, [sp, #14]
   12d98:	f013 031f 	ands.w	r3, r3, #31
   12d9c:	d105      	bne.n	12daa <RTC_IRQHandler+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:144
                c_list_for_each_elm(g_list_recur_alarms[everyDay], for_each_recur_alarm_callback, &do_yield, NULL, NULL);
   12d9e:	9300      	str	r3, [sp, #0]
   12da0:	aa02      	add	r2, sp, #8
   12da2:	490e      	ldr	r1, [pc, #56]	; (12ddc <RTC_IRQHandler+0x9c>)
   12da4:	68e0      	ldr	r0, [r4, #12]
   12da6:	f7ff fe21 	bl	129ec <c_list_for_each_elm>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:149
            }
        }
    }

    c_list_for_each_elm(g_list_timed_alarms, for_each_alarm_callback, &do_yield, NULL, NULL);
   12daa:	2300      	movs	r3, #0
   12dac:	480c      	ldr	r0, [pc, #48]	; (12de0 <RTC_IRQHandler+0xa0>)
   12dae:	9300      	str	r3, [sp, #0]
   12db0:	aa02      	add	r2, sp, #8
   12db2:	490c      	ldr	r1, [pc, #48]	; (12de4 <RTC_IRQHandler+0xa4>)
   12db4:	6800      	ldr	r0, [r0, #0]
   12db6:	f7ff fe19 	bl	129ec <c_list_for_each_elm>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:150
    portEND_SWITCHING_ISR(do_yield);
   12dba:	9b02      	ldr	r3, [sp, #8]
   12dbc:	b13b      	cbz	r3, 12dce <RTC_IRQHandler+0x8e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:150 (discriminator 1)
   12dbe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   12dc2:	4b09      	ldr	r3, [pc, #36]	; (12de8 <RTC_IRQHandler+0xa8>)
   12dc4:	601a      	str	r2, [r3, #0]
   12dc6:	f3bf 8f4f 	dsb	sy
   12dca:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/rtc_alarm.c:151
}
   12dce:	b007      	add	sp, #28
   12dd0:	bd30      	pop	{r4, r5, pc}
   12dd2:	bf00      	nop
   12dd4:	40024000 	.word	0x40024000
   12dd8:	2007c4c0 	.word	0x2007c4c0
   12ddc:	00012cc3 	.word	0x00012cc3
   12de0:	2007c4d0 	.word	0x2007c4d0
   12de4:	00012ce7 	.word	0x00012ce7
   12de8:	e000ed04 	.word	0xe000ed04

00012dec <delay_us>:
delay_us():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:38
#include "fault_registers.h"



void delay_us(unsigned int microsec)
{
   12dec:	b570      	push	{r4, r5, r6, lr}
   12dee:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:39
    const uint64_t now = sys_get_uptime_us();
   12df0:	f7fd fb92 	bl	10518 <sys_get_uptime_us>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:40
    const uint64_t target = now + microsec;
   12df4:	1984      	adds	r4, r0, r6
   12df6:	f141 0500 	adc.w	r5, r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:43 (discriminator 1)

    /* Overflow shouldn't occur with 64-bit variable */
    while (sys_get_uptime_us() < target)
   12dfa:	f7fd fb8d 	bl	10518 <sys_get_uptime_us>
   12dfe:	42a9      	cmp	r1, r5
   12e00:	bf08      	it	eq
   12e02:	42a0      	cmpeq	r0, r4
   12e04:	d3f9      	bcc.n	12dfa <delay_us+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:47
    {
        ;
    }
}
   12e06:	bd70      	pop	{r4, r5, r6, pc}

00012e08 <is_freertos_running>:
is_freertos_running():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:66
        delay_us(1000 * millisec);
    }
}

char is_freertos_running()
{
   12e08:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:67
    return (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
   12e0a:	f7fe fd8b 	bl	11924 <xTaskGetSchedulerState>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:68
}
   12e0e:	1e83      	subs	r3, r0, #2
   12e10:	4258      	negs	r0, r3
   12e12:	4158      	adcs	r0, r3
   12e14:	bd08      	pop	{r3, pc}

00012e16 <delay_ms>:
delay_ms():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:50
{
   12e16:	b510      	push	{r4, lr}
   12e18:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:55
    if(is_freertos_running())
   12e1a:	f7ff fff5 	bl	12e08 <is_freertos_running>
   12e1e:	b120      	cbz	r0, 12e2a <delay_ms+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   12e20:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:63
}
   12e22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:57
        vTaskDelay(OS_MS(millisec));
   12e26:	f7fe bc89 	b.w	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   12e2a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   12e2e:	4360      	muls	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:63
}
   12e30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/src/utilities.c:61
        delay_us(1000 * millisec);
   12e34:	f7ff bfda 	b.w	12dec <delay_us>

00012e38 <tlm_component_find_by_name>:
tlm_component_find_by_name():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:29

/** Private member of this file */
static c_list_ptr mp_tlm_component_list = NULL;

static bool tlm_component_find_by_name(void *elm_ptr, void *arg1, void *arg2, void *arg3)
{
   12e38:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:32
    tlm_component *comp = elm_ptr;
    char *new_comp_name = arg1;
    return (0 != strcmp(comp->name, new_comp_name));
   12e3a:	6800      	ldr	r0, [r0, #0]
   12e3c:	f008 fc23 	bl	1b686 <strcmp>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:33
}
   12e40:	3000      	adds	r0, #0
   12e42:	bf18      	it	ne
   12e44:	2001      	movne	r0, #1
   12e46:	bd08      	pop	{r3, pc}

00012e48 <tlm_component_get_by_name>:
tlm_component_get_by_name():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:85

    return new_comp;
}

tlm_component* tlm_component_get_by_name(const char *name)
{
   12e48:	b507      	push	{r0, r1, r2, lr}
   12e4a:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:88
    tlm_component *comp = NULL;

    if (NULL != name) {
   12e4c:	b130      	cbz	r0, 12e5c <tlm_component_get_by_name+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:89
        comp = c_list_find_elm(mp_tlm_component_list, tlm_component_find_by_name,
   12e4e:	4602      	mov	r2, r0
   12e50:	4804      	ldr	r0, [pc, #16]	; (12e64 <tlm_component_get_by_name+0x1c>)
   12e52:	9300      	str	r3, [sp, #0]
   12e54:	4904      	ldr	r1, [pc, #16]	; (12e68 <tlm_component_get_by_name+0x20>)
   12e56:	6800      	ldr	r0, [r0, #0]
   12e58:	f7ff fdb2 	bl	129c0 <c_list_find_elm>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:94
                               (void*)name, NULL, NULL);
    }

    return comp;
}
   12e5c:	b003      	add	sp, #12
   12e5e:	f85d fb04 	ldr.w	pc, [sp], #4
   12e62:	bf00      	nop
   12e64:	2007c4d4 	.word	0x2007c4d4
   12e68:	00012e39 	.word	0x00012e39

00012e6c <tlm_component_add>:
tlm_component_add():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:44
{
   12e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45
    if (NULL == name || *name == '\0') {
   12e6e:	4606      	mov	r6, r0
   12e70:	b910      	cbnz	r0, 12e78 <tlm_component_add+0xc>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:46
        return NULL;
   12e72:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:82
}
   12e74:	4620      	mov	r0, r4
   12e76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:45 (discriminator 1)
    if (NULL == name || *name == '\0') {
   12e78:	7803      	ldrb	r3, [r0, #0]
   12e7a:	2b00      	cmp	r3, #0
   12e7c:	d0f9      	beq.n	12e72 <tlm_component_add+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:50
    if(NULL == mp_tlm_component_list) {
   12e7e:	4d15      	ldr	r5, [pc, #84]	; (12ed4 <tlm_component_add+0x68>)
   12e80:	682b      	ldr	r3, [r5, #0]
   12e82:	b913      	cbnz	r3, 12e8a <tlm_component_add+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:51
        mp_tlm_component_list = c_list_create();
   12e84:	f7ff fd76 	bl	12974 <c_list_create>
   12e88:	6028      	str	r0, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:55
    if (NULL != tlm_component_get_by_name(name)) {
   12e8a:	4630      	mov	r0, r6
   12e8c:	f7ff ffdc 	bl	12e48 <tlm_component_get_by_name>
   12e90:	4607      	mov	r7, r0
   12e92:	2800      	cmp	r0, #0
   12e94:	d1ed      	bne.n	12e72 <tlm_component_add+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:60
    tlm_component *new_comp = malloc(sizeof(tlm_component));
   12e96:	2008      	movs	r0, #8
   12e98:	f006 fed2 	bl	19c40 <malloc>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:61
    if(NULL == new_comp) {
   12e9c:	4604      	mov	r4, r0
   12e9e:	2800      	cmp	r0, #0
   12ea0:	d0e7      	beq.n	12e72 <tlm_component_add+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:67
    new_comp->name = name;
   12ea2:	e880 00c0 	stmia.w	r0, {r6, r7}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:68
    new_comp->var_list = c_list_create();
   12ea6:	f7ff fd65 	bl	12974 <c_list_create>
   12eaa:	6060      	str	r0, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:69
    if(NULL == new_comp->var_list) {
   12eac:	b918      	cbnz	r0, 12eb6 <tlm_component_add+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:70
        free(new_comp);
   12eae:	4620      	mov	r0, r4
   12eb0:	f006 fece 	bl	19c50 <free>
   12eb4:	e7dd      	b.n	12e72 <tlm_component_add+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:75
    if(!c_list_insert_elm_end(mp_tlm_component_list, new_comp)) {
   12eb6:	6828      	ldr	r0, [r5, #0]
   12eb8:	4621      	mov	r1, r4
   12eba:	f7ff fd65 	bl	12988 <c_list_insert_elm_end>
   12ebe:	4605      	mov	r5, r0
   12ec0:	2800      	cmp	r0, #0
   12ec2:	d1d7      	bne.n	12e74 <tlm_component_add+0x8>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:76
        free(new_comp->var_list);
   12ec4:	6860      	ldr	r0, [r4, #4]
   12ec6:	f006 fec3 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:77
        free(new_comp);
   12eca:	4620      	mov	r0, r4
   12ecc:	f006 fec0 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/tlm/src/c_tlm_comp.c:78
        return NULL;
   12ed0:	462c      	mov	r4, r5
   12ed2:	e7cf      	b.n	12e74 <tlm_component_add+0x8>
   12ed4:	2007c4d4 	.word	0x2007c4d4

00012ed8 <disk_initialize>:
disk_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:10
#include "spi_sem.h"



DSTATUS disk_initialize(BYTE drv)
{
   12ed8:	b510      	push	{r4, lr}
   12eda:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:13
    DSTATUS status = RES_PARERR;

    spi1_lock();
   12edc:	f7ff fc84 	bl	127e8 <spi1_lock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:15
    {
        switch(drv)
   12ee0:	b11c      	cbz	r4, 12eea <disk_initialize+0x12>
   12ee2:	2c01      	cmp	r4, #1
   12ee4:	d008      	beq.n	12ef8 <disk_initialize+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:19
        {
            case driveNumFlashMem: status = flash_initialize();    break;
            case driveNumSdCard:   status = sd_initialize();       break;
            default: status = RES_PARERR;    break;
   12ee6:	2404      	movs	r4, #4
   12ee8:	e002      	b.n	12ef0 <disk_initialize+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:17
            case driveNumFlashMem: status = flash_initialize();    break;
   12eea:	f000 fce3 	bl	138b4 <flash_initialize>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   12eee:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:22
        }
    }
    spi1_unlock();
   12ef0:	f7ff fc92 	bl	12818 <spi1_unlock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:25

    return status;
}
   12ef4:	4620      	mov	r0, r4
   12ef6:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:18
            case driveNumSdCard:   status = sd_initialize();       break;
   12ef8:	f000 f974 	bl	131e4 <sd_initialize>
   12efc:	e7f7      	b.n	12eee <disk_initialize+0x16>

00012efe <disk_status>:
disk_status():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:33
{
    DSTATUS status = RES_PARERR;

    // No mutex needed here: MUTEX_SECTION()
    {
        switch(drv)
   12efe:	b128      	cbz	r0, 12f0c <disk_status+0xe>
   12f00:	2801      	cmp	r0, #1
   12f02:	d001      	beq.n	12f08 <disk_status+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:38
        {
            // Flash memory is always good to go!
            case driveNumFlashMem: status = RES_OK;        break;
            case driveNumSdCard:   status = sd_status();   break;
            default: status = RES_PARERR;    break;
   12f04:	2004      	movs	r0, #4
   12f06:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:37
            case driveNumSdCard:   status = sd_status();   break;
   12f08:	f000 ba22 	b.w	13350 <sd_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:43
        }
    }

    return status;
}
   12f0c:	4770      	bx	lr

00012f0e <disk_read>:
disk_read():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:46

DRESULT disk_read (BYTE drv, BYTE *buff, DWORD sector, BYTE count)
{
   12f0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12f10:	4607      	mov	r7, r0
   12f12:	460c      	mov	r4, r1
   12f14:	4615      	mov	r5, r2
   12f16:	461e      	mov	r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:49
    DSTATUS status = RES_PARERR;

    spi1_lock();
   12f18:	f7ff fc66 	bl	127e8 <spi1_lock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:51
    {
        switch(drv)
   12f1c:	b11f      	cbz	r7, 12f26 <disk_read+0x18>
   12f1e:	2f01      	cmp	r7, #1
   12f20:	d00b      	beq.n	12f3a <disk_read+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:60
                break;
            case driveNumSdCard:
                status = sd_read(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   12f22:	2404      	movs	r4, #4
   12f24:	e005      	b.n	12f32 <disk_read+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:54
                status = flash_read_sectors(buff, sector, count);
   12f26:	4632      	mov	r2, r6
   12f28:	4629      	mov	r1, r5
   12f2a:	4620      	mov	r0, r4
   12f2c:	f000 fd0e 	bl	1394c <flash_read_sectors>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   12f30:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:64
                break;
        }
    }
    spi1_unlock();
   12f32:	f7ff fc71 	bl	12818 <spi1_unlock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:67

    return status;
}
   12f36:	4620      	mov	r0, r4
   12f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:57
                status = sd_read(buff, sector, count);
   12f3a:	4632      	mov	r2, r6
   12f3c:	4629      	mov	r1, r5
   12f3e:	4620      	mov	r0, r4
   12f40:	f000 fa0e 	bl	13360 <sd_read>
   12f44:	e7f4      	b.n	12f30 <disk_read+0x22>

00012f46 <disk_write>:
disk_write():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:70

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, BYTE count)
{
   12f46:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12f48:	4607      	mov	r7, r0
   12f4a:	460c      	mov	r4, r1
   12f4c:	4615      	mov	r5, r2
   12f4e:	461e      	mov	r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:73
    DSTATUS status = RES_PARERR;

    spi1_lock();
   12f50:	f7ff fc4a 	bl	127e8 <spi1_lock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:75
    {
        switch(drv)
   12f54:	b11f      	cbz	r7, 12f5e <disk_write+0x18>
   12f56:	2f01      	cmp	r7, #1
   12f58:	d00b      	beq.n	12f72 <disk_write+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:84
                break;
            case driveNumSdCard:
                status = sd_write(buff, sector, count);
                break;
            default:
                status = RES_PARERR;
   12f5a:	2404      	movs	r4, #4
   12f5c:	e005      	b.n	12f6a <disk_write+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:78
                status = flash_write_sectors((unsigned char*)buff, sector, count);
   12f5e:	4632      	mov	r2, r6
   12f60:	4629      	mov	r1, r5
   12f62:	4620      	mov	r0, r4
   12f64:	f000 fd1a 	bl	1399c <flash_write_sectors>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   12f68:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:88
                break;
        }
    }
    spi1_unlock();
   12f6a:	f7ff fc55 	bl	12818 <spi1_unlock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:91

    return status;
}
   12f6e:	4620      	mov	r0, r4
   12f70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:81
                status = sd_write(buff, sector, count);
   12f72:	4632      	mov	r2, r6
   12f74:	4629      	mov	r1, r5
   12f76:	4620      	mov	r0, r4
   12f78:	f000 fa3e 	bl	133f8 <sd_write>
   12f7c:	e7f4      	b.n	12f68 <disk_write+0x22>

00012f7e <disk_ioctl>:
disk_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl,void *buff)
{
   12f7e:	b570      	push	{r4, r5, r6, lr}
   12f80:	4606      	mov	r6, r0
   12f82:	460c      	mov	r4, r1
   12f84:	4615      	mov	r5, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:97
    DSTATUS status = RES_PARERR;

    spi1_lock();
   12f86:	f7ff fc2f 	bl	127e8 <spi1_lock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:99
    {
        switch(drv)
   12f8a:	b11e      	cbz	r6, 12f94 <disk_ioctl+0x16>
   12f8c:	2e01      	cmp	r6, #1
   12f8e:	d00a      	beq.n	12fa6 <disk_ioctl+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:103
        {
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
            default:            status = RES_PARERR; break;
   12f90:	2404      	movs	r4, #4
   12f92:	e004      	b.n	12f9e <disk_ioctl+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:101
            case driveNumFlashMem: status = flash_ioctl(ctrl, buff);   break;
   12f94:	4629      	mov	r1, r5
   12f96:	4620      	mov	r0, r4
   12f98:	f000 fd26 	bl	139e8 <flash_ioctl>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   12f9c:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:106
        }
    }
    spi1_unlock();
   12f9e:	f7ff fc3b 	bl	12818 <spi1_unlock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:109

    return status;
}
   12fa2:	4620      	mov	r0, r4
   12fa4:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/diskio.c:102
            case driveNumSdCard:   status = sd_ioctl(ctrl, buff);      break;
   12fa6:	4629      	mov	r1, r5
   12fa8:	4620      	mov	r0, r4
   12faa:	f000 fa7f 	bl	134ac <sd_ioctl>
   12fae:	e7f5      	b.n	12f9c <disk_ioctl+0x1e>

00012fb0 <sys_get_uptime_ms>:
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   12fb0:	b508      	push	{r3, lr}
   12fb2:	f7fd fab1 	bl	10518 <sys_get_uptime_us>
   12fb6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   12fba:	2300      	movs	r3, #0
   12fbc:	f006 fa62 	bl	19484 <__aeabi_uldivmod>
   12fc0:	bd08      	pop	{r3, pc}
   12fc2:	Address 0x0000000000012fc2 is out of bounds.


00012fc4 <ssp1_set_max_clock>:
ssp1_set_max_clock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:55
 * Sets SPI Clock speed
 * @param max_clock_mhz   The maximum speed of this SPI in Megahertz
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp1_set_max_clock(unsigned int max_clock_mhz)
{
   12fc4:	b510      	push	{r4, lr}
   12fc6:	4604      	mov	r4, r0
ssp_set_max_clock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:42
 * @note The speed may be set lower to max_clock_mhz if it cannot be attained.
 */
static inline void ssp_set_max_clock(LPC_SSP_TypeDef *pSSP, unsigned int max_clock_mhz)
{
    unsigned int divider = 2;
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   12fc8:	f7fd fc34 	bl	10834 <sys_get_cpu_clock>
   12fcc:	4b07      	ldr	r3, [pc, #28]	; (12fec <ssp1_set_max_clock+0x28>)
   12fce:	fbb0 f0f3 	udiv	r0, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   12fd2:	2302      	movs	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    // Keep scaling down divider until calculated is higher
    // Example:
    // 60, need 18
    // 60/2   18 < 30 YES
    // 60/4   18 < 15 NO
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   12fd4:	fbb0 f2f3 	udiv	r2, r0, r3
   12fd8:	4294      	cmp	r4, r2
   12fda:	d302      	bcc.n	12fe2 <ssp1_set_max_clock+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    {
        divider += 2;
    }

    pSSP->CPSR = divider;
   12fdc:	4a04      	ldr	r2, [pc, #16]	; (12ff0 <ssp1_set_max_clock+0x2c>)
   12fde:	6113      	str	r3, [r2, #16]
ssp1_set_max_clock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:57
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
}
   12fe0:	bd10      	pop	{r4, pc}
ssp_set_max_clock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   12fe2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   12fe6:	d0f9      	beq.n	12fdc <ssp1_set_max_clock+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   12fe8:	3302      	adds	r3, #2
   12fea:	e7f3      	b.n	12fd4 <ssp1_set_max_clock+0x10>
   12fec:	000f4240 	.word	0x000f4240
   12ff0:	40030000 	.word	0x40030000

00012ff4 <ssp1_exchange_byte>:
ssp_exchange_byte():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77
 * @param out   The byte to send out
 * @returns     The byte received over SPI
 */
static inline char ssp_exchange_byte(LPC_SSP_TypeDef *pSSP, char out)
{
    pSSP->DR = out;
   12ff4:	4b03      	ldr	r3, [pc, #12]	; (13004 <ssp1_exchange_byte+0x10>)
   12ff6:	6098      	str	r0, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   12ff8:	68da      	ldr	r2, [r3, #12]
   12ffa:	06d2      	lsls	r2, r2, #27
   12ffc:	d4fc      	bmi.n	12ff8 <ssp1_exchange_byte+0x4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   12ffe:	6898      	ldr	r0, [r3, #8]
ssp1_exchange_byte():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:67
 * @returns     The byte received over SPI
 */
static inline char ssp1_exchange_byte(char out)
{
    return ssp_exchange_byte(LPC_SSP1, out);
}
   13000:	b2c0      	uxtb	r0, r0
   13002:	4770      	bx	lr
   13004:	40030000 	.word	0x40030000

00013008 <wait_ready>:
wait_ready():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:59
{
    return SD_DESELECT();
}

BYTE wait_ready(void)
{
   13008:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:63
    BYTE res;

    /* Wait for ready in timeout of 500ms */
    UINT timeout = sys_get_uptime_ms() + 500;
   1300a:	f7ff ffd1 	bl	12fb0 <sys_get_uptime_ms>
   1300e:	f500 74fa 	add.w	r4, r0, #500	; 0x1f4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:64
    rcvr_spi();
   13012:	20ff      	movs	r0, #255	; 0xff
   13014:	f7ff ffee 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:69

    do
    {
        res = rcvr_spi();
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13018:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   1301a:	20ff      	movs	r0, #255	; 0xff
   1301c:	f7ff ffea 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13020:	28ff      	cmp	r0, #255	; 0xff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:68 (discriminator 2)
        res = rcvr_spi();
   13022:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 2)
    } while ((res != 0xFF) && sys_get_uptime_ms() < timeout);
   13024:	d005      	beq.n	13032 <wait_ready+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:69 (discriminator 1)
   13026:	f7ff ffc3 	bl	12fb0 <sys_get_uptime_ms>
   1302a:	42a9      	cmp	r1, r5
   1302c:	bf08      	it	eq
   1302e:	42a0      	cmpeq	r0, r4
   13030:	d3f3      	bcc.n	1301a <wait_ready+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:72

    return res;
}
   13032:	4630      	mov	r0, r6
   13034:	bd70      	pop	{r4, r5, r6, pc}
   13036:	Address 0x0000000000013036 is out of bounds.


00013038 <power_off>:
power_off():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:80
{
    // Power on the SD-Card Socket if hardware allows
}

void power_off(void)
{
   13038:	b538      	push	{r3, r4, r5, lr}
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54


/** @{ Functions to chip-select, de-select devices and read pin signals */
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   1303a:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   1303e:	4c05      	ldr	r4, [pc, #20]	; (13054 <power_off+0x1c>)
   13040:	61e5      	str	r5, [r4, #28]
power_off():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:84
    if (!get_spi())
        return;

    wait_ready();
   13042:	f7ff ffe1 	bl	13008 <wait_ready>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:88
    release_spi();

    // Power off the SD-Card Socket if hardware allows
    g_disk_status |= STA_NOINIT; // Set STA_NOINIT
   13046:	4a04      	ldr	r2, [pc, #16]	; (13058 <power_off+0x20>)
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13048:	61a5      	str	r5, [r4, #24]
power_off():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:88
   1304a:	7813      	ldrb	r3, [r2, #0]
   1304c:	f043 0301 	orr.w	r3, r3, #1
   13050:	7013      	strb	r3, [r2, #0]
   13052:	bd38      	pop	{r3, r4, r5, pc}
   13054:	2009c020 	.word	0x2009c020
   13058:	2007c0cc 	.word	0x2007c0cc

0001305c <rcvr_datablock>:
rcvr_datablock():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:94
}

int rcvr_datablock(BYTE *buff, /* Data buffer to store received data */
UINT btr /* Byte count (must be multiple of 4) */
)
{
   1305c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   13060:	4606      	mov	r6, r0
   13062:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:96
    BYTE token;
    UINT timeout = sys_get_uptime_ms() + 100;
   13064:	f7ff ffa4 	bl	12fb0 <sys_get_uptime_ms>
   13068:	3064      	adds	r0, #100	; 0x64
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:100
    do
    { /* Wait for data packet in timeout of 100ms */
        token = rcvr_spi();
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   1306a:	4680      	mov	r8, r0
   1306c:	f04f 0900 	mov.w	r9, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:99 (discriminator 2)
        token = rcvr_spi();
   13070:	20ff      	movs	r0, #255	; 0xff
   13072:	f7ff ffbf 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 2)
    } while ((token == 0xFF) && sys_get_uptime_ms() < timeout);
   13076:	28ff      	cmp	r0, #255	; 0xff
   13078:	d108      	bne.n	1308c <rcvr_datablock+0x30>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:100 (discriminator 1)
   1307a:	f7ff ff99 	bl	12fb0 <sys_get_uptime_ms>
   1307e:	4549      	cmp	r1, r9
   13080:	bf08      	it	eq
   13082:	4540      	cmpeq	r0, r8
   13084:	d3f4      	bcc.n	13070 <rcvr_datablock+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:103

    if (token != 0xFE)
        return 0; /* If not valid data token, return with error */
   13086:	2000      	movs	r0, #0
   13088:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:102
    if (token != 0xFE)
   1308c:	28fe      	cmp	r0, #254	; 0xfe
   1308e:	d1fa      	bne.n	13086 <rcvr_datablock+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:108

    /**
     * If it's worth doing DMA, then do it:
     */
    if (OPTIMIZE_SSP_SPI_READ && btr > 16)
   13090:	2d10      	cmp	r5, #16
   13092:	d90e      	bls.n	130b2 <rcvr_datablock+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:110
    {
        ssp1_dma_transfer_block(buff, 512, 0);
   13094:	2200      	movs	r2, #0
   13096:	f44f 7100 	mov.w	r1, #512	; 0x200
   1309a:	4630      	mov	r0, r6
   1309c:	f7ff fb44 	bl	12728 <ssp1_dma_transfer_block>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:124
            *buff++ = rcvr_spi();
            *buff++ = rcvr_spi();
        } while (btr -= 4);
    }

    rcvr_spi(); /* Discard CRC */
   130a0:	20ff      	movs	r0, #255	; 0xff
   130a2:	f7ff ffa7 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:125
    rcvr_spi();
   130a6:	20ff      	movs	r0, #255	; 0xff
   130a8:	f7ff ffa4 	bl	12ff4 <ssp1_exchange_byte>
   130ac:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:128

    return 1; /* Return with success */
}
   130ae:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   130b2:	1d34      	adds	r4, r6, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   130b4:	3504      	adds	r5, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:117
            *buff++ = rcvr_spi();
   130b6:	20ff      	movs	r0, #255	; 0xff
   130b8:	f7ff ff9c 	bl	12ff4 <ssp1_exchange_byte>
   130bc:	f804 0c04 	strb.w	r0, [r4, #-4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:118
            *buff++ = rcvr_spi();
   130c0:	20ff      	movs	r0, #255	; 0xff
   130c2:	f7ff ff97 	bl	12ff4 <ssp1_exchange_byte>
   130c6:	f804 0c03 	strb.w	r0, [r4, #-3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:119
            *buff++ = rcvr_spi();
   130ca:	20ff      	movs	r0, #255	; 0xff
   130cc:	f7ff ff92 	bl	12ff4 <ssp1_exchange_byte>
   130d0:	f804 0c02 	strb.w	r0, [r4, #-2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:120
            *buff++ = rcvr_spi();
   130d4:	20ff      	movs	r0, #255	; 0xff
   130d6:	f7ff ff8d 	bl	12ff4 <ssp1_exchange_byte>
   130da:	3404      	adds	r4, #4
   130dc:	f804 0c05 	strb.w	r0, [r4, #-5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:121
        } while (btr -= 4);
   130e0:	1b2b      	subs	r3, r5, r4
   130e2:	42de      	cmn	r6, r3
   130e4:	d1e7      	bne.n	130b6 <rcvr_datablock+0x5a>
   130e6:	e7db      	b.n	130a0 <rcvr_datablock+0x44>

000130e8 <xmit_datablock>:
xmit_datablock():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:134

#if _READONLY == 0
int xmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
BYTE token /* Data/Stop token */
)
{
   130e8:	b570      	push	{r4, r5, r6, lr}
   130ea:	4606      	mov	r6, r0
   130ec:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:137
    BYTE resp;

    if (wait_ready() != 0xFF)
   130ee:	f7ff ff8b 	bl	13008 <wait_ready>
   130f2:	28ff      	cmp	r0, #255	; 0xff
   130f4:	4604      	mov	r4, r0
   130f6:	d119      	bne.n	1312c <xmit_datablock+0x44>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:140
        return 0;

    xmit_spi(token);
   130f8:	4628      	mov	r0, r5
   130fa:	f7ff ff7b 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:142
    /* Xmit data token */
    if (token != 0xFD)
   130fe:	2dfd      	cmp	r5, #253	; 0xfd
   13100:	d016      	beq.n	13130 <xmit_datablock+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:145
    { /* Is data token */
#if OPTIMIZE_SSP_SPI_WRITE
        ssp1_dma_transfer_block((unsigned char*) buff, 512, 0xff);
   13102:	4622      	mov	r2, r4
   13104:	f44f 7100 	mov.w	r1, #512	; 0x200
   13108:	4630      	mov	r0, r6
   1310a:	f7ff fb0d 	bl	12728 <ssp1_dma_transfer_block>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:154
        { /* Xmit the 512 byte data block to MMC */
            xmit_spi(*buff++);
            xmit_spi(*buff++);
        }while (--wc);
#endif
        xmit_spi(0xFF);
   1310e:	4620      	mov	r0, r4
   13110:	f7ff ff70 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:156
        /* CRC (Dummy) */
        xmit_spi(0xFF);
   13114:	4620      	mov	r0, r4
   13116:	f7ff ff6d 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:157
        resp = rcvr_spi(); /* Reveive data response */
   1311a:	4620      	mov	r0, r4
   1311c:	f7ff ff6a 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:158
        if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
   13120:	f000 001f 	and.w	r0, r0, #31
   13124:	1f43      	subs	r3, r0, #5
   13126:	4258      	negs	r0, r3
   13128:	4158      	adcs	r0, r3
   1312a:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:138
        return 0;
   1312c:	2000      	movs	r0, #0
   1312e:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:162
            return 0;
    }

    return 1;
   13130:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:163
}
   13132:	bd70      	pop	{r4, r5, r6, pc}

00013134 <send_cmd>:
send_cmd():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:172
DWORD arg /* Argument */
)
{
    BYTE n, res;

    if (cmd & 0x80)
   13134:	0602      	lsls	r2, r0, #24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:169
{
   13136:	b538      	push	{r3, r4, r5, lr}
   13138:	4604      	mov	r4, r0
   1313a:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:172
    if (cmd & 0x80)
   1313c:	d507      	bpl.n	1314e <send_cmd+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:175
    { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
        cmd &= 0x7F;
        res = send_cmd(CMD55, 0);
   1313e:	2100      	movs	r1, #0
   13140:	2077      	movs	r0, #119	; 0x77
   13142:	f7ff fff7 	bl	13134 <send_cmd>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:176
        if (res > 1)
   13146:	2801      	cmp	r0, #1
   13148:	d836      	bhi.n	131b8 <send_cmd+0x84>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:174
        cmd &= 0x7F;
   1314a:	f004 047f 	and.w	r4, r4, #127	; 0x7f
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
   1314e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13152:	4b1a      	ldr	r3, [pc, #104]	; (131bc <send_cmd+0x88>)
   13154:	619a      	str	r2, [r3, #24]
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13156:	61da      	str	r2, [r3, #28]
send_cmd():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:184

    /* Select the card and wait for ready */
    SD_DESELECT();
    SD_SELECT(); // Wait for card ready

    if (wait_ready() != 0xFF)
   13158:	f7ff ff56 	bl	13008 <wait_ready>
   1315c:	28ff      	cmp	r0, #255	; 0xff
   1315e:	d12a      	bne.n	131b6 <send_cmd+0x82>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:192
        rprintf("send_cmd: Error, wait_ready() did not return 0xFF\n");
#endif
        return 0xFF;
    }

    /* Send command packet */xmit_spi(cmd);
   13160:	4620      	mov	r0, r4
   13162:	f7ff ff47 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:194
    /* Start + Command index */
    xmit_spi((BYTE)(arg >> 24));
   13166:	0e28      	lsrs	r0, r5, #24
   13168:	f7ff ff44 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:196
    /* Argument[31..24] */
    xmit_spi((BYTE)(arg >> 16));
   1316c:	f3c5 4007 	ubfx	r0, r5, #16, #8
   13170:	f7ff ff40 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:198
    /* Argument[23..16] */
    xmit_spi((BYTE)(arg >> 8));
   13174:	f3c5 2007 	ubfx	r0, r5, #8, #8
   13178:	f7ff ff3c 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:200
    /* Argument[15..8] */
    xmit_spi((BYTE)arg);
   1317c:	b2e8      	uxtb	r0, r5
   1317e:	f7ff ff39 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:203
    /* Argument[7..0] */
    n = 0x01; /* Dummy CRC + Stop */
    if (cmd == CMD0)
   13182:	2c40      	cmp	r4, #64	; 0x40
   13184:	d015      	beq.n	131b2 <send_cmd+0x7e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:206
        n = 0x95; /* Valid CRC for CMD0(0) */
    if (cmd == CMD8)
        n = 0x87; /* Valid CRC for CMD8(0x1AA) */
   13186:	2c48      	cmp	r4, #72	; 0x48
   13188:	bf14      	ite	ne
   1318a:	2001      	movne	r0, #1
   1318c:	2087      	moveq	r0, #135	; 0x87
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:207
    xmit_spi(n);
   1318e:	f7ff ff31 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:210

    /* Receive command response */
    if (cmd == CMD12)
   13192:	2c4c      	cmp	r4, #76	; 0x4c
   13194:	d102      	bne.n	1319c <send_cmd+0x68>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:211
        rcvr_spi(); /* Skip a stuff byte when stop reading */
   13196:	20ff      	movs	r0, #255	; 0xff
   13198:	f7ff ff2c 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:202 (discriminator 2)
    n = 0x01; /* Dummy CRC + Stop */
   1319c:	210a      	movs	r1, #10
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:216 (discriminator 2)
    n = 10; /* Wait for a valid response in timeout of 10 attempts */

    do
    {
        res = rcvr_spi();
   1319e:	20ff      	movs	r0, #255	; 0xff
   131a0:	f7ff ff28 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 2)
    } while ((res & 0x80) && --n);
   131a4:	0603      	lsls	r3, r0, #24
   131a6:	d507      	bpl.n	131b8 <send_cmd+0x84>
   131a8:	3901      	subs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:217 (discriminator 1)
   131aa:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
   131ae:	d1f6      	bne.n	1319e <send_cmd+0x6a>
   131b0:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:204
        n = 0x95; /* Valid CRC for CMD0(0) */
   131b2:	2095      	movs	r0, #149	; 0x95
   131b4:	e7eb      	b.n	1318e <send_cmd+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:189
        return 0xFF;
   131b6:	20ff      	movs	r0, #255	; 0xff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:224
#if(DEBUG_SD_CARD)
    if (n == 0) rprintf("send_cmd: Timeout during card read\n");
#endif

    return res; /* Return with the response value */
}
   131b8:	bd38      	pop	{r3, r4, r5, pc}
   131ba:	bf00      	nop
   131bc:	2009c020 	.word	0x2009c020

000131c0 <sd_update_card_status>:
sd_update_card_status():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:587
}
#endif /* _USE_IOCTL != 0 */

void sd_update_card_status(void)
{
    BYTE s = g_disk_status;
   131c0:	4a06      	ldr	r2, [pc, #24]	; (131dc <sd_update_card_status+0x1c>)
board_io_sd_card_cd_sig():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:60

static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   131c2:	4907      	ldr	r1, [pc, #28]	; (131e0 <sd_update_card_status+0x20>)
sd_update_card_status():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:587
   131c4:	7813      	ldrb	r3, [r2, #0]
board_io_sd_card_cd_sig():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:60
   131c6:	6949      	ldr	r1, [r1, #20]
sd_update_card_status():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:587
   131c8:	b2db      	uxtb	r3, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:589

    if (SD_PRESENT()) {
   131ca:	0149      	lsls	r1, r1, #5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:590
        s &= ~STA_NODISK;
   131cc:	bf54      	ite	pl
   131ce:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:593
    }
    else {
        s |= (STA_NODISK | STA_NOINIT);
   131d2:	f043 0303 	orrmi.w	r3, r3, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:596
    }

    g_disk_status = s;
   131d6:	7013      	strb	r3, [r2, #0]
   131d8:	4770      	bx	lr
   131da:	bf00      	nop
   131dc:	2007c0cc 	.word	0x2007c0cc
   131e0:	2009c020 	.word	0x2009c020

000131e4 <sd_initialize>:
sd_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:227
{
   131e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:230
    sd_update_card_status();
   131e8:	f7ff ffea 	bl	131c0 <sd_update_card_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:232
    if (g_disk_status & STA_NODISK)
   131ec:	4b55      	ldr	r3, [pc, #340]	; (13344 <sd_initialize+0x160>)
   131ee:	781a      	ldrb	r2, [r3, #0]
   131f0:	461e      	mov	r6, r3
   131f2:	f012 0f02 	tst.w	r2, #2
   131f6:	d004      	beq.n	13202 <sd_initialize+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:234
        return g_disk_status; /* No card in the socket */
   131f8:	7818      	ldrb	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   131fa:	b2c0      	uxtb	r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:328
}
   131fc:	b003      	add	sp, #12
   131fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:238
    FCLK_SLOW();
   13202:	2001      	movs	r0, #1
   13204:	f7ff fede 	bl	12fc4 <ssp1_set_max_clock>
   13208:	240a      	movs	r4, #10
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:240 (discriminator 3)
        rcvr_spi(); /* 80 dummy clocks */
   1320a:	20ff      	movs	r0, #255	; 0xff
   1320c:	3c01      	subs	r4, #1
   1320e:	f7ff fef1 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:239 (discriminator 3)
    for (n = 10; n; n--)
   13212:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   13216:	d1f8      	bne.n	1320a <sd_initialize+0x26>
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13218:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1321c:	4f4a      	ldr	r7, [pc, #296]	; (13348 <sd_initialize+0x164>)
sd_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:245
    if (send_cmd(CMD0, 0) == 1)
   1321e:	4621      	mov	r1, r4
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54
   13220:	61fb      	str	r3, [r7, #28]
sd_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:245
   13222:	2040      	movs	r0, #64	; 0x40
   13224:	f7ff ff86 	bl	13134 <send_cmd>
   13228:	2801      	cmp	r0, #1
   1322a:	4680      	mov	r8, r0
   1322c:	d013      	beq.n	13256 <sd_initialize+0x72>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:244
    ty = 0;
   1322e:	f04f 0800 	mov.w	r8, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:314
    g_card_type = ty;
   13232:	4b46      	ldr	r3, [pc, #280]	; (1334c <sd_initialize+0x168>)
   13234:	f883 8000 	strb.w	r8, [r3]
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13238:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1323c:	61bb      	str	r3, [r7, #24]
sd_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:317
    if (ty)
   1323e:	f1b8 0f00 	cmp.w	r8, #0
   13242:	d07b      	beq.n	1333c <sd_initialize+0x158>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13244:	7833      	ldrb	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   13246:	2018      	movs	r0, #24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:319
        g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
   13248:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   1324c:	7033      	strb	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:320
        FCLK_FAST();
   1324e:	f7ff feb9 	bl	12fc4 <ssp1_set_max_clock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:327
    return g_disk_status;
   13252:	7830      	ldrb	r0, [r6, #0]
   13254:	e7d1      	b.n	131fa <sd_initialize+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   13256:	f7ff feab 	bl	12fb0 <sys_get_uptime_ms>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   1325a:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:248
        UINT timeout = sys_get_uptime_ms() + 1000;
   1325e:	f500 757a 	add.w	r5, r0, #1000	; 0x3e8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:249
        if (send_cmd(CMD8, 0x1AA) == 1)
   13262:	2048      	movs	r0, #72	; 0x48
   13264:	f7ff ff66 	bl	13134 <send_cmd>
   13268:	2801      	cmp	r0, #1
   1326a:	d140      	bne.n	132ee <sd_initialize+0x10a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:256 (discriminator 3)
                ocr[n] = rcvr_spi(); /* Get trailing return value of R7 resp */
   1326c:	f10d 0804 	add.w	r8, sp, #4
   13270:	20ff      	movs	r0, #255	; 0xff
   13272:	f7ff febf 	bl	12ff4 <ssp1_exchange_byte>
   13276:	f808 0004 	strb.w	r0, [r8, r4]
   1327a:	3401      	adds	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:255 (discriminator 3)
            for (n = 0; n < 4; n++)
   1327c:	2c04      	cmp	r4, #4
   1327e:	d1f7      	bne.n	13270 <sd_initialize+0x8c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:257
            if (ocr[2] == 0x01 && ocr[3] == 0xAA)
   13280:	f89d 3006 	ldrb.w	r3, [sp, #6]
   13284:	2b01      	cmp	r3, #1
   13286:	d1d2      	bne.n	1322e <sd_initialize+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:257 (discriminator 1)
   13288:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1328c:	2baa      	cmp	r3, #170	; 0xaa
   1328e:	d1ce      	bne.n	1322e <sd_initialize+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:263
                while (sys_get_uptime_ms() < timeout
   13290:	462c      	mov	r4, r5
   13292:	2500      	movs	r5, #0
   13294:	f7ff fe8c 	bl	12fb0 <sys_get_uptime_ms>
   13298:	42a9      	cmp	r1, r5
   1329a:	bf08      	it	eq
   1329c:	42a0      	cmpeq	r0, r4
   1329e:	d31e      	bcc.n	132de <sd_initialize+0xfa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:267
                if (sys_get_uptime_ms() < timeout && send_cmd(CMD58, 0) == 0)
   132a0:	f7ff fe86 	bl	12fb0 <sys_get_uptime_ms>
   132a4:	42a9      	cmp	r1, r5
   132a6:	bf08      	it	eq
   132a8:	42a0      	cmpeq	r0, r4
   132aa:	d2c0      	bcs.n	1322e <sd_initialize+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:267 (discriminator 1)
   132ac:	2100      	movs	r1, #0
   132ae:	207a      	movs	r0, #122	; 0x7a
   132b0:	f7ff ff40 	bl	13134 <send_cmd>
   132b4:	2800      	cmp	r0, #0
   132b6:	d1ba      	bne.n	1322e <sd_initialize+0x4a>
   132b8:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:270 (discriminator 3)
                        ocr[n] = rcvr_spi();
   132ba:	20ff      	movs	r0, #255	; 0xff
   132bc:	f7ff fe9a 	bl	12ff4 <ssp1_exchange_byte>
   132c0:	f808 0001 	strb.w	r0, [r8, r1]
   132c4:	3101      	adds	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:269 (discriminator 3)
                    for (n = 0; n < 4; n++)
   132c6:	2904      	cmp	r1, #4
   132c8:	d1f7      	bne.n	132ba <sd_initialize+0xd6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:271
                    ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
   132ca:	f89d 3004 	ldrb.w	r3, [sp, #4]
   132ce:	f013 0f40 	tst.w	r3, #64	; 0x40
   132d2:	bf14      	ite	ne
   132d4:	f04f 080c 	movne.w	r8, #12
   132d8:	f04f 0804 	moveq.w	r8, #4
   132dc:	e7a9      	b.n	13232 <sd_initialize+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:264
                        && send_cmd(ACMD41, 1UL << 30))
   132de:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   132e2:	20e9      	movs	r0, #233	; 0xe9
   132e4:	f7ff ff26 	bl	13134 <send_cmd>
   132e8:	2800      	cmp	r0, #0
   132ea:	d1d3      	bne.n	13294 <sd_initialize+0xb0>
   132ec:	e7d8      	b.n	132a0 <sd_initialize+0xbc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:286
            if (send_cmd(ACMD41, 0) <= 1)
   132ee:	4621      	mov	r1, r4
   132f0:	20e9      	movs	r0, #233	; 0xe9
   132f2:	f7ff ff1f 	bl	13134 <send_cmd>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   132f6:	2802      	cmp	r0, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   132f8:	462c      	mov	r4, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:294
                cmd = CMD1; /* MMC */
   132fa:	bf36      	itet	cc
   132fc:	f04f 09e9 	movcc.w	r9, #233	; 0xe9
   13300:	f04f 0941 	movcs.w	r9, #65	; 0x41
   13304:	f04f 0802 	movcc.w	r8, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:296
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   13308:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 2)
   1330a:	f7ff fe51 	bl	12fb0 <sys_get_uptime_ms>
   1330e:	42a9      	cmp	r1, r5
   13310:	bf08      	it	eq
   13312:	42a0      	cmpeq	r0, r4
   13314:	d30b      	bcc.n	1332e <sd_initialize+0x14a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:299
            if ((sys_get_uptime_ms() < timeout) || send_cmd(CMD16, 512) != 0) /* Set R/W block length to 512 */
   13316:	f7ff fe4b 	bl	12fb0 <sys_get_uptime_ms>
   1331a:	42a9      	cmp	r1, r5
   1331c:	bf08      	it	eq
   1331e:	42a0      	cmpeq	r0, r4
   13320:	d387      	bcc.n	13232 <sd_initialize+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:299 (discriminator 1)
   13322:	f44f 7100 	mov.w	r1, #512	; 0x200
   13326:	2050      	movs	r0, #80	; 0x50
   13328:	f7ff ff04 	bl	13134 <send_cmd>
   1332c:	e781      	b.n	13232 <sd_initialize+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:296 (discriminator 1)
            while (sys_get_uptime_ms() < timeout && send_cmd(cmd, 0))
   1332e:	2100      	movs	r1, #0
   13330:	4648      	mov	r0, r9
   13332:	f7ff feff 	bl	13134 <send_cmd>
   13336:	2800      	cmp	r0, #0
   13338:	d1e7      	bne.n	1330a <sd_initialize+0x126>
   1333a:	e7ec      	b.n	13316 <sd_initialize+0x132>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:324
        power_off();
   1333c:	f7ff fe7c 	bl	13038 <power_off>
   13340:	e787      	b.n	13252 <sd_initialize+0x6e>
   13342:	bf00      	nop
   13344:	2007c0cc 	.word	0x2007c0cc
   13348:	2009c020 	.word	0x2009c020
   1334c:	2007c4d8 	.word	0x2007c4d8

00013350 <sd_status>:
sd_status():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:331
{
   13350:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:332
    sd_update_card_status();
   13352:	f7ff ff35 	bl	131c0 <sd_update_card_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:333
    return g_disk_status;
   13356:	4b01      	ldr	r3, [pc, #4]	; (1335c <sd_status+0xc>)
   13358:	7818      	ldrb	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:334
}
   1335a:	bd08      	pop	{r3, pc}
   1335c:	2007c0cc 	.word	0x2007c0cc

00013360 <sd_read>:
sd_read():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:340
{
   13360:	b570      	push	{r4, r5, r6, lr}
   13362:	4614      	mov	r4, r2
   13364:	4606      	mov	r6, r0
   13366:	4608      	mov	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:341
    sd_update_card_status();
   13368:	f7ff ff2a 	bl	131c0 <sd_update_card_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:343
    if (!count)
   1336c:	2c00      	cmp	r4, #0
   1336e:	d038      	beq.n	133e2 <sd_read+0x82>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:345
    if (g_disk_status & STA_NOINIT)
   13370:	4b1e      	ldr	r3, [pc, #120]	; (133ec <sd_read+0x8c>)
   13372:	781b      	ldrb	r3, [r3, #0]
   13374:	07da      	lsls	r2, r3, #31
   13376:	d436      	bmi.n	133e6 <sd_read+0x86>
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13378:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1337c:	4d1c      	ldr	r5, [pc, #112]	; (133f0 <sd_read+0x90>)
   1337e:	61ea      	str	r2, [r5, #28]
sd_read():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:350
    if (!(g_card_type & CT_BLOCK))
   13380:	4a1c      	ldr	r2, [pc, #112]	; (133f4 <sd_read+0x94>)
   13382:	7812      	ldrb	r2, [r2, #0]
   13384:	0713      	lsls	r3, r2, #28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:351
        sector *= 512; /* Convert to byte address if needed */
   13386:	bf58      	it	pl
   13388:	0240      	lslpl	r0, r0, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   1338a:	2c01      	cmp	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   1338c:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:353
    if (count == 1)
   1338e:	d112      	bne.n	133b6 <sd_read+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:355
        if ((send_cmd(CMD17, sector) == 0) /* READ_SINGLE_BLOCK */
   13390:	2051      	movs	r0, #81	; 0x51
   13392:	f7ff fecf 	bl	13134 <send_cmd>
   13396:	b938      	cbnz	r0, 133a8 <sd_read+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:356
        && rcvr_datablock(buff, 512))
   13398:	f44f 7100 	mov.w	r1, #512	; 0x200
   1339c:	4630      	mov	r0, r6
   1339e:	f7ff fe5d 	bl	1305c <rcvr_datablock>
   133a2:	fab0 f480 	clz	r4, r0
   133a6:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   133a8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_read():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:374
    return count ? RES_ERROR : RES_OK;
   133ac:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
   133ae:	61ab      	str	r3, [r5, #24]
sd_read():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:374
   133b0:	bf18      	it	ne
   133b2:	2001      	movne	r0, #1
   133b4:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:361
        if (send_cmd(CMD18, sector) == 0)
   133b6:	2052      	movs	r0, #82	; 0x52
   133b8:	f7ff febc 	bl	13134 <send_cmd>
   133bc:	2800      	cmp	r0, #0
   133be:	d1f3      	bne.n	133a8 <sd_read+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:365
                if (!rcvr_datablock(buff, 512))
   133c0:	f44f 7100 	mov.w	r1, #512	; 0x200
   133c4:	4630      	mov	r0, r6
   133c6:	f7ff fe49 	bl	1305c <rcvr_datablock>
   133ca:	b128      	cbz	r0, 133d8 <sd_read+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   133cc:	3c01      	subs	r4, #1
   133ce:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:367
                buff += 512;
   133d2:	f506 7600 	add.w	r6, r6, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:368
            } while (--count);
   133d6:	d1f3      	bne.n	133c0 <sd_read+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:369
            send_cmd(CMD12, 0); /* STOP_TRANSMISSION */
   133d8:	2100      	movs	r1, #0
   133da:	204c      	movs	r0, #76	; 0x4c
   133dc:	f7ff feaa 	bl	13134 <send_cmd>
   133e0:	e7e2      	b.n	133a8 <sd_read+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:344
        return RES_PARERR;
   133e2:	2004      	movs	r0, #4
   133e4:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:346
        return RES_NOTRDY;
   133e6:	2003      	movs	r0, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:375
}
   133e8:	bd70      	pop	{r4, r5, r6, pc}
   133ea:	bf00      	nop
   133ec:	2007c0cc 	.word	0x2007c0cc
   133f0:	2009c020 	.word	0x2009c020
   133f4:	2007c4d8 	.word	0x2007c4d8

000133f8 <sd_write>:
sd_write():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:386
{
   133f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   133fa:	4614      	mov	r4, r2
   133fc:	4606      	mov	r6, r0
   133fe:	460f      	mov	r7, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:387
    sd_update_card_status();
   13400:	f7ff fede 	bl	131c0 <sd_update_card_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:389
    if (!count)
   13404:	2c00      	cmp	r4, #0
   13406:	d044      	beq.n	13492 <sd_write+0x9a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:391
    if (g_disk_status & STA_NOINIT)
   13408:	4b25      	ldr	r3, [pc, #148]	; (134a0 <sd_write+0xa8>)
   1340a:	781a      	ldrb	r2, [r3, #0]
   1340c:	07d1      	lsls	r1, r2, #31
   1340e:	d442      	bmi.n	13496 <sd_write+0x9e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:393
    if (g_disk_status & STA_PROTECT)
   13410:	781b      	ldrb	r3, [r3, #0]
   13412:	075a      	lsls	r2, r3, #29
   13414:	d441      	bmi.n	1349a <sd_write+0xa2>
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13416:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1341a:	4d22      	ldr	r5, [pc, #136]	; (134a4 <sd_write+0xac>)
   1341c:	61ea      	str	r2, [r5, #28]
sd_write():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:398
    if (!(g_card_type & CT_BLOCK))
   1341e:	4a22      	ldr	r2, [pc, #136]	; (134a8 <sd_write+0xb0>)
   13420:	7812      	ldrb	r2, [r2, #0]
   13422:	0713      	lsls	r3, r2, #28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:399
        sector *= 512; /* Convert to byte address if needed */
   13424:	bf58      	it	pl
   13426:	027f      	lslpl	r7, r7, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:401
    if (count == 1)
   13428:	2c01      	cmp	r4, #1
   1342a:	d112      	bne.n	13452 <sd_write+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:403
        if ((send_cmd(CMD24, sector) == 0) && xmit_datablock(buff, 0xFE))
   1342c:	4639      	mov	r1, r7
   1342e:	2058      	movs	r0, #88	; 0x58
   13430:	f7ff fe80 	bl	13134 <send_cmd>
   13434:	bb58      	cbnz	r0, 1348e <sd_write+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:403 (discriminator 1)
   13436:	21fe      	movs	r1, #254	; 0xfe
   13438:	4630      	mov	r0, r6
   1343a:	f7ff fe55 	bl	130e8 <xmit_datablock>
   1343e:	fab0 f480 	clz	r4, r0
   13442:	0964      	lsrs	r4, r4, #5
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13444:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
sd_write():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:424
    return count ? RES_ERROR : RES_OK;
   13448:	1c20      	adds	r0, r4, #0
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
   1344a:	61ab      	str	r3, [r5, #24]
sd_write():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:424
   1344c:	bf18      	it	ne
   1344e:	2001      	movne	r0, #1
   13450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:408
        if (g_card_type & CT_SDC)
   13452:	f012 0f06 	tst.w	r2, #6
   13456:	d003      	beq.n	13460 <sd_write+0x68>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:409
            send_cmd(ACMD23, count);
   13458:	4621      	mov	r1, r4
   1345a:	20d7      	movs	r0, #215	; 0xd7
   1345c:	f7ff fe6a 	bl	13134 <send_cmd>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:410
        if (send_cmd(CMD25, sector) == 0)
   13460:	4639      	mov	r1, r7
   13462:	2059      	movs	r0, #89	; 0x59
   13464:	f7ff fe66 	bl	13134 <send_cmd>
   13468:	2800      	cmp	r0, #0
   1346a:	d1eb      	bne.n	13444 <sd_write+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:414
                if (!xmit_datablock(buff, 0xFC))
   1346c:	21fc      	movs	r1, #252	; 0xfc
   1346e:	4630      	mov	r0, r6
   13470:	f7ff fe3a 	bl	130e8 <xmit_datablock>
   13474:	b128      	cbz	r0, 13482 <sd_write+0x8a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   13476:	3c01      	subs	r4, #1
   13478:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:416
                buff += 512;
   1347c:	f506 7600 	add.w	r6, r6, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:417
            } while (--count);
   13480:	d1f4      	bne.n	1346c <sd_write+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:418
            if (!xmit_datablock(0, 0xFD)) /* STOP_TRAN token */
   13482:	21fd      	movs	r1, #253	; 0xfd
   13484:	2000      	movs	r0, #0
   13486:	f7ff fe2f 	bl	130e8 <xmit_datablock>
   1348a:	2800      	cmp	r0, #0
   1348c:	d1da      	bne.n	13444 <sd_write+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:419
                count = 1;
   1348e:	2401      	movs	r4, #1
   13490:	e7d8      	b.n	13444 <sd_write+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:390
        return RES_PARERR;
   13492:	2004      	movs	r0, #4
   13494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:392
        return RES_NOTRDY;
   13496:	2003      	movs	r0, #3
   13498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:394
        return RES_WRPRT;
   1349a:	2002      	movs	r0, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:425
}
   1349c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1349e:	bf00      	nop
   134a0:	2007c0cc 	.word	0x2007c0cc
   134a4:	2009c020 	.word	0x2009c020
   134a8:	2007c4d8 	.word	0x2007c4d8

000134ac <sd_ioctl>:
sd_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:432
{
   134ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   134ae:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:437
    sd_update_card_status();
   134b0:	f7ff fe86 	bl	131c0 <sd_update_card_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:440
    if (ctrl == CTRL_POWER)
   134b4:	2805      	cmp	r0, #5
   134b6:	d11a      	bne.n	134ee <sd_ioctl+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:442
        switch (*ptr)
   134b8:	782b      	ldrb	r3, [r5, #0]
   134ba:	2b01      	cmp	r3, #1
   134bc:	d015      	beq.n	134ea <sd_ioctl+0x3e>
   134be:	d305      	bcc.n	134cc <sd_ioctl+0x20>
   134c0:	2b02      	cmp	r3, #2
   134c2:	d00b      	beq.n	134dc <sd_ioctl+0x30>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:458
                res = RES_PARERR;
   134c4:	2404      	movs	r4, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:582
}
   134c6:	4620      	mov	r0, r4
   134c8:	b004      	add	sp, #16
   134ca:	bd70      	pop	{r4, r5, r6, pc}
board_io_sd_card_cd_sig():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:60
static inline char board_io_sd_card_cd_sig(void) { return !!(LPC_GPIO1->FIOPIN & (1 << BIO_SD_CARD_CD_P1PIN)); }
   134cc:	4b7b      	ldr	r3, [pc, #492]	; (136bc <sd_ioctl+0x210>)
   134ce:	695c      	ldr	r4, [r3, #20]
sd_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:445
                if (SD_PRESENT())
   134d0:	f014 6480 	ands.w	r4, r4, #67108864	; 0x4000000
   134d4:	d109      	bne.n	134ea <sd_ioctl+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:446
                    power_off(); /* Power off */
   134d6:	f7ff fdaf 	bl	13038 <power_off>
   134da:	e7f4      	b.n	134c6 <sd_ioctl+0x1a>
board_io_sd_card_cd_sig():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:60
   134dc:	4b77      	ldr	r3, [pc, #476]	; (136bc <sd_ioctl+0x210>)
   134de:	695b      	ldr	r3, [r3, #20]
sd_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:454
                *(ptr + 1) = (BYTE) SD_PRESENT();
   134e0:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   134e4:	f3c3 6380 	ubfx	r3, r3, #26, #1
   134e8:	706b      	strb	r3, [r5, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:447
                res = RES_OK;
   134ea:	2400      	movs	r4, #0
   134ec:	e7eb      	b.n	134c6 <sd_ioctl+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:464
        if (g_disk_status & STA_NOINIT)
   134ee:	4b74      	ldr	r3, [pc, #464]	; (136c0 <sd_ioctl+0x214>)
   134f0:	781b      	ldrb	r3, [r3, #0]
   134f2:	07db      	lsls	r3, r3, #31
   134f4:	f100 80e0 	bmi.w	136b8 <sd_ioctl+0x20c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:467
        switch (ctrl)
   134f8:	280e      	cmp	r0, #14
   134fa:	f200 80db 	bhi.w	136b4 <sd_ioctl+0x208>
   134fe:	e8df f000 	tbb	[pc, r0]
   13502:	1708      	.short	0x1708
   13504:	d9d95a55 	.word	0xd9d95a55
   13508:	d9d9d9d9 	.word	0xd9d9d9d9
   1350c:	bdbaaba7 	.word	0xbdbaaba7
   13510:	cd          	.byte	0xcd
   13511:	00          	.byte	0x00
board_io_sd_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:54
static inline char board_io_sd_cs(void)     { LPC_GPIO1->FIOCLR = (1 << BIO_SD_CARD_CS_P1PIN); return 1; }
   13512:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   13516:	4b69      	ldr	r3, [pc, #420]	; (136bc <sd_ioctl+0x210>)
   13518:	61da      	str	r2, [r3, #28]
sd_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:473
                if (wait_ready() == 0xFF)
   1351a:	f7ff fd75 	bl	13008 <wait_ready>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   1351e:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
   13522:	bf18      	it	ne
   13524:	2401      	movne	r4, #1
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   13526:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1352a:	4b64      	ldr	r3, [pc, #400]	; (136bc <sd_ioctl+0x210>)
   1352c:	619a      	str	r2, [r3, #24]
   1352e:	e7ca      	b.n	134c6 <sd_ioctl+0x1a>
sd_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:478
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13530:	2100      	movs	r1, #0
   13532:	2049      	movs	r0, #73	; 0x49
   13534:	f7ff fdfe 	bl	13134 <send_cmd>
   13538:	4604      	mov	r4, r0
   1353a:	b108      	cbz	r0, 13540 <sd_ioctl+0x94>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:438
    res = RES_ERROR;
   1353c:	2401      	movs	r4, #1
   1353e:	e7f2      	b.n	13526 <sd_ioctl+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:478 (discriminator 1)
                if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   13540:	2110      	movs	r1, #16
   13542:	4668      	mov	r0, sp
   13544:	f7ff fd8a 	bl	1305c <rcvr_datablock>
   13548:	2800      	cmp	r0, #0
   1354a:	d0f7      	beq.n	1353c <sd_ioctl+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:480
                    if ((csd[0] >> 6) == 1)
   1354c:	f89d 3000 	ldrb.w	r3, [sp]
   13550:	f89d 1008 	ldrb.w	r1, [sp, #8]
   13554:	099b      	lsrs	r3, r3, #6
   13556:	2b01      	cmp	r3, #1
   13558:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1355c:	d106      	bne.n	1356c <sd_ioctl+0xc0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:482
                        csize = csd[9] + ((WORD) csd[8] << 8) + 1;
   1355e:	1c5a      	adds	r2, r3, #1
   13560:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:483
                        *(DWORD*) buff = (DWORD) csize << 10;
   13564:	b292      	uxth	r2, r2
   13566:	0292      	lsls	r2, r2, #10
   13568:	602a      	str	r2, [r5, #0]
   1356a:	e7dc      	b.n	13526 <sd_ioctl+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1356c:	f89d 2007 	ldrb.w	r2, [sp, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13570:	f89d 000a 	ldrb.w	r0, [sp, #10]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13574:	0092      	lsls	r2, r2, #2
   13576:	eb02 1291 	add.w	r2, r2, r1, lsr #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   1357a:	f89d 1006 	ldrb.w	r1, [sp, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   1357e:	3201      	adds	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:490
                                + ((WORD) (csd[6] & 3) << 10) + 1;
   13580:	0289      	lsls	r1, r1, #10
   13582:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:489
                        csize = (csd[8] >> 6) + ((WORD) csd[7] << 2)
   13586:	440a      	add	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   13588:	f89d 1005 	ldrb.w	r1, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   1358c:	005b      	lsls	r3, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1358e:	f001 010f 	and.w	r1, r1, #15
   13592:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   13596:	3102      	adds	r1, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:488
                                + ((csd[9] & 3) << 1) + 2;
   13598:	f003 0306 	and.w	r3, r3, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:487
                        n = (csd[5] & 15) + ((csd[10] & 128) >> 7)
   1359c:	440b      	add	r3, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:491
                        *(DWORD*) buff = (DWORD) csize << (n - 9);
   1359e:	b2db      	uxtb	r3, r3
   135a0:	b292      	uxth	r2, r2
   135a2:	3b09      	subs	r3, #9
   135a4:	fa02 f303 	lsl.w	r3, r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   135a8:	602b      	str	r3, [r5, #0]
   135aa:	e7bc      	b.n	13526 <sd_ioctl+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:498
                *(WORD*) buff = 512;
   135ac:	f44f 7300 	mov.w	r3, #512	; 0x200
   135b0:	802b      	strh	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:499
                res = RES_OK;
   135b2:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:500
                break;
   135b4:	e7b7      	b.n	13526 <sd_ioctl+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:503
                if (g_card_type & CT_SD2)
   135b6:	4e43      	ldr	r6, [pc, #268]	; (136c4 <sd_ioctl+0x218>)
   135b8:	7831      	ldrb	r1, [r6, #0]
   135ba:	f011 0104 	ands.w	r1, r1, #4
   135be:	d01c      	beq.n	135fa <sd_ioctl+0x14e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:505
                    if (send_cmd(ACMD13, 0) == 0)
   135c0:	2100      	movs	r1, #0
   135c2:	20cd      	movs	r0, #205	; 0xcd
   135c4:	f7ff fdb6 	bl	13134 <send_cmd>
   135c8:	2800      	cmp	r0, #0
   135ca:	d1b7      	bne.n	1353c <sd_ioctl+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:507
                        rcvr_spi();
   135cc:	20ff      	movs	r0, #255	; 0xff
   135ce:	f7ff fd11 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:508
                        if (rcvr_datablock(csd, 16))
   135d2:	2110      	movs	r1, #16
   135d4:	4668      	mov	r0, sp
   135d6:	f7ff fd41 	bl	1305c <rcvr_datablock>
   135da:	2800      	cmp	r0, #0
   135dc:	d0ae      	beq.n	1353c <sd_ioctl+0x90>
   135de:	2430      	movs	r4, #48	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:511 (discriminator 3)
                                rcvr_spi(); /* Purge trailing data */
   135e0:	20ff      	movs	r0, #255	; 0xff
   135e2:	f7ff fd07 	bl	12ff4 <ssp1_exchange_byte>
   135e6:	1e60      	subs	r0, r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:510 (discriminator 3)
                            for (n = 64 - 16; n; n--)
   135e8:	f010 04ff 	ands.w	r4, r0, #255	; 0xff
   135ec:	d1f8      	bne.n	135e0 <sd_ioctl+0x134>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:512
                            *(DWORD*) buff = 16UL << (csd[10] >> 4);
   135ee:	f89d 300a 	ldrb.w	r3, [sp, #10]
   135f2:	091a      	lsrs	r2, r3, #4
   135f4:	2310      	movs	r3, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   135f6:	4093      	lsls	r3, r2
   135f8:	e7d6      	b.n	135a8 <sd_ioctl+0xfc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:519
                    if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16))
   135fa:	2049      	movs	r0, #73	; 0x49
   135fc:	f7ff fd9a 	bl	13134 <send_cmd>
   13600:	4604      	mov	r4, r0
   13602:	2800      	cmp	r0, #0
   13604:	d19a      	bne.n	1353c <sd_ioctl+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:519 (discriminator 1)
   13606:	2110      	movs	r1, #16
   13608:	4668      	mov	r0, sp
   1360a:	f7ff fd27 	bl	1305c <rcvr_datablock>
   1360e:	2800      	cmp	r0, #0
   13610:	d094      	beq.n	1353c <sd_ioctl+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:521
                        if (g_card_type & CT_SD1)
   13612:	7830      	ldrb	r0, [r6, #0]
   13614:	f89d 300a 	ldrb.w	r3, [sp, #10]
   13618:	f010 0002 	ands.w	r0, r0, #2
   1361c:	f89d 100b 	ldrb.w	r1, [sp, #11]
   13620:	d00a      	beq.n	13638 <sd_ioctl+0x18c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13622:	005b      	lsls	r3, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13624:	f89d 200d 	ldrb.w	r2, [sp, #13]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:523
                            *(DWORD*) buff = (((csd[10] & 63) << 1)
   13628:	f003 037e 	and.w	r3, r3, #126	; 0x7e
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   1362c:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13630:	0992      	lsrs	r2, r2, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:524
                                    + ((WORD) (csd[11] & 128) >> 7) + 1)
   13632:	3301      	adds	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:525
                                    << ((csd[13] >> 6) - 1);
   13634:	3a01      	subs	r2, #1
   13636:	e7de      	b.n	135f6 <sd_ioctl+0x14a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   13638:	00ca      	lsls	r2, r1, #3
   1363a:	f002 0218 	and.w	r2, r2, #24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   1363e:	f3c3 0384 	ubfx	r3, r3, #2, #5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:531
                                            + ((csd[11] & 224) >> 5) + 1);
   13642:	eb02 1251 	add.w	r2, r2, r1, lsr #5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   13646:	3301      	adds	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:530
                                    * (((csd[11] & 3) << 3)
   13648:	fb02 3303 	mla	r3, r2, r3, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:529
                            *(DWORD*) buff = ((WORD) ((csd[10] & 124) >> 2) + 1)
   1364c:	602b      	str	r3, [r5, #0]
   1364e:	e7b0      	b.n	135b2 <sd_ioctl+0x106>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:539
                *ptr = g_card_type;
   13650:	4b1c      	ldr	r3, [pc, #112]	; (136c4 <sd_ioctl+0x218>)
   13652:	781b      	ldrb	r3, [r3, #0]
   13654:	702b      	strb	r3, [r5, #0]
   13656:	e7ac      	b.n	135b2 <sd_ioctl+0x106>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:544
                if (send_cmd(CMD9, 0) == 0 /* READ_CSD */
   13658:	2100      	movs	r1, #0
   1365a:	2049      	movs	r0, #73	; 0x49
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   1365c:	f7ff fd6a 	bl	13134 <send_cmd>
   13660:	2800      	cmp	r0, #0
   13662:	f47f af6b 	bne.w	1353c <sd_ioctl+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:551
                && rcvr_datablock(ptr, 16))
   13666:	2110      	movs	r1, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   13668:	4628      	mov	r0, r5
   1366a:	f7ff fcf7 	bl	1305c <rcvr_datablock>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:474
                    res = RES_OK;
   1366e:	fab0 f480 	clz	r4, r0
   13672:	0964      	lsrs	r4, r4, #5
   13674:	e757      	b.n	13526 <sd_ioctl+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:550
                if (send_cmd(CMD10, 0) == 0 /* READ_CID */
   13676:	2100      	movs	r1, #0
   13678:	204a      	movs	r0, #74	; 0x4a
   1367a:	e7ef      	b.n	1365c <sd_ioctl+0x1b0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:556
                if (send_cmd(CMD58, 0) == 0)
   1367c:	2100      	movs	r1, #0
   1367e:	207a      	movs	r0, #122	; 0x7a
   13680:	f7ff fd58 	bl	13134 <send_cmd>
   13684:	2800      	cmp	r0, #0
   13686:	f47f af59 	bne.w	1353c <sd_ioctl+0x90>
   1368a:	1d29      	adds	r1, r5, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:559 (discriminator 3)
                        *ptr++ = rcvr_spi();
   1368c:	20ff      	movs	r0, #255	; 0xff
   1368e:	f7ff fcb1 	bl	12ff4 <ssp1_exchange_byte>
   13692:	f805 0b01 	strb.w	r0, [r5], #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:558 (discriminator 3)
                    for (n = 4; n; n--)
   13696:	428d      	cmp	r5, r1
   13698:	d1f8      	bne.n	1368c <sd_ioctl+0x1e0>
   1369a:	e78a      	b.n	135b2 <sd_ioctl+0x106>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:565
                if (send_cmd(ACMD13, 0) == 0)
   1369c:	2100      	movs	r1, #0
   1369e:	20cd      	movs	r0, #205	; 0xcd
   136a0:	f7ff fd48 	bl	13134 <send_cmd>
   136a4:	2800      	cmp	r0, #0
   136a6:	f47f af49 	bne.w	1353c <sd_ioctl+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:567
                    rcvr_spi();
   136aa:	20ff      	movs	r0, #255	; 0xff
   136ac:	f7ff fca2 	bl	12ff4 <ssp1_exchange_byte>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:568
                    if (rcvr_datablock(ptr, 64))
   136b0:	2140      	movs	r1, #64	; 0x40
   136b2:	e7d9      	b.n	13668 <sd_ioctl+0x1bc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:574
                res = RES_PARERR;
   136b4:	2404      	movs	r4, #4
   136b6:	e736      	b.n	13526 <sd_ioctl+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/sd.c:465
            return RES_NOTRDY;
   136b8:	2403      	movs	r4, #3
   136ba:	e704      	b.n	134c6 <sd_ioctl+0x1a>
   136bc:	2009c020 	.word	0x2009c020
   136c0:	2007c0cc 	.word	0x2007c0cc
   136c4:	2007c4d8 	.word	0x2007c4d8

000136c8 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:123


/** @{ Private Functions used at this file */
static uint32_t flash_get_mem_size_bytes(void)
{
    switch (g_flash_capacity) {
   136c8:	4b05      	ldr	r3, [pc, #20]	; (136e0 <flash_get_mem_size_bytes()+0x18>)
   136ca:	781b      	ldrb	r3, [r3, #0]
   136cc:	3b25      	subs	r3, #37	; 0x25
   136ce:	b2db      	uxtb	r3, r3
   136d0:	2b03      	cmp	r3, #3
   136d2:	bf9a      	itte	ls
   136d4:	4a03      	ldrls	r2, [pc, #12]	; (136e4 <flash_get_mem_size_bytes()+0x1c>)
   136d6:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   136da:	2000      	movhi	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:130
        case flash_cap_16mbit : return (16/8 * 1024 * 1024);
        case flash_cap_32mbit : return (32/8 * 1024 * 1024);
        case flash_cap_64mbit : return (64/8 * 1024 * 1024);
        default: return 0;
    }
}
   136dc:	4770      	bx	lr
   136de:	bf00      	nop
   136e0:	2007c4e0 	.word	0x2007c4e0
   136e4:	000203d8 	.word	0x000203d8

000136e8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
static void flash_perform_page_io_of_fatfs_sector(flash_io_func_t func, uint8_t* pData, uint32_t addr)
{
    const uint32_t halfsector = FLASH_SECTOR_SIZE / 2;

    /* simplest case when page size matches our sector size */
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   136e8:	4b1b      	ldr	r3, [pc, #108]	; (13758 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x70>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   136ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   136ee:	881d      	ldrh	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   136f0:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   136f2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:209
{
   136f6:	460f      	mov	r7, r1
   136f8:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:213
    if (FLASH_SECTOR_SIZE == g_flash_pagesize) {
   136fa:	d103      	bne.n	13704 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:214
        func(pData, addr, FLASH_SECTOR_SIZE);
   136fc:	462a      	mov	r2, r5
   136fe:	4621      	mov	r1, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
    /* If pages are 528 bytes, we need to calculate the real address here */
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
        /* 528 byte page requires 10 address bits, then 12 page number bits, and 2 dummy bits */
        addr = (pagenum << (FLASH_PAGENUM_BIT_OFFSET + 1));
        func(pData, addr, FLASH_SECTOR_SIZE);
   13700:	4638      	mov	r0, r7
   13702:	e00b      	b.n	1371c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:217
    else if (halfsector == g_flash_pagesize) {
   13704:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   13708:	d10c      	bne.n	13724 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:218
        func(pData, addr, halfsector);
   1370a:	462a      	mov	r2, r5
   1370c:	4621      	mov	r1, r4
   1370e:	4638      	mov	r0, r7
   13710:	47b0      	blx	r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:219
        func((pData + halfsector), (addr + halfsector), halfsector);
   13712:	462a      	mov	r2, r5
   13714:	f504 7180 	add.w	r1, r4, #256	; 0x100
   13718:	f507 7080 	add.w	r0, r7, #256	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236

        addr = (pagenum + 0) << FLASH_PAGENUM_BIT_OFFSET;
        func(pData, addr, halfsector);

        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
        func((pData + halfsector), addr, halfsector);
   1371c:	4633      	mov	r3, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:238
    }
}
   1371e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13722:	4718      	bx	r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:222
    else if (FLASH_PAGESIZE_528 == g_flash_pagesize) {
   13724:	f5b5 7f04 	cmp.w	r5, #528	; 0x210
   13728:	d104      	bne.n	13734 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:223
        const uint32_t pagenum = (addr / FLASH_SECTOR_SIZE);
   1372a:	0a51      	lsrs	r1, r2, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:226
        func(pData, addr, FLASH_SECTOR_SIZE);
   1372c:	0289      	lsls	r1, r1, #10
   1372e:	f44f 7200 	mov.w	r2, #512	; 0x200
   13732:	e7e5      	b.n	13700 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:229
    else if (FLASH_PAGESIZE_264 == g_flash_pagesize) {
   13734:	f5b5 7f84 	cmp.w	r5, #264	; 0x108
   13738:	d10b      	bne.n	13752 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:230
        const uint32_t pagenum = (addr / halfsector);
   1373a:	0a14      	lsrs	r4, r2, #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:233
        func(pData, addr, halfsector);
   1373c:	0261      	lsls	r1, r4, #9
   1373e:	f44f 7280 	mov.w	r2, #256	; 0x100
   13742:	4638      	mov	r0, r7
   13744:	47b0      	blx	r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   13746:	f44f 7280 	mov.w	r2, #256	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:235
        addr = (pagenum + 1) << FLASH_PAGENUM_BIT_OFFSET;
   1374a:	3401      	adds	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:236
        func((pData + halfsector), addr, halfsector);
   1374c:	0261      	lsls	r1, r4, #9
   1374e:	18b8      	adds	r0, r7, r2
   13750:	e7e4      	b.n	1371c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x34>
   13752:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13756:	bf00      	nop
   13758:	2007c4e2 	.word	0x2007c4e2

0001375c <ssp1_exchange_data>:
ssp1_exchange_data():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:74
/**
 * Writes a byte to the SPI FIFO
 * @warning YOU MUST ENSURE SPI IS NOT BUSY before calling this function
 */
static inline void ssp1_exchange_data(void* data, int len)
{
   1375c:	b510      	push	{r4, lr}
   1375e:	4b29      	ldr	r3, [pc, #164]	; (13804 <ssp1_exchange_data+0xa8>)
ssp_exchange_data():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    const int spi_half_fifo_size = spi_fifo_size / 2;

    char *dataOut = (char*)data;
    char *dataIn = (char*)data;

    while (len > 0) {
   13760:	2900      	cmp	r1, #0
   13762:	dd4d      	ble.n	13800 <ssp1_exchange_data+0xa4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   13764:	2907      	cmp	r1, #7
   13766:	7802      	ldrb	r2, [r0, #0]
   13768:	dd29      	ble.n	137be <ssp1_exchange_data+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1376a:	609a      	str	r2, [r3, #8]
   1376c:	7842      	ldrb	r2, [r0, #1]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;

            /* Pick up half the transmitted bytes as soon as RX fifo is half full */
            len -= spi_fifo_size;
   1376e:	3908      	subs	r1, #8
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   13770:	609a      	str	r2, [r3, #8]
   13772:	7882      	ldrb	r2, [r0, #2]
   13774:	609a      	str	r2, [r3, #8]
   13776:	78c2      	ldrb	r2, [r0, #3]
   13778:	609a      	str	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1377a:	7902      	ldrb	r2, [r0, #4]
   1377c:	609a      	str	r2, [r3, #8]
   1377e:	7942      	ldrb	r2, [r0, #5]
   13780:	609a      	str	r2, [r3, #8]
   13782:	7982      	ldrb	r2, [r0, #6]
   13784:	609a      	str	r2, [r3, #8]
   13786:	79c4      	ldrb	r4, [r0, #7]
   13788:	f100 0208 	add.w	r2, r0, #8
   1378c:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   1378e:	699c      	ldr	r4, [r3, #24]
   13790:	0764      	lsls	r4, r4, #29
   13792:	d5fc      	bpl.n	1378e <ssp1_exchange_data+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   13794:	689c      	ldr	r4, [r3, #8]
   13796:	7004      	strb	r4, [r0, #0]
   13798:	689c      	ldr	r4, [r3, #8]
   1379a:	7044      	strb	r4, [r0, #1]
   1379c:	689c      	ldr	r4, [r3, #8]
   1379e:	7084      	strb	r4, [r0, #2]
   137a0:	689c      	ldr	r4, [r3, #8]
   137a2:	70c4      	strb	r4, [r0, #3]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:107

            /* Pick up the rest of the half after SSP is fully done */
            while(pSSP->SR & spi_busy_bitmask);
   137a4:	68dc      	ldr	r4, [r3, #12]
   137a6:	06e4      	lsls	r4, r4, #27
   137a8:	d4fc      	bmi.n	137a4 <ssp1_exchange_data+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   137aa:	689c      	ldr	r4, [r3, #8]
   137ac:	7104      	strb	r4, [r0, #4]
   137ae:	689c      	ldr	r4, [r3, #8]
   137b0:	7144      	strb	r4, [r0, #5]
   137b2:	689c      	ldr	r4, [r3, #8]
   137b4:	7184      	strb	r4, [r0, #6]
   137b6:	689c      	ldr	r4, [r3, #8]
   137b8:	71c4      	strb	r4, [r0, #7]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:111
        }
        else if (len >= spi_half_fifo_size) {
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   137ba:	4610      	mov	r0, r2
   137bc:	e7d0      	b.n	13760 <ssp1_exchange_data+0x4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   137be:	2903      	cmp	r1, #3
   137c0:	dd14      	ble.n	137ec <ssp1_exchange_data+0x90>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   137c2:	609a      	str	r2, [r3, #8]
   137c4:	7842      	ldrb	r2, [r0, #1]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   137c6:	3904      	subs	r1, #4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   137c8:	609a      	str	r2, [r3, #8]
   137ca:	7882      	ldrb	r2, [r0, #2]
   137cc:	609a      	str	r2, [r3, #8]
   137ce:	78c4      	ldrb	r4, [r0, #3]
   137d0:	1d02      	adds	r2, r0, #4
   137d2:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   137d4:	68dc      	ldr	r4, [r3, #12]
   137d6:	06e4      	lsls	r4, r4, #27
   137d8:	d4fc      	bmi.n	137d4 <ssp1_exchange_data+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   137da:	689c      	ldr	r4, [r3, #8]
   137dc:	7004      	strb	r4, [r0, #0]
   137de:	689c      	ldr	r4, [r3, #8]
   137e0:	7044      	strb	r4, [r0, #1]
   137e2:	689c      	ldr	r4, [r3, #8]
   137e4:	7084      	strb	r4, [r0, #2]
   137e6:	689c      	ldr	r4, [r3, #8]
   137e8:	70c4      	strb	r4, [r0, #3]
   137ea:	e7e6      	b.n	137ba <ssp1_exchange_data+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:117
        }
        else {
            pSSP->DR = *dataOut++;
   137ec:	1c44      	adds	r4, r0, #1
   137ee:	609a      	str	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   137f0:	3901      	subs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   137f2:	68da      	ldr	r2, [r3, #12]
   137f4:	06d2      	lsls	r2, r2, #27
   137f6:	d4fc      	bmi.n	137f2 <ssp1_exchange_data+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   137f8:	689a      	ldr	r2, [r3, #8]
   137fa:	7002      	strb	r2, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   137fc:	4620      	mov	r0, r4
   137fe:	e7af      	b.n	13760 <ssp1_exchange_data+0x4>
   13800:	bd10      	pop	{r4, pc}
   13802:	bf00      	nop
   13804:	40030000 	.word	0x40030000

00013808 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:140
{
   13808:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   1380a:	0c0b      	lsrs	r3, r1, #16
   1380c:	f88d 3005 	strb.w	r3, [sp, #5]
   13810:	f88d 1007 	strb.w	r1, [sp, #7]
   13814:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13816:	2104      	movs	r1, #4
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13818:	f88d 0004 	strb.w	r0, [sp, #4]
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1381c:	eb0d 0001 	add.w	r0, sp, r1
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:141
    uint8_t data[] = { (uint8_t)opcode, (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0)};
   13820:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13824:	f7ff ff9a 	bl	1375c <ssp1_exchange_data>
_ZL18flash_send_op_addr14flash_opcode_tm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:143
}
   13828:	b003      	add	sp, #12
   1382a:	f85d fb04 	ldr.w	pc, [sp], #4
   1382e:	Address 0x000000000001382e is out of bounds.


00013830 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13830:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13832:	2303      	movs	r3, #3
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13834:	2540      	movs	r5, #64	; 0x40
   13836:	4c0e      	ldr	r4, [pc, #56]	; (13870 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   13838:	4617      	mov	r7, r2
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   1383a:	61e5      	str	r5, [r4, #28]
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   1383c:	f88d 3004 	strb.w	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   13840:	0c0b      	lsrs	r3, r1, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13842:	f88d 3005 	strb.w	r3, [sp, #5]
   13846:	f88d 1007 	strb.w	r1, [sp, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:200
                        (uint8_t)(addr >> 16), (uint8_t)(addr >> 8), (uint8_t)(addr >> 0),
   1384a:	0a0b      	lsrs	r3, r1, #8
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   1384c:	2104      	movs	r1, #4
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:196
{
   1384e:	4606      	mov	r6, r0
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13850:	eb0d 0001 	add.w	r0, sp, r1
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:201
        };
   13854:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13858:	f7ff ff80 	bl	1375c <ssp1_exchange_data>
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:204
        ssp1_dma_transfer_block(data, size, 0);
   1385c:	2200      	movs	r2, #0
   1385e:	4639      	mov	r1, r7
   13860:	4630      	mov	r0, r6
   13862:	f7fe ff61 	bl	12728 <ssp1_dma_transfer_block>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13866:	61a5      	str	r5, [r4, #24]
   13868:	61a5      	str	r5, [r4, #24]
   1386a:	61a5      	str	r5, [r4, #24]
_ZL15flash_read_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:206
}
   1386c:	b003      	add	sp, #12
   1386e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13870:	2009c000 	.word	0x2009c000

00013874 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13874:	2240      	movs	r2, #64	; 0x40
   13876:	4b0d      	ldr	r3, [pc, #52]	; (138ac <flash_wait_for_ready()+0x38>)
   13878:	61da      	str	r2, [r3, #28]
ssp_exchange_byte():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1387a:	22d7      	movs	r2, #215	; 0xd7
   1387c:	4b0c      	ldr	r3, [pc, #48]	; (138b0 <flash_wait_for_ready()+0x3c>)
   1387e:	609a      	str	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13880:	68da      	ldr	r2, [r3, #12]
   13882:	06d2      	lsls	r2, r2, #27
   13884:	d4fc      	bmi.n	13880 <flash_wait_for_ready()+0xc>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   13886:	4a0a      	ldr	r2, [pc, #40]	; (138b0 <flash_wait_for_ready()+0x3c>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13888:	689b      	ldr	r3, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   1388a:	21ff      	movs	r1, #255	; 0xff
   1388c:	4613      	mov	r3, r2
   1388e:	6091      	str	r1, [r2, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   13890:	68d8      	ldr	r0, [r3, #12]
   13892:	06c0      	lsls	r0, r0, #27
   13894:	d4fc      	bmi.n	13890 <flash_wait_for_ready()+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   13896:	6898      	ldr	r0, [r3, #8]
_ZL20flash_wait_for_readyv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:155
        } while (! (status & busybit));
   13898:	f010 0f80 	tst.w	r0, #128	; 0x80
   1389c:	d0f7      	beq.n	1388e <flash_wait_for_ready()+0x1a>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   1389e:	2240      	movs	r2, #64	; 0x40
   138a0:	4b02      	ldr	r3, [pc, #8]	; (138ac <flash_wait_for_ready()+0x38>)
_ZL20flash_wait_for_readyv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
}
   138a2:	b2c0      	uxtb	r0, r0
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
   138a4:	619a      	str	r2, [r3, #24]
   138a6:	619a      	str	r2, [r3, #24]
   138a8:	619a      	str	r2, [r3, #24]
_ZL20flash_wait_for_readyv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:159
   138aa:	4770      	bx	lr
   138ac:	2009c000 	.word	0x2009c000
   138b0:	40030000 	.word	0x40030000

000138b4 <flash_initialize>:
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:244
/** @} */



DSTATUS flash_initialize()
{
   138b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    uint8_t sig1 = 0;
    uint8_t sig2 = 0;
    const uint8_t status = flash_wait_for_ready();
   138b6:	f7ff ffdd 	bl	13874 <flash_wait_for_ready()>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
    const uint8_t std_page_size_bit = (1 << 0);
    g_flash_pagesize = 0;
   138ba:	2300      	movs	r3, #0
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   138bc:	2740      	movs	r7, #64	; 0x40
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   138be:	4c1e      	ldr	r4, [pc, #120]	; (13938 <flash_initialize+0x84>)
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   138c0:	4e1e      	ldr	r6, [pc, #120]	; (1393c <flash_initialize+0x88>)
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:249
   138c2:	8023      	strh	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253

    CHIP_SELECT_OP()
    {
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   138c4:	4b1e      	ldr	r3, [pc, #120]	; (13940 <flash_initialize+0x8c>)
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   138c6:	61f7      	str	r7, [r6, #28]
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
   138c8:	881a      	ldrh	r2, [r3, #0]
   138ca:	789b      	ldrb	r3, [r3, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:247
    const uint8_t status = flash_wait_for_ready();
   138cc:	4605      	mov	r5, r0
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   138ce:	2103      	movs	r1, #3
   138d0:	a801      	add	r0, sp, #4
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:253
        uint8_t data[] = { opcode_get_sig, 0xFF, 0xFF };
   138d2:	f8ad 2004 	strh.w	r2, [sp, #4]
   138d6:	f88d 3006 	strb.w	r3, [sp, #6]
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   138da:	f7ff ff3f 	bl	1375c <ssp1_exchange_data>
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:255
        flash_spi_multi_io(&data[0], sizeof(data));
        sig1 = data[1];
   138de:	f89d 2005 	ldrb.w	r2, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:256
        sig2 = data[2];
   138e2:	f89d 3006 	ldrb.w	r3, [sp, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
    }

    if (FLASH_MANUFACTURER_ID == sig1 &&
   138e6:	2a1f      	cmp	r2, #31
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   138e8:	61b7      	str	r7, [r6, #24]
   138ea:	61b7      	str	r7, [r6, #24]
   138ec:	61b7      	str	r7, [r6, #24]
flash_initialize():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259
   138ee:	d115      	bne.n	1391c <flash_initialize+0x68>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:259 (discriminator 1)
   138f0:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   138f4:	2a03      	cmp	r2, #3
   138f6:	d811      	bhi.n	1391c <flash_initialize+0x68>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        (sig2 >= flash_cap_first_valid && sig2 <= flash_cap_last_valid)
        )
    {
        g_flash_capacity = (flash_cap_t) sig2;
   138f8:	4a12      	ldr	r2, [pc, #72]	; (13944 <flash_initialize+0x90>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266

        // 8-mbit version has 256/264 byte page size, 16-mbit has 512/528 byte page size
        if (flash_cap_8mbit == g_flash_capacity) {
   138fa:	2b25      	cmp	r3, #37	; 0x25
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:263
        g_flash_capacity = (flash_cap_t) sig2;
   138fc:	7013      	strb	r3, [r2, #0]
   138fe:	f005 0001 	and.w	r0, r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:266
        if (flash_cap_8mbit == g_flash_capacity) {
   13902:	d111      	bne.n	13928 <flash_initialize+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:267
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_264;
   13904:	2800      	cmp	r0, #0
   13906:	bf14      	ite	ne
   13908:	f44f 7380 	movne.w	r3, #256	; 0x100
   1390c:	f44f 7384 	moveq.w	r3, #264	; 0x108
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
        }
        else {
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   13910:	8023      	strh	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:273
        }

        g_sector_count = flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE;
   13912:	f7ff fed9 	bl	136c8 <flash_get_mem_size_bytes()>
   13916:	4b0c      	ldr	r3, [pc, #48]	; (13948 <flash_initialize+0x94>)
   13918:	0a40      	lsrs	r0, r0, #9
   1391a:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:276
    }

    return (0 == g_flash_pagesize) ? FR_DISK_ERR : FR_OK;
   1391c:	8820      	ldrh	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:277
}
   1391e:	fab0 f080 	clz	r0, r0
   13922:	0940      	lsrs	r0, r0, #5
   13924:	b003      	add	sp, #12
   13926:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:270
            g_flash_pagesize = (status & std_page_size_bit) ? FLASH_PAGESIZE_512 : FLASH_PAGESIZE_528;
   13928:	2800      	cmp	r0, #0
   1392a:	bf14      	ite	ne
   1392c:	f44f 7300 	movne.w	r3, #512	; 0x200
   13930:	f44f 7304 	moveq.w	r3, #528	; 0x210
   13934:	e7ec      	b.n	13910 <flash_initialize+0x5c>
   13936:	bf00      	nop
   13938:	2007c4e2 	.word	0x2007c4e2
   1393c:	2009c000 	.word	0x2009c000
   13940:	000203d1 	.word	0x000203d1
   13944:	2007c4e0 	.word	0x2007c4e0
   13948:	2007c4dc 	.word	0x2007c4dc

0001394c <flash_read_sectors>:
flash_read_sectors():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280

DRESULT flash_read_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
   1394c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13950:	188b      	adds	r3, r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   13952:	4617      	mov	r7, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   13954:	4a0f      	ldr	r2, [pc, #60]	; (13994 <flash_read_sectors+0x48>)
   13956:	3b01      	subs	r3, #1
   13958:	6812      	ldr	r2, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:280
{
   1395a:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:283
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   1395c:	4293      	cmp	r3, r2
   1395e:	d812      	bhi.n	13986 <flash_read_sectors+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:281
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   13960:	024d      	lsls	r5, r1, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293
    /* Wait for any pending write operation to finish.  Once flash is ready, then
     * we no longer need to perform this operation to read more sectors
     */
    flash_wait_for_ready();

    for(int i = 0; i < sectorCount; i++)
   13962:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:291
    flash_wait_for_ready();
   13964:	f7ff ff86 	bl	13874 <flash_wait_for_ready()>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295
    {
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   13968:	f8df 802c 	ldr.w	r8, [pc, #44]	; 13998 <flash_read_sectors+0x4c>
   1396c:	1b2d      	subs	r5, r5, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   1396e:	42be      	cmp	r6, r7
   13970:	eb04 0205 	add.w	r2, r4, r5
   13974:	da0a      	bge.n	1398c <flash_read_sectors+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:295 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_read_page, pData, addr);
   13976:	4621      	mov	r1, r4
   13978:	4640      	mov	r0, r8
   1397a:	f7ff feb5 	bl	136e8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:297 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   1397e:	f504 7400 	add.w	r4, r4, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:293 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   13982:	3601      	adds	r6, #1
   13984:	e7f3      	b.n	1396e <flash_read_sectors+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:285
        return RES_ERROR;
   13986:	2001      	movs	r0, #1
   13988:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:300
    }

    return RES_OK;
   1398c:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:301
}
   1398e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13992:	bf00      	nop
   13994:	2007c4dc 	.word	0x2007c4dc
   13998:	00013831 	.word	0x00013831

0001399c <flash_write_sectors>:
flash_write_sectors():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307

DRESULT flash_write_sectors(unsigned char *pData, int sectorNum, int sectorCount)
{
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);

    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   1399c:	188b      	adds	r3, r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:304
{
   1399e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   139a2:	4617      	mov	r7, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:307
    if ((uint32_t) (sectorNum + sectorCount - 1) > g_sector_count)
   139a4:	4a0e      	ldr	r2, [pc, #56]	; (139e0 <flash_write_sectors+0x44>)
   139a6:	3b01      	subs	r3, #1
   139a8:	6812      	ldr	r2, [r2, #0]
   139aa:	4293      	cmp	r3, r2
   139ac:	d811      	bhi.n	139d2 <flash_write_sectors+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:305
    uint32_t addr = (sectorNum * FLASH_SECTOR_SIZE);
   139ae:	4604      	mov	r4, r0
   139b0:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314
        return RES_ERROR;
    }

    for(int i = 0; i < sectorCount; i++)
    {
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   139b2:	f8df 8030 	ldr.w	r8, [pc, #48]	; 139e4 <flash_write_sectors+0x48>
   139b6:	ebc0 2541 	rsb	r5, r0, r1, lsl #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 3)
    for(int i = 0; i < sectorCount; i++)
   139ba:	42be      	cmp	r6, r7
   139bc:	eb04 0205 	add.w	r2, r4, r5
   139c0:	da0a      	bge.n	139d8 <flash_write_sectors+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:314 (discriminator 2)
        flash_perform_page_io_of_fatfs_sector(flash_write_page, pData, addr);
   139c2:	4621      	mov	r1, r4
   139c4:	4640      	mov	r0, r8
   139c6:	f7ff fe8f 	bl	136e8 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:316 (discriminator 2)
        addr  += FLASH_SECTOR_SIZE;
        pData += FLASH_SECTOR_SIZE;
   139ca:	f504 7400 	add.w	r4, r4, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:312 (discriminator 2)
    for(int i = 0; i < sectorCount; i++)
   139ce:	3601      	adds	r6, #1
   139d0:	e7f3      	b.n	139ba <flash_write_sectors+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:309
        return RES_ERROR;
   139d2:	2001      	movs	r0, #1
   139d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:319
    }

    return RES_OK;
   139d8:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:320
}
   139da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   139de:	bf00      	nop
   139e0:	2007c4dc 	.word	0x2007c4dc
   139e4:	00013ac9 	.word	0x00013ac9

000139e8 <flash_ioctl>:
flash_ioctl():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:323

DRESULT flash_ioctl(BYTE ctrl,void *buff)
{
   139e8:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:326
    DRESULT status = RES_PARERR;

    switch(ctrl)
   139ea:	2807      	cmp	r0, #7
   139ec:	d805      	bhi.n	139fa <flash_ioctl+0x12>
   139ee:	e8df f000 	tbb	[pc, r0]
   139f2:	0a06      	.short	0x0a06
   139f4:	0808130f 	.word	0x0808130f
   139f8:	0808      	.short	0x0808
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:362
        case CTRL_ERASE_SECTOR:
            status = RES_OK;
            break;

        default:
            status = RES_PARERR;
   139fa:	2004      	movs	r0, #4
   139fc:	bd08      	pop	{r3, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:336
            flash_wait_for_ready();
   139fe:	f7ff ff39 	bl	13874 <flash_wait_for_ready()>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:331
            status = RES_OK;
   13a02:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:367
            break;
    }

    return status;
}
   13a04:	bd08      	pop	{r3, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:342
            *(DWORD*) buff = (DWORD) ((flash_get_mem_size_bytes() / FLASH_SECTOR_SIZE));
   13a06:	f7ff fe5f 	bl	136c8 <flash_get_mem_size_bytes()>
   13a0a:	0a40      	lsrs	r0, r0, #9
   13a0c:	6008      	str	r0, [r1, #0]
   13a0e:	e7f8      	b.n	13a02 <flash_ioctl+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:347
            *(WORD*) buff = FLASH_SECTOR_SIZE;
   13a10:	f44f 7300 	mov.w	r3, #512	; 0x200
   13a14:	800b      	strh	r3, [r1, #0]
   13a16:	e7f4      	b.n	13a02 <flash_ioctl+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:353
            *(DWORD*) buff = 1; /* Block size is unknown */
   13a18:	2301      	movs	r3, #1
   13a1a:	600b      	str	r3, [r1, #0]
   13a1c:	e7f1      	b.n	13a02 <flash_ioctl+0x1a>
   13a1e:	Address 0x0000000000013a1e is out of bounds.


00013a20 <flash_write_permanent_id>:
flash_write_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:370

void flash_write_permanent_id(char *id_64bytes)
{
   13a20:	b570      	push	{r4, r5, r6, lr}
   13a22:	b090      	sub	sp, #64	; 0x40
   13a24:	4603      	mov	r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:372
    char id_bytes[64] = { 0 };
    memcpy(id_bytes, id_64bytes, sizeof(id_bytes));
   13a26:	466a      	mov	r2, sp
   13a28:	466e      	mov	r6, sp
   13a2a:	f100 0540 	add.w	r5, r0, #64	; 0x40
   13a2e:	4614      	mov	r4, r2
   13a30:	6818      	ldr	r0, [r3, #0]
   13a32:	6859      	ldr	r1, [r3, #4]
   13a34:	3308      	adds	r3, #8
   13a36:	c403      	stmia	r4!, {r0, r1}
   13a38:	42ab      	cmp	r3, r5
   13a3a:	4622      	mov	r2, r4
   13a3c:	d1f7      	bne.n	13a2e <flash_write_permanent_id+0xe>
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13a3e:	2440      	movs	r4, #64	; 0x40
   13a40:	4d07      	ldr	r5, [pc, #28]	; (13a60 <flash_write_permanent_id+0x40>)
flash_write_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376

    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_write_security_reg, 0);
   13a42:	2100      	movs	r1, #0
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13a44:	61ec      	str	r4, [r5, #28]
flash_write_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:376
   13a46:	209b      	movs	r0, #155	; 0x9b
   13a48:	f7ff fede 	bl	13808 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13a4c:	4621      	mov	r1, r4
   13a4e:	4630      	mov	r0, r6
   13a50:	f7ff fe84 	bl	1375c <ssp1_exchange_data>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13a54:	61ac      	str	r4, [r5, #24]
   13a56:	61ac      	str	r4, [r5, #24]
   13a58:	61ac      	str	r4, [r5, #24]
flash_write_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:379
        flash_spi_multi_io(&id_bytes[0], sizeof(id_bytes));
    }
}
   13a5a:	b010      	add	sp, #64	; 0x40
   13a5c:	bd70      	pop	{r4, r5, r6, pc}
   13a5e:	bf00      	nop
   13a60:	2009c000 	.word	0x2009c000

00013a64 <flash_read_permanent_id>:
flash_read_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382

void flash_read_permanent_id(char *id_64bytes)
{
   13a64:	b570      	push	{r4, r5, r6, lr}
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13a66:	2440      	movs	r4, #64	; 0x40
flash_read_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:382
   13a68:	4606      	mov	r6, r0
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13a6a:	4d07      	ldr	r5, [pc, #28]	; (13a88 <flash_read_permanent_id+0x24>)
flash_read_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
    CHIP_SELECT_OP()
    {
        flash_send_op_addr(opcode_read_security_reg, 0);
   13a6c:	2100      	movs	r1, #0
   13a6e:	2077      	movs	r0, #119	; 0x77
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13a70:	61ec      	str	r4, [r5, #28]
flash_read_permanent_id():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:385
   13a72:	f7ff fec9 	bl	13808 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13a76:	4621      	mov	r1, r4
   13a78:	4630      	mov	r0, r6
   13a7a:	f7ff fe6f 	bl	1375c <ssp1_exchange_data>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13a7e:	61ac      	str	r4, [r5, #24]
   13a80:	61ac      	str	r4, [r5, #24]
   13a82:	61ac      	str	r4, [r5, #24]
   13a84:	bd70      	pop	{r4, r5, r6, pc}
   13a86:	bf00      	nop
   13a88:	2009c000 	.word	0x2009c000

00013a8c <flash_get_page_count>:
flash_get_page_count():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:391
        flash_spi_multi_io(id_64bytes, 64);
    }
}

uint32_t flash_get_page_count(void)
{
   13a8c:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:395
    /* We want to divide by 256 or 512 but not 264 or 528 because the size
     * reported by flash_get_mem_size_bytes() assumes 256/512 byte page.
     */
    const uint32_t rounded_page_size = (g_flash_pagesize & ~0x0000001F);
   13a8e:	4b06      	ldr	r3, [pc, #24]	; (13aa8 <flash_get_page_count+0x1c>)
   13a90:	8819      	ldrh	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
    return (0 == rounded_page_size) ? 0 : (flash_get_mem_size_bytes() / rounded_page_size);
   13a92:	f031 011f 	bics.w	r1, r1, #31
   13a96:	d004      	beq.n	13aa2 <flash_get_page_count+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396 (discriminator 1)
   13a98:	f7ff fe16 	bl	136c8 <flash_get_mem_size_bytes()>
   13a9c:	fbb0 f0f1 	udiv	r0, r0, r1
   13aa0:	bd08      	pop	{r3, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:396
   13aa2:	4608      	mov	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:397
}
   13aa4:	bd08      	pop	{r3, pc}
   13aa6:	bf00      	nop
   13aa8:	2007c4e2 	.word	0x2007c4e2

00013aac <flash_get_page_size>:
flash_get_page_size():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:402

uint32_t flash_get_page_size(void)
{
    return g_flash_pagesize;
}
   13aac:	4b01      	ldr	r3, [pc, #4]	; (13ab4 <flash_get_page_size+0x8>)
   13aae:	8818      	ldrh	r0, [r3, #0]
   13ab0:	4770      	bx	lr
   13ab2:	bf00      	nop
   13ab4:	2007c4e2 	.word	0x2007c4e2

00013ab8 <flash_supports_metadata>:
flash_supports_metadata():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:406

bool flash_supports_metadata(void)
{
    return (0 != (g_flash_pagesize % FLASH_PAGESIZE_256));
   13ab8:	4b02      	ldr	r3, [pc, #8]	; (13ac4 <flash_supports_metadata+0xc>)
   13aba:	7818      	ldrb	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:407
}
   13abc:	3000      	adds	r0, #0
   13abe:	bf18      	it	ne
   13ac0:	2001      	movne	r0, #1
   13ac2:	4770      	bx	lr
   13ac4:	2007c4e2 	.word	0x2007c4e2

00013ac8 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   13ac8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   13acc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13ad0:	460f      	mov	r7, r1
   13ad2:	4691      	mov	r9, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:163
    uint32_t writeCounter = 0xFFFFFFFF;
   13ad4:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:162
{
   13ad6:	4680      	mov	r8, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:166
    flash_wait_for_ready();
   13ad8:	f7ff fecc 	bl	13874 <flash_wait_for_ready()>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:173
    const bool meta_data_exists = flash_supports_metadata();
   13adc:	f7ff ffec 	bl	13ab8 <flash_supports_metadata>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:174
    if (meta_data_exists)
   13ae0:	4606      	mov	r6, r0
   13ae2:	b1b8      	cbz	r0, 13b14 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4c>
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13ae4:	2540      	movs	r5, #64	; 0x40
   13ae6:	4c19      	ldr	r4, [pc, #100]	; (13b4c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
flash_get_metadata_addr_from_pageaddr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   13ae8:	4b19      	ldr	r3, [pc, #100]	; (13b50 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13aea:	61e5      	str	r5, [r4, #28]
flash_get_metadata_addr_from_pageaddr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
   13aec:	881b      	ldrh	r3, [r3, #0]
_ZL16flash_write_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   13aee:	2003      	movs	r0, #3
flash_get_metadata_addr_from_pageaddr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:135
            (g_flash_pagesize == FLASH_PAGESIZE_264) ? FLASH_PAGESIZE_256 : FLASH_PAGESIZE_512;
   13af0:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   13af4:	bf0c      	ite	eq
   13af6:	f44f 7180 	moveq.w	r1, #256	; 0x100
   13afa:	f44f 7100 	movne.w	r1, #512	; 0x200
_ZL16flash_write_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:178
            flash_send_op_addr(opcode_read_cont_lowfreq, flash_get_metadata_addr_from_pageaddr(addr));
   13afe:	4339      	orrs	r1, r7
   13b00:	f7ff fe82 	bl	13808 <flash_send_op_addr(flash_opcode_t, unsigned long)>
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13b04:	2104      	movs	r1, #4
   13b06:	eb0d 0001 	add.w	r0, sp, r1
   13b0a:	f7ff fe27 	bl	1375c <ssp1_exchange_data>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13b0e:	61a5      	str	r5, [r4, #24]
   13b10:	61a5      	str	r5, [r4, #24]
   13b12:	61a5      	str	r5, [r4, #24]
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13b14:	2340      	movs	r3, #64	; 0x40
   13b16:	4c0d      	ldr	r4, [pc, #52]	; (13b4c <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
_ZL16flash_write_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
        flash_send_op_addr(opcode_prog_thru_buffer1, addr);
   13b18:	4639      	mov	r1, r7
   13b1a:	2082      	movs	r0, #130	; 0x82
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13b1c:	61e3      	str	r3, [r4, #28]
_ZL16flash_write_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:185
   13b1e:	f7ff fe73 	bl	13808 <flash_send_op_addr(flash_opcode_t, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:186
        ssp1_dma_transfer_block(data, size, 1);
   13b22:	2201      	movs	r2, #1
   13b24:	4649      	mov	r1, r9
   13b26:	4640      	mov	r0, r8
   13b28:	f7fe fdfe 	bl	12728 <ssp1_dma_transfer_block>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:188
        if (meta_data_exists) {
   13b2c:	b13e      	cbz	r6, 13b3e <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x76>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:189
            ++writeCounter;
   13b2e:	9b01      	ldr	r3, [sp, #4]
   13b30:	a802      	add	r0, sp, #8
   13b32:	3301      	adds	r3, #1
   13b34:	f840 3d04 	str.w	r3, [r0, #-4]!
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13b38:	2104      	movs	r1, #4
   13b3a:	f7ff fe0f 	bl	1375c <ssp1_exchange_data>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13b3e:	2340      	movs	r3, #64	; 0x40
   13b40:	61a3      	str	r3, [r4, #24]
   13b42:	61a3      	str	r3, [r4, #24]
   13b44:	61a3      	str	r3, [r4, #24]
_ZL16flash_write_pagePhmm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:193
}
   13b46:	b003      	add	sp, #12
   13b48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   13b4c:	2009c000 	.word	0x2009c000
   13b50:	2007c4e2 	.word	0x2007c4e2

00013b54 <flash_chip_erase>:
flash_chip_erase():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:429

    return (UINT32_MAX == write_counter) ? 0 : write_counter;
}

void flash_chip_erase(void)
{
   13b54:	b537      	push	{r0, r1, r2, r4, r5, lr}
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
static inline char board_io_flash_cs(void)  { LPC_GPIO0->FIOCLR = (1 << BIO_FLASH_CS_P0PIN);   return 1; }
   13b56:	2540      	movs	r5, #64	; 0x40
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13b58:	2104      	movs	r1, #4
flash_chip_erase():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
    unsigned char chip_erase[] = { 0xC7, 0x94, 0x80, 0x9A };
   13b5a:	4b07      	ldr	r3, [pc, #28]	; (13b78 <flash_chip_erase+0x24>)
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13b5c:	4c07      	ldr	r4, [pc, #28]	; (13b7c <flash_chip_erase+0x28>)
flash_chip_erase():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:430
   13b5e:	6818      	ldr	r0, [r3, #0]
   13b60:	9001      	str	r0, [sp, #4]
board_io_flash_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:52
   13b62:	61e5      	str	r5, [r4, #28]
flash_spi_multi_io():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:27
static inline void flash_spi_multi_io(void *p, int len) {   ssp1_exchange_data(p, len);     }
   13b64:	eb0d 0001 	add.w	r0, sp, r1
   13b68:	f7ff fdf8 	bl	1375c <ssp1_exchange_data>
board_io_flash_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   13b6c:	61a5      	str	r5, [r4, #24]
   13b6e:	61a5      	str	r5, [r4, #24]
   13b70:	61a5      	str	r5, [r4, #24]
flash_chip_erase():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/disk/spi_flash.cpp:436

    CHIP_SELECT_OP()
    {
        flash_spi_multi_io(&chip_erase, sizeof(chip_erase));
    }
}
   13b72:	b003      	add	sp, #12
   13b74:	bd30      	pop	{r4, r5, pc}
   13b76:	bf00      	nop
   13b78:	000203d4 	.word	0x000203d4
   13b7c:	2009c000 	.word	0x2009c000

00013b80 <get_fattime>:
get_fattime():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:9
/**
 * This function is called by FAT FS System to get system time
 * @return DWORD containing the time structure
 */
DWORD get_fattime()
{
   13b80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:10
    rtc_t sysTime = rtc_gettime();
   13b82:	a801      	add	r0, sp, #4
   13b84:	f7fe fd02 	bl	1258c <rtc_gettime>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:13

    return ((DWORD) (sysTime.year - 1980) << 25)
            | ((DWORD) sysTime.month << 21)
   13b88:	f89d 3009 	ldrb.w	r3, [sp, #9]
   13b8c:	f003 000f 	and.w	r0, r3, #15
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:14
            | ((DWORD) sysTime.day << 16)
   13b90:	f89d 3008 	ldrb.w	r3, [sp, #8]
   13b94:	f003 031f 	and.w	r3, r3, #31
   13b98:	041b      	lsls	r3, r3, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
   13b9a:	ea43 5340 	orr.w	r3, r3, r0, lsl #21
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:15
            | ((DWORD) sysTime.hour << 11)
   13b9e:	f89d 0006 	ldrb.w	r0, [sp, #6]
   13ba2:	f000 001f 	and.w	r0, r0, #31
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   13ba6:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:16
            | ((DWORD) sysTime.min << 5)
   13baa:	f89d 0005 	ldrb.w	r0, [sp, #5]
   13bae:	f000 003f 	and.w	r0, r0, #63	; 0x3f
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:17
            | ((DWORD) sysTime.sec >> 1);
   13bb2:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
   13bb6:	f89d 0004 	ldrb.w	r0, [sp, #4]
   13bba:	f3c0 0044 	ubfx	r0, r0, #1, #5
   13bbe:	4303      	orrs	r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:12
    return ((DWORD) (sysTime.year - 1980) << 25)
   13bc0:	f8bd 000a 	ldrh.w	r0, [sp, #10]
   13bc4:	0640      	lsls	r0, r0, #25
   13bc6:	f100 4008 	add.w	r0, r0, #2281701376	; 0x88000000
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/fatfs_time.c:18
}
   13bca:	4318      	orrs	r0, r3
   13bcc:	b005      	add	sp, #20
   13bce:	f85d fb04 	ldr.w	pc, [sp], #4

00013bd2 <mem_cpy>:
mem_cpy():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:562
/* String functions                                                      */
/*-----------------------------------------------------------------------*/

/* Copy memory to memory */
static
void mem_cpy (void* dst, const void* src, UINT cnt) {
   13bd2:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:563
	BYTE *d = (BYTE*)dst;
   13bd4:	4604      	mov	r4, r0
   13bd6:	1f0d      	subs	r5, r1, #4
   13bd8:	1b13      	subs	r3, r2, r4
   13bda:	4403      	add	r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:567
	const BYTE *s = (const BYTE*)src;

#if _WORD_ACCESS == 1
	while (cnt >= sizeof (int)) {
   13bdc:	2b03      	cmp	r3, #3
   13bde:	d80a      	bhi.n	13bf6 <mem_cpy+0x24>
   13be0:	f022 0303 	bic.w	r3, r2, #3
   13be4:	4419      	add	r1, r3
   13be6:	f002 0203 	and.w	r2, r2, #3
   13bea:	3b01      	subs	r3, #1
   13bec:	4418      	add	r0, r3
   13bee:	440a      	add	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:573
		*(int*)d = *(int*)s;
		d += sizeof (int); s += sizeof (int);
		cnt -= sizeof (int);
	}
#endif
	while (cnt--)
   13bf0:	4291      	cmp	r1, r2
   13bf2:	d105      	bne.n	13c00 <mem_cpy+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:575
		*d++ = *s++;
}
   13bf4:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:568
		*(int*)d = *(int*)s;
   13bf6:	f855 3f04 	ldr.w	r3, [r5, #4]!
   13bfa:	f844 3b04 	str.w	r3, [r4], #4
   13bfe:	e7eb      	b.n	13bd8 <mem_cpy+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:574
		*d++ = *s++;
   13c00:	f811 3b01 	ldrb.w	r3, [r1], #1
   13c04:	f800 3f01 	strb.w	r3, [r0, #1]!
   13c08:	e7f2      	b.n	13bf0 <mem_cpy+0x1e>

00013c0a <mem_set>:
mem_set():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:579

/* Fill memory */
static
void mem_set (void* dst, int val, UINT cnt) {
   13c0a:	4402      	add	r2, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:582
	BYTE *d = (BYTE*)dst;

	while (cnt--)
   13c0c:	4290      	cmp	r0, r2
   13c0e:	d100      	bne.n	13c12 <mem_set+0x8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:584
		*d++ = (BYTE)val;
}
   13c10:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:583
		*d++ = (BYTE)val;
   13c12:	f800 1b01 	strb.w	r1, [r0], #1
   13c16:	e7f9      	b.n	13c0c <mem_set+0x2>

00013c18 <sum_sfn>:
sum_sfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1473
#if _USE_LFN
static
BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
   13c18:	4602      	mov	r2, r0
   13c1a:	f100 010b 	add.w	r1, r0, #11
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1474
	BYTE sum = 0;
   13c1e:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1477 (discriminator 1)
	UINT n = 11;

	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
   13c20:	01c3      	lsls	r3, r0, #7
   13c22:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
   13c26:	f812 0b01 	ldrb.w	r0, [r2], #1
   13c2a:	4403      	add	r3, r0
   13c2c:	428a      	cmp	r2, r1
   13c2e:	f003 00ff 	and.w	r0, r3, #255	; 0xff
   13c32:	d1f5      	bne.n	13c20 <sum_sfn+0x8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1479
	return sum;
}
   13c34:	4770      	bx	lr

00013c36 <get_ldnumber>:
get_ldnumber():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2086
	const TCHAR *tp, *tt;
	UINT i;
	int vol = -1;


	if (*path) {	/* If the pointer is not a null */
   13c36:	6803      	ldr	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2080
{
   13c38:	b510      	push	{r4, lr}
   13c3a:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2086
	if (*path) {	/* If the pointer is not a null */
   13c3c:	b153      	cbz	r3, 13c54 <get_ldnumber+0x1e>
   13c3e:	4619      	mov	r1, r3
   13c40:	460a      	mov	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 1)
		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the path */
   13c42:	f811 0b01 	ldrb.w	r0, [r1], #1
   13c46:	281f      	cmp	r0, #31
   13c48:	d910      	bls.n	13c6c <get_ldnumber+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2087 (discriminator 3)
   13c4a:	283a      	cmp	r0, #58	; 0x3a
   13c4c:	d1f8      	bne.n	13c40 <get_ldnumber+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2090
		if (*tt == ':') {	/* If a ':' is exist in the path name */
			tp = *path;
			i = *tp++ - '0'; 
   13c4e:	1c59      	adds	r1, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2091
			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
   13c50:	428a      	cmp	r2, r1
   13c52:	d002      	beq.n	13c5a <get_ldnumber+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2083
	int vol = -1;
   13c54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2126
#else
		vol = 0;		/* Drive 0 */
#endif
	}
	return vol;
}
   13c58:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   13c5a:	781b      	ldrb	r3, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2092
				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
   13c5c:	3b30      	subs	r3, #48	; 0x30
   13c5e:	b2d9      	uxtb	r1, r3
   13c60:	2901      	cmp	r1, #1
   13c62:	d8f7      	bhi.n	13c54 <get_ldnumber+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   13c64:	3201      	adds	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2090
			i = *tp++ - '0'; 
   13c66:	4618      	mov	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2094
					*path = ++tt;
   13c68:	6022      	str	r2, [r4, #0]
   13c6a:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2122
		vol = 0;		/* Drive 0 */
   13c6c:	2000      	movs	r0, #0
   13c6e:	bd10      	pop	{r4, pc}

00013c70 <sync_window.part.1>:
sync_window():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   13c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:764
		wsect = fs->winsect;	/* Current sector number */
   13c72:	6b05      	ldr	r5, [r0, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   13c74:	f100 0734 	add.w	r7, r0, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:755
FRESULT sync_window (
   13c78:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:765
		if (disk_write(fs->drv, fs->win, wsect, 1))
   13c7a:	2301      	movs	r3, #1
   13c7c:	462a      	mov	r2, r5
   13c7e:	4639      	mov	r1, r7
   13c80:	7840      	ldrb	r0, [r0, #1]
   13c82:	f7ff f960 	bl	12f46 <disk_write>
   13c86:	b9a0      	cbnz	r0, 13cb2 <sync_window.part.1+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   13c88:	6a63      	ldr	r3, [r4, #36]	; 0x24
   13c8a:	69e2      	ldr	r2, [r4, #28]
   13c8c:	1aeb      	subs	r3, r5, r3
   13c8e:	4293      	cmp	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:767
		fs->wflag = 0;
   13c90:	7120      	strb	r0, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:768
		if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
   13c92:	d301      	bcc.n	13c98 <sync_window.part.1+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:775
	return FR_OK;
   13c94:	2000      	movs	r0, #0
   13c96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   13c98:	78e6      	ldrb	r6, [r4, #3]
   13c9a:	2e01      	cmp	r6, #1
   13c9c:	d9fa      	bls.n	13c94 <sync_window.part.1+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   13c9e:	69e3      	ldr	r3, [r4, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   13ca0:	4639      	mov	r1, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:770
				wsect += fs->fsize;
   13ca2:	441d      	add	r5, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:771
				disk_write(fs->drv, fs->win, wsect, 1);
   13ca4:	462a      	mov	r2, r5
   13ca6:	2301      	movs	r3, #1
   13ca8:	7860      	ldrb	r0, [r4, #1]
   13caa:	f7ff f94c 	bl	12f46 <disk_write>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:769
			for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
   13cae:	3e01      	subs	r6, #1
   13cb0:	e7f3      	b.n	13c9a <sync_window.part.1+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:766
			return FR_DISK_ERR;
   13cb2:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:776
}
   13cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00013cb6 <sync_window>:
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:763
	if (fs->wflag) {	/* Write back the sector if it is dirty */
   13cb6:	7903      	ldrb	r3, [r0, #4]
   13cb8:	b10b      	cbz	r3, 13cbe <sync_window+0x8>
   13cba:	f7ff bfd9 	b.w	13c70 <sync_window.part.1>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:776
}
   13cbe:	4618      	mov	r0, r3
   13cc0:	4770      	bx	lr
   13cc2:	Address 0x0000000000013cc2 is out of bounds.


00013cc4 <sync_fs>:
sync_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:810
{
   13cc4:	b570      	push	{r4, r5, r6, lr}
   13cc6:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:814
	res = sync_window(fs);
   13cc8:	f7ff fff5 	bl	13cb6 <sync_window>
   13ccc:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:815
	if (res == FR_OK) {
   13cce:	bb80      	cbnz	r0, 13d32 <sync_fs+0x6e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:817
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
   13cd0:	7823      	ldrb	r3, [r4, #0]
   13cd2:	2b03      	cmp	r3, #3
   13cd4:	d125      	bne.n	13d22 <sync_fs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:817 (discriminator 1)
   13cd6:	7963      	ldrb	r3, [r4, #5]
   13cd8:	2b01      	cmp	r3, #1
   13cda:	d122      	bne.n	13d22 <sync_fs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:819
			mem_set(fs->win, 0, SS(fs));
   13cdc:	f104 0634 	add.w	r6, r4, #52	; 0x34
   13ce0:	4601      	mov	r1, r0
   13ce2:	f44f 7200 	mov.w	r2, #512	; 0x200
   13ce6:	4630      	mov	r0, r6
   13ce8:	f7ff ff8f 	bl	13c0a <mem_set>
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
#define	ST_DWORD(ptr,val)	*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)
#else
#endif
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   13cec:	f64a 2255 	movw	r2, #43605	; 0xaa55
   13cf0:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   13cf4:	4a0f      	ldr	r2, [pc, #60]	; (13d34 <sync_fs+0x70>)
sync_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   13cf6:	4631      	mov	r1, r6
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   13cf8:	6362      	str	r2, [r4, #52]	; 0x34
   13cfa:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   13cfe:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   13d02:	3220      	adds	r2, #32
   13d04:	f8c4 2218 	str.w	r2, [r4, #536]	; 0x218
   13d08:	6962      	ldr	r2, [r4, #20]
sync_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:827
   13d0a:	7860      	ldrb	r0, [r4, #1]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   13d0c:	f8c4 221c 	str.w	r2, [r4, #540]	; 0x21c
   13d10:	6922      	ldr	r2, [r4, #16]
   13d12:	f8c4 2220 	str.w	r2, [r4, #544]	; 0x220
sync_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:826
			fs->winsect = fs->volbase + 1;
   13d16:	6a22      	ldr	r2, [r4, #32]
   13d18:	3201      	adds	r2, #1
   13d1a:	6322      	str	r2, [r4, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:827
			disk_write(fs->drv, fs->win, fs->winsect, 1);
   13d1c:	f7ff f913 	bl	12f46 <disk_write>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:828
			fs->fsi_flag = 0;
   13d20:	7165      	strb	r5, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:831
		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
   13d22:	2200      	movs	r2, #0
   13d24:	7860      	ldrb	r0, [r4, #1]
   13d26:	4611      	mov	r1, r2
   13d28:	f7ff f929 	bl	12f7e <disk_ioctl>
   13d2c:	3000      	adds	r0, #0
   13d2e:	bf18      	it	ne
   13d30:	2001      	movne	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:836
}
   13d32:	bd70      	pop	{r4, r5, r6, pc}
   13d34:	41615252 	.word	0x41615252

00013d38 <move_window>:
move_window():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   13d38:	6b03      	ldr	r3, [r0, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:785
{
   13d3a:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   13d3c:	428b      	cmp	r3, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:785
{
   13d3e:	4605      	mov	r5, r0
   13d40:	460e      	mov	r6, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:786
	if (sector != fs->winsect) {	/* Changed current window */
   13d42:	d011      	beq.n	13d68 <move_window+0x30>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:788
		if (sync_window(fs) != FR_OK)
   13d44:	f7ff ffb7 	bl	13cb6 <sync_window>
   13d48:	4604      	mov	r4, r0
   13d4a:	b110      	cbz	r0, 13d52 <move_window+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:789
			return FR_DISK_ERR;
   13d4c:	2401      	movs	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:797
}
   13d4e:	4620      	mov	r0, r4
   13d50:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:791
		if (disk_read(fs->drv, fs->win, sector, 1))
   13d52:	2301      	movs	r3, #1
   13d54:	4632      	mov	r2, r6
   13d56:	f105 0134 	add.w	r1, r5, #52	; 0x34
   13d5a:	7868      	ldrb	r0, [r5, #1]
   13d5c:	f7ff f8d7 	bl	12f0e <disk_read>
   13d60:	2800      	cmp	r0, #0
   13d62:	d1f3      	bne.n	13d4c <move_window+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:793
		fs->winsect = sector;
   13d64:	632e      	str	r6, [r5, #48]	; 0x30
   13d66:	e7f2      	b.n	13d4e <move_window+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:796
	return FR_OK;
   13d68:	2400      	movs	r4, #0
   13d6a:	e7f0      	b.n	13d4e <move_window+0x16>

00013d6c <check_fs>:
check_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2141
BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk error */
	FATFS* fs,	/* File system object */
	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
)
{
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   13d6c:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2140
{
   13d6e:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2141
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
   13d70:	7103      	strb	r3, [r0, #4]
   13d72:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   13d76:	6303      	str	r3, [r0, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2140
{
   13d78:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2142
	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
   13d7a:	f7ff ffdd 	bl	13d38 <move_window>
   13d7e:	b9a0      	cbnz	r0, 13daa <check_fs+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2145
		return 3;

	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offset 510 even if the sector size is >512) */
   13d80:	f64a 2355 	movw	r3, #43605	; 0xaa55
   13d84:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   13d88:	429a      	cmp	r2, r3
   13d8a:	d110      	bne.n	13dae <check_fs+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2148
		return 2;

	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
   13d8c:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   13d90:	4a08      	ldr	r2, [pc, #32]	; (13db4 <check_fs+0x48>)
   13d92:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
   13d96:	4293      	cmp	r3, r2
   13d98:	d00a      	beq.n	13db0 <check_fs+0x44>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2150
		return 0;
	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
   13d9a:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   13d9e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2143
		return 3;
   13da2:	1a80      	subs	r0, r0, r2
   13da4:	bf18      	it	ne
   13da6:	2001      	movne	r0, #1
   13da8:	bd10      	pop	{r4, pc}
   13daa:	2003      	movs	r0, #3
   13dac:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2146
		return 2;
   13dae:	2002      	movs	r0, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2154
		return 0;

	return 1;
}
   13db0:	bd10      	pop	{r4, pc}
   13db2:	bf00      	nop
   13db4:	00544146 	.word	0x00544146

00013db8 <find_volume>:
find_volume():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2179
	WORD nrsv;
	FATFS *fs;


	/* Get logical drive number from the path name */
	*rfs = 0;
   13db8:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2169
{
   13dba:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2179
	*rfs = 0;
   13dbc:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2169
{
   13dbe:	b085      	sub	sp, #20
   13dc0:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   13dc2:	4608      	mov	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2169
{
   13dc4:	4615      	mov	r5, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2180
	vol = get_ldnumber(path);
   13dc6:	f7ff ff36 	bl	13c36 <get_ldnumber>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   13dca:	1e06      	subs	r6, r0, #0
   13dcc:	f2c0 80f1 	blt.w	13fb2 <find_volume+0x1fa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2184

	/* Check if the file system object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the file system object */
   13dd0:	4b7d      	ldr	r3, [pc, #500]	; (13fc8 <find_volume+0x210>)
   13dd2:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   13dd6:	2c00      	cmp	r4, #0
   13dd8:	f000 80ed 	beq.w	13fb6 <find_volume+0x1fe>
lock_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   13ddc:	68e0      	ldr	r0, [r4, #12]
   13dde:	f001 fc7d 	bl	156dc <ff_req_grant>
find_volume():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2187

	ENTER_FF(fs);						/* Lock the volume */
   13de2:	2800      	cmp	r0, #0
   13de4:	f000 80e9 	beq.w	13fba <find_volume+0x202>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2188
	*rfs = fs;							/* Return pointer to the file system object */
   13de8:	603c      	str	r4, [r7, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2190

	if (fs->fs_type) {					/* If the volume has been mounted */
   13dea:	7823      	ldrb	r3, [r4, #0]
   13dec:	b16b      	cbz	r3, 13e0a <find_volume+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2191
		stat = disk_status(fs->drv);
   13dee:	7860      	ldrb	r0, [r4, #1]
   13df0:	f7ff f885 	bl	12efe <disk_status>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2192
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
   13df4:	07c1      	lsls	r1, r0, #31
   13df6:	d408      	bmi.n	13e0a <find_volume+0x52>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2193
			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
   13df8:	2d00      	cmp	r5, #0
   13dfa:	f000 80b7 	beq.w	13f6c <find_volume+0x1b4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2193 (discriminator 1)
   13dfe:	f010 0004 	ands.w	r0, r0, #4
   13e02:	d000      	beq.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2194
				return FR_WRITE_PROTECTED;
   13e04:	200a      	movs	r0, #10
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2325
#if _FS_LOCK			/* Clear file lock semaphores */
	clear_lock(fs);
#endif

	return FR_OK;
}
   13e06:	b005      	add	sp, #20
   13e08:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   13e0a:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   13e0c:	b2f0      	uxtb	r0, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2202
	fs->fs_type = 0;					/* Clear the file system object */
   13e0e:	7023      	strb	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2203
	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
   13e10:	7060      	strb	r0, [r4, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2204
	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
   13e12:	f7ff f861 	bl	12ed8 <disk_initialize>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2205
	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
   13e16:	07c2      	lsls	r2, r0, #31
   13e18:	f100 80d1 	bmi.w	13fbe <find_volume+0x206>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2207
	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
   13e1c:	b10d      	cbz	r5, 13e22 <find_volume+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2207 (discriminator 1)
   13e1e:	0743      	lsls	r3, r0, #29
   13e20:	d4f0      	bmi.n	13e04 <find_volume+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2215
	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
   13e22:	2100      	movs	r1, #0
   13e24:	4620      	mov	r0, r4
   13e26:	f7ff ffa1 	bl	13d6c <check_fs>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2216
	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
   13e2a:	2801      	cmp	r0, #1
   13e2c:	f040 80ac 	bne.w	13f88 <find_volume+0x1d0>
   13e30:	4621      	mov	r1, r4
   13e32:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2222
			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
   13e34:	f891 31f6 	ldrb.w	r3, [r1, #502]	; 0x1f6
   13e38:	b10b      	cbz	r3, 13e3e <find_volume+0x86>
LD_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   13e3a:	f8d1 31fa 	ldr.w	r3, [r1, #506]	; 0x1fa
find_volume():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2222 (discriminator 4)
   13e3e:	f84d 3022 	str.w	r3, [sp, r2, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2220 (discriminator 4)
		for (i = 0; i < 4; i++) {			/* Get partition offset */
   13e42:	3201      	adds	r2, #1
   13e44:	2a04      	cmp	r2, #4
   13e46:	f101 0110 	add.w	r1, r1, #16
   13e4a:	d1f3      	bne.n	13e34 <find_volume+0x7c>
   13e4c:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2227
			bsect = br[i];
   13e4e:	f85d 5026 	ldr.w	r5, [sp, r6, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   13e52:	2d00      	cmp	r5, #0
   13e54:	f000 808c 	beq.w	13f70 <find_volume+0x1b8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2228 (discriminator 1)
   13e58:	4629      	mov	r1, r5
   13e5a:	4620      	mov	r0, r4
   13e5c:	f7ff ff86 	bl	13d6c <check_fs>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   13e60:	2800      	cmp	r0, #0
   13e62:	f040 8086 	bne.w	13f72 <find_volume+0x1ba>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2236
	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical sector size) */
   13e66:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   13e6a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   13e6e:	f040 8089 	bne.w	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2239
	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
   13e72:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2240
	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
   13e76:	b901      	cbnz	r1, 13e7a <find_volume+0xc2>
LD_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
   13e78:	6da1      	ldr	r1, [r4, #88]	; 0x58
find_volume():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   13e7a:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2241
	fs->fsize = fasize;
   13e7e:	61e1      	str	r1, [r4, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   13e80:	1e53      	subs	r3, r2, #1
   13e82:	2b01      	cmp	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2243
	fs->n_fats = fs->win[BPB_NumFATs];					/* Number of FAT copies */
   13e84:	70e2      	strb	r2, [r4, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2244
	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
   13e86:	d87d      	bhi.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2248
	fs->csize = fs->win[BPB_SecPerClus];				/* Number of sectors per cluster */
   13e88:	f894 6041 	ldrb.w	r6, [r4, #65]	; 0x41
   13e8c:	70a6      	strb	r6, [r4, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2249
	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
   13e8e:	2e00      	cmp	r6, #0
   13e90:	d078      	beq.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2249 (discriminator 1)
   13e92:	1e73      	subs	r3, r6, #1
   13e94:	4233      	tst	r3, r6
   13e96:	d175      	bne.n	13f84 <find_volume+0x1cc>
LD_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   13e98:	f8b4 e045 	ldrh.w	lr, [r4, #69]	; 0x45
find_volume():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   13e9c:	f01e 0f0f 	tst.w	lr, #15
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2252
	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
   13ea0:	f8a4 e008 	strh.w	lr, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2253
	if (fs->n_rootdir % (SS(fs) / SZ_DIR))				/* (Must be sector aligned) */
   13ea4:	d16e      	bne.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2256
	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
   13ea6:	f8b4 3047 	ldrh.w	r3, [r4, #71]	; 0x47
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2257
	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
   13eaa:	b903      	cbnz	r3, 13eae <find_volume+0xf6>
LD_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:336 (discriminator 1)
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   13eac:	6d63      	ldr	r3, [r4, #84]	; 0x54
LD_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   13eae:	f8b4 7042 	ldrh.w	r7, [r4, #66]	; 0x42
find_volume():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2260
	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
   13eb2:	2f00      	cmp	r7, #0
   13eb4:	d066      	beq.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2246
	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
   13eb6:	434a      	muls	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2263
	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
   13eb8:	eb07 101e 	add.w	r0, r7, lr, lsr #4
   13ebc:	4410      	add	r0, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2264
	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
   13ebe:	4283      	cmp	r3, r0
   13ec0:	d360      	bcc.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2265
	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
   13ec2:	1a1b      	subs	r3, r3, r0
   13ec4:	fbb3 f3f6 	udiv	r3, r3, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2266
	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
   13ec8:	2b00      	cmp	r3, #0
   13eca:	d05b      	beq.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2268
	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
   13ecc:	f640 76f5 	movw	r6, #4085	; 0xff5
   13ed0:	42b3      	cmp	r3, r6
   13ed2:	d95b      	bls.n	13f8c <find_volume+0x1d4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2269
	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
   13ed4:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   13ed8:	42b3      	cmp	r3, r6
   13eda:	bf94      	ite	ls
   13edc:	2602      	movls	r6, #2
   13ede:	2603      	movhi	r6, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   13ee0:	3302      	adds	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   13ee2:	442f      	add	r7, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   13ee4:	4428      	add	r0, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   13ee6:	2e03      	cmp	r6, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2272
	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
   13ee8:	61a3      	str	r3, [r4, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2273
	fs->volbase = bsect;								/* Volume start sector */
   13eea:	6225      	str	r5, [r4, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2274
	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
   13eec:	6267      	str	r7, [r4, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2275
	fs->database = bsect + sysect;						/* Data start sector */
   13eee:	62e0      	str	r0, [r4, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2276
	if (fmt == FS_FAT32) {
   13ef0:	d14e      	bne.n	13f90 <find_volume+0x1d8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2277
		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
   13ef2:	f1be 0f00 	cmp.w	lr, #0
   13ef6:	d145      	bne.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   13ef8:	6e22      	ldr	r2, [r4, #96]	; 0x60
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2279
		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
   13efa:	009b      	lsls	r3, r3, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2278
		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
   13efc:	62a2      	str	r2, [r4, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2286
	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than needed) */
   13efe:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   13f02:	ebb1 2f53 	cmp.w	r1, r3, lsr #9
   13f06:	d33d      	bcc.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2291
	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
   13f08:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   13f0c:	6163      	str	r3, [r4, #20]
   13f0e:	6123      	str	r3, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   13f10:	2380      	movs	r3, #128	; 0x80
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   13f12:	2e03      	cmp	r6, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2294
	fs->fsi_flag = 0x80;
   13f14:	7163      	strb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2296
	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
   13f16:	d122      	bne.n	13f5e <find_volume+0x1a6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2297
		&& LD_WORD(fs->win+BPB_FSInfo) == 1
   13f18:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   13f1c:	2b01      	cmp	r3, #1
   13f1e:	d11e      	bne.n	13f5e <find_volume+0x1a6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2298
		&& move_window(fs, bsect + 1) == FR_OK)
   13f20:	1c69      	adds	r1, r5, #1
   13f22:	4620      	mov	r0, r4
   13f24:	f7ff ff08 	bl	13d38 <move_window>
   13f28:	b9c8      	cbnz	r0, 13f5e <find_volume+0x1a6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   13f2a:	f64a 2355 	movw	r3, #43605	; 0xaa55
   13f2e:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2300
		fs->fsi_flag = 0;
   13f32:	7160      	strb	r0, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2301
		if (LD_WORD(fs->win+BS_55AA) == 0xAA55	/* Load FSINFO data if available */
   13f34:	429a      	cmp	r2, r3
   13f36:	d112      	bne.n	13f5e <find_volume+0x1a6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2302
			&& LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252
   13f38:	6b62      	ldr	r2, [r4, #52]	; 0x34
   13f3a:	4b24      	ldr	r3, [pc, #144]	; (13fcc <find_volume+0x214>)
   13f3c:	429a      	cmp	r2, r3
   13f3e:	d10e      	bne.n	13f5e <find_volume+0x1a6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2303
			&& LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272)
   13f40:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   13f44:	f8d4 2218 	ldr.w	r2, [r4, #536]	; 0x218
   13f48:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   13f4c:	3320      	adds	r3, #32
   13f4e:	429a      	cmp	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2306
			fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
   13f50:	bf01      	itttt	eq
   13f52:	f8d4 321c 	ldreq.w	r3, [r4, #540]	; 0x21c
   13f56:	6163      	streq	r3, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2309
			fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
   13f58:	f8d4 3220 	ldreq.w	r3, [r4, #544]	; 0x220
   13f5c:	6123      	streq	r3, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   13f5e:	4a1c      	ldr	r2, [pc, #112]	; (13fd0 <find_volume+0x218>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2315
	fs->fs_type = fmt;	/* FAT sub-type */
   13f60:	7026      	strb	r6, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2316
	fs->id = ++Fsid;	/* File system mount ID */
   13f62:	8813      	ldrh	r3, [r2, #0]
   13f64:	3301      	adds	r3, #1
   13f66:	b29b      	uxth	r3, r3
   13f68:	8013      	strh	r3, [r2, #0]
   13f6a:	80e3      	strh	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2324
	return FR_OK;
   13f6c:	2000      	movs	r0, #0
   13f6e:	e74a      	b.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2228
			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
   13f70:	2002      	movs	r0, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2229 (discriminator 1)
		} while (!LD2PT(vol) && fmt && ++i < 4);
   13f72:	3601      	adds	r6, #1
   13f74:	2e04      	cmp	r6, #4
   13f76:	f47f af6a 	bne.w	13e4e <find_volume+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   13f7a:	2803      	cmp	r0, #3
   13f7c:	d021      	beq.n	13fc2 <find_volume+0x20a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2232
	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
   13f7e:	2800      	cmp	r0, #0
   13f80:	f43f af71 	beq.w	13e66 <find_volume+0xae>
   13f84:	200d      	movs	r0, #13
   13f86:	e73e      	b.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2214
	bsect = 0;
   13f88:	2500      	movs	r5, #0
   13f8a:	e7f6      	b.n	13f7a <find_volume+0x1c2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2267
	fmt = FS_FAT12;
   13f8c:	2601      	movs	r6, #1
   13f8e:	e7a7      	b.n	13ee0 <find_volume+0x128>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2281
		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
   13f90:	f1be 0f00 	cmp.w	lr, #0
   13f94:	d0f6      	beq.n	13f84 <find_volume+0x1cc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   13f96:	2e02      	cmp	r6, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   13f98:	4417      	add	r7, r2
   13f9a:	ea4f 0243 	mov.w	r2, r3, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   13f9e:	bf1c      	itt	ne
   13fa0:	18d2      	addne	r2, r2, r3
   13fa2:	f003 0301 	andne.w	r3, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2282
		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
   13fa6:	62a7      	str	r7, [r4, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2284
			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
   13fa8:	bf0c      	ite	eq
   13faa:	4613      	moveq	r3, r2
   13fac:	eb03 0352 	addne.w	r3, r3, r2, lsr #1
   13fb0:	e7a5      	b.n	13efe <find_volume+0x146>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2181
	if (vol < 0) return FR_INVALID_DRIVE;
   13fb2:	200b      	movs	r0, #11
   13fb4:	e727      	b.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2185
	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
   13fb6:	200c      	movs	r0, #12
   13fb8:	e725      	b.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2187
	ENTER_FF(fs);						/* Lock the volume */
   13fba:	200f      	movs	r0, #15
   13fbc:	e723      	b.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2206
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
   13fbe:	2003      	movs	r0, #3
   13fc0:	e721      	b.n	13e06 <find_volume+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2231
	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
   13fc2:	2001      	movs	r0, #1
   13fc4:	e71f      	b.n	13e06 <find_volume+0x4e>
   13fc6:	bf00      	nop
   13fc8:	2007c4e4 	.word	0x2007c4e4
   13fcc:	41615252 	.word	0x41615252
   13fd0:	2007c4ec 	.word	0x2007c4ec

00013fd4 <validate>:
validate():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2338

static
FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
	void* obj		/* Pointer to the object FIL/DIR to check validity */
)
{
   13fd4:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2342
	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */


	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id)
   13fd6:	4604      	mov	r4, r0
   13fd8:	b1a8      	cbz	r0, 14006 <validate+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 1)
   13fda:	6803      	ldr	r3, [r0, #0]
   13fdc:	b19b      	cbz	r3, 14006 <validate+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 2)
   13fde:	781a      	ldrb	r2, [r3, #0]
   13fe0:	b18a      	cbz	r2, 14006 <validate+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2342 (discriminator 3)
   13fe2:	88d9      	ldrh	r1, [r3, #6]
   13fe4:	8882      	ldrh	r2, [r0, #4]
   13fe6:	4291      	cmp	r1, r2
   13fe8:	d10d      	bne.n	14006 <validate+0x32>
lock_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:615
	return ff_req_grant(fs->sobj);
   13fea:	68d8      	ldr	r0, [r3, #12]
   13fec:	f001 fb76 	bl	156dc <ff_req_grant>
validate():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2345
		return FR_INVALID_OBJECT;

	ENTER_FF(fil->fs);		/* Lock file system */
   13ff0:	b158      	cbz	r0, 1400a <validate+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2347

	if (disk_status(fil->fs->drv) & STA_NOINIT)
   13ff2:	6823      	ldr	r3, [r4, #0]
   13ff4:	7858      	ldrb	r0, [r3, #1]
   13ff6:	f7fe ff82 	bl	12efe <disk_status>
   13ffa:	f010 0f01 	tst.w	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2350
		return FR_NOT_READY;

	return FR_OK;
   13ffe:	bf14      	ite	ne
   14000:	2003      	movne	r0, #3
   14002:	2000      	moveq	r0, #0
   14004:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2343
		return FR_INVALID_OBJECT;
   14006:	2009      	movs	r0, #9
   14008:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2345
	ENTER_FF(fil->fs);		/* Lock file system */
   1400a:	200f      	movs	r0, #15
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2351
}
   1400c:	bd10      	pop	{r4, pc}

0001400e <unlock_fs>:
unlock_fs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:625
	if (fs &&
   1400e:	b150      	cbz	r0, 14026 <unlock_fs+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:627
		res != FR_INVALID_DRIVE &&
   14010:	290f      	cmp	r1, #15
   14012:	d805      	bhi.n	14020 <unlock_fs+0x12>
   14014:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
   14018:	fa23 f101 	lsr.w	r1, r3, r1
   1401c:	07cb      	lsls	r3, r1, #31
   1401e:	d402      	bmi.n	14026 <unlock_fs+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:630
		ff_rel_grant(fs->sobj);
   14020:	68c0      	ldr	r0, [r0, #12]
   14022:	f001 bb6e 	b.w	15702 <ff_rel_grant>
   14026:	4770      	bx	lr

00014028 <clust2sect>:
clust2sect():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   14028:	6983      	ldr	r3, [r0, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:852
	clst -= 2;
   1402a:	3902      	subs	r1, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   1402c:	3b02      	subs	r3, #2
   1402e:	4299      	cmp	r1, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:854
	return clst * fs->csize + fs->database;
   14030:	bf3d      	ittte	cc
   14032:	7883      	ldrbcc	r3, [r0, #2]
   14034:	6ac0      	ldrcc	r0, [r0, #44]	; 0x2c
   14036:	fb01 0003 	mlacc	r0, r1, r3, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:853
	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
   1403a:	2000      	movcs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:855
}
   1403c:	4770      	bx	lr

0001403e <get_fat>:
get_fat():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   1403e:	2901      	cmp	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:869
{
   14040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14042:	4607      	mov	r7, r0
   14044:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:874
	if (clst < 2 || clst >= fs->n_fatent)	/* Check range */
   14046:	d94b      	bls.n	140e0 <get_fat+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:874 (discriminator 1)
   14048:	6983      	ldr	r3, [r0, #24]
   1404a:	4299      	cmp	r1, r3
   1404c:	d248      	bcs.n	140e0 <get_fat+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:877
	switch (fs->fs_type) {
   1404e:	7803      	ldrb	r3, [r0, #0]
   14050:	2b02      	cmp	r3, #2
   14052:	d029      	beq.n	140a8 <get_fat+0x6a>
   14054:	2b03      	cmp	r3, #3
   14056:	d034      	beq.n	140c2 <get_fat+0x84>
   14058:	2b01      	cmp	r3, #1
   1405a:	d141      	bne.n	140e0 <get_fat+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:879
		bc = (UINT)clst; bc += bc / 2;
   1405c:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:880
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   14060:	6a41      	ldr	r1, [r0, #36]	; 0x24
   14062:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   14066:	f7ff fe67 	bl	13d38 <move_window>
   1406a:	b110      	cbz	r0, 14072 <get_fat+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:900
	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
   1406c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   14070:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   14072:	6a79      	ldr	r1, [r7, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   14074:	f3c6 0308 	ubfx	r3, r6, #0, #9
   14078:	3601      	adds	r6, #1
   1407a:	443b      	add	r3, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   1407c:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   14080:	4638      	mov	r0, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:881
		wc = fs->win[bc % SS(fs)]; bc++;
   14082:	f893 5034 	ldrb.w	r5, [r3, #52]	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:882
		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
   14086:	f7ff fe57 	bl	13d38 <move_window>
   1408a:	2800      	cmp	r0, #0
   1408c:	d1ee      	bne.n	1406c <get_fat+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   1408e:	f3c6 0608 	ubfx	r6, r6, #0, #9
   14092:	443e      	add	r6, r7
   14094:	f896 0034 	ldrb.w	r0, [r6, #52]	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   14098:	07e3      	lsls	r3, r4, #31
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:883
		wc |= fs->win[bc % SS(fs)] << 8;
   1409a:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:884
		return clst & 1 ? wc >> 4 : (wc & 0xFFF);
   1409e:	bf4c      	ite	mi
   140a0:	0900      	lsrmi	r0, r0, #4
   140a2:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   140a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:887
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
   140a8:	6a41      	ldr	r1, [r0, #36]	; 0x24
   140aa:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   140ae:	f7ff fe43 	bl	13d38 <move_window>
   140b2:	2800      	cmp	r0, #0
   140b4:	d1da      	bne.n	1406c <get_fat+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:888
		p = &fs->win[clst * 2 % SS(fs)];
   140b6:	0066      	lsls	r6, r4, #1
   140b8:	f406 76ff 	and.w	r6, r6, #510	; 0x1fe
LD_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:335
   140bc:	443e      	add	r6, r7
get_fat():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:889
		return LD_WORD(p);
   140be:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
   140c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:892
		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
   140c2:	6a41      	ldr	r1, [r0, #36]	; 0x24
   140c4:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   140c8:	f7ff fe36 	bl	13d38 <move_window>
   140cc:	2800      	cmp	r0, #0
   140ce:	d1cd      	bne.n	1406c <get_fat+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:893
		p = &fs->win[clst * 4 % SS(fs)];
   140d0:	00a4      	lsls	r4, r4, #2
   140d2:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
LD_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   140d6:	443c      	add	r4, r7
get_fat():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:894
		return LD_DWORD(p) & 0x0FFFFFFF;
   140d8:	6b60      	ldr	r0, [r4, #52]	; 0x34
   140da:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   140de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:897
		return 1;
   140e0:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:901
}
   140e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000140e4 <dir_sdi>:
dir_sdi():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1121
{
   140e4:	b570      	push	{r4, r5, r6, lr}
   140e6:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1127
	clst = dp->sclust;		/* Table start cluster (0:root) */
   140e8:	6882      	ldr	r2, [r0, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1121
{
   140ea:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   140ec:	2a01      	cmp	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1126
	dp->index = (WORD)idx;	/* Current index */
   140ee:	80e1      	strh	r1, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1128
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   140f0:	d101      	bne.n	140f6 <dir_sdi+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1129
		return FR_INT_ERR;
   140f2:	2002      	movs	r0, #2
   140f4:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1128 (discriminator 1)
	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
   140f6:	6803      	ldr	r3, [r0, #0]
   140f8:	6999      	ldr	r1, [r3, #24]
   140fa:	428a      	cmp	r2, r1
   140fc:	d2f9      	bcs.n	140f2 <dir_sdi+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1130
	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
   140fe:	b9ba      	cbnz	r2, 14130 <dir_sdi+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1130 (discriminator 1)
   14100:	7819      	ldrb	r1, [r3, #0]
   14102:	2903      	cmp	r1, #3
   14104:	d101      	bne.n	1410a <dir_sdi+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1131
		clst = dp->fs->dirbase;
   14106:	6a99      	ldr	r1, [r3, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1133
	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
   14108:	b999      	cbnz	r1, 14132 <dir_sdi+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1134
		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
   1410a:	8919      	ldrh	r1, [r3, #8]
   1410c:	428d      	cmp	r5, r1
   1410e:	d2f0      	bcs.n	140f2 <dir_sdi+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1136
		sect = dp->fs->dirbase;
   14110:	6a98      	ldr	r0, [r3, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1149
	dp->clust = clst;	/* Current cluster# */
   14112:	60e2      	str	r2, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1150
	if (!sect) return FR_INT_ERR;
   14114:	2800      	cmp	r0, #0
   14116:	d0ec      	beq.n	140f2 <dir_sdi+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   14118:	6823      	ldr	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   1411a:	eb00 1015 	add.w	r0, r0, r5, lsr #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   1411e:	3334      	adds	r3, #52	; 0x34
   14120:	f005 050f 	and.w	r5, r5, #15
   14124:	eb03 1545 	add.w	r5, r3, r5, lsl #5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1151
	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIR);					/* Sector# of the directory entry */
   14128:	6120      	str	r0, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1152
	dp->dir = dp->fs->win + (idx % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector */
   1412a:	6165      	str	r5, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1154
	return FR_OK;
   1412c:	2000      	movs	r0, #0
   1412e:	bd70      	pop	{r4, r5, r6, pc}
   14130:	4611      	mov	r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   14132:	460a      	mov	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1139
		ic = SS(dp->fs) / SZ_DIR * dp->fs->csize;	/* Entries per cluster */
   14134:	789e      	ldrb	r6, [r3, #2]
   14136:	0136      	lsls	r6, r6, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   14138:	42b5      	cmp	r5, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   1413a:	4611      	mov	r1, r2
   1413c:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1140
		while (idx >= ic) {	/* Follow cluster chain */
   1413e:	d202      	bcs.n	14146 <dir_sdi+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1147
		sect = clust2sect(dp->fs, clst);
   14140:	f7ff ff72 	bl	14028 <clust2sect>
   14144:	e7e5      	b.n	14112 <dir_sdi+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   14146:	f7ff ff7a 	bl	1403e <get_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   1414a:	1c43      	adds	r3, r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1141
			clst = get_fat(dp->fs, clst);				/* Get next cluster */
   1414c:	4602      	mov	r2, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   1414e:	d007      	beq.n	14160 <dir_sdi+0x7c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1143
			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
   14150:	2801      	cmp	r0, #1
   14152:	d9ce      	bls.n	140f2 <dir_sdi+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1143 (discriminator 1)
   14154:	6823      	ldr	r3, [r4, #0]
   14156:	699b      	ldr	r3, [r3, #24]
   14158:	4298      	cmp	r0, r3
   1415a:	d2ca      	bcs.n	140f2 <dir_sdi+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1145
			idx -= ic;
   1415c:	1bad      	subs	r5, r5, r6
   1415e:	e7eb      	b.n	14138 <dir_sdi+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1142
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
   14160:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1155
}
   14162:	bd70      	pop	{r4, r5, r6, pc}

00014164 <put_fat>:
put_fat():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   14164:	2901      	cmp	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:916
{
   14166:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14168:	4605      	mov	r5, r0
   1416a:	460c      	mov	r4, r1
   1416c:	4616      	mov	r6, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:922
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1416e:	d960      	bls.n	14232 <put_fat+0xce>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:922 (discriminator 1)
   14170:	6983      	ldr	r3, [r0, #24]
   14172:	4299      	cmp	r1, r3
   14174:	d25d      	bcs.n	14232 <put_fat+0xce>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:926
		switch (fs->fs_type) {
   14176:	7803      	ldrb	r3, [r0, #0]
   14178:	2b02      	cmp	r3, #2
   1417a:	d03a      	beq.n	141f2 <put_fat+0x8e>
   1417c:	2b03      	cmp	r3, #3
   1417e:	d045      	beq.n	1420c <put_fat+0xa8>
   14180:	2b01      	cmp	r3, #1
   14182:	d154      	bne.n	1422e <put_fat+0xca>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:928
			bc = (UINT)clst; bc += bc / 2;
   14184:	eb01 0751 	add.w	r7, r1, r1, lsr #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:929
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   14188:	6a41      	ldr	r1, [r0, #36]	; 0x24
   1418a:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   1418e:	f7ff fdd3 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:930
			if (res != FR_OK) break;
   14192:	bb18      	cbnz	r0, 141dc <put_fat+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:931
			p = &fs->win[bc % SS(fs)];
   14194:	f3c7 0308 	ubfx	r3, r7, #0, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:932
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
   14198:	f014 0401 	ands.w	r4, r4, #1
   1419c:	442b      	add	r3, r5
   1419e:	bf17      	itett	ne
   141a0:	f893 2034 	ldrbne.w	r2, [r3, #52]	; 0x34
   141a4:	b2f2      	uxtbeq	r2, r6
   141a6:	f002 010f 	andne.w	r1, r2, #15
   141aa:	0132      	lslne	r2, r6, #4
   141ac:	bf1c      	itt	ne
   141ae:	f002 02f0 	andne.w	r2, r2, #240	; 0xf0
   141b2:	430a      	orrne	r2, r1
   141b4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   141b8:	2301      	movs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   141ba:	6a69      	ldr	r1, [r5, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:933
			bc++;
   141bc:	3701      	adds	r7, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:934
			fs->wflag = 1;
   141be:	712b      	strb	r3, [r5, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:935
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
   141c0:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   141c4:	4628      	mov	r0, r5
   141c6:	f7ff fdb7 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:936
			if (res != FR_OK) break;
   141ca:	b938      	cbnz	r0, 141dc <put_fat+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:937
			p = &fs->win[bc % SS(fs)];
   141cc:	f3c7 0708 	ubfx	r7, r7, #0, #9
   141d0:	442f      	add	r7, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   141d2:	b134      	cbz	r4, 141e2 <put_fat+0x7e>
   141d4:	f3c6 1607 	ubfx	r6, r6, #4, #8
   141d8:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:959
		fs->wflag = 1;
   141dc:	2301      	movs	r3, #1
   141de:	712b      	strb	r3, [r5, #4]
   141e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:938
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
   141e2:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   141e6:	f3c6 2603 	ubfx	r6, r6, #8, #4
   141ea:	f023 030f 	bic.w	r3, r3, #15
   141ee:	431e      	orrs	r6, r3
   141f0:	e7f2      	b.n	141d8 <put_fat+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:942
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
   141f2:	6a41      	ldr	r1, [r0, #36]	; 0x24
   141f4:	eb01 2114 	add.w	r1, r1, r4, lsr #8
   141f8:	f7ff fd9e 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:943
			if (res != FR_OK) break;
   141fc:	2800      	cmp	r0, #0
   141fe:	d1ed      	bne.n	141dc <put_fat+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:944
			p = &fs->win[clst * 2 % SS(fs)];
   14200:	0064      	lsls	r4, r4, #1
   14202:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   14206:	442c      	add	r4, r5
put_fat():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:945
			ST_WORD(p, (WORD)val);
   14208:	86a6      	strh	r6, [r4, #52]	; 0x34
   1420a:	e7e7      	b.n	141dc <put_fat+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:949
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
   1420c:	6a41      	ldr	r1, [r0, #36]	; 0x24
   1420e:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
   14212:	f7ff fd91 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:950
			if (res != FR_OK) break;
   14216:	2800      	cmp	r0, #0
   14218:	d1e0      	bne.n	141dc <put_fat+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:951
			p = &fs->win[clst * 4 % SS(fs)];
   1421a:	00a4      	lsls	r4, r4, #2
   1421c:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
   14220:	3434      	adds	r4, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:952
			val |= LD_DWORD(p) & 0xF0000000;
   14222:	592b      	ldr	r3, [r5, r4]
   14224:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   14228:	431e      	orrs	r6, r3
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1422a:	512e      	str	r6, [r5, r4]
   1422c:	e7d6      	b.n	141dc <put_fat+0x78>
put_fat():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:957
			res = FR_INT_ERR;
   1422e:	2002      	movs	r0, #2
   14230:	e7d4      	b.n	141dc <put_fat+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:923
		res = FR_INT_ERR;
   14232:	2002      	movs	r0, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:963
}
   14234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00014236 <create_chain>:
create_chain():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1031
{
   14236:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14238:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1036
	if (clst == 0) {		/* Create a new chain */
   1423a:	460f      	mov	r7, r1
   1423c:	b971      	cbnz	r1, 1425c <create_chain+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1037
		scl = fs->last_clust;			/* Get suggested start point */
   1423e:	6906      	ldr	r6, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   14240:	b1e6      	cbz	r6, 1427c <create_chain+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1038 (discriminator 2)
   14242:	6983      	ldr	r3, [r0, #24]
   14244:	429e      	cmp	r6, r3
   14246:	bf28      	it	cs
   14248:	2601      	movcs	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1038
   1424a:	4634      	mov	r4, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   1424c:	69ab      	ldr	r3, [r5, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1050
		ncl++;							/* Next cluster */
   1424e:	3401      	adds	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1051
		if (ncl >= fs->n_fatent) {		/* Check wrap around */
   14250:	429c      	cmp	r4, r3
   14252:	d316      	bcc.n	14282 <create_chain+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1053
			if (ncl > scl) return 0;	/* No free cluster */
   14254:	2e01      	cmp	r6, #1
   14256:	d813      	bhi.n	14280 <create_chain+0x4a>
   14258:	2400      	movs	r4, #0
   1425a:	e008      	b.n	1426e <create_chain+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   1425c:	f7ff feef 	bl	1403e <get_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   14260:	2801      	cmp	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1041
		cs = get_fat(fs, clst);			/* Check the cluster status */
   14262:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1042
		if (cs < 2) return 1;			/* Invalid value */
   14264:	d935      	bls.n	142d2 <create_chain+0x9c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1043
		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
   14266:	3001      	adds	r0, #1
   14268:	d103      	bne.n	14272 <create_chain+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   1426a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1077
}
   1426e:	4620      	mov	r0, r4
   14270:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1044
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
   14272:	69ab      	ldr	r3, [r5, #24]
   14274:	429c      	cmp	r4, r3
   14276:	d3fa      	bcc.n	1426e <create_chain+0x38>
   14278:	463e      	mov	r6, r7
   1427a:	e7e6      	b.n	1424a <create_chain+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1038
		if (!scl || scl >= fs->n_fatent) scl = 1;
   1427c:	2601      	movs	r6, #1
   1427e:	e7e4      	b.n	1424a <create_chain+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1052
			ncl = 2;
   14280:	2402      	movs	r4, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1055
		cs = get_fat(fs, ncl);			/* Get the cluster status */
   14282:	4621      	mov	r1, r4
   14284:	4628      	mov	r0, r5
   14286:	f7ff feda 	bl	1403e <get_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1056
		if (cs == 0) break;				/* Found a free cluster */
   1428a:	b130      	cbz	r0, 1429a <create_chain+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1057
		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
   1428c:	1c41      	adds	r1, r0, #1
   1428e:	d0ec      	beq.n	1426a <create_chain+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1057 (discriminator 1)
   14290:	2801      	cmp	r0, #1
   14292:	d01e      	beq.n	142d2 <create_chain+0x9c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1059
		if (ncl == scl) return 0;		/* No free cluster */
   14294:	42b4      	cmp	r4, r6
   14296:	d1d9      	bne.n	1424c <create_chain+0x16>
   14298:	e7de      	b.n	14258 <create_chain+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1062
	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
   1429a:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   1429e:	4621      	mov	r1, r4
   142a0:	4628      	mov	r0, r5
   142a2:	f7ff ff5f 	bl	14164 <put_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1063
	if (res == FR_OK && clst != 0) {
   142a6:	b990      	cbnz	r0, 142ce <create_chain+0x98>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1063 (discriminator 1)
   142a8:	b957      	cbnz	r7, 142c0 <create_chain+0x8a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   142aa:	696b      	ldr	r3, [r5, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1067
		fs->last_clust = ncl;			/* Update FSINFO */
   142ac:	612c      	str	r4, [r5, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1068
		if (fs->free_clust != 0xFFFFFFFF) {
   142ae:	1c5a      	adds	r2, r3, #1
   142b0:	d0dd      	beq.n	1426e <create_chain+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1069
			fs->free_clust--;
   142b2:	3b01      	subs	r3, #1
   142b4:	616b      	str	r3, [r5, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1070
			fs->fsi_flag |= 1;
   142b6:	796b      	ldrb	r3, [r5, #5]
   142b8:	f043 0301 	orr.w	r3, r3, #1
   142bc:	716b      	strb	r3, [r5, #5]
   142be:	e7d6      	b.n	1426e <create_chain+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1064
		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
   142c0:	4622      	mov	r2, r4
   142c2:	4639      	mov	r1, r7
   142c4:	4628      	mov	r0, r5
   142c6:	f7ff ff4d 	bl	14164 <put_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1066
	if (res == FR_OK) {
   142ca:	2800      	cmp	r0, #0
   142cc:	d0ed      	beq.n	142aa <create_chain+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1073
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
   142ce:	2801      	cmp	r0, #1
   142d0:	d0cb      	beq.n	1426a <create_chain+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1073 (discriminator 2)
   142d2:	2401      	movs	r4, #1
   142d4:	e7cb      	b.n	1426e <create_chain+0x38>

000142d6 <dir_next>:
dir_next():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1169
{
   142d6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   142da:	88c6      	ldrh	r6, [r0, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1169
{
   142dc:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1174
	i = dp->index + 1;
   142de:	3601      	adds	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   142e0:	b2b3      	uxth	r3, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1169
{
   142e2:	4689      	mov	r9, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1175
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   142e4:	b913      	cbnz	r3, 142ec <dir_next+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1176
		return FR_NO_FILE;
   142e6:	2004      	movs	r0, #4
   142e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1175 (discriminator 1)
	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
   142ec:	6903      	ldr	r3, [r0, #16]
   142ee:	2b00      	cmp	r3, #0
   142f0:	d0f9      	beq.n	142e6 <dir_next+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1178
	if (!(i % (SS(dp->fs) / SZ_DIR))) {	/* Sector changed? */
   142f2:	f016 080f 	ands.w	r8, r6, #15
   142f6:	d107      	bne.n	14308 <dir_next+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   142f8:	68c1      	ldr	r1, [r0, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1179
		dp->sect++;					/* Next sector */
   142fa:	3301      	adds	r3, #1
   142fc:	6103      	str	r3, [r0, #16]
   142fe:	6800      	ldr	r0, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1181
		if (!dp->clust) {		/* Static table */
   14300:	b959      	cbnz	r1, 1431a <dir_next+0x44>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1182
			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
   14302:	8903      	ldrh	r3, [r0, #8]
   14304:	429e      	cmp	r6, r3
   14306:	d2ee      	bcs.n	142e6 <dir_next+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   14308:	6823      	ldr	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1219
	dp->index = (WORD)i;	/* Current index */
   1430a:	80e6      	strh	r6, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1220
	dp->dir = dp->fs->win + (i % (SS(dp->fs) / SZ_DIR)) * SZ_DIR;	/* Current entry in the window */
   1430c:	3334      	adds	r3, #52	; 0x34
   1430e:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   14312:	6163      	str	r3, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1222
	return FR_OK;
   14314:	2000      	movs	r0, #0
   14316:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1186
			if (((i / (SS(dp->fs) / SZ_DIR)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
   1431a:	7887      	ldrb	r7, [r0, #2]
   1431c:	3f01      	subs	r7, #1
   1431e:	ea17 1716 	ands.w	r7, r7, r6, lsr #4
   14322:	d1f1      	bne.n	14308 <dir_next+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   14324:	f7ff fe8b 	bl	1403e <get_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   14328:	2801      	cmp	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1187
				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
   1432a:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1188
				if (clst <= 1) return FR_INT_ERR;
   1432c:	d802      	bhi.n	14334 <dir_next+0x5e>
   1432e:	2002      	movs	r0, #2
   14330:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1189
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   14334:	1c42      	adds	r2, r0, #1
   14336:	d102      	bne.n	1433e <dir_next+0x68>
   14338:	2001      	movs	r0, #1
   1433a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1190
				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
   1433e:	6820      	ldr	r0, [r4, #0]
   14340:	6983      	ldr	r3, [r0, #24]
   14342:	429d      	cmp	r5, r3
   14344:	d327      	bcc.n	14396 <dir_next+0xc0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1193
					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
   14346:	f1b9 0f00 	cmp.w	r9, #0
   1434a:	d0cc      	beq.n	142e6 <dir_next+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1194
					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
   1434c:	68e1      	ldr	r1, [r4, #12]
   1434e:	f7ff ff72 	bl	14236 <create_chain>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   14352:	4605      	mov	r5, r0
   14354:	2800      	cmp	r0, #0
   14356:	d031      	beq.n	143bc <dir_next+0xe6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1196
					if (clst == 1) return FR_INT_ERR;
   14358:	2801      	cmp	r0, #1
   1435a:	d0e8      	beq.n	1432e <dir_next+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1197
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
   1435c:	1c43      	adds	r3, r0, #1
   1435e:	d0eb      	beq.n	14338 <dir_next+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1199
					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
   14360:	6820      	ldr	r0, [r4, #0]
   14362:	f7ff fca8 	bl	13cb6 <sync_window>
   14366:	4601      	mov	r1, r0
   14368:	2800      	cmp	r0, #0
   1436a:	d1e5      	bne.n	14338 <dir_next+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1200
					mem_set(dp->fs->win, 0, SS(dp->fs));		/* Clear window buffer */
   1436c:	6820      	ldr	r0, [r4, #0]
   1436e:	f44f 7200 	mov.w	r2, #512	; 0x200
   14372:	3034      	adds	r0, #52	; 0x34
   14374:	f7ff fc49 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   14378:	6822      	ldr	r2, [r4, #0]
   1437a:	4629      	mov	r1, r5
   1437c:	4610      	mov	r0, r2
   1437e:	f7ff fe53 	bl	14028 <clust2sect>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   14382:	f04f 0901 	mov.w	r9, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1201
					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
   14386:	6310      	str	r0, [r2, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 1)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   14388:	6820      	ldr	r0, [r4, #0]
   1438a:	7883      	ldrb	r3, [r0, #2]
   1438c:	429f      	cmp	r7, r3
   1438e:	d309      	bcc.n	143a4 <dir_next+0xce>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1207
					dp->fs->winsect -= c;						/* Rewind window offset */
   14390:	6b03      	ldr	r3, [r0, #48]	; 0x30
   14392:	1bdf      	subs	r7, r3, r7
   14394:	6307      	str	r7, [r0, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1213
				dp->clust = clst;				/* Initialize data for new cluster */
   14396:	60e5      	str	r5, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1214
				dp->sect = clust2sect(dp->fs, clst);
   14398:	4629      	mov	r1, r5
   1439a:	6820      	ldr	r0, [r4, #0]
   1439c:	f7ff fe44 	bl	14028 <clust2sect>
   143a0:	6120      	str	r0, [r4, #16]
   143a2:	e7b1      	b.n	14308 <dir_next+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1203
						dp->fs->wflag = 1;
   143a4:	f880 9004 	strb.w	r9, [r0, #4]
sync_window():
   143a8:	f7ff fc62 	bl	13c70 <sync_window.part.1>
dir_next():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1204
						if (sync_window(dp->fs)) return FR_DISK_ERR;
   143ac:	2800      	cmp	r0, #0
   143ae:	d1c3      	bne.n	14338 <dir_next+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   143b0:	6822      	ldr	r2, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1202 (discriminator 2)
					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
   143b2:	3701      	adds	r7, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1205 (discriminator 2)
						dp->fs->winsect++;
   143b4:	6b13      	ldr	r3, [r2, #48]	; 0x30
   143b6:	3301      	adds	r3, #1
   143b8:	6313      	str	r3, [r2, #48]	; 0x30
   143ba:	e7e5      	b.n	14388 <dir_next+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1195
					if (clst == 0) return FR_DENIED;			/* No free cluster */
   143bc:	2007      	movs	r0, #7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1223
}
   143be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   143c2:	Address 0x00000000000143c2 is out of bounds.


000143c4 <dir_find.part.9>:
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   143c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   143c8:	f04f 08ff 	mov.w	r8, #255	; 0xff
   143cc:	f64f 77ff 	movw	r7, #65535	; 0xffff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1490
FRESULT dir_find (
   143d0:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1504
	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   143d2:	4644      	mov	r4, r8
   143d4:	8407      	strh	r7, [r0, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1507
		res = move_window(dp->fs, dp->sect);
   143d6:	6931      	ldr	r1, [r6, #16]
   143d8:	6830      	ldr	r0, [r6, #0]
   143da:	f7ff fcad 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1508
		if (res != FR_OK) break;
   143de:	4682      	mov	sl, r0
   143e0:	2800      	cmp	r0, #0
   143e2:	d15e      	bne.n	144a2 <dir_find.part.9+0xde>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1509
		dir = dp->dir;					/* Ptr to the directory entry of current index */
   143e4:	6975      	ldr	r5, [r6, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1510
		c = dir[DIR_Name];
   143e6:	782b      	ldrb	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   143e8:	2b00      	cmp	r3, #0
   143ea:	d076      	beq.n	144da <dir_find.part.9+0x116>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   143ec:	2be5      	cmp	r3, #229	; 0xe5
   143ee:	d006      	beq.n	143fe <dir_find.part.9+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1513
		a = dir[DIR_Attr] & AM_MASK;
   143f0:	7ae9      	ldrb	r1, [r5, #11]
   143f2:	f001 023f 	and.w	r2, r1, #63	; 0x3f
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1514
		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
   143f6:	0709      	lsls	r1, r1, #28
   143f8:	d503      	bpl.n	14402 <dir_find.part.9+0x3e>
   143fa:	2a0f      	cmp	r2, #15
   143fc:	d003      	beq.n	14406 <dir_find.part.9+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1530
				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
   143fe:	8437      	strh	r7, [r6, #32]
   14400:	e047      	b.n	14492 <dir_find.part.9+0xce>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1517
			if (a == AM_LFN) {			/* An LFN entry is found */
   14402:	2a0f      	cmp	r2, #15
   14404:	d154      	bne.n	144b0 <dir_find.part.9+0xec>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1518
				if (dp->lfn) {
   14406:	f8d6 b01c 	ldr.w	fp, [r6, #28]
   1440a:	f1bb 0f00 	cmp.w	fp, #0
   1440e:	d041      	beq.n	14494 <dir_find.part.9+0xd0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1519
					if (c & LLE) {		/* Is it start of LFN sequence? */
   14410:	0658      	lsls	r0, r3, #25
   14412:	d53c      	bpl.n	1448e <dir_find.part.9+0xca>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1521
						c &= ~LLE; ord = c;	/* LFN start order */
   14414:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   14418:	88f3      	ldrh	r3, [r6, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1520
						sum = dir[LDIR_Chksum];
   1441a:	f895 800d 	ldrb.w	r8, [r5, #13]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1522
						dp->lfn_idx = dp->index;	/* Start index of LFN */
   1441e:	8433      	strh	r3, [r6, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   14420:	7b6b      	ldrb	r3, [r5, #13]
   14422:	4543      	cmp	r3, r8
   14424:	d135      	bne.n	14492 <dir_find.part.9+0xce>
cmp_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   14426:	f895 a000 	ldrb.w	sl, [r5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   1442a:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1442c:	f02a 0a40 	bic.w	sl, sl, #64	; 0x40
   14430:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
   14434:	f04f 0a0d 	mov.w	sl, #13
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1319
	s = 0; wc = 1;
   14438:	f04f 0900 	mov.w	r9, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1318
	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
   1443c:	fb0a fa03 	mul.w	sl, sl, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1321
		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
   14440:	4b27      	ldr	r3, [pc, #156]	; (144e0 <dir_find.part.9+0x11c>)
   14442:	f819 2003 	ldrb.w	r2, [r9, r3]
LD_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:335
static inline WORD  LD_WORD(void *p)            { WORD *_rdword = (WORD*)p; return *_rdword;     }
   14446:	5aaa      	ldrh	r2, [r5, r2]
cmp_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1322
		if (wc) {	/* Last character has not been processed */
   14448:	b378      	cbz	r0, 144aa <dir_find.part.9+0xe6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   1444a:	4610      	mov	r0, r2
   1444c:	f001 f928 	bl	156a0 <ff_wtoupper>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   14450:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1323
			wc = ff_wtoupper(uc);		/* Convert it to upper case */
   14454:	9001      	str	r0, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1324
			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
   14456:	d81c      	bhi.n	14492 <dir_find.part.9+0xce>
   14458:	f10a 0201 	add.w	r2, sl, #1
   1445c:	f83b 001a 	ldrh.w	r0, [fp, sl, lsl #1]
   14460:	9200      	str	r2, [sp, #0]
   14462:	f001 f91d 	bl	156a0 <ff_wtoupper>
   14466:	9901      	ldr	r1, [sp, #4]
   14468:	4281      	cmp	r1, r0
   1446a:	d112      	bne.n	14492 <dir_find.part.9+0xce>
   1446c:	9a00      	ldr	r2, [sp, #0]
   1446e:	4692      	mov	sl, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1329
	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
   14470:	f109 0901 	add.w	r9, r9, #1
   14474:	f1b9 0f0d 	cmp.w	r9, #13
   14478:	d1e2      	bne.n	14440 <dir_find.part.9+0x7c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1331
	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
   1447a:	782b      	ldrb	r3, [r5, #0]
   1447c:	0659      	lsls	r1, r3, #25
   1447e:	d503      	bpl.n	14488 <dir_find.part.9+0xc4>
   14480:	b110      	cbz	r0, 14488 <dir_find.part.9+0xc4>
   14482:	f83b 301a 	ldrh.w	r3, [fp, sl, lsl #1]
   14486:	b923      	cbnz	r3, 14492 <dir_find.part.9+0xce>
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1525
					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
   14488:	3c01      	subs	r4, #1
   1448a:	b2e4      	uxtb	r4, r4
   1448c:	e002      	b.n	14494 <dir_find.part.9+0xd0>
   1448e:	42a3      	cmp	r3, r4
   14490:	d0c6      	beq.n	14420 <dir_find.part.9+0x5c>
   14492:	24ff      	movs	r4, #255	; 0xff
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1537
		res = dir_next(dp, 0);		/* Next entry */
   14494:	2100      	movs	r1, #0
   14496:	4630      	mov	r0, r6
   14498:	f7ff ff1d 	bl	142d6 <dir_next>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1538
	} while (res == FR_OK);
   1449c:	4682      	mov	sl, r0
   1449e:	2800      	cmp	r0, #0
   144a0:	d099      	beq.n	143d6 <dir_find.part.9+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1541
}
   144a2:	4650      	mov	r0, sl
   144a4:	b003      	add	sp, #12
   144a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
cmp_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1327
			if (uc != 0xFFFF) return 0;	/* Check filler */
   144aa:	42ba      	cmp	r2, r7
   144ac:	d0e0      	beq.n	14470 <dir_find.part.9+0xac>
   144ae:	e7f0      	b.n	14492 <dir_find.part.9+0xce>
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1528
				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
   144b0:	b924      	cbnz	r4, 144bc <dir_find.part.9+0xf8>
   144b2:	4628      	mov	r0, r5
   144b4:	f7ff fbb0 	bl	13c18 <sum_sfn>
   144b8:	4540      	cmp	r0, r8
   144ba:	d0f2      	beq.n	144a2 <dir_find.part.9+0xde>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1529
				if (!(dp->fn[NS] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
   144bc:	69b3      	ldr	r3, [r6, #24]
   144be:	7ada      	ldrb	r2, [r3, #11]
   144c0:	07d2      	lsls	r2, r2, #31
   144c2:	d49c      	bmi.n	143fe <dir_find.part.9+0x3a>
   144c4:	f103 000b 	add.w	r0, r3, #11
mem_cmp():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:592
	while (cnt-- && (r = *d++ - *s++) == 0) ;
   144c8:	4298      	cmp	r0, r3
   144ca:	d0ea      	beq.n	144a2 <dir_find.part.9+0xde>
   144cc:	f815 1b01 	ldrb.w	r1, [r5], #1
   144d0:	f813 2b01 	ldrb.w	r2, [r3], #1
   144d4:	4291      	cmp	r1, r2
   144d6:	d0f7      	beq.n	144c8 <dir_find.part.9+0x104>
   144d8:	e791      	b.n	143fe <dir_find.part.9+0x3a>
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1511
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
   144da:	f04f 0a04 	mov.w	sl, #4
   144de:	e7e0      	b.n	144a2 <dir_find.part.9+0xde>
   144e0:	00020468 	.word	0x00020468

000144e4 <follow_path>:
follow_path():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2019
{
   144e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   144e8:	780b      	ldrb	r3, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2019
{
   144ea:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   144ec:	2b2f      	cmp	r3, #47	; 0x2f
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2019
{
   144ee:	4688      	mov	r8, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2031
	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
   144f0:	d001      	beq.n	144f6 <follow_path+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2031 (discriminator 1)
   144f2:	2b5c      	cmp	r3, #92	; 0x5c
   144f4:	d101      	bne.n	144fa <follow_path+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2032
		path++;
   144f6:	f108 0801 	add.w	r8, r8, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2033
	dp->sclust = 0;							/* Always start from the root directory */
   144fa:	2400      	movs	r4, #0
   144fc:	60bc      	str	r4, [r7, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2036
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
   144fe:	f898 3000 	ldrb.w	r3, [r8]
   14502:	2b1f      	cmp	r3, #31
   14504:	f200 8090 	bhi.w	14628 <follow_path+0x144>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2037
		res = dir_sdi(dp, 0);
   14508:	4621      	mov	r1, r4
   1450a:	4638      	mov	r0, r7
   1450c:	f7ff fdea 	bl	140e4 <dir_sdi>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2038
		dp->dir = 0;
   14510:	617c      	str	r4, [r7, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2067
}
   14512:	b003      	add	sp, #12
   14514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1838
		lfn[di++] = w;					/* Store the Unicode character */
   14518:	f825 0f02 	strh.w	r0, [r5, #2]!
   1451c:	4646      	mov	r6, r8
   1451e:	e093      	b.n	14648 <follow_path+0x164>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   14520:	2820      	cmp	r0, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1840
	*path = &p[si];						/* Return pointer to the next segment */
   14522:	44a0      	add	r8, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1841
	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
   14524:	bf34      	ite	cc
   14526:	2404      	movcc	r4, #4
   14528:	2400      	movcs	r4, #0
   1452a:	eb0b 0246 	add.w	r2, fp, r6, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1852
	while (di) {						/* Strip trailing spaces and dots */
   1452e:	2e00      	cmp	r6, #0
   14530:	f000 80a9 	beq.w	14686 <follow_path+0x1a2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1853
		w = lfn[di-1];
   14534:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1854
		if (w != ' ' && w != '.') break;
   14538:	2920      	cmp	r1, #32
   1453a:	d002      	beq.n	14542 <follow_path+0x5e>
   1453c:	292e      	cmp	r1, #46	; 0x2e
   1453e:	f040 80a6 	bne.w	1468e <follow_path+0x1aa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1855
		di--;
   14542:	3e01      	subs	r6, #1
   14544:	e7f3      	b.n	1452e <follow_path+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   14546:	3101      	adds	r1, #1
   14548:	f83b 2011 	ldrh.w	r2, [fp, r1, lsl #1]
   1454c:	2a20      	cmp	r2, #32
   1454e:	d0fa      	beq.n	14546 <follow_path+0x62>
   14550:	2a2e      	cmp	r2, #46	; 0x2e
   14552:	d0f8      	beq.n	14546 <follow_path+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1864
	if (si) cf |= NS_LOSS | NS_LFN;
   14554:	b109      	cbz	r1, 1455a <follow_path+0x76>
   14556:	f044 0403 	orr.w	r4, r4, #3
   1455a:	464a      	mov	r2, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1865
	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
   1455c:	f832 0d02 	ldrh.w	r0, [r2, #-2]!
   14560:	282e      	cmp	r0, #46	; 0x2e
   14562:	d001      	beq.n	14568 <follow_path+0x84>
   14564:	3e01      	subs	r6, #1
   14566:	d1f9      	bne.n	1455c <follow_path+0x78>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   14568:	f04f 0a00 	mov.w	sl, #0
   1456c:	f04f 0908 	mov.w	r9, #8
   14570:	4655      	mov	r5, sl
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1869
		w = lfn[si++];					/* Get an LFN character */
   14572:	f83b 0011 	ldrh.w	r0, [fp, r1, lsl #1]
   14576:	1c4a      	adds	r2, r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1870
		if (!w) break;					/* Break on end of the LFN */
   14578:	2800      	cmp	r0, #0
   1457a:	f000 809f 	beq.w	146bc <follow_path+0x1d8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1871
		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
   1457e:	2820      	cmp	r0, #32
   14580:	d004      	beq.n	1458c <follow_path+0xa8>
   14582:	282e      	cmp	r0, #46	; 0x2e
   14584:	d106      	bne.n	14594 <follow_path+0xb0>
   14586:	42b2      	cmp	r2, r6
   14588:	f000 808d 	beq.w	146a6 <follow_path+0x1c2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1872
			cf |= NS_LOSS | NS_LFN; continue;
   1458c:	f044 0403 	orr.w	r4, r4, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   14590:	4611      	mov	r1, r2
   14592:	e7ee      	b.n	14572 <follow_path+0x8e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   14594:	45ca      	cmp	sl, r9
   14596:	f080 8089 	bcs.w	146ac <follow_path+0x1c8>
   1459a:	42b2      	cmp	r2, r6
   1459c:	d111      	bne.n	145c2 <follow_path+0xde>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   1459e:	f1b9 0f0b 	cmp.w	r9, #11
   145a2:	d106      	bne.n	145b2 <follow_path+0xce>
   145a4:	e086      	b.n	146b4 <follow_path+0x1d0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1879
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
   145a6:	42b2      	cmp	r2, r6
   145a8:	d003      	beq.n	145b2 <follow_path+0xce>
   145aa:	f044 0403 	orr.w	r4, r4, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1880
			if (si > di) break;			/* No extension */
   145ae:	f200 8085 	bhi.w	146bc <follow_path+0x1d8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1882
			b <<= 2; continue;
   145b2:	00ad      	lsls	r5, r5, #2
   145b4:	b2ed      	uxtb	r5, r5
   145b6:	4632      	mov	r2, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1881
			si = di; i = 8; ni = 11;	/* Enter extension section */
   145b8:	f04f 090b 	mov.w	r9, #11
   145bc:	f04f 0a08 	mov.w	sl, #8
   145c0:	e7e6      	b.n	14590 <follow_path+0xac>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1885
		if (w >= 0x80) {				/* Non ASCII character */
   145c2:	287f      	cmp	r0, #127	; 0x7f
   145c4:	d90d      	bls.n	145e2 <follow_path+0xfe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1887
			w = ff_convert(w, 0);		/* Unicode -> OEM code */
   145c6:	2100      	movs	r1, #0
   145c8:	9201      	str	r2, [sp, #4]
   145ca:	f001 f84b 	bl	15664 <ff_convert>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1888
			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
   145ce:	9a01      	ldr	r2, [sp, #4]
   145d0:	b118      	cbz	r0, 145da <follow_path+0xf6>
   145d2:	4b5d      	ldr	r3, [pc, #372]	; (14748 <follow_path+0x264>)
   145d4:	4418      	add	r0, r3
   145d6:	f810 0c80 	ldrb.w	r0, [r0, #-128]
   145da:	b280      	uxth	r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1892
			cf |= NS_LFN;				/* Force create LFN entry */
   145dc:	f044 0402 	orr.w	r4, r4, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1901
			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
   145e0:	b138      	cbz	r0, 145f2 <follow_path+0x10e>
   145e2:	4b5a      	ldr	r3, [pc, #360]	; (1474c <follow_path+0x268>)
chk_chr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   145e4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   145e8:	2900      	cmp	r1, #0
   145ea:	f000 809f 	beq.w	1472c <follow_path+0x248>
   145ee:	4281      	cmp	r1, r0
   145f0:	d1f8      	bne.n	145e4 <follow_path+0x100>
create_name():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1902
				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
   145f2:	205f      	movs	r0, #95	; 0x5f
   145f4:	f044 0403 	orr.w	r4, r4, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1913
		dp->fn[i++] = (BYTE)w;
   145f8:	69b9      	ldr	r1, [r7, #24]
   145fa:	f801 000a 	strb.w	r0, [r1, sl]
   145fe:	f10a 0a01 	add.w	sl, sl, #1
   14602:	e7c5      	b.n	14590 <follow_path+0xac>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1905
					b |= 2;
   14604:	f045 0502 	orr.w	r5, r5, #2
   14608:	e7f6      	b.n	145f8 <follow_path+0x114>
follow_path():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2057
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
   1460a:	075a      	lsls	r2, r3, #29
   1460c:	d481      	bmi.n	14512 <follow_path+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2058
			dir = dp->dir;						/* Follow the sub-directory */
   1460e:	697a      	ldr	r2, [r7, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2059
			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
   14610:	7ad3      	ldrb	r3, [r2, #11]
   14612:	06db      	lsls	r3, r3, #27
   14614:	d539      	bpl.n	1468a <follow_path+0x1a6>
ld_clust():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   14616:	6839      	ldr	r1, [r7, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   14618:	8b53      	ldrh	r3, [r2, #26]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   1461a:	7809      	ldrb	r1, [r1, #0]
   1461c:	2903      	cmp	r1, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   1461e:	bf04      	itt	eq
   14620:	8a92      	ldrheq	r2, [r2, #20]
   14622:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
follow_path():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2062
			dp->sclust = ld_clust(dp->fs, dir);
   14626:	60bb      	str	r3, [r7, #8]
create_name():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1817
	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
   14628:	f898 3000 	ldrb.w	r3, [r8]
   1462c:	4644      	mov	r4, r8
   1462e:	2b2f      	cmp	r3, #47	; 0x2f
   14630:	f108 0801 	add.w	r8, r8, #1
   14634:	d0f8      	beq.n	14628 <follow_path+0x144>
   14636:	2b5c      	cmp	r3, #92	; 0x5c
   14638:	d0f6      	beq.n	14628 <follow_path+0x144>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1819
	si = di = 0;
   1463a:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1818
	lfn = dp->lfn;
   1463c:	f8d7 b01c 	ldr.w	fp, [r7, #28]
   14640:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
   14644:	f1ab 0502 	sub.w	r5, fp, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1821
		w = p[si++];					/* Get a character */
   14648:	f819 0f01 	ldrb.w	r0, [r9, #1]!
   1464c:	f106 0801 	add.w	r8, r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1822
		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
   14650:	281f      	cmp	r0, #31
   14652:	f67f af65 	bls.w	14520 <follow_path+0x3c>
   14656:	282f      	cmp	r0, #47	; 0x2f
   14658:	f43f af62 	beq.w	14520 <follow_path+0x3c>
   1465c:	285c      	cmp	r0, #92	; 0x5c
   1465e:	f43f af5f 	beq.w	14520 <follow_path+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1823
		if (di >= _MAX_LFN)				/* Reject too long name */
   14662:	f1b8 0f81 	cmp.w	r8, #129	; 0x81
   14666:	d00e      	beq.n	14686 <follow_path+0x1a2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1833
		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
   14668:	2101      	movs	r1, #1
   1466a:	f000 fffb 	bl	15664 <ff_convert>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1834
		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
   1466e:	b150      	cbz	r0, 14686 <follow_path+0x1a2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1836
		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
   14670:	287f      	cmp	r0, #127	; 0x7f
   14672:	f63f af51 	bhi.w	14518 <follow_path+0x34>
   14676:	4936      	ldr	r1, [pc, #216]	; (14750 <follow_path+0x26c>)
chk_chr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:599
	while (*str && *str != chr) str++;
   14678:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   1467c:	2a00      	cmp	r2, #0
   1467e:	f43f af4b 	beq.w	14518 <follow_path+0x34>
   14682:	4282      	cmp	r2, r0
   14684:	d1f8      	bne.n	14678 <follow_path+0x194>
follow_path():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   14686:	2006      	movs	r0, #6
   14688:	e743      	b.n	14512 <follow_path+0x2e>
   1468a:	2005      	movs	r0, #5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2066
	return res;
   1468c:	e741      	b.n	14512 <follow_path+0x2e>
create_name():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   1468e:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   14690:	2120      	movs	r1, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   14692:	f82b 5016 	strh.w	r5, [fp, r6, lsl #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1862
	mem_set(dp->fn, ' ', 11);
   14696:	220b      	movs	r2, #11
   14698:	69b8      	ldr	r0, [r7, #24]
   1469a:	f7ff fab6 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1859
	lfn[di] = 0;						/* LFN is created */
   1469e:	eb0b 0946 	add.w	r9, fp, r6, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1863
	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
   146a2:	4629      	mov	r1, r5
   146a4:	e750      	b.n	14548 <follow_path+0x64>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1875
		if (i >= ni || si == di) {		/* Extension or end of SFN */
   146a6:	45ca      	cmp	sl, r9
   146a8:	f4ff af79 	bcc.w	1459e <follow_path+0xba>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1876
			if (ni == 11) {				/* Long extension */
   146ac:	f1b9 0f0b 	cmp.w	r9, #11
   146b0:	f47f af79 	bne.w	145a6 <follow_path+0xc2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1877
				cf |= NS_LOSS | NS_LFN; break;
   146b4:	f04f 090b 	mov.w	r9, #11
   146b8:	f044 0403 	orr.w	r4, r4, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1916
	if (dp->fn[0] == DDE) dp->fn[0] = NDDE;	/* If the first character collides with deleted mark, replace it with 0x05 */
   146bc:	69bb      	ldr	r3, [r7, #24]
   146be:	781a      	ldrb	r2, [r3, #0]
   146c0:	2ae5      	cmp	r2, #229	; 0xe5
   146c2:	bf04      	itt	eq
   146c4:	2205      	moveq	r2, #5
   146c6:	701a      	strbeq	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1918
	if (ni == 8) b <<= 2;
   146c8:	f1b9 0f08 	cmp.w	r9, #8
   146cc:	bf04      	itt	eq
   146ce:	00ad      	lsleq	r5, r5, #2
   146d0:	b2ed      	uxtbeq	r5, r5
   146d2:	f005 030c 	and.w	r3, r5, #12
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1919
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capitals */
   146d6:	2b0c      	cmp	r3, #12
   146d8:	d003      	beq.n	146e2 <follow_path+0x1fe>
   146da:	f005 0203 	and.w	r2, r5, #3
   146de:	2a03      	cmp	r2, #3
   146e0:	d101      	bne.n	146e6 <follow_path+0x202>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1920
		cf |= NS_LFN;
   146e2:	f044 0402 	orr.w	r4, r4, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1921
	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are created */
   146e6:	07a1      	lsls	r1, r4, #30
   146e8:	d409      	bmi.n	146fe <follow_path+0x21a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1922
		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
   146ea:	f005 0503 	and.w	r5, r5, #3
   146ee:	2d01      	cmp	r5, #1
   146f0:	bf08      	it	eq
   146f2:	f044 0410 	orreq.w	r4, r4, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1923
		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
   146f6:	2b04      	cmp	r3, #4
   146f8:	bf08      	it	eq
   146fa:	f044 0408 	orreq.w	r4, r4, #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   146fe:	69bb      	ldr	r3, [r7, #24]
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   14700:	2100      	movs	r1, #0
create_name():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1926
	dp->fn[NS] = cf;	/* SFN is created */
   14702:	72dc      	strb	r4, [r3, #11]
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   14704:	4638      	mov	r0, r7
   14706:	f7ff fced 	bl	140e4 <dir_sdi>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   1470a:	b910      	cbnz	r0, 14712 <follow_path+0x22e>
   1470c:	4638      	mov	r0, r7
   1470e:	f7ff fe59 	bl	143c4 <dir_find.part.9>
follow_path():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2044
			ns = dp->fn[NS];
   14712:	69bb      	ldr	r3, [r7, #24]
   14714:	7adb      	ldrb	r3, [r3, #11]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2045
			if (res != FR_OK) {				/* Failed to find the object */
   14716:	2800      	cmp	r0, #0
   14718:	f43f af77 	beq.w	1460a <follow_path+0x126>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2046
				if (res == FR_NO_FILE) {	/* Object is not found */
   1471c:	2804      	cmp	r0, #4
   1471e:	f47f aef8 	bne.w	14512 <follow_path+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2052
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
   14722:	f013 0f04 	tst.w	r3, #4
   14726:	bf08      	it	eq
   14728:	2005      	moveq	r0, #5
   1472a:	e6f2      	b.n	14512 <follow_path+0x2e>
create_name():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1904
				if (IsUpper(w)) {		/* ASCII large capital */
   1472c:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
   14730:	2919      	cmp	r1, #25
   14732:	f67f af67 	bls.w	14604 <follow_path+0x120>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1907
					if (IsLower(w)) {	/* ASCII small capital */
   14736:	f1a0 0161 	sub.w	r1, r0, #97	; 0x61
   1473a:	2919      	cmp	r1, #25
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1908
						b |= 1; w -= 0x20;
   1473c:	bf9e      	ittt	ls
   1473e:	3820      	subls	r0, #32
   14740:	f045 0501 	orrls.w	r5, r5, #1
   14744:	b280      	uxthls	r0, r0
   14746:	e757      	b.n	145f8 <follow_path+0x114>
   14748:	000203e8 	.word	0x000203e8
   1474c:	000204c8 	.word	0x000204c8
   14750:	000204bf 	.word	0x000204bf

00014754 <dir_register>:
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   14754:	220c      	movs	r2, #12
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1613
{
   14756:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   1475a:	6986      	ldr	r6, [r0, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1613
{
   1475c:	b087      	sub	sp, #28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1621
	fn = dp->fn; lfn = dp->lfn;
   1475e:	69c7      	ldr	r7, [r0, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1613
{
   14760:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1622
	mem_cpy(sn, fn, 12);
   14762:	4631      	mov	r1, r6
   14764:	eb0d 0002 	add.w	r0, sp, r2
   14768:	f7ff fa33 	bl	13bd2 <mem_cpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1627
	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
   1476c:	f89d 3017 	ldrb.w	r3, [sp, #23]
   14770:	07db      	lsls	r3, r3, #31
   14772:	d579      	bpl.n	14868 <dir_register+0x114>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   14774:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1629
		for (n = 1; n < 100; n++) {
   14776:	f04f 0901 	mov.w	r9, #1
gen_numname():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   1477a:	f8df 8208 	ldr.w	r8, [pc, #520]	; 14984 <dir_register+0x230>
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1628
		fn[NS] = 0; dp->lfn = 0;			/* Find only SFN */
   1477e:	72f3      	strb	r3, [r6, #11]
   14780:	61e3      	str	r3, [r4, #28]
gen_numname():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1422
	mem_cpy(dst, src, 11);
   14782:	220b      	movs	r2, #11
   14784:	a903      	add	r1, sp, #12
   14786:	4630      	mov	r0, r6
   14788:	f7ff fa23 	bl	13bd2 <mem_cpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   1478c:	f1b9 0f05 	cmp.w	r9, #5
   14790:	d84f      	bhi.n	14832 <dir_register+0xde>
   14792:	464b      	mov	r3, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   14794:	2207      	movs	r2, #7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1442
		c = (seq % 16) + '0';
   14796:	f003 000f 	and.w	r0, r3, #15
   1479a:	f100 0130 	add.w	r1, r0, #48	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1443
		if (c > '9') c += 7;
   1479e:	2939      	cmp	r1, #57	; 0x39
   147a0:	bf88      	it	hi
   147a2:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   147a6:	3a01      	subs	r2, #1
   147a8:	a801      	add	r0, sp, #4
   147aa:	4410      	add	r0, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   147ac:	091b      	lsrs	r3, r3, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1444
		ns[i--] = c;
   147ae:	7041      	strb	r1, [r0, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1446
	} while (seq);
   147b0:	d1f1      	bne.n	14796 <dir_register+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1447
	ns[i] = '~';
   147b2:	207e      	movs	r0, #126	; 0x7e
   147b4:	a906      	add	r1, sp, #24
   147b6:	4411      	add	r1, r2
   147b8:	f801 0c14 	strb.w	r0, [r1, #-20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   147bc:	429a      	cmp	r2, r3
   147be:	d03d      	beq.n	1483c <dir_register+0xe8>
   147c0:	5cf1      	ldrb	r1, [r6, r3]
   147c2:	2920      	cmp	r1, #32
   147c4:	d138      	bne.n	14838 <dir_register+0xe4>
   147c6:	4433      	add	r3, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1457
		dst[j++] = (i < 8) ? ns[i++] : ' ';
   147c8:	2a07      	cmp	r2, #7
   147ca:	bf8f      	iteee	hi
   147cc:	2120      	movhi	r1, #32
   147ce:	a906      	addls	r1, sp, #24
   147d0:	1889      	addls	r1, r1, r2
   147d2:	f811 1c14 	ldrbls.w	r1, [r1, #-20]
   147d6:	bf98      	it	ls
   147d8:	3201      	addls	r2, #1
   147da:	f803 1b01 	strb.w	r1, [r3], #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1458
	} while (j < 8);
   147de:	1b99      	subs	r1, r3, r6
   147e0:	2907      	cmp	r1, #7
   147e2:	d9f1      	bls.n	147c8 <dir_register+0x74>
dir_find():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1500
	res = dir_sdi(dp, 0);			/* Rewind directory object */
   147e4:	2100      	movs	r1, #0
   147e6:	4620      	mov	r0, r4
   147e8:	f7ff fc7c 	bl	140e4 <dir_sdi>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1501
	if (res != FR_OK) return res;
   147ec:	4605      	mov	r5, r0
   147ee:	bba8      	cbnz	r0, 1485c <dir_register+0x108>
   147f0:	4620      	mov	r0, r4
   147f2:	f7ff fde7 	bl	143c4 <dir_find.part.9>
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1632
			if (res != FR_OK) break;
   147f6:	4605      	mov	r5, r0
   147f8:	bb80      	cbnz	r0, 1485c <dir_register+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1629 (discriminator 2)
		for (n = 1; n < 100; n++) {
   147fa:	f109 0901 	add.w	r9, r9, #1
   147fe:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
   14802:	d1be      	bne.n	14782 <dir_register+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1634
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
   14804:	2507      	movs	r5, #7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1677
}
   14806:	4628      	mov	r0, r5
   14808:	b007      	add	sp, #28
   1480a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
gen_numname():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   1480e:	2110      	movs	r1, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1431
				sr = (sr << 1) + (wc & 1);
   14810:	f002 0501 	and.w	r5, r2, #1
   14814:	eb05 0343 	add.w	r3, r5, r3, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1433
				if (sr & 0x10000) sr ^= 0x11021;
   14818:	03dd      	lsls	r5, r3, #15
   1481a:	bf48      	it	mi
   1481c:	ea83 0308 	eormi.w	r3, r3, r8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   14820:	3901      	subs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1432
				wc >>= 1;
   14822:	ea4f 0252 	mov.w	r2, r2, lsr #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1430
			for (i = 0; i < 16; i++) {
   14826:	d1f3      	bne.n	14810 <dir_register+0xbc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1428
		while (*lfn) {	/* Create a CRC */
   14828:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   1482c:	2a00      	cmp	r2, #0
   1482e:	d1ee      	bne.n	1480e <dir_register+0xba>
   14830:	e7b0      	b.n	14794 <dir_register+0x40>
   14832:	1eb8      	subs	r0, r7, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1424
	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
   14834:	464b      	mov	r3, r9
   14836:	e7f7      	b.n	14828 <dir_register+0xd4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1450
	for (j = 0; j < i && dst[j] != ' '; j++) {
   14838:	3301      	adds	r3, #1
   1483a:	e7bf      	b.n	147bc <dir_register+0x68>
   1483c:	4613      	mov	r3, r2
   1483e:	e7c2      	b.n	147c6 <dir_register+0x72>
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 3)
		for (n = 0; lfn[n]; n++) ;
   14840:	3601      	adds	r6, #1
   14842:	e016      	b.n	14872 <dir_register+0x11e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1643
		nent = 1;
   14844:	2601      	movs	r6, #1
   14846:	e01c      	b.n	14882 <dir_register+0x12e>
dir_alloc():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1252
				n = 0;					/* Not a blank entry. Restart to search */
   14848:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1254
			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
   1484a:	2101      	movs	r1, #1
   1484c:	4620      	mov	r0, r4
   1484e:	f7ff fd42 	bl	142d6 <dir_next>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1255
		} while (res == FR_OK);
   14852:	4605      	mov	r5, r0
   14854:	b1e8      	cbz	r0, 14892 <dir_register+0x13e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1257
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
   14856:	2d04      	cmp	r5, #4
   14858:	d0d4      	beq.n	14804 <dir_register+0xb0>
   1485a:	e7d4      	b.n	14806 <dir_register+0xb2>
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1635
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
   1485c:	2d04      	cmp	r5, #4
   1485e:	d1d2      	bne.n	14806 <dir_register+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1636
		fn[NS] = sn[NS]; dp->lfn = lfn;
   14860:	f89d 3017 	ldrb.w	r3, [sp, #23]
   14864:	72f3      	strb	r3, [r6, #11]
   14866:	61e7      	str	r7, [r4, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1639
	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
   14868:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1486c:	079b      	lsls	r3, r3, #30
   1486e:	d5e9      	bpl.n	14844 <dir_register+0xf0>
   14870:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1640 (discriminator 1)
		for (n = 0; lfn[n]; n++) ;
   14872:	f837 3016 	ldrh.w	r3, [r7, r6, lsl #1]
   14876:	2b00      	cmp	r3, #0
   14878:	d1e2      	bne.n	14840 <dir_register+0xec>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1641
		nent = (n + 25) / 13;
   1487a:	230d      	movs	r3, #13
   1487c:	3619      	adds	r6, #25
   1487e:	fbb6 f6f3 	udiv	r6, r6, r3
dir_alloc():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1243
	res = dir_sdi(dp, 0);
   14882:	2100      	movs	r1, #0
   14884:	4620      	mov	r0, r4
   14886:	f7ff fc2d 	bl	140e4 <dir_sdi>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1244
	if (res == FR_OK) {
   1488a:	4605      	mov	r5, r0
   1488c:	2800      	cmp	r0, #0
   1488e:	d1e2      	bne.n	14856 <dir_register+0x102>
   14890:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1247
			res = move_window(dp->fs, dp->sect);
   14892:	6921      	ldr	r1, [r4, #16]
   14894:	6820      	ldr	r0, [r4, #0]
   14896:	f7ff fa4f 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1248
			if (res != FR_OK) break;
   1489a:	4605      	mov	r5, r0
   1489c:	2800      	cmp	r0, #0
   1489e:	d1da      	bne.n	14856 <dir_register+0x102>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1249
			if (dp->dir[0] == DDE || dp->dir[0] == 0) {	/* Is it a blank entry? */
   148a0:	6963      	ldr	r3, [r4, #20]
   148a2:	781b      	ldrb	r3, [r3, #0]
   148a4:	2be5      	cmp	r3, #229	; 0xe5
   148a6:	d001      	beq.n	148ac <dir_register+0x158>
   148a8:	2b00      	cmp	r3, #0
   148aa:	d1cd      	bne.n	14848 <dir_register+0xf4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1250
				if (++n == nent) break;	/* A block of contiguous entries is found */
   148ac:	3701      	adds	r7, #1
   148ae:	42be      	cmp	r6, r7
   148b0:	d1cb      	bne.n	1484a <dir_register+0xf6>
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1647
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
   148b2:	3e01      	subs	r6, #1
   148b4:	d049      	beq.n	1494a <dir_register+0x1f6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1648
		res = dir_sdi(dp, dp->index - nent);
   148b6:	88e1      	ldrh	r1, [r4, #6]
   148b8:	4620      	mov	r0, r4
   148ba:	1b89      	subs	r1, r1, r6
   148bc:	f7ff fc12 	bl	140e4 <dir_sdi>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1649
		if (res == FR_OK) {
   148c0:	4605      	mov	r5, r0
   148c2:	2800      	cmp	r0, #0
   148c4:	d19f      	bne.n	14806 <dir_register+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   148c6:	69a0      	ldr	r0, [r4, #24]
   148c8:	f7ff f9a6 	bl	13c18 <sum_sfn>
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   148cc:	f64f 79ff 	movw	r9, #65535	; 0xffff
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1650
			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
   148d0:	4607      	mov	r7, r0
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   148d2:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 14988 <dir_register+0x234>
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1652
				res = move_window(dp->fs, dp->sect);
   148d6:	6921      	ldr	r1, [r4, #16]
   148d8:	6820      	ldr	r0, [r4, #0]
   148da:	f7ff fa2d 	bl	13d38 <move_window>
   148de:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1653
				if (res != FR_OK) break;
   148e0:	2800      	cmp	r0, #0
   148e2:	d190      	bne.n	14806 <dir_register+0xb2>
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   148e4:	220f      	movs	r2, #15
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   148e6:	6963      	ldr	r3, [r4, #20]
   148e8:	f8d4 e01c 	ldr.w	lr, [r4, #28]
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1385
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
   148ec:	72da      	strb	r2, [r3, #11]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   148ee:	220d      	movs	r2, #13
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1654
				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
   148f0:	b2f1      	uxtb	r1, r6
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1389
	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
   148f2:	1e4d      	subs	r5, r1, #1
   148f4:	436a      	muls	r2, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1390
	s = wc = 0;
   148f6:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1384
	dir[LDIR_Chksum] = sum;			/* Set check sum */
   148f8:	735f      	strb	r7, [r3, #13]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1386
	dir[LDIR_Type] = 0;
   148fa:	7318      	strb	r0, [r3, #12]
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   148fc:	8358      	strh	r0, [r3, #26]
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   148fe:	4548      	cmp	r0, r9
   14900:	bf18      	it	ne
   14902:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1393
		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
   14906:	f815 c008 	ldrb.w	ip, [r5, r8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   1490a:	f105 0501 	add.w	r5, r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1392
		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
   1490e:	bf18      	it	ne
   14910:	3201      	addne	r2, #1
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
   14912:	f823 000c 	strh.w	r0, [r3, ip]
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1394
		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
   14916:	2800      	cmp	r0, #0
   14918:	bf08      	it	eq
   1491a:	4648      	moveq	r0, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1395
	} while (++s < 13);
   1491c:	2d0d      	cmp	r5, #13
   1491e:	d1ee      	bne.n	148fe <dir_register+0x1aa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1396
	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
   14920:	4548      	cmp	r0, r9
   14922:	d002      	beq.n	1492a <dir_register+0x1d6>
   14924:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
   14928:	b90a      	cbnz	r2, 1492e <dir_register+0x1da>
   1492a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   1492e:	2201      	movs	r2, #1
fit_lfn():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1397
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
   14930:	7019      	strb	r1, [r3, #0]
dir_register():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   14932:	6823      	ldr	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   14934:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1655
				dp->fs->wflag = 1;
   14936:	711a      	strb	r2, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1656
				res = dir_next(dp, 0);	/* Next entry */
   14938:	4620      	mov	r0, r4
   1493a:	f7ff fccc 	bl	142d6 <dir_next>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1657
			} while (res == FR_OK && --nent);
   1493e:	4605      	mov	r5, r0
   14940:	2800      	cmp	r0, #0
   14942:	f47f af60 	bne.w	14806 <dir_register+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1657 (discriminator 1)
   14946:	3e01      	subs	r6, #1
   14948:	d1c5      	bne.n	148d6 <dir_register+0x182>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1665
		res = move_window(dp->fs, dp->sect);
   1494a:	6921      	ldr	r1, [r4, #16]
   1494c:	6820      	ldr	r0, [r4, #0]
   1494e:	f7ff f9f3 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1666
		if (res == FR_OK) {
   14952:	4605      	mov	r5, r0
   14954:	2800      	cmp	r0, #0
   14956:	f47f af56 	bne.w	14806 <dir_register+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1667
			mem_set(dp->dir, 0, SZ_DIR);	/* Clean the entry */
   1495a:	2220      	movs	r2, #32
   1495c:	4629      	mov	r1, r5
   1495e:	6960      	ldr	r0, [r4, #20]
   14960:	f7ff f953 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1668
			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
   14964:	220b      	movs	r2, #11
   14966:	69a1      	ldr	r1, [r4, #24]
   14968:	6960      	ldr	r0, [r4, #20]
   1496a:	f7ff f932 	bl	13bd2 <mem_cpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1670
			dp->dir[DIR_NTres] = dp->fn[NS] & (NS_BODY | NS_EXT);	/* Put NT flag */
   1496e:	69a3      	ldr	r3, [r4, #24]
   14970:	6962      	ldr	r2, [r4, #20]
   14972:	7adb      	ldrb	r3, [r3, #11]
   14974:	f003 0318 	and.w	r3, r3, #24
   14978:	7313      	strb	r3, [r2, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1672
			dp->fs->wflag = 1;
   1497a:	2201      	movs	r2, #1
   1497c:	6823      	ldr	r3, [r4, #0]
   1497e:	711a      	strb	r2, [r3, #4]
   14980:	e741      	b.n	14806 <dir_register+0xb2>
   14982:	bf00      	nop
   14984:	00011021 	.word	0x00011021
   14988:	00020468 	.word	0x00020468

0001498c <remove_chain>:
remove_chain():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1498c:	2901      	cmp	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:978
{
   1498e:	b570      	push	{r4, r5, r6, lr}
   14990:	4604      	mov	r4, r0
   14992:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:985
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   14994:	d801      	bhi.n	1499a <remove_chain+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   14996:	2002      	movs	r0, #2
   14998:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:985 (discriminator 1)
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
   1499a:	6983      	ldr	r3, [r0, #24]
   1499c:	4299      	cmp	r1, r3
   1499e:	d2fa      	bcs.n	14996 <remove_chain+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:990
		while (clst < fs->n_fatent) {			/* Not a last link? */
   149a0:	69a3      	ldr	r3, [r4, #24]
   149a2:	429d      	cmp	r5, r3
   149a4:	d205      	bcs.n	149b2 <remove_chain+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:991
			nxt = get_fat(fs, clst);			/* Get cluster status */
   149a6:	4629      	mov	r1, r5
   149a8:	4620      	mov	r0, r4
   149aa:	f7ff fb48 	bl	1403e <get_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:992
			if (nxt == 0) break;				/* Empty cluster? */
   149ae:	4606      	mov	r6, r0
   149b0:	b908      	cbnz	r0, 149b6 <remove_chain+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:986
		res = FR_INT_ERR;
   149b2:	2000      	movs	r0, #0
   149b4:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:993
			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
   149b6:	2801      	cmp	r0, #1
   149b8:	d0ed      	beq.n	14996 <remove_chain+0xa>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   149ba:	1c41      	adds	r1, r0, #1
   149bc:	d010      	beq.n	149e0 <remove_chain+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:995
			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
   149be:	2200      	movs	r2, #0
   149c0:	4629      	mov	r1, r5
   149c2:	4620      	mov	r0, r4
   149c4:	f7ff fbce 	bl	14164 <put_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:996
			if (res != FR_OK) break;
   149c8:	b958      	cbnz	r0, 149e2 <remove_chain+0x56>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:997
			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
   149ca:	6963      	ldr	r3, [r4, #20]
   149cc:	1c5a      	adds	r2, r3, #1
   149ce:	d005      	beq.n	149dc <remove_chain+0x50>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:998
				fs->free_clust++;
   149d0:	3301      	adds	r3, #1
   149d2:	6163      	str	r3, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:999
				fs->fsi_flag |= 1;
   149d4:	7963      	ldrb	r3, [r4, #5]
   149d6:	f043 0301 	orr.w	r3, r3, #1
   149da:	7163      	strb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:978
{
   149dc:	4635      	mov	r5, r6
   149de:	e7df      	b.n	149a0 <remove_chain+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:994
			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
   149e0:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1016
}
   149e2:	bd70      	pop	{r4, r5, r6, pc}

000149e4 <f_mount>:
f_mount():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2373
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
   149e4:	b5f0      	push	{r4, r5, r6, r7, lr}
   149e6:	b085      	sub	sp, #20
   149e8:	9001      	str	r0, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2377
	FATFS *cfs;
	int vol;
	FRESULT res;
	const TCHAR *rp = path;
   149ea:	a804      	add	r0, sp, #16
   149ec:	f840 1d04 	str.w	r1, [r0, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2373
{
   149f0:	9100      	str	r1, [sp, #0]
   149f2:	4616      	mov	r6, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2380


	vol = get_ldnumber(&rp);
   149f4:	f7ff f91f 	bl	13c36 <get_ldnumber>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   149f8:	1e05      	subs	r5, r0, #0
   149fa:	db2a      	blt.n	14a52 <f_mount+0x6e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2382
	cfs = FatFs[vol];					/* Pointer to fs object */
   149fc:	4f17      	ldr	r7, [pc, #92]	; (14a5c <f_mount+0x78>)
   149fe:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2384

	if (cfs) {
   14a02:	b14c      	cbz	r4, 14a18 <f_mount+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2389
#if _FS_LOCK
		clear_lock(cfs);
#endif
#if _FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
   14a04:	68e0      	ldr	r0, [r4, #12]
   14a06:	f000 fe67 	bl	156d8 <ff_del_syncobj>
   14a0a:	b918      	cbnz	r0, 14a14 <f_mount+0x30>
   14a0c:	2402      	movs	r4, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2406

	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */

	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
   14a0e:	4620      	mov	r0, r4
   14a10:	b005      	add	sp, #20
   14a12:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2391
		cfs->fs_type = 0;				/* Clear old fs object */
   14a14:	2300      	movs	r3, #0
   14a16:	7023      	strb	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2394
	if (fs) {
   14a18:	9901      	ldr	r1, [sp, #4]
   14a1a:	b989      	cbnz	r1, 14a40 <f_mount+0x5c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2400
	FatFs[vol] = fs;					/* Register new fs object */
   14a1c:	9c01      	ldr	r4, [sp, #4]
   14a1e:	f847 4025 	str.w	r4, [r7, r5, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   14a22:	2c00      	cmp	r4, #0
   14a24:	d0f3      	beq.n	14a0e <f_mount+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2402 (discriminator 2)
   14a26:	2e01      	cmp	r6, #1
   14a28:	d115      	bne.n	14a56 <f_mount+0x72>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2404
	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
   14a2a:	4669      	mov	r1, sp
   14a2c:	2200      	movs	r2, #0
   14a2e:	a801      	add	r0, sp, #4
   14a30:	f7ff f9c2 	bl	13db8 <find_volume>
   14a34:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2405
	LEAVE_FF(fs, res);
   14a36:	4601      	mov	r1, r0
   14a38:	9801      	ldr	r0, [sp, #4]
   14a3a:	f7ff fae8 	bl	1400e <unlock_fs>
   14a3e:	e7e6      	b.n	14a0e <f_mount+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   14a40:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   14a42:	b2e8      	uxtb	r0, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2395
		fs->fs_type = 0;				/* Clear new fs object */
   14a44:	f801 3b0c 	strb.w	r3, [r1], #12
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2397
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
   14a48:	f000 fe3c 	bl	156c4 <ff_cre_syncobj>
   14a4c:	2800      	cmp	r0, #0
   14a4e:	d0dd      	beq.n	14a0c <f_mount+0x28>
   14a50:	e7e4      	b.n	14a1c <f_mount+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2381
	if (vol < 0) return FR_INVALID_DRIVE;
   14a52:	240b      	movs	r4, #11
   14a54:	e7db      	b.n	14a0e <f_mount+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2402
	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
   14a56:	2400      	movs	r4, #0
   14a58:	e7d9      	b.n	14a0e <f_mount+0x2a>
   14a5a:	bf00      	nop
   14a5c:	2007c4e4 	.word	0x2007c4e4

00014a60 <f_open>:
f_open():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2420
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
   14a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   14a64:	b0d1      	sub	sp, #324	; 0x144
   14a66:	9101      	str	r1, [sp, #4]
   14a68:	4690      	mov	r8, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2427
	DIR dj;
	BYTE *dir;
	DEF_NAMEBUF;


	if (!fp) return FR_INVALID_OBJECT;
   14a6a:	4606      	mov	r6, r0
   14a6c:	2800      	cmp	r0, #0
   14a6e:	f000 808c 	beq.w	14b8a <f_open+0x12a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   14a72:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2433

	/* Get logical drive number */
#if !_FS_READONLY
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   14a74:	f002 021e 	and.w	r2, r2, #30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2428
	fp->fs = 0;			/* Clear file object */
   14a78:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2433
	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
   14a7a:	a901      	add	r1, sp, #4
   14a7c:	a806      	add	r0, sp, #24
   14a7e:	f7ff f99b 	bl	13db8 <find_volume>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2438
#else
	mode &= FA_READ;
	res = find_volume(&dj.fs, &path, 0);
#endif
	if (res == FR_OK) {
   14a82:	4605      	mov	r5, r0
   14a84:	2800      	cmp	r0, #0
   14a86:	d174      	bne.n	14b72 <f_open+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   14a88:	ab03      	add	r3, sp, #12
   14a8a:	930c      	str	r3, [sp, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   14a8c:	9901      	ldr	r1, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   14a8e:	ab0f      	add	r3, sp, #60	; 0x3c
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   14a90:	a806      	add	r0, sp, #24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2439
		INIT_BUF(dj);
   14a92:	930d      	str	r3, [sp, #52]	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2440
		res = follow_path(&dj, path);	/* Follow the file path */
   14a94:	f7ff fd26 	bl	144e4 <follow_path>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2441
		dir = dj.dir;
   14a98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2443
#if !_FS_READONLY	/* R/W configuration */
		if (res == FR_OK) {
   14a9a:	b910      	cbnz	r0, 14aa2 <f_open+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2445
			if (!dir)	/* Default directory itself */
				res = FR_INVALID_NAME;
   14a9c:	2c00      	cmp	r4, #0
   14a9e:	bf08      	it	eq
   14aa0:	2006      	moveq	r0, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2452
			else
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   14aa2:	f018 0f1c 	tst.w	r8, #28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2432
	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
   14aa6:	f008 071f 	and.w	r7, r8, #31
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2452
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
   14aaa:	d03d      	beq.n	14b28 <f_open+0xc8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2455
			DWORD dw, cl;

			if (res != FR_OK) {					/* No file, create new */
   14aac:	b398      	cbz	r0, 14b16 <f_open+0xb6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2456
				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
   14aae:	2804      	cmp	r0, #4
   14ab0:	d102      	bne.n	14ab8 <f_open+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2460
#if _FS_LOCK
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
   14ab2:	a806      	add	r0, sp, #24
   14ab4:	f7ff fe4e 	bl	14754 <dir_register>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2462
#endif
				mode |= FA_CREATE_ALWAYS;		/* File is created */
   14ab8:	f047 0708 	orr.w	r7, r7, #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2473
				} else {
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
						res = FR_EXIST;
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   14abc:	bb48      	cbnz	r0, 14b12 <f_open+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2463
				dir = dj.dir;					/* New entry */
   14abe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2473 (discriminator 1)
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
   14ac0:	0738      	lsls	r0, r7, #28
   14ac2:	d53b      	bpl.n	14b3c <f_open+0xdc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2474
				dw = get_fattime();				/* Created time */
   14ac4:	f7ff f85c 	bl	13b80 <get_fattime>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2476
				ST_DWORD(dir+DIR_CrtTime, dw);
				dir[DIR_Attr] = 0;				/* Reset attribute */
   14ac8:	2300      	movs	r3, #0
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   14aca:	f8c4 000e 	str.w	r0, [r4, #14]
f_open():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2478
				ST_DWORD(dir+DIR_FileSize, 0);	/* size = 0 */
				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
   14ace:	9806      	ldr	r0, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2476
				dir[DIR_Attr] = 0;				/* Reset attribute */
   14ad0:	72e3      	strb	r3, [r4, #11]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   14ad2:	61e3      	str	r3, [r4, #28]
ld_clust():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   14ad4:	7802      	ldrb	r2, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   14ad6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   14ada:	2a03      	cmp	r2, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   14adc:	bf08      	it	eq
   14ade:	8aa2      	ldrheq	r2, [r4, #20]
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   14ae0:	8363      	strh	r3, [r4, #26]
   14ae2:	82a3      	strh	r3, [r4, #20]
f_open():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2480
				st_clust(dir, 0);				/* cluster = 0 */
				dj.fs->wflag = 1;
   14ae4:	f04f 0301 	mov.w	r3, #1
ld_clust():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   14ae8:	bf08      	it	eq
   14aea:	ea48 4802 	orreq.w	r8, r8, r2, lsl #16
f_open():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2480
				dj.fs->wflag = 1;
   14aee:	7103      	strb	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2481
				if (cl) {						/* Remove the cluster chain if exist */
   14af0:	f1b8 0f00 	cmp.w	r8, #0
   14af4:	d022      	beq.n	14b3c <f_open+0xdc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2483
					dw = dj.fs->winsect;
					res = remove_chain(dj.fs, cl);
   14af6:	4641      	mov	r1, r8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2482
					dw = dj.fs->winsect;
   14af8:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2483
					res = remove_chain(dj.fs, cl);
   14afc:	f7ff ff46 	bl	1498c <remove_chain>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2484
					if (res == FR_OK) {
   14b00:	b938      	cbnz	r0, 14b12 <f_open+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2485
						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
   14b02:	9806      	ldr	r0, [sp, #24]
   14b04:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   14b08:	6103      	str	r3, [r0, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2486
						res = move_window(dj.fs, dw);
   14b0a:	4649      	mov	r1, r9
   14b0c:	f7ff f914 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2501
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
						res = FR_DENIED;
				}
			}
		}
		if (res == FR_OK) {
   14b10:	b1a0      	cbz	r0, 14b3c <f_open+0xdc>
   14b12:	4605      	mov	r5, r0
   14b14:	e02d      	b.n	14b72 <f_open+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2466
				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
   14b16:	7ae3      	ldrb	r3, [r4, #11]
   14b18:	f013 0f11 	tst.w	r3, #17
   14b1c:	d133      	bne.n	14b86 <f_open+0x126>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2469
					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
   14b1e:	f018 0f04 	tst.w	r8, #4
   14b22:	d0cd      	beq.n	14ac0 <f_open+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2470
						res = FR_EXIST;
   14b24:	2508      	movs	r5, #8
   14b26:	e024      	b.n	14b72 <f_open+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2492
			if (res == FR_OK) {					/* Follow succeeded */
   14b28:	2800      	cmp	r0, #0
   14b2a:	d1f2      	bne.n	14b12 <f_open+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2493
				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
   14b2c:	7ae3      	ldrb	r3, [r4, #11]
   14b2e:	06d9      	lsls	r1, r3, #27
   14b30:	d427      	bmi.n	14b82 <f_open+0x122>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2496
					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
   14b32:	f018 0f02 	tst.w	r8, #2
   14b36:	d001      	beq.n	14b3c <f_open+0xdc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2496 (discriminator 1)
   14b38:	07da      	lsls	r2, r3, #31
   14b3a:	d424      	bmi.n	14b86 <f_open+0x126>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2502
			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
   14b3c:	073b      	lsls	r3, r7, #28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2504
				mode |= FA__WRITTEN;
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   14b3e:	9b06      	ldr	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2503
				mode |= FA__WRITTEN;
   14b40:	bf48      	it	mi
   14b42:	f047 0720 	orrmi.w	r7, r7, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   14b46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2526
		}
#endif
		FREE_BUF();

		if (res == FR_OK) {
			fp->flag = mode;					/* File access mode */
   14b48:	71b7      	strb	r7, [r6, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2504
			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
   14b4a:	61f2      	str	r2, [r6, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   14b4c:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2505
			fp->dir_ptr = dir;
   14b4e:	6234      	str	r4, [r6, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2527
			fp->err = 0;						/* Clear error flag */
   14b50:	71f2      	strb	r2, [r6, #7]
ld_clust():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   14b52:	7819      	ldrb	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1277
	cl = LD_WORD(dir+DIR_FstClusLO);
   14b54:	8b62      	ldrh	r2, [r4, #26]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1278
	if (fs->fs_type == FS_FAT32)
   14b56:	2903      	cmp	r1, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1279
		cl |= (DWORD)LD_WORD(dir+DIR_FstClusHI) << 16;
   14b58:	bf04      	itt	eq
   14b5a:	8aa1      	ldrheq	r1, [r4, #20]
   14b5c:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
f_open():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2528
			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
   14b60:	6132      	str	r2, [r6, #16]
LD_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:336
static inline DWORD LD_DWORD(void *p)           { DWORD *_rddword = (DWORD*)p; return *_rddword; }
   14b62:	69e2      	ldr	r2, [r4, #28]
f_open():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2535
			fp->fptr = 0;						/* File pointer */
			fp->dsect = 0;
#if _USE_FASTSEEK
			fp->cltbl = 0;						/* Normal seek mode */
#endif
			fp->fs = dj.fs;	 					/* Validate file object */
   14b64:	6033      	str	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2529
			fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
   14b66:	60f2      	str	r2, [r6, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   14b68:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   14b6a:	88db      	ldrh	r3, [r3, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2530
			fp->fptr = 0;						/* File pointer */
   14b6c:	60b2      	str	r2, [r6, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2531
			fp->dsect = 0;
   14b6e:	61b2      	str	r2, [r6, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2536
			fp->id = fp->fs->id;
   14b70:	80b3      	strh	r3, [r6, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2540
		}
	}

	LEAVE_FF(dj.fs, res);
   14b72:	4629      	mov	r1, r5
   14b74:	9806      	ldr	r0, [sp, #24]
   14b76:	f7ff fa4a 	bl	1400e <unlock_fs>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2541
}
   14b7a:	4628      	mov	r0, r5
   14b7c:	b051      	add	sp, #324	; 0x144
   14b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2494
					res = FR_NO_FILE;
   14b82:	2504      	movs	r5, #4
   14b84:	e7f5      	b.n	14b72 <f_open+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2467
					res = FR_DENIED;
   14b86:	2507      	movs	r5, #7
   14b88:	e7f3      	b.n	14b72 <f_open+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2427
	if (!fp) return FR_INVALID_OBJECT;
   14b8a:	2509      	movs	r5, #9
   14b8c:	e7f5      	b.n	14b7a <f_open+0x11a>

00014b8e <f_read>:
f_read():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2556
	FIL* fp, 		/* Pointer to the file object */
	void* buff,		/* Pointer to data buffer */
	UINT btr,		/* Number of bytes to read */
	UINT* br		/* Pointer to number of bytes read */
)
{
   14b8e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b92:	469b      	mov	fp, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2563
	DWORD clst, sect, remain;
	UINT rcnt, cc;
	BYTE csect, *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
   14b94:	2300      	movs	r3, #0
   14b96:	f8cb 3000 	str.w	r3, [fp]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2556
{
   14b9a:	4604      	mov	r4, r0
   14b9c:	4689      	mov	r9, r1
   14b9e:	4616      	mov	r6, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2565

	res = validate(fp);							/* Check validity */
   14ba0:	f7ff fa18 	bl	13fd4 <validate>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2566
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   14ba4:	4605      	mov	r5, r0
   14ba6:	b110      	cbz	r0, 14bae <f_read+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2624
						ABORT(fp->fs, FR_DISK_ERR);
					fp->flag &= ~FA__DIRTY;
				}
#endif
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
					ABORT(fp->fs, FR_DISK_ERR);
   14ba8:	4629      	mov	r1, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2640
#else
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
   14baa:	6820      	ldr	r0, [r4, #0]
   14bac:	e04a      	b.n	14c44 <f_read+0xb6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2567
	if (fp->err)								/* Check error */
   14bae:	79e1      	ldrb	r1, [r4, #7]
   14bb0:	b139      	cbz	r1, 14bc2 <f_read+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2568
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   14bb2:	6820      	ldr	r0, [r4, #0]
   14bb4:	f7ff fa2b 	bl	1400e <unlock_fs>
   14bb8:	79e5      	ldrb	r5, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2641
}
   14bba:	4628      	mov	r0, r5
   14bbc:	b003      	add	sp, #12
   14bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2569
	if (!(fp->flag & FA_READ)) 					/* Check access mode */
   14bc2:	79a3      	ldrb	r3, [r4, #6]
   14bc4:	07d8      	lsls	r0, r3, #31
   14bc6:	d405      	bmi.n	14bd4 <f_read+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2570
		LEAVE_FF(fp->fs, FR_DENIED);
   14bc8:	2107      	movs	r1, #7
   14bca:	6820      	ldr	r0, [r4, #0]
   14bcc:	f7ff fa1f 	bl	1400e <unlock_fs>
   14bd0:	2507      	movs	r5, #7
   14bd2:	e7f2      	b.n	14bba <f_read+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2571
	remain = fp->fsize - fp->fptr;
   14bd4:	68e3      	ldr	r3, [r4, #12]
   14bd6:	68a7      	ldr	r7, [r4, #8]
   14bd8:	1bdf      	subs	r7, r3, r7
   14bda:	42b7      	cmp	r7, r6
   14bdc:	bf28      	it	cs
   14bde:	4637      	movcs	r7, r6
   14be0:	f104 0324 	add.w	r3, r4, #36	; 0x24
   14be4:	9300      	str	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2574
	for ( ;  btr;								/* Repeat until all data read */
   14be6:	b90f      	cbnz	r7, 14bec <f_read+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   14be8:	4639      	mov	r1, r7
   14bea:	e7de      	b.n	14baa <f_read+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2576
		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
   14bec:	68a2      	ldr	r2, [r4, #8]
   14bee:	f3c2 0308 	ubfx	r3, r2, #0, #9
   14bf2:	2b00      	cmp	r3, #0
   14bf4:	d174      	bne.n	14ce0 <f_read+0x152>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2577
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   14bf6:	6820      	ldr	r0, [r4, #0]
   14bf8:	7883      	ldrb	r3, [r0, #2]
   14bfa:	3b01      	subs	r3, #1
   14bfc:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2578
			if (!csect) {						/* On the cluster boundary? */
   14c00:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   14c04:	d111      	bne.n	14c2a <f_read+0x9c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2579
				if (fp->fptr == 0) {			/* On the top of the file? */
   14c06:	b92a      	cbnz	r2, 14c14 <f_read+0x86>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2580
					clst = fp->sclust;			/* Follow from the origin */
   14c08:	6920      	ldr	r0, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2589
				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
   14c0a:	2801      	cmp	r0, #1
   14c0c:	d808      	bhi.n	14c20 <f_read+0x92>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2589 (discriminator 1)
   14c0e:	2502      	movs	r5, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   14c10:	71e5      	strb	r5, [r4, #7]
   14c12:	e7c9      	b.n	14ba8 <f_read+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2587
						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
   14c14:	6961      	ldr	r1, [r4, #20]
   14c16:	9301      	str	r3, [sp, #4]
   14c18:	f7ff fa11 	bl	1403e <get_fat>
   14c1c:	9b01      	ldr	r3, [sp, #4]
   14c1e:	e7f4      	b.n	14c0a <f_read+0x7c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2590
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   14c20:	1c41      	adds	r1, r0, #1
   14c22:	d101      	bne.n	14c28 <f_read+0x9a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2624
					ABORT(fp->fs, FR_DISK_ERR);
   14c24:	2501      	movs	r5, #1
   14c26:	e7f3      	b.n	14c10 <f_read+0x82>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2591
				fp->clust = clst;				/* Update current cluster */
   14c28:	6160      	str	r0, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2593
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   14c2a:	f8d4 a000 	ldr.w	sl, [r4]
   14c2e:	6961      	ldr	r1, [r4, #20]
   14c30:	4650      	mov	r0, sl
   14c32:	9301      	str	r3, [sp, #4]
   14c34:	f7ff f9f8 	bl	14028 <clust2sect>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2594
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   14c38:	9b01      	ldr	r3, [sp, #4]
   14c3a:	b930      	cbnz	r0, 14c4a <f_read+0xbc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2594 (discriminator 1)
   14c3c:	2502      	movs	r5, #2
   14c3e:	4650      	mov	r0, sl
   14c40:	4629      	mov	r1, r5
   14c42:	71e5      	strb	r5, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2640
	LEAVE_FF(fp->fs, FR_OK);
   14c44:	f7ff f9e3 	bl	1400e <unlock_fs>
   14c48:	e7b7      	b.n	14bba <f_read+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   14c4a:	0a7e      	lsrs	r6, r7, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2595
			sect += csect;
   14c4c:	eb00 0803 	add.w	r8, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2597
			if (cc) {							/* Read maximum contiguous sectors directly */
   14c50:	d029      	beq.n	14ca6 <f_read+0x118>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2598
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   14c52:	f89a 2002 	ldrb.w	r2, [sl, #2]
   14c56:	1999      	adds	r1, r3, r6
   14c58:	4291      	cmp	r1, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2599
					cc = fp->fs->csize - csect;
   14c5a:	bf88      	it	hi
   14c5c:	1ad6      	subhi	r6, r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2600
				if (disk_read(fp->fs->drv, rbuff, sect, cc))
   14c5e:	b2f3      	uxtb	r3, r6
   14c60:	4642      	mov	r2, r8
   14c62:	4649      	mov	r1, r9
   14c64:	f89a 0001 	ldrb.w	r0, [sl, #1]
   14c68:	f7fe f951 	bl	12f0e <disk_read>
   14c6c:	2800      	cmp	r0, #0
   14c6e:	d1d9      	bne.n	14c24 <f_read+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2607
				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
   14c70:	79a3      	ldrb	r3, [r4, #6]
   14c72:	065a      	lsls	r2, r3, #25
   14c74:	d50b      	bpl.n	14c8e <f_read+0x100>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2607 (discriminator 1)
   14c76:	69a0      	ldr	r0, [r4, #24]
   14c78:	eba0 0008 	sub.w	r0, r0, r8
   14c7c:	4286      	cmp	r6, r0
   14c7e:	d906      	bls.n	14c8e <f_read+0x100>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2608
					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
   14c80:	f44f 7200 	mov.w	r2, #512	; 0x200
   14c84:	9900      	ldr	r1, [sp, #0]
   14c86:	eb09 2040 	add.w	r0, r9, r0, lsl #9
   14c8a:	f7fe ffa2 	bl	13bd2 <mem_cpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2611
				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
   14c8e:	0276      	lsls	r6, r6, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2575
		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
   14c90:	68a3      	ldr	r3, [r4, #8]
   14c92:	44b1      	add	r9, r6
   14c94:	4433      	add	r3, r6
   14c96:	60a3      	str	r3, [r4, #8]
   14c98:	f8db 3000 	ldr.w	r3, [fp]
   14c9c:	1bbf      	subs	r7, r7, r6
   14c9e:	4433      	add	r3, r6
   14ca0:	f8cb 3000 	str.w	r3, [fp]
   14ca4:	e79f      	b.n	14be6 <f_read+0x58>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2615
			if (fp->dsect != sect) {			/* Load data sector if not in cache */
   14ca6:	69a2      	ldr	r2, [r4, #24]
   14ca8:	4590      	cmp	r8, r2
   14caa:	d017      	beq.n	14cdc <f_read+0x14e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2617
				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
   14cac:	79a3      	ldrb	r3, [r4, #6]
   14cae:	065b      	lsls	r3, r3, #25
   14cb0:	d50b      	bpl.n	14cca <f_read+0x13c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2618
					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   14cb2:	2301      	movs	r3, #1
   14cb4:	9900      	ldr	r1, [sp, #0]
   14cb6:	f89a 0001 	ldrb.w	r0, [sl, #1]
   14cba:	f7fe f944 	bl	12f46 <disk_write>
   14cbe:	2800      	cmp	r0, #0
   14cc0:	d1b0      	bne.n	14c24 <f_read+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2620
					fp->flag &= ~FA__DIRTY;
   14cc2:	79a3      	ldrb	r3, [r4, #6]
   14cc4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   14cc8:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2623
				if (disk_read(fp->fs->drv, fp->buf, sect, 1))	/* Fill sector cache */
   14cca:	6820      	ldr	r0, [r4, #0]
   14ccc:	2301      	movs	r3, #1
   14cce:	4642      	mov	r2, r8
   14cd0:	9900      	ldr	r1, [sp, #0]
   14cd2:	7840      	ldrb	r0, [r0, #1]
   14cd4:	f7fe f91b 	bl	12f0e <disk_read>
   14cd8:	2800      	cmp	r0, #0
   14cda:	d1a3      	bne.n	14c24 <f_read+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2627
			fp->dsect = sect;
   14cdc:	f8c4 8018 	str.w	r8, [r4, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   14ce0:	68a1      	ldr	r1, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   14ce2:	4648      	mov	r0, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2629
		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
   14ce4:	f3c1 0108 	ubfx	r1, r1, #0, #9
   14ce8:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   14cec:	42be      	cmp	r6, r7
   14cee:	bf28      	it	cs
   14cf0:	463e      	movcs	r6, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2636
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
   14cf2:	3124      	adds	r1, #36	; 0x24
   14cf4:	4632      	mov	r2, r6
   14cf6:	4421      	add	r1, r4
   14cf8:	f7fe ff6b 	bl	13bd2 <mem_cpy>
   14cfc:	e7c8      	b.n	14c90 <f_read+0x102>

00014cfe <f_write>:
f_write():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2657
	FIL* fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
   14cfe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d02:	469b      	mov	fp, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2665
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
   14d04:	2300      	movs	r3, #0
   14d06:	f8cb 3000 	str.w	r3, [fp]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2657
{
   14d0a:	4604      	mov	r4, r0
   14d0c:	4689      	mov	r9, r1
   14d0e:	4690      	mov	r8, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2667

	res = validate(fp);						/* Check validity */
   14d10:	f7ff f960 	bl	13fd4 <validate>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2668
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   14d14:	4605      	mov	r5, r0
   14d16:	b110      	cbz	r0, 14d1e <f_write+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2742
			}
#else
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1))
						ABORT(fp->fs, FR_DISK_ERR);
   14d18:	4629      	mov	r1, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2763
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
   14d1a:	6820      	ldr	r0, [r4, #0]
   14d1c:	e068      	b.n	14df0 <f_write+0xf2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2669
	if (fp->err)							/* Check error */
   14d1e:	79e1      	ldrb	r1, [r4, #7]
   14d20:	b139      	cbz	r1, 14d32 <f_write+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2670
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   14d22:	6820      	ldr	r0, [r4, #0]
   14d24:	f7ff f973 	bl	1400e <unlock_fs>
   14d28:	79e5      	ldrb	r5, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2764
}
   14d2a:	4628      	mov	r0, r5
   14d2c:	b003      	add	sp, #12
   14d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2671
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
   14d32:	79a3      	ldrb	r3, [r4, #6]
   14d34:	0799      	lsls	r1, r3, #30
   14d36:	d405      	bmi.n	14d44 <f_write+0x46>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2672
		LEAVE_FF(fp->fs, FR_DENIED);
   14d38:	2107      	movs	r1, #7
   14d3a:	6820      	ldr	r0, [r4, #0]
   14d3c:	f7ff f967 	bl	1400e <unlock_fs>
   14d40:	2507      	movs	r5, #7
   14d42:	e7f2      	b.n	14d2a <f_write+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2673
	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
   14d44:	68a3      	ldr	r3, [r4, #8]
   14d46:	eb13 0f08 	cmn.w	r3, r8
   14d4a:	d205      	bcs.n	14d58 <f_write+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2741
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   14d4c:	f104 0324 	add.w	r3, r4, #36	; 0x24
   14d50:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2675
	for ( ;  btw;							/* Repeat until all data written */
   14d52:	f1b8 0f00 	cmp.w	r8, #0
   14d56:	d10a      	bne.n	14d6e <f_write+0x70>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2760
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   14d58:	68a3      	ldr	r3, [r4, #8]
   14d5a:	68e2      	ldr	r2, [r4, #12]
   14d5c:	4293      	cmp	r3, r2
   14d5e:	f200 80a2 	bhi.w	14ea6 <f_write+0x1a8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   14d62:	79a3      	ldrb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   14d64:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2761
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
   14d66:	f043 0320 	orr.w	r3, r3, #32
   14d6a:	71a3      	strb	r3, [r4, #6]
   14d6c:	e7d5      	b.n	14d1a <f_write+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2677
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
   14d6e:	68a2      	ldr	r2, [r4, #8]
   14d70:	f3c2 0308 	ubfx	r3, r2, #0, #9
   14d74:	2b00      	cmp	r3, #0
   14d76:	f040 8083 	bne.w	14e80 <f_write+0x182>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2678
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
   14d7a:	6820      	ldr	r0, [r4, #0]
   14d7c:	7883      	ldrb	r3, [r0, #2]
   14d7e:	3b01      	subs	r3, #1
   14d80:	ea03 2352 	and.w	r3, r3, r2, lsr #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2679
			if (!csect) {					/* On the cluster boundary? */
   14d84:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
   14d88:	9300      	str	r3, [sp, #0]
   14d8a:	d116      	bne.n	14dba <f_write+0xbc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2680
				if (fp->fptr == 0) {		/* On the top of the file? */
   14d8c:	b95a      	cbnz	r2, 14da6 <f_write+0xa8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2681
					clst = fp->sclust;		/* Follow from the origin */
   14d8e:	6921      	ldr	r1, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2682
					if (clst == 0)			/* When no cluster is allocated, */
   14d90:	b921      	cbnz	r1, 14d9c <f_write+0x9e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   14d92:	f7ff fa50 	bl	14236 <create_chain>
   14d96:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2692
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
   14d98:	2800      	cmp	r0, #0
   14d9a:	d0dd      	beq.n	14d58 <f_write+0x5a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2693
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   14d9c:	2901      	cmp	r1, #1
   14d9e:	d104      	bne.n	14daa <f_write+0xac>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2693 (discriminator 1)
   14da0:	2502      	movs	r5, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   14da2:	71e5      	strb	r5, [r4, #7]
   14da4:	e7b8      	b.n	14d18 <f_write+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2690
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
   14da6:	6961      	ldr	r1, [r4, #20]
   14da8:	e7f3      	b.n	14d92 <f_write+0x94>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2694
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   14daa:	1c4a      	adds	r2, r1, #1
   14dac:	d101      	bne.n	14db2 <f_write+0xb4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2742
						ABORT(fp->fs, FR_DISK_ERR);
   14dae:	2501      	movs	r5, #1
   14db0:	e7f7      	b.n	14da2 <f_write+0xa4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   14db2:	6923      	ldr	r3, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2695
				fp->clust = clst;			/* Update current cluster */
   14db4:	6161      	str	r1, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2696
				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
   14db6:	b903      	cbnz	r3, 14dba <f_write+0xbc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2696 (discriminator 1)
   14db8:	6121      	str	r1, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2702
			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
   14dba:	79a3      	ldrb	r3, [r4, #6]
   14dbc:	065b      	lsls	r3, r3, #25
   14dbe:	d50c      	bpl.n	14dda <f_write+0xdc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2703
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   14dc0:	6820      	ldr	r0, [r4, #0]
   14dc2:	2301      	movs	r3, #1
   14dc4:	69a2      	ldr	r2, [r4, #24]
   14dc6:	9901      	ldr	r1, [sp, #4]
   14dc8:	7840      	ldrb	r0, [r0, #1]
   14dca:	f7fe f8bc 	bl	12f46 <disk_write>
   14dce:	2800      	cmp	r0, #0
   14dd0:	d1ed      	bne.n	14dae <f_write+0xb0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2705
				fp->flag &= ~FA__DIRTY;
   14dd2:	79a3      	ldrb	r3, [r4, #6]
   14dd4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   14dd8:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2708
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
   14dda:	f8d4 a000 	ldr.w	sl, [r4]
   14dde:	6961      	ldr	r1, [r4, #20]
   14de0:	4650      	mov	r0, sl
   14de2:	f7ff f921 	bl	14028 <clust2sect>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2709
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
   14de6:	b930      	cbnz	r0, 14df6 <f_write+0xf8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2709 (discriminator 1)
   14de8:	2502      	movs	r5, #2
   14dea:	4650      	mov	r0, sl
   14dec:	4629      	mov	r1, r5
   14dee:	71e5      	strb	r5, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2763
	LEAVE_FF(fp->fs, FR_OK);
   14df0:	f7ff f90d 	bl	1400e <unlock_fs>
   14df4:	e799      	b.n	14d2a <f_write+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   14df6:	9b00      	ldr	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   14df8:	ea5f 2658 	movs.w	r6, r8, lsr #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2710
			sect += csect;
   14dfc:	eb00 0703 	add.w	r7, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2712
			if (cc) {						/* Write maximum contiguous sectors directly */
   14e00:	d02d      	beq.n	14e5e <f_write+0x160>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2713
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
   14e02:	9a00      	ldr	r2, [sp, #0]
   14e04:	f89a 3002 	ldrb.w	r3, [sl, #2]
   14e08:	4432      	add	r2, r6
   14e0a:	429a      	cmp	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   14e0c:	bf88      	it	hi
   14e0e:	9a00      	ldrhi	r2, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   14e10:	4649      	mov	r1, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2714
					cc = fp->fs->csize - csect;
   14e12:	bf88      	it	hi
   14e14:	1a9e      	subhi	r6, r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2715
				if (disk_write(fp->fs->drv, wbuff, sect, cc))
   14e16:	b2f3      	uxtb	r3, r6
   14e18:	463a      	mov	r2, r7
   14e1a:	f89a 0001 	ldrb.w	r0, [sl, #1]
   14e1e:	f7fe f892 	bl	12f46 <disk_write>
   14e22:	2800      	cmp	r0, #0
   14e24:	d1c3      	bne.n	14dae <f_write+0xb0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2724
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
   14e26:	69a1      	ldr	r1, [r4, #24]
   14e28:	1bc9      	subs	r1, r1, r7
   14e2a:	428e      	cmp	r6, r1
   14e2c:	d90a      	bls.n	14e44 <f_write+0x146>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2725
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
   14e2e:	f44f 7200 	mov.w	r2, #512	; 0x200
   14e32:	eb09 2141 	add.w	r1, r9, r1, lsl #9
   14e36:	9801      	ldr	r0, [sp, #4]
   14e38:	f7fe fecb 	bl	13bd2 <mem_cpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2726
					fp->flag &= ~FA__DIRTY;
   14e3c:	79a3      	ldrb	r3, [r4, #6]
   14e3e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   14e42:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2730
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
   14e44:	0276      	lsls	r6, r6, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2676
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
   14e46:	68a3      	ldr	r3, [r4, #8]
   14e48:	44b1      	add	r9, r6
   14e4a:	4433      	add	r3, r6
   14e4c:	60a3      	str	r3, [r4, #8]
   14e4e:	f8db 3000 	ldr.w	r3, [fp]
   14e52:	eba8 0806 	sub.w	r8, r8, r6
   14e56:	4433      	add	r3, r6
   14e58:	f8cb 3000 	str.w	r3, [fp]
   14e5c:	e779      	b.n	14d52 <f_write+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2739
			if (fp->dsect != sect) {		/* Fill sector cache with file data */
   14e5e:	69a3      	ldr	r3, [r4, #24]
   14e60:	429f      	cmp	r7, r3
   14e62:	d00c      	beq.n	14e7e <f_write+0x180>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2740
				if (fp->fptr < fp->fsize &&
   14e64:	68a2      	ldr	r2, [r4, #8]
   14e66:	68e3      	ldr	r3, [r4, #12]
   14e68:	429a      	cmp	r2, r3
   14e6a:	d208      	bcs.n	14e7e <f_write+0x180>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2741 (discriminator 1)
					disk_read(fp->fs->drv, fp->buf, sect, 1))
   14e6c:	2301      	movs	r3, #1
   14e6e:	463a      	mov	r2, r7
   14e70:	9901      	ldr	r1, [sp, #4]
   14e72:	f89a 0001 	ldrb.w	r0, [sl, #1]
   14e76:	f7fe f84a 	bl	12f0e <disk_read>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2740 (discriminator 1)
				if (fp->fptr < fp->fsize &&
   14e7a:	2800      	cmp	r0, #0
   14e7c:	d197      	bne.n	14dae <f_write+0xb0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2745
			fp->dsect = sect;
   14e7e:	61a7      	str	r7, [r4, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   14e80:	68a0      	ldr	r0, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   14e82:	4649      	mov	r1, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2747
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
   14e84:	f3c0 0008 	ubfx	r0, r0, #0, #9
   14e88:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   14e8c:	4546      	cmp	r6, r8
   14e8e:	bf28      	it	cs
   14e90:	4646      	movcs	r6, r8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2755
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
   14e92:	3024      	adds	r0, #36	; 0x24
   14e94:	4632      	mov	r2, r6
   14e96:	4420      	add	r0, r4
   14e98:	f7fe fe9b 	bl	13bd2 <mem_cpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2756
		fp->flag |= FA__DIRTY;
   14e9c:	79a3      	ldrb	r3, [r4, #6]
   14e9e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   14ea2:	71a3      	strb	r3, [r4, #6]
   14ea4:	e7cf      	b.n	14e46 <f_write+0x148>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2760 (discriminator 1)
	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
   14ea6:	60e3      	str	r3, [r4, #12]
   14ea8:	e75b      	b.n	14d62 <f_write+0x64>

00014eaa <f_sync>:
f_sync():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2776
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
   14eaa:	b570      	push	{r4, r5, r6, lr}
   14eac:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2782
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
   14eae:	f7ff f891 	bl	13fd4 <validate>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2783
	if (res == FR_OK) {
   14eb2:	4605      	mov	r5, r0
   14eb4:	2800      	cmp	r0, #0
   14eb6:	d138      	bne.n	14f2a <f_sync+0x80>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2784
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
   14eb8:	79a3      	ldrb	r3, [r4, #6]
   14eba:	069a      	lsls	r2, r3, #26
   14ebc:	d535      	bpl.n	14f2a <f_sync+0x80>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2787
			/* Write-back dirty buffer */
#if !_FS_TINY
			if (fp->flag & FA__DIRTY) {
   14ebe:	065b      	lsls	r3, r3, #25
   14ec0:	d513      	bpl.n	14eea <f_sync+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2788
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   14ec2:	6820      	ldr	r0, [r4, #0]
   14ec4:	2301      	movs	r3, #1
   14ec6:	69a2      	ldr	r2, [r4, #24]
   14ec8:	f104 0124 	add.w	r1, r4, #36	; 0x24
   14ecc:	7840      	ldrb	r0, [r0, #1]
   14ece:	f7fe f83a 	bl	12f46 <disk_write>
   14ed2:	b130      	cbz	r0, 14ee2 <f_sync+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2789
					LEAVE_FF(fp->fs, FR_DISK_ERR);
   14ed4:	2101      	movs	r1, #1
   14ed6:	6820      	ldr	r0, [r4, #0]
   14ed8:	f7ff f899 	bl	1400e <unlock_fs>
   14edc:	2501      	movs	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2811
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
   14ede:	4628      	mov	r0, r5
   14ee0:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2790
				fp->flag &= ~FA__DIRTY;
   14ee2:	79a3      	ldrb	r3, [r4, #6]
   14ee4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   14ee8:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2794
			res = move_window(fp->fs, fp->dir_sect);
   14eea:	69e1      	ldr	r1, [r4, #28]
   14eec:	6820      	ldr	r0, [r4, #0]
   14eee:	f7fe ff23 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2795
			if (res == FR_OK) {
   14ef2:	4605      	mov	r5, r0
   14ef4:	b9c8      	cbnz	r0, 14f2a <f_sync+0x80>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2796
				dir = fp->dir_ptr;
   14ef6:	6a26      	ldr	r6, [r4, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2797
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
   14ef8:	7af3      	ldrb	r3, [r6, #11]
   14efa:	f043 0320 	orr.w	r3, r3, #32
   14efe:	72f3      	strb	r3, [r6, #11]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2798
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
   14f00:	68e3      	ldr	r3, [r4, #12]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   14f02:	61f3      	str	r3, [r6, #28]
f_sync():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2799
				st_clust(dir, fp->sclust);					/* Update start cluster */
   14f04:	6923      	ldr	r3, [r4, #16]
st_clust():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1292
	ST_WORD(dir+DIR_FstClusLO, cl);
   14f06:	8373      	strh	r3, [r6, #26]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:1293
	ST_WORD(dir+DIR_FstClusHI, cl >> 16);
   14f08:	0c1b      	lsrs	r3, r3, #16
   14f0a:	82b3      	strh	r3, [r6, #20]
f_sync():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2800
				tm = get_fattime();							/* Update updated time */
   14f0c:	f7fe fe38 	bl	13b80 <get_fattime>
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   14f10:	8275      	strh	r5, [r6, #18]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   14f12:	f8c6 0016 	str.w	r0, [r6, #22]
f_sync():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   14f16:	79a3      	ldrb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   14f18:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2803
				fp->flag &= ~FA__WRITTEN;
   14f1a:	f023 0320 	bic.w	r3, r3, #32
   14f1e:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2804
				fp->fs->wflag = 1;
   14f20:	2301      	movs	r3, #1
   14f22:	7103      	strb	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2805
				res = sync_fs(fp->fs);
   14f24:	f7fe fece 	bl	13cc4 <sync_fs>
   14f28:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2810
	LEAVE_FF(fp->fs, res);
   14f2a:	4629      	mov	r1, r5
   14f2c:	6820      	ldr	r0, [r4, #0]
   14f2e:	f7ff f86e 	bl	1400e <unlock_fs>
   14f32:	e7d4      	b.n	14ede <f_sync+0x34>

00014f34 <f_close>:
f_close():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2825
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
   14f34:	b538      	push	{r3, r4, r5, lr}
   14f36:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2830
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
   14f38:	f7ff ffb7 	bl	14eaa <f_sync>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2831
	if (res == FR_OK)
   14f3c:	4604      	mov	r4, r0
   14f3e:	b948      	cbnz	r0, 14f54 <f_close+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2834
#endif
	{
		res = validate(fp);				/* Lock volume */
   14f40:	4628      	mov	r0, r5
   14f42:	f7ff f847 	bl	13fd4 <validate>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2835
		if (res == FR_OK) {
   14f46:	4604      	mov	r4, r0
   14f48:	b920      	cbnz	r0, 14f54 <f_close+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2837
#if _FS_REENTRANT
			FATFS *fs = fp->fs;
   14f4a:	6828      	ldr	r0, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2845
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
#if _FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   14f4c:	4621      	mov	r1, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2843
				fp->fs = 0;				/* Invalidate file object */
   14f4e:	602c      	str	r4, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2845
			unlock_fs(fs, FR_OK);		/* Unlock volume */
   14f50:	f7ff f85d 	bl	1400e <unlock_fs>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2850
#endif
		}
	}
	return res;
}
   14f54:	4620      	mov	r0, r4
   14f56:	bd38      	pop	{r3, r4, r5, pc}

00014f58 <f_lseek>:
f_lseek():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:2998

FRESULT f_lseek (
	FIL* fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
   14f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14f5a:	4604      	mov	r4, r0
   14f5c:	460e      	mov	r6, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3002
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
   14f5e:	f7ff f839 	bl	13fd4 <validate>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3003
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
   14f62:	4605      	mov	r5, r0
   14f64:	b110      	cbz	r0, 14f6c <f_lseek+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3130
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
   14f66:	4629      	mov	r1, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3142
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
   14f68:	6820      	ldr	r0, [r4, #0]
   14f6a:	e06a      	b.n	15042 <f_lseek+0xea>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3004
	if (fp->err)						/* Check error */
   14f6c:	79e1      	ldrb	r1, [r4, #7]
   14f6e:	b129      	cbz	r1, 14f7c <f_lseek+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3005
		LEAVE_FF(fp->fs, (FRESULT)fp->err);
   14f70:	6820      	ldr	r0, [r4, #0]
   14f72:	f7ff f84c 	bl	1400e <unlock_fs>
   14f76:	79e5      	ldrb	r5, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3143
}
   14f78:	4628      	mov	r0, r5
   14f7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3068
		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
   14f7c:	68e3      	ldr	r3, [r4, #12]
   14f7e:	42b3      	cmp	r3, r6
   14f80:	d204      	bcs.n	14f8c <f_lseek+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3070
			 && !(fp->flag & FA_WRITE)
   14f82:	79a2      	ldrb	r2, [r4, #6]
   14f84:	f012 0f02 	tst.w	r2, #2
   14f88:	bf08      	it	eq
   14f8a:	461e      	moveq	r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   14f8c:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3074
		ifptr = fp->fptr;
   14f8e:	68a3      	ldr	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   14f90:	60a2      	str	r2, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3076
		if (ofs) {
   14f92:	2e00      	cmp	r6, #0
   14f94:	d130      	bne.n	14ff8 <f_lseek+0xa0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   14f96:	68a3      	ldr	r3, [r4, #8]
   14f98:	68e2      	ldr	r2, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   14f9a:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3135
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
   14f9c:	4293      	cmp	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3136
			fp->fsize = fp->fptr;
   14f9e:	bf81      	itttt	hi
   14fa0:	60e3      	strhi	r3, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3137
			fp->flag |= FA__WRITTEN;
   14fa2:	79a3      	ldrbhi	r3, [r4, #6]
   14fa4:	f043 0320 	orrhi.w	r3, r3, #32
   14fa8:	71a3      	strbhi	r3, [r4, #6]
   14faa:	e7dd      	b.n	14f68 <f_lseek+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3075
		fp->fptr = nsect = 0;
   14fac:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3120
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
   14fae:	68a3      	ldr	r3, [r4, #8]
   14fb0:	f3c3 0308 	ubfx	r3, r3, #0, #9
   14fb4:	2b00      	cmp	r3, #0
   14fb6:	d0ee      	beq.n	14f96 <f_lseek+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3120 (discriminator 1)
   14fb8:	69a2      	ldr	r2, [r4, #24]
   14fba:	4296      	cmp	r6, r2
   14fbc:	d0eb      	beq.n	14f96 <f_lseek+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3123
			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
   14fbe:	79a3      	ldrb	r3, [r4, #6]
   14fc0:	f104 0724 	add.w	r7, r4, #36	; 0x24
   14fc4:	f013 0f40 	tst.w	r3, #64	; 0x40
   14fc8:	d00b      	beq.n	14fe2 <f_lseek+0x8a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3124
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1))
   14fca:	6820      	ldr	r0, [r4, #0]
   14fcc:	2301      	movs	r3, #1
   14fce:	4639      	mov	r1, r7
   14fd0:	7840      	ldrb	r0, [r0, #1]
   14fd2:	f7fd ffb8 	bl	12f46 <disk_write>
   14fd6:	2800      	cmp	r0, #0
   14fd8:	d142      	bne.n	15060 <f_lseek+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3126
				fp->flag &= ~FA__DIRTY;
   14fda:	79a3      	ldrb	r3, [r4, #6]
   14fdc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   14fe0:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3129
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1))	/* Fill sector cache */
   14fe2:	6820      	ldr	r0, [r4, #0]
   14fe4:	2301      	movs	r3, #1
   14fe6:	4632      	mov	r2, r6
   14fe8:	4639      	mov	r1, r7
   14fea:	7840      	ldrb	r0, [r0, #1]
   14fec:	f7fd ff8f 	bl	12f0e <disk_read>
   14ff0:	2800      	cmp	r0, #0
   14ff2:	d135      	bne.n	15060 <f_lseek+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3132
			fp->dsect = nsect;
   14ff4:	61a6      	str	r6, [r4, #24]
   14ff6:	e7ce      	b.n	14f96 <f_lseek+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3077
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
   14ff8:	6820      	ldr	r0, [r4, #0]
   14ffa:	7887      	ldrb	r7, [r0, #2]
   14ffc:	027f      	lsls	r7, r7, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3078
			if (ifptr > 0 &&
   14ffe:	b31b      	cbz	r3, 15048 <f_lseek+0xf0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3079 (discriminator 1)
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
   15000:	3b01      	subs	r3, #1
   15002:	1e72      	subs	r2, r6, #1
   15004:	fbb2 f2f7 	udiv	r2, r2, r7
   15008:	fbb3 f1f7 	udiv	r1, r3, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3078 (discriminator 1)
			if (ifptr > 0 &&
   1500c:	428a      	cmp	r2, r1
   1500e:	d31b      	bcc.n	15048 <f_lseek+0xf0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   15010:	427a      	negs	r2, r7
   15012:	4013      	ands	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3082
				clst = fp->clust;
   15014:	6961      	ldr	r1, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3080
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
   15016:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3081
				ofs -= fp->fptr;
   15018:	1af6      	subs	r6, r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3095
			if (clst != 0) {
   1501a:	2900      	cmp	r1, #0
   1501c:	d0c6      	beq.n	14fac <f_lseek+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3096
				while (ofs > bcs) {						/* Cluster following loop */
   1501e:	42be      	cmp	r6, r7
   15020:	d823      	bhi.n	1506a <f_lseek+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3112
				fp->fptr += ofs;
   15022:	68a3      	ldr	r3, [r4, #8]
   15024:	4433      	add	r3, r6
   15026:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3113
				if (ofs % SS(fp->fs)) {
   15028:	f3c6 0308 	ubfx	r3, r6, #0, #9
   1502c:	2b00      	cmp	r3, #0
   1502e:	d0bd      	beq.n	14fac <f_lseek+0x54>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3114
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
   15030:	6822      	ldr	r2, [r4, #0]
   15032:	4610      	mov	r0, r2
   15034:	f7fe fff8 	bl	14028 <clust2sect>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3115
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
   15038:	bb90      	cbnz	r0, 150a0 <f_lseek+0x148>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3115 (discriminator 1)
   1503a:	2502      	movs	r5, #2
   1503c:	4610      	mov	r0, r2
   1503e:	4629      	mov	r1, r5
   15040:	71e5      	strb	r5, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3142
	LEAVE_FF(fp->fs, res);
   15042:	f7fe ffe4 	bl	1400e <unlock_fs>
   15046:	e797      	b.n	14f78 <f_lseek+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3084
				clst = fp->sclust;						/* start from the first cluster */
   15048:	6921      	ldr	r1, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3086
				if (clst == 0) {						/* If no cluster chain, create a new chain */
   1504a:	b961      	cbnz	r1, 15066 <f_lseek+0x10e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   1504c:	f7ff f8f3 	bl	14236 <create_chain>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   15050:	2801      	cmp	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3087
					clst = create_chain(fp->fs, 0);
   15052:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3088
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
   15054:	d102      	bne.n	1505c <f_lseek+0x104>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 3)
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   15056:	2502      	movs	r5, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   15058:	71e5      	strb	r5, [r4, #7]
   1505a:	e784      	b.n	14f66 <f_lseek+0xe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3089
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   1505c:	3001      	adds	r0, #1
   1505e:	d101      	bne.n	15064 <f_lseek+0x10c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3130
				ABORT(fp->fs, FR_DISK_ERR);
   15060:	2501      	movs	r5, #1
   15062:	e7f9      	b.n	15058 <f_lseek+0x100>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3090
					fp->sclust = clst;
   15064:	6121      	str	r1, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3093
				fp->clust = clst;
   15066:	6161      	str	r1, [r4, #20]
   15068:	e7d7      	b.n	1501a <f_lseek+0xc2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   1506a:	79a3      	ldrb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   1506c:	6820      	ldr	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3098
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
   1506e:	079a      	lsls	r2, r3, #30
   15070:	d505      	bpl.n	1507e <f_lseek+0x126>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3099
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
   15072:	f7ff f8e0 	bl	14236 <create_chain>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3100
						if (clst == 0) {				/* When disk gets full, clip file size */
   15076:	4601      	mov	r1, r0
   15078:	b920      	cbnz	r0, 15084 <f_lseek+0x12c>
   1507a:	463e      	mov	r6, r7
   1507c:	e7d1      	b.n	15022 <f_lseek+0xca>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3105
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
   1507e:	f7fe ffde 	bl	1403e <get_fat>
   15082:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3106
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
   15084:	1c4b      	adds	r3, r1, #1
   15086:	d0eb      	beq.n	15060 <f_lseek+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3107
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
   15088:	2901      	cmp	r1, #1
   1508a:	d9e4      	bls.n	15056 <f_lseek+0xfe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3107 (discriminator 2)
   1508c:	6823      	ldr	r3, [r4, #0]
   1508e:	699b      	ldr	r3, [r3, #24]
   15090:	4299      	cmp	r1, r3
   15092:	d2e0      	bcs.n	15056 <f_lseek+0xfe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   15094:	68a3      	ldr	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3108
					fp->clust = clst;
   15096:	6161      	str	r1, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3109
					fp->fptr += bcs;
   15098:	443b      	add	r3, r7
   1509a:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3110
					ofs -= bcs;
   1509c:	1bf6      	subs	r6, r6, r7
   1509e:	e7be      	b.n	1501e <f_lseek+0xc6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3116
					nsect += ofs / SS(fp->fs);
   150a0:	eb00 2656 	add.w	r6, r0, r6, lsr #9
   150a4:	e783      	b.n	14fae <f_lseek+0x56>

000150a6 <f_getfree>:
f_getfree():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3322
FRESULT f_getfree (
	const TCHAR* path,	/* Path name of the logical drive number */
	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
)
{
   150a6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   150aa:	4614      	mov	r4, r2
   150ac:	ab02      	add	r3, sp, #8
   150ae:	f843 0d04 	str.w	r0, [r3, #-4]!
   150b2:	4688      	mov	r8, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3331
	UINT i;
	BYTE fat, *p;


	/* Get logical drive number */
	res = find_volume(fatfs, &path, 0);
   150b4:	4620      	mov	r0, r4
   150b6:	2200      	movs	r2, #0
   150b8:	4619      	mov	r1, r3
   150ba:	f7fe fe7d 	bl	13db8 <find_volume>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3332
	fs = *fatfs;
   150be:	6824      	ldr	r4, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3333
	if (res == FR_OK) {
   150c0:	4605      	mov	r5, r0
   150c2:	b930      	cbnz	r0, 150d2 <f_getfree+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3335
		/* If free_clust is valid, return it without full cluster scan */
		if (fs->free_clust <= fs->n_fatent - 2) {
   150c4:	69a7      	ldr	r7, [r4, #24]
   150c6:	6963      	ldr	r3, [r4, #20]
   150c8:	1eba      	subs	r2, r7, #2
   150ca:	4293      	cmp	r3, r2
   150cc:	d809      	bhi.n	150e2 <f_getfree+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3336
			*nclst = fs->free_clust;
   150ce:	f8c8 3000 	str.w	r3, [r8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3374
			fs->free_clust = n;
			fs->fsi_flag |= 1;
			*nclst = n;
		}
	}
	LEAVE_FF(fs, res);
   150d2:	4620      	mov	r0, r4
   150d4:	4629      	mov	r1, r5
   150d6:	f7fe ff9a 	bl	1400e <unlock_fs>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3375
}
   150da:	4628      	mov	r0, r5
   150dc:	b002      	add	sp, #8
   150de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3339
			fat = fs->fs_type;
   150e2:	f894 9000 	ldrb.w	r9, [r4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3341
			if (fat == FS_FAT12) {
   150e6:	f1b9 0f01 	cmp.w	r9, #1
   150ea:	d117      	bne.n	1511c <f_getfree+0x76>
   150ec:	2702      	movs	r7, #2
   150ee:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3344
					stat = get_fat(fs, clst);
   150f0:	4639      	mov	r1, r7
   150f2:	4620      	mov	r0, r4
   150f4:	f7fe ffa3 	bl	1403e <get_fat>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   150f8:	1c43      	adds	r3, r0, #1
   150fa:	d032      	beq.n	15162 <f_getfree+0xbc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   150fc:	2801      	cmp	r0, #1
   150fe:	d032      	beq.n	15166 <f_getfree+0xc0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3347
					if (stat == 0) n++;
   15100:	b900      	cbnz	r0, 15104 <f_getfree+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3347 (discriminator 1)
   15102:	3601      	adds	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3348
				} while (++clst < fs->n_fatent);
   15104:	69a3      	ldr	r3, [r4, #24]
   15106:	3701      	adds	r7, #1
   15108:	429f      	cmp	r7, r3
   1510a:	d3f1      	bcc.n	150f0 <f_getfree+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   1510c:	7963      	ldrb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3369
			fs->free_clust = n;
   1510e:	6166      	str	r6, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3370
			fs->fsi_flag |= 1;
   15110:	f043 0301 	orr.w	r3, r3, #1
   15114:	7163      	strb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3371
			*nclst = n;
   15116:	f8c8 6000 	str.w	r6, [r8]
   1511a:	e7da      	b.n	150d2 <f_getfree+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3352
				i = 0; p = 0;
   1511c:	4603      	mov	r3, r0
   1511e:	4602      	mov	r2, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3340
			n = 0;
   15120:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3351
				sect = fs->fatbase;
   15122:	6a61      	ldr	r1, [r4, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3354
					if (!i) {
   15124:	b952      	cbnz	r2, 1513c <f_getfree+0x96>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   15126:	4620      	mov	r0, r4
   15128:	f101 0a01 	add.w	sl, r1, #1
   1512c:	f7fe fe04 	bl	13d38 <move_window>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3356
						if (res != FR_OK) break;
   15130:	b9d8      	cbnz	r0, 1516a <f_getfree+0xc4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   15132:	4651      	mov	r1, sl
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3358
						i = SS(fs);
   15134:	f44f 7200 	mov.w	r2, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3357
						p = fs->win;
   15138:	f104 0334 	add.w	r3, r4, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3360
					if (fat == FS_FAT16) {
   1513c:	f1b9 0f02 	cmp.w	r9, #2
   15140:	d107      	bne.n	15152 <f_getfree+0xac>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3361
						if (LD_WORD(p) == 0) n++;
   15142:	8818      	ldrh	r0, [r3, #0]
   15144:	b900      	cbnz	r0, 15148 <f_getfree+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3361 (discriminator 1)
   15146:	3601      	adds	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3362
						p += 2; i -= 2;
   15148:	3302      	adds	r3, #2
   1514a:	3a02      	subs	r2, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3367
				} while (--clst);
   1514c:	3f01      	subs	r7, #1
   1514e:	d1e9      	bne.n	15124 <f_getfree+0x7e>
   15150:	e7dc      	b.n	1510c <f_getfree+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   15152:	6818      	ldr	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   15154:	3a04      	subs	r2, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3364
						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
   15156:	f030 4070 	bics.w	r0, r0, #4026531840	; 0xf0000000
   1515a:	bf08      	it	eq
   1515c:	3601      	addeq	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3365
						p += 4; i -= 4;
   1515e:	3304      	adds	r3, #4
   15160:	e7f4      	b.n	1514c <f_getfree+0xa6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3345
					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
   15162:	2501      	movs	r5, #1
   15164:	e7d2      	b.n	1510c <f_getfree+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3346
					if (stat == 1) { res = FR_INT_ERR; break; }
   15166:	2502      	movs	r5, #2
   15168:	e7d0      	b.n	1510c <f_getfree+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3355
						res = move_window(fs, sect++);
   1516a:	4605      	mov	r5, r0
   1516c:	e7ce      	b.n	1510c <f_getfree+0x66>
   1516e:	Address 0x000000000001516e is out of bounds.


00015170 <f_mkfs>:
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3981
FRESULT f_mkfs (
	const TCHAR* path,	/* Logical drive number */
	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
	UINT au				/* Allocation unit [bytes] */
)
{
   15170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15174:	b089      	sub	sp, #36	; 0x24
   15176:	ab08      	add	r3, sp, #32
   15178:	f843 0d0c 	str.w	r0, [r3, #-12]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3995
	FATFS *fs;
	DSTATUS stat;


	/* Check mounted drive and clear work area */
	vol = get_ldnumber(&path);
   1517c:	4618      	mov	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3981
{
   1517e:	460e      	mov	r6, r1
   15180:	4615      	mov	r5, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3995
	vol = get_ldnumber(&path);
   15182:	f7fe fd58 	bl	13c36 <get_ldnumber>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   15186:	2800      	cmp	r0, #0
   15188:	f2c0 81f7 	blt.w	1557a <f_mkfs+0x40a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   1518c:	2e01      	cmp	r6, #1
   1518e:	f200 81f6 	bhi.w	1557e <f_mkfs+0x40e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3998
	if (au & (au - 1)) return FR_INVALID_PARAMETER;
   15192:	1e6b      	subs	r3, r5, #1
   15194:	402b      	ands	r3, r5
   15196:	9302      	str	r3, [sp, #8]
   15198:	f040 81f1 	bne.w	1557e <f_mkfs+0x40e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3999
	fs = FatFs[vol];
   1519c:	4b50      	ldr	r3, [pc, #320]	; (152e0 <f_mkfs+0x170>)
   1519e:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   151a2:	2c00      	cmp	r4, #0
   151a4:	f000 81ed 	beq.w	15582 <f_mkfs+0x412>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   151a8:	f89d 3008 	ldrb.w	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4002
	pdrv = LD2PD(vol);	/* Physical drive */
   151ac:	b2c7      	uxtb	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4001
	fs->fs_type = 0;
   151ae:	7023      	strb	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4006
	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/

	/* Get disk statics */
	stat = disk_initialize(pdrv);
   151b0:	4638      	mov	r0, r7
   151b2:	f7fd fe91 	bl	12ed8 <disk_initialize>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   151b6:	07c2      	lsls	r2, r0, #31
   151b8:	f100 81e5 	bmi.w	15586 <f_mkfs+0x416>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   151bc:	0743      	lsls	r3, r0, #29
   151be:	f100 81e4 	bmi.w	1558a <f_mkfs+0x41a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4023
		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
		b_vol = LD_DWORD(tbl+8);	/* Volume start sector */
		n_vol = LD_DWORD(tbl+12);	/* Volume size */
	} else {
		/* Create a partition in this function */
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   151c2:	aa07      	add	r2, sp, #28
   151c4:	2101      	movs	r1, #1
   151c6:	4638      	mov	r0, r7
   151c8:	f7fd fed9 	bl	12f7e <disk_ioctl>
   151cc:	b118      	cbz	r0, 151d6 <f_mkfs+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4024
			return FR_DISK_ERR;
   151ce:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4212
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
	}

	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
}
   151d0:	b009      	add	sp, #36	; 0x24
   151d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4023 (discriminator 1)
		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
   151d6:	9907      	ldr	r1, [sp, #28]
   151d8:	297f      	cmp	r1, #127	; 0x7f
   151da:	d9f8      	bls.n	151ce <f_mkfs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4025
		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
   151dc:	2e00      	cmp	r6, #0
   151de:	bf14      	ite	ne
   151e0:	f04f 0a00 	movne.w	sl, #0
   151e4:	f04f 0a3f 	moveq.w	sl, #63	; 0x3f
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4026
		n_vol -= b_vol;				/* Volume size */
   151e8:	eba1 010a 	sub.w	r1, r1, sl
   151ec:	9107      	str	r1, [sp, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4029
	if (!au) {				/* AU auto selection */
   151ee:	b95d      	cbnz	r5, 15208 <f_mkfs+0x98>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4030
		vs = n_vol / (2000 / (SS(fs) / 512));
   151f0:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
   151f4:	fbb1 f3f3 	udiv	r3, r1, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4031
		for (i = 0; vs < vst[i]; i++) ;
   151f8:	483a      	ldr	r0, [pc, #232]	; (152e4 <f_mkfs+0x174>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 1)
   151fa:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
   151fe:	4293      	cmp	r3, r2
   15200:	d318      	bcc.n	15234 <f_mkfs+0xc4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4032
		au = cst[i];
   15202:	4b39      	ldr	r3, [pc, #228]	; (152e8 <f_mkfs+0x178>)
   15204:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   15208:	0a6d      	lsrs	r5, r5, #9
   1520a:	d015      	beq.n	15238 <f_mkfs+0xc8>
   1520c:	2d80      	cmp	r5, #128	; 0x80
   1520e:	bf28      	it	cs
   15210:	2580      	movcs	r5, #128	; 0x80
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4039
	n_clst = n_vol / au;
   15212:	fbb1 f3f5 	udiv	r3, r1, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   15216:	f640 72f5 	movw	r2, #4085	; 0xff5
   1521a:	4293      	cmp	r3, r2
   1521c:	f240 81f8 	bls.w	15610 <f_mkfs+0x4a0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   15220:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   15224:	4293      	cmp	r3, r2
   15226:	f200 81b2 	bhi.w	1558e <f_mkfs+0x41e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   1522a:	3302      	adds	r3, #2
   1522c:	005b      	lsls	r3, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4041
	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
   1522e:	f04f 0802 	mov.w	r8, #2
   15232:	e1f4      	b.n	1561e <f_mkfs+0x4ae>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4031 (discriminator 3)
		for (i = 0; vs < vst[i]; i++) ;
   15234:	3501      	adds	r5, #1
   15236:	e7e0      	b.n	151fa <f_mkfs+0x8a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4035
	if (au == 0) au = 1;
   15238:	2501      	movs	r5, #1
   1523a:	e7ea      	b.n	15212 <f_mkfs+0xa2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4061
	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
   1523c:	aa06      	add	r2, sp, #24
   1523e:	2103      	movs	r1, #3
   15240:	4638      	mov	r0, r7
   15242:	f7fd fe9c 	bl	12f7e <disk_ioctl>
   15246:	b920      	cbnz	r0, 15252 <f_mkfs+0xe2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 2)
   15248:	9b06      	ldr	r3, [sp, #24]
   1524a:	3b01      	subs	r3, #1
   1524c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   15250:	d301      	bcc.n	15256 <f_mkfs+0xe6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4061 (discriminator 5)
   15252:	2301      	movs	r3, #1
   15254:	9306      	str	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   15256:	9a06      	ldr	r2, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   15258:	f1b8 0f03 	cmp.w	r8, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4062
	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
   1525c:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   15260:	444b      	add	r3, r9
   15262:	f1c2 0200 	rsb	r2, r2, #0
   15266:	ea03 0302 	and.w	r3, r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4063
	n = (n - b_data) / N_FATS;
   1526a:	eba3 0309 	sub.w	r3, r3, r9
   1526e:	9306      	str	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4064
	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
   15270:	d122      	bne.n	152b8 <f_mkfs+0x148>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   15272:	9a01      	ldr	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4065
		n_rsv += n;
   15274:	449b      	add	fp, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4066
		b_fat += n;
   15276:	441a      	add	r2, r3
   15278:	9201      	str	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   1527a:	9a07      	ldr	r2, [sp, #28]
   1527c:	9900      	ldr	r1, [sp, #0]
   1527e:	eba2 030b 	sub.w	r3, r2, fp
   15282:	1a5b      	subs	r3, r3, r1
   15284:	9903      	ldr	r1, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   15286:	f1b8 0f02 	cmp.w	r8, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4072
	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
   1528a:	eba3 0301 	sub.w	r3, r3, r1
   1528e:	fbb3 f3f5 	udiv	r3, r3, r5
   15292:	9304      	str	r3, [sp, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4073
	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
   15294:	d114      	bne.n	152c0 <f_mkfs+0x150>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4073 (discriminator 1)
   15296:	f640 73f5 	movw	r3, #4085	; 0xff5
   1529a:	9904      	ldr	r1, [sp, #16]
   1529c:	4299      	cmp	r1, r3
   1529e:	f240 81d5 	bls.w	1564c <f_mkfs+0x4dc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4084
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   152a2:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   152a6:	bf34      	ite	cc
   152a8:	f04f 0904 	movcc.w	r9, #4
   152ac:	f04f 0906 	movcs.w	r9, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   152b0:	b34e      	cbz	r6, 15306 <f_mkfs+0x196>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   152b2:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   152b6:	e05d      	b.n	15374 <f_mkfs+0x204>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4068
		n_fat += n;
   152b8:	9a00      	ldr	r2, [sp, #0]
   152ba:	441a      	add	r2, r3
   152bc:	9200      	str	r2, [sp, #0]
   152be:	e7dc      	b.n	1527a <f_mkfs+0x10a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4074
		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
   152c0:	f1b8 0f03 	cmp.w	r8, #3
   152c4:	d112      	bne.n	152ec <f_mkfs+0x17c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4074 (discriminator 1)
   152c6:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   152ca:	9a04      	ldr	r2, [sp, #16]
   152cc:	429a      	cmp	r2, r3
   152ce:	f240 81bd 	bls.w	1564c <f_mkfs+0x4dc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4096
		if (sfd) {	/* No partition table (SFD) */
   152d2:	2e00      	cmp	r6, #0
   152d4:	f040 8167 	bne.w	155a6 <f_mkfs+0x436>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4079
		sys = 0x0C;		/* FAT32X */
   152d8:	f04f 090c 	mov.w	r9, #12
   152dc:	e013      	b.n	15306 <f_mkfs+0x196>
   152de:	bf00      	nop
   152e0:	2007c4e4 	.word	0x2007c4e4
   152e4:	000204d0 	.word	0x000204d0
   152e8:	00020476 	.word	0x00020476
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4081
		if (fmt == FS_FAT12 && n_vol < 0x10000) {
   152ec:	f1b8 0f01 	cmp.w	r8, #1
   152f0:	d1d7      	bne.n	152a2 <f_mkfs+0x132>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4084 (discriminator 1)
			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
   152f2:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
   152f6:	bf34      	ite	cc
   152f8:	f04f 0901 	movcc.w	r9, #1
   152fc:	f04f 0906 	movcs.w	r9, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4096 (discriminator 1)
		if (sfd) {	/* No partition table (SFD) */
   15300:	2e00      	cmp	r6, #0
   15302:	f040 816b 	bne.w	155dc <f_mkfs+0x46c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4099
			mem_set(fs->win, 0, SS(fs));
   15306:	f104 0634 	add.w	r6, r4, #52	; 0x34
   1530a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1530e:	2100      	movs	r1, #0
   15310:	4630      	mov	r0, r6
   15312:	f7fe fc7a 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   15316:	21fe      	movs	r1, #254	; 0xfe
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   15318:	f643 60c1 	movw	r0, #16065	; 0x3ec1
   1531c:	f8dd e01c 	ldr.w	lr, [sp, #28]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4105
			tbl[5] = 254;					/* Partition end head */
   15320:	f884 11f7 	strb.w	r1, [r4, #503]	; 0x1f7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   15324:	eb0a 010e 	add.w	r1, sl, lr
   15328:	fbb1 f1f0 	udiv	r1, r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   1532c:	0888      	lsrs	r0, r1, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4106
			n = (b_vol + n_vol) / 63 / 255;
   1532e:	9106      	str	r1, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4108
			tbl[7] = (BYTE)n;				/* End cylinder */
   15330:	f884 11f9 	strb.w	r1, [r4, #505]	; 0x1f9
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   15334:	213f      	movs	r1, #63	; 0x3f
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   15336:	2301      	movs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   15338:	2200      	movs	r2, #0
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   1533a:	f8c4 11fa 	str.w	r1, [r4, #506]	; 0x1fa
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1533e:	f64a 2155 	movw	r1, #43605	; 0xaa55
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4107
			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
   15342:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   15346:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
   1534a:	f8a4 1232 	strh.w	r1, [r4, #562]	; 0x232
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4101
			tbl[1] = 1;						/* Partition start head */
   1534e:	f884 31f3 	strb.w	r3, [r4, #499]	; 0x1f3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4102
			tbl[2] = 1;						/* Partition start sector */
   15352:	f884 31f4 	strb.w	r3, [r4, #500]	; 0x1f4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4103
			tbl[3] = 0;						/* Partition start cylinder */
   15356:	f884 21f5 	strb.w	r2, [r4, #501]	; 0x1f5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4104
			tbl[4] = sys;					/* System type */
   1535a:	f884 91f6 	strb.w	r9, [r4, #502]	; 0x1f6
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1535e:	f8c4 e1fe 	str.w	lr, [r4, #510]	; 0x1fe
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4112
			if (disk_write(pdrv, fs->win, 0, 1))	/* Write it to the MBR */
   15362:	4631      	mov	r1, r6
   15364:	4638      	mov	r0, r7
   15366:	f7fd fdee 	bl	12f46 <disk_write>
   1536a:	2800      	cmp	r0, #0
   1536c:	f47f af2f 	bne.w	151ce <f_mkfs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4114
			md = 0xF8;
   15370:	f04f 09f8 	mov.w	r9, #248	; 0xf8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   15374:	f104 0634 	add.w	r6, r4, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   15378:	f44f 7200 	mov.w	r2, #512	; 0x200
   1537c:	2100      	movs	r1, #0
   1537e:	4630      	mov	r0, r6
   15380:	f7fe fc43 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   15384:	220b      	movs	r2, #11
   15386:	49b2      	ldr	r1, [pc, #712]	; (15650 <f_mkfs+0x4e0>)
   15388:	4630      	mov	r0, r6
   1538a:	f7fe fc22 	bl	13bd2 <mem_cpy>
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1538e:	f44f 7300 	mov.w	r3, #512	; 0x200
   15392:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   15396:	2301      	movs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   15398:	f1b8 0f03 	cmp.w	r8, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   1539c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   153a0:	9b02      	ldr	r3, [sp, #8]
   153a2:	bf18      	it	ne
   153a4:	f44f 7300 	movne.w	r3, #512	; 0x200
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   153a8:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   153ac:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4127
	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
   153b0:	9302      	str	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   153b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4134 (discriminator 4)
	tbl[BPB_Media] = md;					/* Media descriptor */
   153b6:	f884 9049 	strb.w	r9, [r4, #73]	; 0x49
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4128 (discriminator 4)
	ST_WORD(tbl+BPB_RootEntCnt, i);
   153ba:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
	if (n_vol < 0x10000) {					/* Number of total sectors */
   153be:	9b07      	ldr	r3, [sp, #28]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   153c0:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4129 (discriminator 4)
   153c4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4130 (discriminator 4)
		ST_WORD(tbl+BPB_TotSec16, n_vol);
   153c8:	bf34      	ite	cc
   153ca:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338 (discriminator 4)
   153ce:	6563      	strcs	r3, [r4, #84]	; 0x54
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337 (discriminator 4)
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   153d0:	233f      	movs	r3, #63	; 0x3f
   153d2:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   153d6:	23ff      	movs	r3, #255	; 0xff
   153d8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   153dc:	f7fe fbd0 	bl	13b80 <get_fattime>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   153e0:	f1b8 0f03 	cmp.w	r8, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4138 (discriminator 4)
	n = get_fattime();						/* Use current time as VSN */
   153e4:	9006      	str	r0, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4139 (discriminator 4)
	if (fmt == FS_FAT32) {
   153e6:	f040 809c 	bne.w	15522 <f_mkfs+0x3b2>
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   153ea:	9b00      	ldr	r3, [sp, #0]
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   153ec:	2213      	movs	r2, #19
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   153ee:	65a3      	str	r3, [r4, #88]	; 0x58
   153f0:	2302      	movs	r3, #2
   153f2:	6623      	str	r3, [r4, #96]	; 0x60
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   153f4:	2301      	movs	r3, #1
   153f6:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   153fa:	2306      	movs	r3, #6
   153fc:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4145
		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
   15400:	2380      	movs	r3, #128	; 0x80
   15402:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   15406:	2329      	movs	r3, #41	; 0x29
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   15408:	4992      	ldr	r1, [pc, #584]	; (15654 <f_mkfs+0x4e4>)
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1540a:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4146
		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
   1540e:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4147
		mem_cpy(tbl+BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
   15412:	f104 007b 	add.w	r0, r4, #123	; 0x7b
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   15416:	f7fe fbdc 	bl	13bd2 <mem_cpy>
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   1541a:	f64a 2355 	movw	r3, #43605	; 0xaa55
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4156
	if (disk_write(pdrv, tbl, b_vol, 1))	/* Write it to the VBR sector */
   1541e:	4652      	mov	r2, sl
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
   15420:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4156
   15424:	4631      	mov	r1, r6
   15426:	2301      	movs	r3, #1
   15428:	4638      	mov	r0, r7
   1542a:	f7fd fd8c 	bl	12f46 <disk_write>
   1542e:	2800      	cmp	r0, #0
   15430:	f47f aecd 	bne.w	151ce <f_mkfs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4158
	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR+6) */
   15434:	f1b8 0f03 	cmp.w	r8, #3
   15438:	d106      	bne.n	15448 <f_mkfs+0x2d8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4159
		disk_write(pdrv, tbl, b_vol + 6, 1);
   1543a:	2301      	movs	r3, #1
   1543c:	f10a 0206 	add.w	r2, sl, #6
   15440:	4631      	mov	r1, r6
   15442:	4638      	mov	r0, r7
   15444:	f7fd fd7f 	bl	12f46 <disk_write>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4164 (discriminator 1)
		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
   15448:	f44f 7200 	mov.w	r2, #512	; 0x200
   1544c:	2100      	movs	r1, #0
   1544e:	4630      	mov	r0, r6
   15450:	f7fe fbdb 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4166 (discriminator 1)
		if (fmt != FS_FAT32) {
   15454:	f1b8 0f03 	cmp.w	r8, #3
   15458:	d074      	beq.n	15544 <f_mkfs+0x3d4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4167
			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
   1545a:	f1b8 0f01 	cmp.w	r8, #1
   1545e:	4b7e      	ldr	r3, [pc, #504]	; (15658 <f_mkfs+0x4e8>)
   15460:	bf18      	it	ne
   15462:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   15466:	ea43 0309 	orr.w	r3, r3, r9
   1546a:	9306      	str	r3, [sp, #24]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   1546c:	6363      	str	r3, [r4, #52]	; 0x34
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4175
		if (disk_write(pdrv, tbl, wsect++, 1))
   1546e:	9b01      	ldr	r3, [sp, #4]
   15470:	4631      	mov	r1, r6
   15472:	f103 0901 	add.w	r9, r3, #1
   15476:	9a01      	ldr	r2, [sp, #4]
   15478:	2301      	movs	r3, #1
   1547a:	4638      	mov	r0, r7
   1547c:	f7fd fd63 	bl	12f46 <disk_write>
   15480:	4601      	mov	r1, r0
   15482:	2800      	cmp	r0, #0
   15484:	f47f aea3 	bne.w	151ce <f_mkfs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4177
		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
   15488:	f44f 7200 	mov.w	r2, #512	; 0x200
   1548c:	4630      	mov	r0, r6
   1548e:	f7fe fbbc 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4178
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   15492:	2301      	movs	r3, #1
   15494:	9306      	str	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 1)
   15496:	9b06      	ldr	r3, [sp, #24]
   15498:	9a00      	ldr	r2, [sp, #0]
   1549a:	429a      	cmp	r2, r3
   1549c:	d85d      	bhi.n	1555a <f_mkfs+0x3ea>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4185 (discriminator 2)
	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
   1549e:	9b03      	ldr	r3, [sp, #12]
   154a0:	464a      	mov	r2, r9
   154a2:	f1b8 0f03 	cmp.w	r8, #3
   154a6:	bf18      	it	ne
   154a8:	461d      	movne	r5, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4189 (discriminator 2)
	} while (--i);
   154aa:	444d      	add	r5, r9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   154ac:	2301      	movs	r3, #1
   154ae:	4631      	mov	r1, r6
   154b0:	4638      	mov	r0, r7
   154b2:	f102 0b01 	add.w	fp, r2, #1
   154b6:	f7fd fd46 	bl	12f46 <disk_write>
   154ba:	2800      	cmp	r0, #0
   154bc:	f47f ae87 	bne.w	151ce <f_mkfs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   154c0:	45ab      	cmp	fp, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4187
		if (disk_write(pdrv, tbl, wsect++, 1))
   154c2:	465a      	mov	r2, fp
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4189
	} while (--i);
   154c4:	d1f2      	bne.n	154ac <f_mkfs+0x33c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4201
	if (fmt == FS_FAT32) {
   154c6:	f1b8 0f03 	cmp.w	r8, #3
   154ca:	d121      	bne.n	15510 <f_mkfs+0x3a0>
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   154cc:	4b63      	ldr	r3, [pc, #396]	; (1565c <f_mkfs+0x4ec>)
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   154ce:	4631      	mov	r1, r6
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   154d0:	6363      	str	r3, [r4, #52]	; 0x34
   154d2:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   154d6:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   154da:	3320      	adds	r3, #32
   154dc:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   154e0:	9b04      	ldr	r3, [sp, #16]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   154e2:	4638      	mov	r0, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4204
		ST_DWORD(tbl+FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
   154e4:	3b01      	subs	r3, #1
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   154e6:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   154ea:	2302      	movs	r3, #2
   154ec:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   154f0:	f64a 2355 	movw	r3, #43605	; 0xaa55
   154f4:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4207
		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR+1) */
   154f8:	2301      	movs	r3, #1
   154fa:	eb0a 0203 	add.w	r2, sl, r3
   154fe:	f7fd fd22 	bl	12f46 <disk_write>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4208
		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR+7) */
   15502:	2301      	movs	r3, #1
   15504:	f10a 0207 	add.w	r2, sl, #7
   15508:	4631      	mov	r1, r6
   1550a:	4638      	mov	r0, r7
   1550c:	f7fd fd1b 	bl	12f46 <disk_write>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4211
	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
   15510:	2200      	movs	r2, #0
   15512:	4638      	mov	r0, r7
   15514:	4611      	mov	r1, r2
   15516:	f7fd fd32 	bl	12f7e <disk_ioctl>
   1551a:	3000      	adds	r0, #0
   1551c:	bf18      	it	ne
   1551e:	2001      	movne	r0, #1
   15520:	e656      	b.n	151d0 <f_mkfs+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4150
		ST_WORD(tbl+BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
   15522:	f8bd 3000 	ldrh.w	r3, [sp]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
static inline void ST_DWORD(void *p, DWORD val) { DWORD *wrdword = (DWORD*) p; *wrdword = val;   }
   15526:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4150
   1552a:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4151
		tbl[BS_DrvNum] = 0x80;				/* Drive number */
   1552e:	2380      	movs	r3, #128	; 0x80
   15530:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   15534:	2329      	movs	r3, #41	; 0x29
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   15536:	2213      	movs	r2, #19
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4152
		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
   15538:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4153
		mem_cpy(tbl+BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
   1553c:	4948      	ldr	r1, [pc, #288]	; (15660 <f_mkfs+0x4f0>)
   1553e:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   15542:	e768      	b.n	15416 <f_mkfs+0x2a6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4170
			n |= 0xFFFFFF00;
   15544:	f069 03ff 	orn	r3, r9, #255	; 0xff
   15548:	9306      	str	r3, [sp, #24]
ST_DWORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:338
   1554a:	6363      	str	r3, [r4, #52]	; 0x34
   1554c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   15550:	63a3      	str	r3, [r4, #56]	; 0x38
   15552:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   15556:	63e3      	str	r3, [r4, #60]	; 0x3c
   15558:	e789      	b.n	1546e <f_mkfs+0x2fe>
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4179
			if (disk_write(pdrv, tbl, wsect++, 1))
   1555a:	2301      	movs	r3, #1
   1555c:	464a      	mov	r2, r9
   1555e:	4631      	mov	r1, r6
   15560:	4638      	mov	r0, r7
   15562:	f109 0b01 	add.w	fp, r9, #1
   15566:	f7fd fcee 	bl	12f46 <disk_write>
   1556a:	2800      	cmp	r0, #0
   1556c:	f47f ae2f 	bne.w	151ce <f_mkfs+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   15570:	9b06      	ldr	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4179 (discriminator 2)
			if (disk_write(pdrv, tbl, wsect++, 1))
   15572:	46d9      	mov	r9, fp
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4178 (discriminator 2)
		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single sector writes */
   15574:	3301      	adds	r3, #1
   15576:	9306      	str	r3, [sp, #24]
   15578:	e78d      	b.n	15496 <f_mkfs+0x326>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3996
	if (vol < 0) return FR_INVALID_DRIVE;
   1557a:	200b      	movs	r0, #11
   1557c:	e628      	b.n	151d0 <f_mkfs+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:3997
	if (sfd > 1) return FR_INVALID_PARAMETER;
   1557e:	2013      	movs	r0, #19
   15580:	e626      	b.n	151d0 <f_mkfs+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4000
	if (!fs) return FR_NOT_ENABLED;
   15582:	200c      	movs	r0, #12
   15584:	e624      	b.n	151d0 <f_mkfs+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4007
	if (stat & STA_NOINIT) return FR_NOT_READY;
   15586:	2003      	movs	r0, #3
   15588:	e622      	b.n	151d0 <f_mkfs+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4008
	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
   1558a:	200a      	movs	r0, #10
   1558c:	e620      	b.n	151d0 <f_mkfs+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4046
		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
   1558e:	009b      	lsls	r3, r3, #2
   15590:	f203 2307 	addw	r3, r3, #519	; 0x207
   15594:	0a5b      	lsrs	r3, r3, #9
   15596:	9300      	str	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   15598:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4042
	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
   1559a:	f04f 0803 	mov.w	r8, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4048
		n_dir = 0;
   1559e:	9303      	str	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4047
		n_rsv = 32;
   155a0:	f04f 0b20 	mov.w	fp, #32
   155a4:	e043      	b.n	1562e <f_mkfs+0x4be>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   155a6:	f104 0634 	add.w	r6, r4, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   155aa:	f44f 7200 	mov.w	r2, #512	; 0x200
   155ae:	2100      	movs	r1, #0
   155b0:	4630      	mov	r0, r6
   155b2:	f7fe fb2a 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   155b6:	220b      	movs	r2, #11
   155b8:	4925      	ldr	r1, [pc, #148]	; (15650 <f_mkfs+0x4e0>)
   155ba:	4630      	mov	r0, r6
   155bc:	f7fe fb09 	bl	13bd2 <mem_cpy>
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
static inline void ST_WORD(void *p, WORD val)   { WORD *wrword = (WORD*) p; *wrword = val;       }
   155c0:	f44f 7300 	mov.w	r3, #512	; 0x200
   155c4:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   155c8:	2301      	movs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   155ca:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   155ce:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   155d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   155d6:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   155da:	e6ea      	b.n	153b2 <f_mkfs+0x242>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4119
	tbl = fs->win;							/* Clear sector */
   155dc:	f104 0634 	add.w	r6, r4, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4120
	mem_set(tbl, 0, SS(fs));
   155e0:	f44f 7200 	mov.w	r2, #512	; 0x200
   155e4:	2100      	movs	r1, #0
   155e6:	4630      	mov	r0, r6
   155e8:	f7fe fb0f 	bl	13c0a <mem_set>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4121
	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
   155ec:	220b      	movs	r2, #11
   155ee:	4918      	ldr	r1, [pc, #96]	; (15650 <f_mkfs+0x4e0>)
   155f0:	4630      	mov	r0, r6
   155f2:	f7fe faee 	bl	13bd2 <mem_cpy>
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
   155f6:	f44f 7300 	mov.w	r3, #512	; 0x200
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4124
	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
   155fa:	f884 5041 	strb.w	r5, [r4, #65]	; 0x41
ST_WORD():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.h:337
   155fe:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
f_mkfs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4125
	ST_WORD(tbl+BPB_RsvdSecCnt, n_rsv);		/* Reserved sectors */
   15602:	f8a4 b042 	strh.w	fp, [r4, #66]	; 0x42
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4126
	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
   15606:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4097
			md = 0xF0;
   1560a:	f04f 09f0 	mov.w	r9, #240	; 0xf0
   1560e:	e6cf      	b.n	153b0 <f_mkfs+0x240>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4040
	fmt = FS_FAT12;
   15610:	f04f 0801 	mov.w	r8, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4050
		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
   15614:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   15618:	3301      	adds	r3, #1
   1561a:	085b      	lsrs	r3, r3, #1
   1561c:	3303      	adds	r3, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4051 (discriminator 4)
		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
   1561e:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
   15622:	0a5b      	lsrs	r3, r3, #9
   15624:	9300      	str	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   15626:	2320      	movs	r3, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4052 (discriminator 4)
		n_rsv = 1;
   15628:	f04f 0b01 	mov.w	fp, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4053 (discriminator 4)
		n_dir = (DWORD)N_ROOTDIR * SZ_DIR / SS(fs);
   1562c:	9303      	str	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4055
	b_fat = b_vol + n_rsv;				/* FAT area start sector */
   1562e:	eb0b 030a 	add.w	r3, fp, sl
   15632:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4057
	b_data = b_dir + n_dir;				/* Data area start sector */
   15634:	9a03      	ldr	r2, [sp, #12]
   15636:	9b00      	ldr	r3, [sp, #0]
   15638:	eb03 0902 	add.w	r9, r3, r2
   1563c:	9b01      	ldr	r3, [sp, #4]
   1563e:	4499      	add	r9, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/ff.c:4058
	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
   15640:	eba5 030a 	sub.w	r3, r5, sl
   15644:	444b      	add	r3, r9
   15646:	4299      	cmp	r1, r3
   15648:	f4bf adf8 	bcs.w	1523c <f_mkfs+0xcc>
   1564c:	200e      	movs	r0, #14
   1564e:	e5bf      	b.n	151d0 <f_mkfs+0x60>
   15650:	0002048c 	.word	0x0002048c
   15654:	00020498 	.word	0x00020498
   15658:	00ffff00 	.word	0x00ffff00
   1565c:	41615252 	.word	0x41615252
   15660:	000204ac 	.word	0x000204ac

00015664 <ff_convert>:
ff_convert():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
)
{
	WCHAR c;


	if (src < 0x80) {	/* ASCII */
   15664:	287f      	cmp	r0, #127	; 0x7f
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:505
{
   15666:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:509
	if (src < 0x80) {	/* ASCII */
   15668:	d916      	bls.n	15698 <ff_convert+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:513
		c = src;

	} else {
		if (dir) {		/* OEMCP to Unicode */
   1566a:	b131      	cbz	r1, 1567a <ff_convert+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   1566c:	28ff      	cmp	r0, #255	; 0xff
   1566e:	d812      	bhi.n	15696 <ff_convert+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:514 (discriminator 1)
   15670:	4b0a      	ldr	r3, [pc, #40]	; (1569c <ff_convert+0x38>)
   15672:	3880      	subs	r0, #128	; 0x80
   15674:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   15678:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:518

		} else {		/* Unicode to OEMCP */
			for (c = 0; c < 0x80; c++) {
				if (src == Tbl[c]) break;
   1567a:	4a08      	ldr	r2, [pc, #32]	; (1569c <ff_convert+0x38>)
   1567c:	f832 4011 	ldrh.w	r4, [r2, r1, lsl #1]
   15680:	b28b      	uxth	r3, r1
   15682:	4284      	cmp	r4, r0
   15684:	d003      	beq.n	1568e <ff_convert+0x2a>
   15686:	3101      	adds	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:517 (discriminator 2)
			for (c = 0; c < 0x80; c++) {
   15688:	2980      	cmp	r1, #128	; 0x80
   1568a:	d1f7      	bne.n	1567c <ff_convert+0x18>
   1568c:	460b      	mov	r3, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:520
			}
			c = (c + 0x80) & 0xFF;
   1568e:	f103 0080 	add.w	r0, r3, #128	; 0x80
   15692:	b2c0      	uxtb	r0, r0
   15694:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:514
			c = (src >= 0x100) ? 0 : Tbl[src - 0x80];
   15696:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:525
		}
	}

	return c;
}
   15698:	bd10      	pop	{r4, pc}
   1569a:	bf00      	nop
   1569c:	000204e6 	.word	0x000204e6

000156a0 <ff_wtoupper>:
ff_wtoupper():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:537
	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
	int i;


	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   156a0:	2300      	movs	r3, #0
   156a2:	4906      	ldr	r1, [pc, #24]	; (156bc <ff_wtoupper+0x1c>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 1)
   156a4:	f831 2013 	ldrh.w	r2, [r1, r3, lsl #1]
   156a8:	b122      	cbz	r2, 156b4 <ff_wtoupper+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 3)
   156aa:	4282      	cmp	r2, r0
   156ac:	d103      	bne.n	156b6 <ff_wtoupper+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:539

	return tbl_lower[i] ? tbl_upper[i] : chr;
   156ae:	4a04      	ldr	r2, [pc, #16]	; (156c0 <ff_wtoupper+0x20>)
   156b0:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:540
}
   156b4:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/ccsbcs.c:537 (discriminator 4)
	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   156b6:	3301      	adds	r3, #1
   156b8:	e7f4      	b.n	156a4 <ff_wtoupper+0x4>
   156ba:	bf00      	nop
   156bc:	000205e6 	.word	0x000205e6
   156c0:	000207c6 	.word	0x000207c6

000156c4 <ff_cre_syncobj>:
ff_cre_syncobj():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:31

int ff_cre_syncobj (	/* TRUE:Function succeeded, FALSE:Could not create due to any error */
	BYTE vol,			/* Corresponding logical drive being processed */
	_SYNC_t *sobj		/* Pointer to return the created sync object */
)
{
   156c4:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:34
	int ret;

	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   156c6:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:31
{
   156c8:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:34
	*sobj = xSemaphoreCreateMutex();			/* FreeRTOS */
   156ca:	f7fb fc35 	bl	10f38 <xQueueCreateMutex>
   156ce:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:41

	// Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetMutexName(*sobj, "FATFS Mutex");

	return ret;
}
   156d0:	3000      	adds	r0, #0
   156d2:	bf18      	it	ne
   156d4:	2001      	movne	r0, #1
   156d6:	bd10      	pop	{r4, pc}

000156d8 <ff_del_syncobj>:
ff_del_syncobj():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:60
)
{
	int ret;
	ret = __true;					/* FreeRTOS (nothing to do) */
	return ret;
}
   156d8:	2001      	movs	r0, #1
   156da:	4770      	bx	lr

000156dc <ff_req_grant>:
ff_req_grant():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:74
*/

int ff_req_grant (	/* TRUE:Got a grant to access the volume, FALSE:Could not get a grant */
	_SYNC_t sobj	/* Sync object to wait */
)
{
   156dc:	b510      	push	{r4, lr}
   156de:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:77
	int ret = __true;

    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   156e0:	f7fc f920 	bl	11924 <xTaskGetSchedulerState>
   156e4:	2802      	cmp	r0, #2
   156e6:	d10a      	bne.n	156fe <ff_req_grant+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:79
    {
        ret = (xSemaphoreTake(sobj, _FS_TIMEOUT) == pdTRUE) ? __true : __false;	/* FreeRTOS */
   156e8:	2300      	movs	r3, #0
   156ea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   156ee:	4619      	mov	r1, r3
   156f0:	4620      	mov	r0, r4
   156f2:	f7fb fca7 	bl	11044 <xQueueGenericReceive>
   156f6:	1e43      	subs	r3, r0, #1
   156f8:	4258      	negs	r0, r3
   156fa:	4158      	adcs	r0, r3
   156fc:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:75
	int ret = __true;
   156fe:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:83
    }

	return ret;
}
   15700:	bd10      	pop	{r4, pc}

00015702 <ff_rel_grant>:
ff_rel_grant():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:96
*/

void ff_rel_grant (
	_SYNC_t sobj	/* Sync object to be signaled */
)
{
   15702:	b510      	push	{r4, lr}
   15704:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:97
    if(taskSCHEDULER_RUNNING == xTaskGetSchedulerState())
   15706:	f7fc f90d 	bl	11924 <xTaskGetSchedulerState>
   1570a:	2802      	cmp	r0, #2
   1570c:	d107      	bne.n	1571e <ff_rel_grant+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:99
    {
        xSemaphoreGive(sobj);	/* FreeRTOS */
   1570e:	2300      	movs	r3, #0
   15710:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:101
    }
}
   15712:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/fat/option/reentrant.c:99
        xSemaphoreGive(sobj);	/* FreeRTOS */
   15716:	461a      	mov	r2, r3
   15718:	4619      	mov	r1, r3
   1571a:	f7fb bb8b 	b.w	10e34 <xQueueGenericSend>
   1571e:	bd10      	pop	{r4, pc}

00015720 <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:56
    }

    /// Writes a register of this device
    inline void writeReg(unsigned char reg, unsigned char data)
    {
        mI2C.writeReg(mOurAddr, reg, data);
   15720:	4613      	mov	r3, r2
   15722:	460a      	mov	r2, r1
   15724:	7901      	ldrb	r1, [r0, #4]
   15726:	6800      	ldr	r0, [r0, #0]
   15728:	f7fc ba87 	b.w	11c3a <I2C_Base::writeReg(unsigned char, unsigned char, unsigned char)>

0001572c <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:68
    }

    /**
     * Reads 16-bit register from reg and reg+1 granted that reg has MSB
     */
    uint16_t get16BitRegister(unsigned char reg)
   1572c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:70
    {
        uint8_t buff[2] = {0};
   1572e:	2200      	movs	r2, #0
   15730:	ab04      	add	r3, sp, #16
   15732:	f823 2d04 	strh.w	r2, [r3, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:71
        mI2C.readRegisters(mOurAddr, reg, &buff[0], sizeof(buff));
   15736:	2202      	movs	r2, #2
   15738:	7904      	ldrb	r4, [r0, #4]
   1573a:	9200      	str	r2, [sp, #0]
   1573c:	6800      	ldr	r0, [r0, #0]
   1573e:	460a      	mov	r2, r1
   15740:	4621      	mov	r1, r4
   15742:	f7fc fa63 	bl	11c0c <I2C_Base::readRegisters(unsigned char, unsigned char, unsigned char*, unsigned long)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:75

        const uint16_t MSB = buff[0];
        const uint16_t LSB = buff[1];
        return ((MSB << 8) | (LSB & 0xFF));
   15746:	f89d 000c 	ldrb.w	r0, [sp, #12]
   1574a:	f89d 300d 	ldrb.w	r3, [sp, #13]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:76
    }
   1574e:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   15752:	b004      	add	sp, #16
   15754:	bd10      	pop	{r4, pc}

00015756 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:119
};



bool Acceleration_Sensor::init()
{
   15756:	b510      	push	{r4, lr}
   15758:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:122
    const unsigned char activeModeWith100Hz = (1 << 0) | (3 << 3); // Active Mode @ 100Hz

    writeReg(Ctrl_Reg1, activeModeWith100Hz);
   1575a:	2219      	movs	r2, #25
   1575c:	212a      	movs	r1, #42	; 0x2a
   1575e:	f7ff ffdf 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   15762:	220d      	movs	r2, #13
   15764:	7921      	ldrb	r1, [r4, #4]
   15766:	6820      	ldr	r0, [r4, #0]
   15768:	f7fc fa3c 	bl	11be4 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN19Acceleration_Sensor4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:126
    const char whoAmIReg = readReg(WhoAmI);

    return (mWhoAmIExpectedValue == whoAmIReg);
}
   1576c:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
   15770:	4258      	negs	r0, r3
   15772:	4158      	adcs	r0, r3
   15774:	bd10      	pop	{r4, pc}
   15776:	Address 0x0000000000015776 is out of bounds.


00015778 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:162
static uint32_t g_last_decoded_signal = 0;  ///< Value of the last decoded signals

void IR_Sensor::storeIrCode(uint32_t value)
{
    // Just store the timestamp of this signal
    if(g_signal_count < MAX_FALLING_EDGES_PER_IR_FRAME) {
   15778:	4a04      	ldr	r2, [pc, #16]	; (1578c <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   1577a:	8813      	ldrh	r3, [r2, #0]
   1577c:	2b1f      	cmp	r3, #31
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:163
        g_ir_timings[g_signal_count++] = value;
   1577e:	bfdf      	itttt	le
   15780:	1c58      	addle	r0, r3, #1
   15782:	8010      	strhle	r0, [r2, #0]
   15784:	4a02      	ldrle	r2, [pc, #8]	; (15790 <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   15786:	f842 1023 	strle.w	r1, [r2, r3, lsl #2]
   1578a:	4770      	bx	lr
   1578c:	2007c570 	.word	0x2007c570
   15790:	2007c4f0 	.word	0x2007c4f0

00015794 <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:168
    }
}

void IR_Sensor::decodeIrCode(void)
{
   15794:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:169
    if(g_signal_count > 1)
   15796:	4e15      	ldr	r6, [pc, #84]	; (157ec <IR_Sensor::decodeIrCode()+0x58>)
   15798:	8833      	ldrh	r3, [r6, #0]
   1579a:	2b01      	cmp	r3, #1
   1579c:	dd23      	ble.n	157e6 <IR_Sensor::decodeIrCode()+0x52>
   1579e:	4a14      	ldr	r2, [pc, #80]	; (157f0 <IR_Sensor::decodeIrCode()+0x5c>)
   157a0:	2000      	movs	r0, #0
   157a2:	4615      	mov	r5, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:172
    {
        /* Calculate differences of falling edges */
        for(int i = 0; i < g_signal_count-1; i++) {
   157a4:	3b01      	subs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 3)
   157a6:	4298      	cmp	r0, r3
   157a8:	da08      	bge.n	157bc <IR_Sensor::decodeIrCode()+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:173 (discriminator 2)
            g_ir_timings[i] = g_ir_timings[i+1] - g_ir_timings[i];
   157aa:	f852 1f04 	ldr.w	r1, [r2, #4]!
   157ae:	3001      	adds	r0, #1
   157b0:	f852 4c04 	ldr.w	r4, [r2, #-4]
   157b4:	1b09      	subs	r1, r1, r4
   157b6:	f842 1c04 	str.w	r1, [r2, #-4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:172 (discriminator 2)
        for(int i = 0; i < g_signal_count-1; i++) {
   157ba:	e7f4      	b.n	157a6 <IR_Sensor::decodeIrCode()+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:180

        /**
         * First falling edge value should indicate binary 0.
         * So anything higher than 50% of this value is considered binary 1.
         */
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   157bc:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:184
        uint32_t decodedSignal = 0;
        for(uint16_t i=0; i < g_signal_count-1; i++) {
            if(g_ir_timings[i] > binary1Threshold) {
                decodedSignal |= (1 << i);
   157be:	f04f 0e01 	mov.w	lr, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:181
        uint32_t decodedSignal = 0;
   157c2:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:180
        const uint32_t binary1Threshold = g_ir_timings[1] + (g_ir_timings[1]/2);
   157c4:	6868      	ldr	r0, [r5, #4]
   157c6:	eb00 0050 	add.w	r0, r0, r0, lsr #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:182 (discriminator 1)
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   157ca:	b28a      	uxth	r2, r1
   157cc:	4293      	cmp	r3, r2
   157ce:	dd08      	ble.n	157e2 <IR_Sensor::decodeIrCode()+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:183
            if(g_ir_timings[i] > binary1Threshold) {
   157d0:	f855 7022 	ldr.w	r7, [r5, r2, lsl #2]
   157d4:	3101      	adds	r1, #1
   157d6:	42b8      	cmp	r0, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:184
                decodedSignal |= (1 << i);
   157d8:	bf3c      	itt	cc
   157da:	fa0e f202 	lslcc.w	r2, lr, r2
   157de:	4314      	orrcc	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:182
        for(uint16_t i=0; i < g_signal_count-1; i++) {
   157e0:	e7f3      	b.n	157ca <IR_Sensor::decodeIrCode()+0x36>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:187
            }
        }
        g_last_decoded_signal = decodedSignal;
   157e2:	4b04      	ldr	r3, [pc, #16]	; (157f4 <IR_Sensor::decodeIrCode()+0x60>)
   157e4:	601c      	str	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:190
    }

    g_signal_count = 0;
   157e6:	2300      	movs	r3, #0
   157e8:	8033      	strh	r3, [r6, #0]
   157ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
   157ec:	2007c570 	.word	0x2007c570
   157f0:	2007c4f0 	.word	0x2007c4f0
   157f4:	2007c574 	.word	0x2007c574

000157f8 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:197

/**
 * IR Sensor is attached to P1.18 - CAP1.0, so it needs TIMER1 to capture the times on P1.18
 */
bool IR_Sensor::init()
{
   157f8:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:199
    /* Power up the timer 1 in case it is off */
    lpc_pconp(pconp_timer1, true);
   157fa:	2101      	movs	r1, #1
   157fc:	2002      	movs	r0, #2
   157fe:	f7fa fe23 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:204

    /* Timer 1 should be initialized by high_level_init.cpp using lpc_sys.c API
     * We will just add on the capture functionality here.
     */
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   15802:	4b08      	ldr	r3, [pc, #32]	; (15824 <IR_Sensor::init()+0x2c>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:211

    // Select P1.18 as CAP1.0 by setting bits 5:4 to 0b11
    LPC_PINCON->PINSEL3 |= (3 << 4);

    return true;
}
   15804:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:204
    LPC_TIM1->CCR &= ~(7 << 0);            // Clear Bits 2:1:0
   15806:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   15808:	f022 0207 	bic.w	r2, r2, #7
   1580c:	629a      	str	r2, [r3, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:205
    LPC_TIM1->CCR |=  (1 << 2) | (1 << 1); // Enable Falling Edge capture0 with interrupt
   1580e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   15810:	f042 0206 	orr.w	r2, r2, #6
   15814:	629a      	str	r2, [r3, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:208
    LPC_PINCON->PINSEL3 |= (3 << 4);
   15816:	4a04      	ldr	r2, [pc, #16]	; (15828 <IR_Sensor::init()+0x30>)
   15818:	68d3      	ldr	r3, [r2, #12]
   1581a:	f043 0330 	orr.w	r3, r3, #48	; 0x30
   1581e:	60d3      	str	r3, [r2, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:211
}
   15820:	bd08      	pop	{r3, pc}
   15822:	bf00      	nop
   15824:	40008000 	.word	0x40008000
   15828:	4002c000 	.word	0x4002c000

0001582c <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:255
        setLeftDigit(' ');
    else
        setLeftDigit (num/10 + '0');
}
void LED_Display::setLeftDigit(char alpha)
{
   1582c:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:257
    mNumAtDisplay[0] = alpha;
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   1582e:	4b04      	ldr	r3, [pc, #16]	; (15840 <LED_Display::setLeftDigit(char)+0x14>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:256
    mNumAtDisplay[0] = alpha;
   15830:	7141      	strb	r1, [r0, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:257
    writeReg(outputPort1, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   15832:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   15836:	5c5a      	ldrb	r2, [r3, r1]
   15838:	2103      	movs	r1, #3
   1583a:	f7ff ff71 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1583e:	bd08      	pop	{r3, pc}
   15840:	000209a6 	.word	0x000209a6

00015844 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:260
}
void LED_Display::setRightDigit(char alpha)
{
   15844:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:262
    mNumAtDisplay[1] = alpha;
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   15846:	4b04      	ldr	r3, [pc, #16]	; (15858 <LED_Display::setRightDigit(char)+0x14>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:261
    mNumAtDisplay[1] = alpha;
   15848:	7181      	strb	r1, [r0, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:262
    writeReg(outputPort0, LED_DISPLAY_CHARMAP[(unsigned) (alpha & 0x7F) ]);
   1584a:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   1584e:	5c5a      	ldrb	r2, [r3, r1]
   15850:	2102      	movs	r1, #2
   15852:	f7ff ff65 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15856:	bd08      	pop	{r3, pc}
   15858:	000209a6 	.word	0x000209a6

0001585c <LED_Display::init()>:
_ZN11LED_Display4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:225
{
   1585c:	b538      	push	{r3, r4, r5, lr}
   1585e:	4604      	mov	r4, r0
_ZN11i2c2_device19checkDeviceResponseEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:62
        return mI2C.checkDeviceResponse(mOurAddr);
   15860:	7901      	ldrb	r1, [r0, #4]
   15862:	6800      	ldr	r0, [r0, #0]
   15864:	f7fc fa01 	bl	11c6a <I2C_Base::checkDeviceResponse(unsigned char)>
_ZN11LED_Display4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:227
    if(devicePresent)
   15868:	4605      	mov	r5, r0
   1586a:	b188      	cbz	r0, 15890 <LED_Display::init()+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:230
        writeReg(cfgPort0, cfgAsOutput);
   1586c:	2200      	movs	r2, #0
   1586e:	2106      	movs	r1, #6
   15870:	4620      	mov	r0, r4
   15872:	f7ff ff55 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:231
        writeReg(cfgPort1, cfgAsOutput);
   15876:	2200      	movs	r2, #0
   15878:	2107      	movs	r1, #7
   1587a:	4620      	mov	r0, r4
   1587c:	f7ff ff50 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:233
        setLeftDigit('.');
   15880:	212e      	movs	r1, #46	; 0x2e
   15882:	4620      	mov	r0, r4
   15884:	f7ff ffd2 	bl	1582c <LED_Display::setLeftDigit(char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:234
        setRightDigit('.');
   15888:	212e      	movs	r1, #46	; 0x2e
   1588a:	4620      	mov	r0, r4
   1588c:	f7ff ffda 	bl	15844 <LED_Display::setRightDigit(char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:238
}
   15890:	4628      	mov	r0, r5
   15892:	bd38      	pop	{r3, r4, r5, pc}

00015894 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:245
{
   15894:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   15896:	2464      	movs	r4, #100	; 0x64
   15898:	fbb1 f3f4 	udiv	r3, r1, r4
   1589c:	fb03 1414 	mls	r4, r3, r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   158a0:	210a      	movs	r1, #10
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:246
    num %= 100;
   158a2:	b2e4      	uxtb	r4, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   158a4:	fbb4 f5f1 	udiv	r5, r4, r1
   158a8:	fb01 4115 	mls	r1, r1, r5, r4
   158ac:	3130      	adds	r1, #48	; 0x30
   158ae:	b2c9      	uxtb	r1, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:245
{
   158b0:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:247
    setRightDigit(num%10 + '0');
   158b2:	f7ff ffc7 	bl	15844 <LED_Display::setRightDigit(char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:249
    if(num < 10)
   158b6:	2c09      	cmp	r4, #9
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   158b8:	bf88      	it	hi
   158ba:	f105 0130 	addhi.w	r1, r5, #48	; 0x30
   158be:	4630      	mov	r0, r6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:253
}
   158c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:250
        setLeftDigit(' ');
   158c4:	bf94      	ite	ls
   158c6:	2120      	movls	r1, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:252
        setLeftDigit (num/10 + '0');
   158c8:	b2c9      	uxtbhi	r1, r1
   158ca:	f7ff bfaf 	b.w	1582c <LED_Display::setLeftDigit(char)>

000158ce <LED::init()>:
_ZN3LED4initEv():
   158ce:	2001      	movs	r0, #1
   158d0:	4770      	bx	lr
   158d2:	Address 0x00000000000158d2 is out of bounds.


000158d4 <LED::setAll(unsigned char)>:
_ZN3LED6setAllEh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:297
void LED::set(uint8_t ledNum, bool ON)
{
    ON ? on(ledNum) : off(ledNum);
}
void LED::setAll(uint8_t value)
{
   158d4:	b538      	push	{r3, r4, r5, lr}
   158d6:	460c      	mov	r4, r1
   158d8:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:298
    portENTER_CRITICAL();
   158da:	f7fb f8e3 	bl	10aa4 <vPortEnterCritical>
   158de:	2201      	movs	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:307
            if (mLedValue & (1 << num))             \
                LPC_GPIO1->FIOCLR = (1 << realbit); \
            else                                    \
                LPC_GPIO1->FIOSET = (1 << realbit)

        mLedValue = value & 0x0F;
   158e0:	f004 030f 	and.w	r3, r4, #15
   158e4:	702b      	strb	r3, [r5, #0]
   158e6:	4b0e      	ldr	r3, [pc, #56]	; (15920 <LED::setAll(unsigned char)+0x4c>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:308
        led_set(0, 0);
   158e8:	f014 0f01 	tst.w	r4, #1
   158ec:	bf14      	ite	ne
   158ee:	61da      	strne	r2, [r3, #28]
   158f0:	619a      	streq	r2, [r3, #24]
   158f2:	2202      	movs	r2, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:309
        led_set(1, 1);
   158f4:	f014 0f02 	tst.w	r4, #2
   158f8:	bf14      	ite	ne
   158fa:	61da      	strne	r2, [r3, #28]
   158fc:	619a      	streq	r2, [r3, #24]
   158fe:	2210      	movs	r2, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:310
        led_set(2, 4);
   15900:	f014 0f04 	tst.w	r4, #4
   15904:	bf14      	ite	ne
   15906:	61da      	strne	r2, [r3, #28]
   15908:	619a      	streq	r2, [r3, #24]
   1590a:	f44f 7280 	mov.w	r2, #256	; 0x100
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:311
        led_set(3, 8);
   1590e:	f014 0f08 	tst.w	r4, #8
   15912:	bf14      	ite	ne
   15914:	61da      	strne	r2, [r3, #28]
   15916:	619a      	streq	r2, [r3, #24]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:314
    }
    portEXIT_CRITICAL();
}
   15918:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:313
    portEXIT_CRITICAL();
   1591c:	f7fb b8d2 	b.w	10ac4 <vPortExitCritical>
   15920:	2009c020 	.word	0x2009c020

00015924 <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   15924:	2001      	movs	r0, #1
   15926:	4770      	bx	lr

00015928 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:327
{
    return true;
}
uint16_t Light_Sensor::getRawValue()
{
    return adc0_get_reading(BIO_LIGHT_ADC_CH_NUM);
   15928:	2002      	movs	r0, #2
   1592a:	f7fc bc43 	b.w	121b4 <adc0_get_reading>

0001592e <Switches::init()>:
_ZN8Switches4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:341

bool Switches::init()
{
    /* Pins initialized by bio.h */
    return true;
}
   1592e:	2001      	movs	r0, #1
   15930:	4770      	bx	lr
   15932:	Address 0x0000000000015932 is out of bounds.


00015934 <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:345
uint8_t Switches::getSwitchValues()
{
    /* Return contiguous bits 0-3 from scattered switch pins */
    const int swValues = LPC_GPIO1->FIOPIN;
   15934:	4b04      	ldr	r3, [pc, #16]	; (15948 <Switches::getSwitchValues()+0x14>)
   15936:	695b      	ldr	r3, [r3, #20]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:348
    const int p9_p10  = (swValues >> 9)  & 0x3;
    const int p14_p15 = (swValues >> 14) & 0x3;
    return (p9_p10 | (p14_p15 << 2));
   15938:	0b18      	lsrs	r0, r3, #12
   1593a:	f000 000c 	and.w	r0, r0, #12
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:346
    const int p9_p10  = (swValues >> 9)  & 0x3;
   1593e:	f3c3 2341 	ubfx	r3, r3, #9, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:349
}
   15942:	4318      	orrs	r0, r3
   15944:	4770      	bx	lr
   15946:	bf00      	nop
   15948:	2009c020 	.word	0x2009c020

0001594c <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:363
}



bool I2C_Temp::init()
{
   1594c:	b510      	push	{r4, lr}
   1594e:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:369
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    const unsigned char expectedBitsThatAreNotZero = 0x60; // R1:R0 bits are 1s at startup

    // Enter one-shot shutdown mode.
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   15950:	2281      	movs	r2, #129	; 0x81
   15952:	2101      	movs	r1, #1
   15954:	f7ff fee4 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
_ZN11i2c2_device7readRegEh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:50
        return mI2C.readReg(mOurAddr, reg);
   15958:	2201      	movs	r2, #1
   1595a:	7921      	ldrb	r1, [r4, #4]
   1595c:	6820      	ldr	r0, [r4, #0]
   1595e:	f7fc f941 	bl	11be4 <I2C_Base::readReg(unsigned char, unsigned char)>
_ZN8I2C_Temp4initEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:372

    const unsigned char cfgRegByte0 = readReg(temperatureCfgRegPtr);
    return (0 != (cfgRegByte0 & expectedBitsThatAreNotZero));
   15962:	f010 0f60 	tst.w	r0, #96	; 0x60
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:373
}
   15966:	bf14      	ite	ne
   15968:	2001      	movne	r0, #1
   1596a:	2000      	moveq	r0, #0
   1596c:	bd10      	pop	{r4, pc}

0001596e <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:375
float I2C_Temp::getCelsius()
{
   1596e:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:378
    // Get signed 16-bit data of temperature register pointer
    const unsigned char temperatureRegsiterPtr = 0x00;
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   15970:	2100      	movs	r1, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:375
{
   15972:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   15974:	f7ff feda 	bl	1572c <i2c2_device::get16BitRegister(unsigned char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:383

    // Trigger next conversion:
    const unsigned char temperatureCfgRegPtr = 0x01;
    const unsigned char oneShotShutdownMode = 0x81;
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   15978:	2281      	movs	r2, #129	; 0x81
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:378
    signed short temperature = get16BitRegister(temperatureRegsiterPtr);
   1597a:	b205      	sxth	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:383
    writeReg(temperatureCfgRegPtr, oneShotShutdownMode);
   1597c:	2101      	movs	r1, #1
   1597e:	4620      	mov	r0, r4
   15980:	f7ff fece 	bl	15720 <i2c2_device::writeReg(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:389

    // Temperature data is in bits 15:3 which contains signed 16-bit data
    temperature /= 16;

    // Each bit is of 0.0625 degree per bit resolution
    return (0.0625F * temperature) + mOffsetCelcius;
   15984:	2010      	movs	r0, #16
   15986:	fb95 f0f0 	sdiv	r0, r5, r0
   1598a:	f003 fbb7 	bl	190fc <__aeabi_i2f>
   1598e:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   15992:	f003 fc07 	bl	191a4 <__aeabi_fmul>
   15996:	68a1      	ldr	r1, [r4, #8]
   15998:	f003 fafc 	bl	18f94 <__addsf3>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:390
}
   1599c:	bd38      	pop	{r3, r4, r5, pc}
   1599e:	Address 0x000000000001599e is out of bounds.


000159a0 <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:393

float I2C_Temp::getFarenheit()
{
   159a0:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:394
    return (getCelsius() * 9.0F / 5) + 32;
   159a2:	f7ff ffe4 	bl	1596e <I2C_Temp::getCelsius()>
   159a6:	4905      	ldr	r1, [pc, #20]	; (159bc <I2C_Temp::getFarenheit()+0x1c>)
   159a8:	f003 fbfc 	bl	191a4 <__aeabi_fmul>
   159ac:	4904      	ldr	r1, [pc, #16]	; (159c0 <I2C_Temp::getFarenheit()+0x20>)
   159ae:	f003 fcad 	bl	1930c <__aeabi_fdiv>
   159b2:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   159b6:	f003 faed 	bl	18f94 <__addsf3>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/io_source.cpp:395
}
   159ba:	bd08      	pop	{r3, pc}
   159bc:	41100000 	.word	0x41100000
   159c0:	40a00000 	.word	0x40a00000

000159c4 <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:89

    return status;
}

FRESULT Storage::read(const char* pFilename,  void* pData, unsigned int bytesToRead, unsigned int offset)
{
   159c4:	b5f0      	push	{r4, r5, r6, r7, lr}
   159c6:	461d      	mov	r5, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:92
    FRESULT status = FR_INT_ERR;
    FIL file;
    unsigned int bytesRead = 0;
   159c8:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:89
{
   159ca:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   159ce:	460e      	mov	r6, r1
   159d0:	4617      	mov	r7, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:95

    // Open Existing file
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   159d2:	4601      	mov	r1, r0
   159d4:	2201      	movs	r2, #1
   159d6:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:92
    unsigned int bytesRead = 0;
   159d8:	9300      	str	r3, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:95
    if (FR_OK == (status = f_open(&file, pFilename, FA_OPEN_EXISTING | FA_READ)))
   159da:	f7ff f841 	bl	14a60 <f_open>
   159de:	4604      	mov	r4, r0
   159e0:	b970      	cbnz	r0, 15a00 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:97
    {
        if(offset) {
   159e2:	b11d      	cbz	r5, 159ec <Storage::read(char const*, void*, unsigned int, unsigned int)+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:98
            f_lseek(&file, offset);
   159e4:	4629      	mov	r1, r5
   159e6:	a801      	add	r0, sp, #4
   159e8:	f7ff fab6 	bl	14f58 <f_lseek>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:100
        }
        status = f_read(&file, pData, bytesToRead, &bytesRead);
   159ec:	466b      	mov	r3, sp
   159ee:	463a      	mov	r2, r7
   159f0:	4631      	mov	r1, r6
   159f2:	a801      	add	r0, sp, #4
   159f4:	f7ff f8cb 	bl	14b8e <f_read>
   159f8:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:101
        f_close(&file);
   159fa:	a801      	add	r0, sp, #4
   159fc:	f7ff fa9a 	bl	14f34 <f_close>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/storage.cpp:105
    }

    return status;
}
   15a00:	4620      	mov	r0, r4
   15a02:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   15a06:	bdf0      	pop	{r4, r5, r6, r7, pc}

00015a08 <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:125
    static uint8_t s_next_packet_id = 0;
    return ++s_next_packet_id;
}

static void mesh_incr_soft_timers_for_arr(mesh_pnd_pkt_t *arr, const uint8_t arr_size, const uint32_t delta_time)
{
   15a08:	2324      	movs	r3, #36	; 0x24
   15a0a:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:134
    for (i = 0; i < arr_size; i++) {
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
            /* Check if adding delta will overflow uint16, if so, set it to max value */
            timer = arr[i].timer_ms;
            timer += delta_time;
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   15a0c:	f64f 74ff 	movw	r4, #65535	; 0xffff
   15a10:	fb03 0101 	mla	r1, r3, r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:129 (discriminator 1)
    for (i = 0; i < arr_size; i++) {
   15a14:	4288      	cmp	r0, r1
   15a16:	d100      	bne.n	15a1a <mesh_incr_soft_timers_for_arr+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:137
        }
    }
}
   15a18:	bd10      	pop	{r4, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:130
        if (MESH_ZERO_ADDR != arr[i].pkt.nwk.dst) {
   15a1a:	7843      	ldrb	r3, [r0, #1]
   15a1c:	b12b      	cbz	r3, 15a2a <mesh_incr_soft_timers_for_arr+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:132
            timer = arr[i].timer_ms;
   15a1e:	8c03      	ldrh	r3, [r0, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:133
            timer += delta_time;
   15a20:	4413      	add	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:134
            arr[i].timer_ms = (timer <= UINT16_MAX) ? timer : UINT16_MAX;
   15a22:	42a3      	cmp	r3, r4
   15a24:	bf28      	it	cs
   15a26:	4623      	movcs	r3, r4
   15a28:	8403      	strh	r3, [r0, #32]
   15a2a:	3024      	adds	r0, #36	; 0x24
   15a2c:	e7f2      	b.n	15a14 <mesh_incr_soft_timers_for_arr+0xc>
   15a2e:	Address 0x0000000000015a2e is out of bounds.


00015a30 <mesh_update_soft_timers>:
mesh_update_soft_timers():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:147
 * from the last time this function is called.
 */
static bool mesh_update_soft_timers(void)
{
    static uint32_t s_prev_time_ms = 0;
    uint32_t time_now_ms = 0;
   15a30:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:145
{
   15a32:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:147
    uint32_t time_now_ms = 0;
   15a34:	a802      	add	r0, sp, #8
   15a36:	f840 3d04 	str.w	r3, [r0, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:148
    const bool ok = g_driver.get_timer(&time_now_ms, sizeof(time_now_ms));
   15a3a:	4b0c      	ldr	r3, [pc, #48]	; (15a6c <mesh_update_soft_timers+0x3c>)
   15a3c:	2104      	movs	r1, #4
   15a3e:	685b      	ldr	r3, [r3, #4]
   15a40:	4798      	blx	r3
   15a42:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   15a44:	4b0a      	ldr	r3, [pc, #40]	; (15a70 <mesh_update_soft_timers+0x40>)
   15a46:	9a01      	ldr	r2, [sp, #4]
   15a48:	681c      	ldr	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:152

    s_prev_time_ms = time_now_ms;
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   15a4a:	2104      	movs	r1, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:149
    const uint32_t delta = (time_now_ms - s_prev_time_ms);
   15a4c:	1b14      	subs	r4, r2, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:151
    s_prev_time_ms = time_now_ms;
   15a4e:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:152
    mesh_incr_soft_timers_for_arr(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size, delta);
   15a50:	4808      	ldr	r0, [pc, #32]	; (15a74 <mesh_update_soft_timers+0x44>)
   15a52:	4622      	mov	r2, r4
   15a54:	f7ff ffd8 	bl	15a08 <mesh_incr_soft_timers_for_arr>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:153
    mesh_incr_soft_timers_for_arr(&g_our_pnd_pkts[0],  g_our_pnd_pkts_size,  delta);
   15a58:	4622      	mov	r2, r4
   15a5a:	2102      	movs	r1, #2
   15a5c:	4806      	ldr	r0, [pc, #24]	; (15a78 <mesh_update_soft_timers+0x48>)
   15a5e:	f7ff ffd3 	bl	15a08 <mesh_incr_soft_timers_for_arr>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:155
    return ok;
}
   15a62:	1c28      	adds	r0, r5, #0
   15a64:	bf18      	it	ne
   15a66:	2001      	movne	r0, #1
   15a68:	b003      	add	sp, #12
   15a6a:	bd30      	pop	{r4, r5, pc}
   15a6c:	2007c578 	.word	0x2007c578
   15a70:	2007c6a8 	.word	0x2007c6a8
   15a74:	2007c58e 	.word	0x2007c58e
   15a78:	2007c642 	.word	0x2007c642

00015a7c <mesh_send_packet>:
mesh_send_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:158

static inline bool mesh_send_packet(mesh_packet_t *pkt)
{
   15a7c:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:161
    #if MESH_USE_STATISTICS
    /* If we are not the source, then we must be repeating the packet */
    if (pkt->nwk.src == g_our_node_id) {
   15a7e:	4b0b      	ldr	r3, [pc, #44]	; (15aac <mesh_send_packet+0x30>)
   15a80:	7819      	ldrb	r1, [r3, #0]
   15a82:	7803      	ldrb	r3, [r0, #0]
   15a84:	428b      	cmp	r3, r1
   15a86:	4b0a      	ldr	r3, [pc, #40]	; (15ab0 <mesh_send_packet+0x34>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   15a88:	bf0b      	itete	eq
   15a8a:	881a      	ldrheq	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:165
    }
    else {
        g_mesh_stats.pkts_repeated++;
   15a8c:	889a      	ldrhne	r2, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   15a8e:	3201      	addeq	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:165
        g_mesh_stats.pkts_repeated++;
   15a90:	3201      	addne	r2, #1
   15a92:	bf14      	ite	ne
   15a94:	809a      	strhne	r2, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:162
        g_mesh_stats.pkts_sent++;
   15a96:	801a      	strheq	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:171
    }
    #endif

    MESH_DEBUG_PRINTF("SEND TO %i THRU %i MAX HOPS %i", pkt->nwk.dst, pkt->mac.dst, pkt->info.hop_count_max);
    pkt->mac.src = g_our_node_id;
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   15a98:	4b06      	ldr	r3, [pc, #24]	; (15ab4 <mesh_send_packet+0x38>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:170
    pkt->mac.src = g_our_node_id;
   15a9a:	7081      	strb	r1, [r0, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:171
    return (g_driver.radio_send((void*)pkt, sizeof(*pkt)));
   15a9c:	68db      	ldr	r3, [r3, #12]
   15a9e:	2120      	movs	r1, #32
   15aa0:	4798      	blx	r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:172
}
   15aa2:	3000      	adds	r0, #0
   15aa4:	bf18      	it	ne
   15aa6:	2001      	movne	r0, #1
   15aa8:	bd08      	pop	{r3, pc}
   15aaa:	bf00      	nop
   15aac:	2007c0cd 	.word	0x2007c0cd
   15ab0:	2007c61e 	.word	0x2007c61e
   15ab4:	2007c578 	.word	0x2007c578

00015ab8 <mesh_send_retry_packet>:
mesh_send_retry_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:177

static void mesh_send_retry_packet(mesh_packet_t *pkt)
{
    #if MESH_USE_STATISTICS
    if (pkt->nwk.src == g_our_node_id) {
   15ab8:	4b0a      	ldr	r3, [pc, #40]	; (15ae4 <mesh_send_retry_packet+0x2c>)
   15aba:	7802      	ldrb	r2, [r0, #0]
   15abc:	781b      	ldrb	r3, [r3, #0]
   15abe:	429a      	cmp	r2, r3
   15ac0:	4b09      	ldr	r3, [pc, #36]	; (15ae8 <mesh_send_retry_packet+0x30>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   15ac2:	bf0b      	itete	eq
   15ac4:	88da      	ldrheq	r2, [r3, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:181
    }
    else {
        g_mesh_stats.pkts_retried_others++;
   15ac6:	891a      	ldrhne	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   15ac8:	3201      	addeq	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   15aca:	3201      	addne	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:178
        g_mesh_stats.pkts_retried++;
   15acc:	bf0c      	ite	eq
   15ace:	80da      	strheq	r2, [r3, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:181
        g_mesh_stats.pkts_retried_others++;
   15ad0:	811a      	strhne	r2, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:185
    }
    #endif

    pkt->info.retries_rem--;
   15ad2:	7903      	ldrb	r3, [r0, #4]
   15ad4:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   15ad8:	3207      	adds	r2, #7
   15ada:	f362 03c5 	bfi	r3, r2, #3, #3
   15ade:	7103      	strb	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:186
    mesh_send_packet(pkt);
   15ae0:	f7ff bfcc 	b.w	15a7c <mesh_send_packet>
   15ae4:	2007c0cd 	.word	0x2007c0cd
   15ae8:	2007c61e 	.word	0x2007c61e

00015aec <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:194
/**
 * Gets the routing table entry based on destination ID.
 * If destination ID is not found in the table, NULL entry is returned
 */
static mesh_rte_table_t* mesh_find_rte_tbl_entry(const uint8_t dst_id)
{
   15aec:	2200      	movs	r2, #0
   15aee:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:199
    uint8_t i = 0;
    mesh_rte_table_t *entry = NULL;

    for (i = 0; i < g_rte_tbl_size; i++) {
        if (dst_id == g_rte_table[i].dst) {
   15af0:	4b06      	ldr	r3, [pc, #24]	; (15b0c <mesh_find_rte_tbl_entry+0x20>)
   15af2:	f813 4022 	ldrb.w	r4, [r3, r2, lsl #2]
   15af6:	0091      	lsls	r1, r2, #2
   15af8:	4284      	cmp	r4, r0
   15afa:	d101      	bne.n	15b00 <mesh_find_rte_tbl_entry+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:200
            entry = &g_rte_table[i];
   15afc:	1858      	adds	r0, r3, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:201
            break;
   15afe:	bd10      	pop	{r4, pc}
   15b00:	3201      	adds	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:198 (discriminator 2)
    for (i = 0; i < g_rte_tbl_size; i++) {
   15b02:	2a04      	cmp	r2, #4
   15b04:	d1f5      	bne.n	15af2 <mesh_find_rte_tbl_entry+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:196
    mesh_rte_table_t *entry = NULL;
   15b06:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:206
        }
    }

    return entry;
}
   15b08:	bd10      	pop	{r4, pc}
   15b0a:	bf00      	nop
   15b0c:	2007c697 	.word	0x2007c697

00015b10 <mesh_update_rte_scores>:
mesh_update_rte_scores():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:270
 */
static void mesh_update_rte_scores(mesh_rte_table_t *entry)
{
    uint8_t i = 0;

    if (NULL != entry) {
   15b10:	b170      	cbz	r0, 15b30 <mesh_update_rte_scores+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:272
        /* If max value reached for the score, reduce everyone's score */
        if (UINT8_MAX == ++(entry->score)) {
   15b12:	78c3      	ldrb	r3, [r0, #3]
   15b14:	3301      	adds	r3, #1
   15b16:	b2db      	uxtb	r3, r3
   15b18:	2bff      	cmp	r3, #255	; 0xff
   15b1a:	70c3      	strb	r3, [r0, #3]
   15b1c:	d108      	bne.n	15b30 <mesh_update_rte_scores+0x20>
   15b1e:	2300      	movs	r3, #0
   15b20:	4804      	ldr	r0, [pc, #16]	; (15b34 <mesh_update_rte_scores+0x24>)
   15b22:	18c1      	adds	r1, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:274
            for (i = 0; i < g_rte_tbl_size; i++) {
                g_rte_table[i].score /= 2;
   15b24:	78ca      	ldrb	r2, [r1, #3]
   15b26:	3304      	adds	r3, #4
   15b28:	0852      	lsrs	r2, r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   15b2a:	2b10      	cmp	r3, #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:274
                g_rte_table[i].score /= 2;
   15b2c:	70ca      	strb	r2, [r1, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:273
            for (i = 0; i < g_rte_tbl_size; i++) {
   15b2e:	d1f8      	bne.n	15b22 <mesh_update_rte_scores+0x12>
   15b30:	4770      	bx	lr
   15b32:	bf00      	nop
   15b34:	2007c697 	.word	0x2007c697

00015b38 <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:286
 * Finds a possible free slot from the pending packet array.
 * If a slot is not found, then the slot with least amount of retries+timeout is returned
 * assuming that the slot with highest retries+timeout will need to be retransmitted.
 */
static mesh_pnd_pkt_t* mesh_get_pnd_pkt_slot(mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   15b38:	2224      	movs	r2, #36	; 0x24
   15b3a:	4603      	mov	r3, r0
   15b3c:	fb02 0101 	mla	r1, r2, r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:293
    mesh_pnd_pkt_t *entry = NULL;
    uint32_t pkt_timeout = 0;
    uint32_t highest_timeout = 0;

    /* Find the free entry marked by nwk.dst being 0 */
    for (i = 0; i < size_of_array; i++) {
   15b40:	4602      	mov	r2, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:286
{
   15b42:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:293 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   15b44:	4291      	cmp	r1, r2
   15b46:	d10f      	bne.n	15b68 <mesh_get_pnd_pkt_slot+0x30>
   15b48:	4604      	mov	r4, r0
   15b4a:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:307
     * least retries remaining will need to be retried.
     */
    if (NULL == entry) {
        entry = &arr[0];

        for (i = 0; i < size_of_array; i++) {
   15b4c:	429a      	cmp	r2, r3
   15b4e:	d011      	beq.n	15b74 <mesh_get_pnd_pkt_slot+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:308
            pkt_timeout = (arr[i].pkt.info.retries_rem);
   15b50:	7919      	ldrb	r1, [r3, #4]
   15b52:	f3c1 00c2 	ubfx	r0, r1, #3, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:310
            pkt_timeout <<= sizeof(arr[i].timer_ms) * 8;
            pkt_timeout |= arr[i].timer_ms;
   15b56:	8c19      	ldrh	r1, [r3, #32]
   15b58:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:312

            if (highest_timeout < pkt_timeout) {
   15b5c:	42a9      	cmp	r1, r5
   15b5e:	bf84      	itt	hi
   15b60:	461c      	movhi	r4, r3
   15b62:	460d      	movhi	r5, r1
   15b64:	3324      	adds	r3, #36	; 0x24
   15b66:	e7f1      	b.n	15b4c <mesh_get_pnd_pkt_slot+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:294
        if (MESH_ZERO_ADDR == arr[i].pkt.nwk.dst) {
   15b68:	4614      	mov	r4, r2
   15b6a:	3224      	adds	r2, #36	; 0x24
   15b6c:	f812 5c23 	ldrb.w	r5, [r2, #-35]
   15b70:	2d00      	cmp	r5, #0
   15b72:	d1e7      	bne.n	15b44 <mesh_get_pnd_pkt_slot+0xc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:320
            }
        }
    }

    return entry;
}
   15b74:	4620      	mov	r0, r4
   15b76:	bd30      	pop	{r4, r5, pc}

00015b78 <mesh_pending_packets_add>:
mesh_pending_packets_add():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:333
 *
 * This function assumes the packet is an ACK type packet to ensure delivery.
 * @param num_hops  The number of expected hops packet can take to set its retry time.
 */
static void mesh_pending_packets_add(const mesh_packet_t *pPkt, const uint8_t num_hops)
{
   15b78:	b538      	push	{r3, r4, r5, lr}
   15b7a:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:335
    mesh_pnd_pkt_t *entry = NULL;
    uint16_t timeout_ms = (1 + num_hops) * MESH_ACK_TIMEOUT_MS;
   15b7c:	00c9      	lsls	r1, r1, #3
   15b7e:	f101 0508 	add.w	r5, r1, #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:342
    /*
     * We have to update soft timers before we add a pending packet because if mesh_service()
     * is not called periodically, then the delta will be large, and the packet will be sent
     * again too soon.
     */
    mesh_update_soft_timers();
   15b82:	f7ff ff55 	bl	15a30 <mesh_update_soft_timers>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:347

    /* We don't want mesh packets to take precedence over our own pending packets, so
     * we use different pending packets arrays for our own pending packets.
     */
    if (g_our_node_id == pPkt->nwk.src) {
   15b86:	4b1c      	ldr	r3, [pc, #112]	; (15bf8 <mesh_pending_packets_add+0x80>)
   15b88:	7822      	ldrb	r2, [r4, #0]
   15b8a:	781b      	ldrb	r3, [r3, #0]
   15b8c:	429a      	cmp	r2, r3
   15b8e:	d124      	bne.n	15bda <mesh_pending_packets_add+0x62>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:348
        entry = mesh_get_pnd_pkt_slot(&g_our_pnd_pkts[0], g_our_pnd_pkts_size);
   15b90:	2102      	movs	r1, #2
   15b92:	481a      	ldr	r0, [pc, #104]	; (15bfc <mesh_pending_packets_add+0x84>)
   15b94:	f7ff ffd0 	bl	15b38 <mesh_get_pnd_pkt_slot>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:365
     * We should have route information, and hop_count already set.
     * TO DO: Should we reinitialize the retry count?
     * If we don't then we let the source dictate the retries throughout the mesh nodes.
     * If we do, then we increase the chances of getting the packet through.
     */
    entry->timer_ms    = 0;
   15b98:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->timeout_ms  = timeout_ms;
    entry->pkt         = *pPkt;
   15b9a:	4602      	mov	r2, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:365
    entry->timer_ms    = 0;
   15b9c:	f880 3020 	strb.w	r3, [r0, #32]
   15ba0:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   15ba4:	4623      	mov	r3, r4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:366
    entry->timeout_ms  = timeout_ms;
   15ba6:	f890 1023 	ldrb.w	r1, [r0, #35]	; 0x23
   15baa:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   15bae:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
   15bb2:	f3c5 2506 	ubfx	r5, r5, #8, #7
   15bb6:	430d      	orrs	r5, r1
   15bb8:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:367
    entry->pkt         = *pPkt;
   15bbc:	f104 0120 	add.w	r1, r4, #32
   15bc0:	f853 4b04 	ldr.w	r4, [r3], #4
   15bc4:	428b      	cmp	r3, r1
   15bc6:	f842 4b04 	str.w	r4, [r2], #4
   15bca:	d1f9      	bne.n	15bc0 <mesh_pending_packets_add+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:368
    entry->pkt.info.retries_rem = g_retry_count; /* DO THIS AFTER COPYING THE PACKET!!! */
   15bcc:	4a0c      	ldr	r2, [pc, #48]	; (15c00 <mesh_pending_packets_add+0x88>)
   15bce:	7903      	ldrb	r3, [r0, #4]
   15bd0:	7812      	ldrb	r2, [r2, #0]
   15bd2:	f362 03c5 	bfi	r3, r2, #3, #3
   15bd6:	7103      	strb	r3, [r0, #4]
   15bd8:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:351
        entry = mesh_get_pnd_pkt_slot(&g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   15bda:	2104      	movs	r1, #4
   15bdc:	4809      	ldr	r0, [pc, #36]	; (15c04 <mesh_pending_packets_add+0x8c>)
   15bde:	f7ff ffab 	bl	15b38 <mesh_get_pnd_pkt_slot>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:353
        if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   15be2:	78e3      	ldrb	r3, [r4, #3]
   15be4:	2b00      	cmp	r3, #0
   15be6:	d1d7      	bne.n	15b98 <mesh_pending_packets_add+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   15be8:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:355
            timeout_ms = MESH_PKT_DISC_TIMEOUT_MS;
   15bec:	2504      	movs	r5, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:354
            entry->disc_pkt = true;
   15bee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   15bf2:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   15bf6:	e7cf      	b.n	15b98 <mesh_pending_packets_add+0x20>
   15bf8:	2007c0cd 	.word	0x2007c0cd
   15bfc:	2007c642 	.word	0x2007c642
   15c00:	2007c0d4 	.word	0x2007c0d4
   15c04:	2007c58e 	.word	0x2007c58e

00015c08 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:215
{
   15c08:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:217
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_id);
   15c0a:	f7ff ff6f 	bl	15aec <mesh_find_rte_tbl_entry>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:222
    if (NULL == entry) {
   15c0e:	4603      	mov	r3, r0
   15c10:	b9d8      	cbnz	r0, 15c4a <mesh_get_rte_to_modify+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:223
        entry = mesh_find_rte_tbl_entry(MESH_ZERO_ADDR);
   15c12:	f7ff ff6b 	bl	15aec <mesh_find_rte_tbl_entry>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:226
        if (NULL == entry) {
   15c16:	4603      	mov	r3, r0
   15c18:	b9b8      	cbnz	r0, 15c4a <mesh_get_rte_to_modify+0x42>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:228
            lowest = entry->score;
   15c1a:	4a0d      	ldr	r2, [pc, #52]	; (15c50 <mesh_get_rte_to_modify+0x48>)
   15c1c:	78d3      	ldrb	r3, [r2, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   15c1e:	79d1      	ldrb	r1, [r2, #7]
   15c20:	7ad0      	ldrb	r0, [r2, #11]
   15c22:	428b      	cmp	r3, r1
   15c24:	bf96      	itet	ls
   15c26:	4619      	movls	r1, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   15c28:	1d13      	addhi	r3, r2, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:227
            entry = &(g_rte_table[0]);
   15c2a:	4613      	movls	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   15c2c:	4281      	cmp	r1, r0
   15c2e:	bf94      	ite	ls
   15c30:	4608      	movls	r0, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   15c32:	4b08      	ldrhi	r3, [pc, #32]	; (15c54 <mesh_get_rte_to_modify+0x4c>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:230
                if (g_rte_table[i].score < lowest) {
   15c34:	7bd1      	ldrb	r1, [r2, #15]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:232
                    entry = &(g_rte_table[i]);
   15c36:	4a08      	ldr	r2, [pc, #32]	; (15c58 <mesh_get_rte_to_modify+0x50>)
   15c38:	4281      	cmp	r1, r0
   15c3a:	bf38      	it	cc
   15c3c:	4613      	movcc	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   15c3e:	2200      	movs	r2, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   15c40:	4906      	ldr	r1, [pc, #24]	; (15c5c <mesh_get_rte_to_modify+0x54>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:235
            memset(entry, 0, sizeof(*entry));
   15c42:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:238
            g_mesh_stats.rte_overwritten++;
   15c44:	7aca      	ldrb	r2, [r1, #11]
   15c46:	3201      	adds	r2, #1
   15c48:	72ca      	strb	r2, [r1, #11]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:244
}
   15c4a:	4618      	mov	r0, r3
   15c4c:	bd08      	pop	{r3, pc}
   15c4e:	bf00      	nop
   15c50:	2007c697 	.word	0x2007c697
   15c54:	2007c69f 	.word	0x2007c69f
   15c58:	2007c6a3 	.word	0x2007c6a3
   15c5c:	2007c61e 	.word	0x2007c61e

00015c60 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:378

/**
 * Handles the timeout and retry logic for the pending packets array.
 */
static void mesh_handle_pnd_pkts_for_arr(const mesh_packet_t *pRxPkt, mesh_pnd_pkt_t *arr, const uint8_t size_of_array)
{
   15c60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   15c64:	f04f 0824 	mov.w	r8, #36	; 0x24
   15c68:	4605      	mov	r5, r0
   15c6a:	460c      	mov	r4, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:465
                // and retry the packet to find a new route.
            }
            /* Is it time to retransmit? */
            else if(pnd->timer_ms >= pnd->timeout_ms)
            {
                pnd->timer_ms = 0;
   15c6c:	2700      	movs	r7, #0
   15c6e:	fb08 1802 	mla	r8, r8, r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:479
                     * with unknown node.
                     * We only want to do this if we are the source node because we
                     * don't want the intermediate node to repeat 2x the retry count.
                     */
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   15c72:	f8df 915c 	ldr.w	r9, [pc, #348]	; 15dd0 <mesh_handle_pnd_pkts_for_arr+0x170>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
                        MESH_DEBUG_PRINTF("RETRY PKT AND DISC NEW RTE WITH NWK %i/%i",
                                          pnd->pkt.nwk.src, pnd->pkt.nwk.dst);
                        mesh_send_retry_packet(&(pnd->pkt));
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   15c76:	f8df a15c 	ldr.w	sl, [pc, #348]	; 15dd4 <mesh_handle_pnd_pkts_for_arr+0x174>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:383 (discriminator 1)
    for (i = 0; i < size_of_array; i++) {
   15c7a:	45a0      	cmp	r8, r4
   15c7c:	d101      	bne.n	15c82 <mesh_handle_pnd_pkts_for_arr+0x22>
   15c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:387
        if (pnd->disc_pkt) {
   15c82:	f994 3023 	ldrsb.w	r3, [r4, #35]	; 0x23
   15c86:	2b00      	cmp	r3, #0
   15c88:	da29      	bge.n	15cde <mesh_handle_pnd_pkts_for_arr+0x7e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:389
            if (NULL != pRxPkt &&
   15c8a:	b1cd      	cbz	r5, 15cc0 <mesh_handle_pnd_pkts_for_arr+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:390 (discriminator 1)
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   15c8c:	782b      	ldrb	r3, [r5, #0]
   15c8e:	7862      	ldrb	r2, [r4, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:389 (discriminator 1)
            if (NULL != pRxPkt &&
   15c90:	4293      	cmp	r3, r2
   15c92:	d109      	bne.n	15ca8 <mesh_handle_pnd_pkts_for_arr+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:390
                pRxPkt->nwk.src == pnd->pkt.nwk.dst && /* Destined node responded */
   15c94:	7868      	ldrb	r0, [r5, #1]
   15c96:	7821      	ldrb	r1, [r4, #0]
   15c98:	4288      	cmp	r0, r1
   15c9a:	d105      	bne.n	15ca8 <mesh_handle_pnd_pkts_for_arr+0x48>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:407
                memset(pnd, 0, sizeof(*pnd));
   15c9c:	2224      	movs	r2, #36	; 0x24
   15c9e:	2100      	movs	r1, #0
   15ca0:	4620      	mov	r0, r4
   15ca2:	f004 f831 	bl	19d08 <memset>
   15ca6:	e069      	b.n	15d7c <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:401 (discriminator 1)
            else if (NULL != pRxPkt &&
   15ca8:	78e9      	ldrb	r1, [r5, #3]
   15caa:	b149      	cbz	r1, 15cc0 <mesh_handle_pnd_pkts_for_arr+0x60>
mesh_is_same_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   15cac:	7869      	ldrb	r1, [r5, #1]
   15cae:	4291      	cmp	r1, r2
   15cb0:	d106      	bne.n	15cc0 <mesh_handle_pnd_pkts_for_arr+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   15cb2:	7822      	ldrb	r2, [r4, #0]
   15cb4:	429a      	cmp	r2, r3
   15cb6:	d103      	bne.n	15cc0 <mesh_handle_pnd_pkts_for_arr+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   15cb8:	79aa      	ldrb	r2, [r5, #6]
   15cba:	79a3      	ldrb	r3, [r4, #6]
   15cbc:	429a      	cmp	r2, r3
   15cbe:	d0ed      	beq.n	15c9c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:412
            else if (pnd->timer_ms >= pnd->timeout_ms) {
   15cc0:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
   15cc4:	f894 3022 	ldrb.w	r3, [r4, #34]	; 0x22
   15cc8:	8c21      	ldrh	r1, [r4, #32]
   15cca:	f002 027f 	and.w	r2, r2, #127	; 0x7f
   15cce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
   15cd2:	4299      	cmp	r1, r3
   15cd4:	db52      	blt.n	15d7c <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:415
                mesh_send_packet(&(pnd->pkt));
   15cd6:	4620      	mov	r0, r4
   15cd8:	f7ff fed0 	bl	15a7c <mesh_send_packet>
   15cdc:	e7de      	b.n	15c9c <mesh_handle_pnd_pkts_for_arr+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:420
        else if (MESH_ZERO_ADDR != pnd->pkt.nwk.dst) {
   15cde:	7863      	ldrb	r3, [r4, #1]
   15ce0:	2b00      	cmp	r3, #0
   15ce2:	d04b      	beq.n	15d7c <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:429
            if (NULL != pRxPkt &&
   15ce4:	2d00      	cmp	r5, #0
   15ce6:	d032      	beq.n	15d4e <mesh_handle_pnd_pkts_for_arr+0xee>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:430 (discriminator 1)
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   15ce8:	792a      	ldrb	r2, [r5, #4]
   15cea:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:429 (discriminator 1)
            if (NULL != pRxPkt &&
   15cee:	2ac0      	cmp	r2, #192	; 0xc0
   15cf0:	d12b      	bne.n	15d4a <mesh_handle_pnd_pkts_for_arr+0xea>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:430
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   15cf2:	7822      	ldrb	r2, [r4, #0]
   15cf4:	7869      	ldrb	r1, [r5, #1]
   15cf6:	428a      	cmp	r2, r1
   15cf8:	d102      	bne.n	15d00 <mesh_handle_pnd_pkts_for_arr+0xa0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:431
                    pnd->pkt.nwk.src == pRxPkt->nwk.dst &&
   15cfa:	7828      	ldrb	r0, [r5, #0]
   15cfc:	4298      	cmp	r0, r3
   15cfe:	d0cd      	beq.n	15c9c <mesh_handle_pnd_pkts_for_arr+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:439
                    mesh_pkt_ack_rsp == pRxPkt->info.pkt_type &&
   15d00:	78e6      	ldrb	r6, [r4, #3]
   15d02:	78a8      	ldrb	r0, [r5, #2]
   15d04:	4286      	cmp	r6, r0
   15d06:	d108      	bne.n	15d1a <mesh_handle_pnd_pkts_for_arr+0xba>
mesh_is_same_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   15d08:	4299      	cmp	r1, r3
   15d0a:	d106      	bne.n	15d1a <mesh_handle_pnd_pkts_for_arr+0xba>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   15d0c:	7829      	ldrb	r1, [r5, #0]
   15d0e:	428a      	cmp	r2, r1
   15d10:	d103      	bne.n	15d1a <mesh_handle_pnd_pkts_for_arr+0xba>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   15d12:	79a1      	ldrb	r1, [r4, #6]
   15d14:	79aa      	ldrb	r2, [r5, #6]
   15d16:	4291      	cmp	r1, r2
   15d18:	d0c0      	beq.n	15c9c <mesh_handle_pnd_pkts_for_arr+0x3c>
mesh_handle_pnd_pkts_for_arr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:451
                    pRxPkt->info.pkt_type &&
   15d1a:	78a9      	ldrb	r1, [r5, #2]
   15d1c:	78e2      	ldrb	r2, [r4, #3]
   15d1e:	4291      	cmp	r1, r2
   15d20:	d115      	bne.n	15d4e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_is_same_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   15d22:	786a      	ldrb	r2, [r5, #1]
   15d24:	429a      	cmp	r2, r3
   15d26:	d112      	bne.n	15d4e <mesh_handle_pnd_pkts_for_arr+0xee>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:111
    return (p1->nwk.dst == p2->nwk.dst &&
   15d28:	7821      	ldrb	r1, [r4, #0]
   15d2a:	782a      	ldrb	r2, [r5, #0]
   15d2c:	4291      	cmp	r1, r2
   15d2e:	d10e      	bne.n	15d4e <mesh_handle_pnd_pkts_for_arr+0xee>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:112
            p1->nwk.src == p2->nwk.src &&
   15d30:	79a1      	ldrb	r1, [r4, #6]
   15d32:	79aa      	ldrb	r2, [r5, #6]
   15d34:	4291      	cmp	r1, r2
   15d36:	d10a      	bne.n	15d4e <mesh_handle_pnd_pkts_for_arr+0xee>
mesh_handle_pnd_pkts_for_arr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   15d38:	7923      	ldrb	r3, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   15d3a:	f884 7020 	strb.w	r7, [r4, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   15d3e:	f367 03c5 	bfi	r3, r7, #3, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:455
                pnd->timer_ms = 0;
   15d42:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:456
                pnd->pkt.info.retries_rem = 0;
   15d46:	7123      	strb	r3, [r4, #4]
   15d48:	e018      	b.n	15d7c <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:450 (discriminator 1)
            else if (NULL != pRxPkt &&
   15d4a:	2a00      	cmp	r2, #0
   15d4c:	d1e5      	bne.n	15d1a <mesh_handle_pnd_pkts_for_arr+0xba>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:463
            else if(pnd->timer_ms >= pnd->timeout_ms)
   15d4e:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   15d52:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   15d56:	8c20      	ldrh	r0, [r4, #32]
   15d58:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   15d5c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
   15d60:	4290      	cmp	r0, r2
   15d62:	db0b      	blt.n	15d7c <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   15d64:	7922      	ldrb	r2, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   15d66:	f884 7020 	strb.w	r7, [r4, #32]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   15d6a:	f3c2 01c2 	ubfx	r1, r2, #3, #3
   15d6e:	b2ce      	uxtb	r6, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:465
                pnd->timer_ms = 0;
   15d70:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:467
                if (pnd->pkt.info.retries_rem > 0) {
   15d74:	b126      	cbz	r6, 15d80 <mesh_handle_pnd_pkts_for_arr+0x120>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:469
                    mesh_send_retry_packet(&(pnd->pkt));
   15d76:	4620      	mov	r0, r4
   15d78:	f7ff fe9e 	bl	15ab8 <mesh_send_retry_packet>
   15d7c:	3424      	adds	r4, #36	; 0x24
   15d7e:	e77c      	b.n	15c7a <mesh_handle_pnd_pkts_for_arr+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:478
                    if (mesh_pkt_ack_rsp != pnd->pkt.info.pkt_type &&
   15d80:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
   15d84:	2ac0      	cmp	r2, #192	; 0xc0
   15d86:	d020      	beq.n	15dca <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:478 (discriminator 1)
   15d88:	7820      	ldrb	r0, [r4, #0]
   15d8a:	f899 2000 	ldrb.w	r2, [r9]
   15d8e:	4290      	cmp	r0, r2
   15d90:	d11b      	bne.n	15dca <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   15d92:	78e2      	ldrb	r2, [r4, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:479
                            pnd->pkt.nwk.src == g_our_node_id &&    /* Source was us */
   15d94:	4293      	cmp	r3, r2
   15d96:	d018      	beq.n	15dca <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:480
                            pnd->pkt.mac.dst != pnd->pkt.nwk.dst && /* Through intermediate node */
   15d98:	b1ba      	cbz	r2, 15dca <mesh_handle_pnd_pkts_for_arr+0x16a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   15d9a:	2203      	movs	r2, #3
   15d9c:	7963      	ldrb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:483
                        pnd->pkt.mac.dst = MESH_ZERO_ADDR;         /* Route is now unknown  */
   15d9e:	70e1      	strb	r1, [r4, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:484
                        pnd->pkt.info.hop_count_max = MESH_RTE_DISCOVERY_HOPS;
   15da0:	f362 1307 	bfi	r3, r2, #4, #4
   15da4:	7163      	strb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:487
                        mesh_send_retry_packet(&(pnd->pkt));
   15da6:	4620      	mov	r0, r4
   15da8:	f7ff fe86 	bl	15ab8 <mesh_send_retry_packet>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:488
                        pnd->pkt.info.retries_rem = g_retry_count; /* Reset retry count */
   15dac:	7923      	ldrb	r3, [r4, #4]
   15dae:	f89a 2000 	ldrb.w	r2, [sl]
   15db2:	f362 03c5 	bfi	r3, r2, #3, #3
   15db6:	7123      	strb	r3, [r4, #4]
mesh_remove_rte_entry():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:251
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst_node_id);
   15db8:	7860      	ldrb	r0, [r4, #1]
   15dba:	f7ff fe97 	bl	15aec <mesh_find_rte_tbl_entry>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:252
    if (NULL != entry) {
   15dbe:	b100      	cbz	r0, 15dc2 <mesh_handle_pnd_pkts_for_arr+0x162>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:253
        memset(entry, 0, sizeof(*entry));
   15dc0:	6007      	str	r7, [r0, #0]
mesh_handle_pnd_pkts_for_arr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:510
                     * the expense of time, and retries, however, it is less code this way.
                     */
                }
            }

            if (clear) {
   15dc2:	2e00      	cmp	r6, #0
   15dc4:	f47f af6a 	bne.w	15c9c <mesh_handle_pnd_pkts_for_arr+0x3c>
   15dc8:	e7d8      	b.n	15d7c <mesh_handle_pnd_pkts_for_arr+0x11c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:493
                        clear = true;
   15dca:	2601      	movs	r6, #1
   15dcc:	e7f4      	b.n	15db8 <mesh_handle_pnd_pkts_for_arr+0x158>
   15dce:	bf00      	nop
   15dd0:	2007c0cd 	.word	0x2007c0cd
   15dd4:	2007c0d4 	.word	0x2007c0d4

00015dd8 <mesh_set_node_address>:
mesh_set_node_address():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:798
}

bool mesh_set_node_address(const uint8_t local_node_id)
{
    bool success = false;
    if (MESH_ZERO_ADDR != local_node_id && MESH_BROADCAST_ADDR != local_node_id) {
   15dd8:	1e43      	subs	r3, r0, #1
   15dda:	b2db      	uxtb	r3, r3
   15ddc:	2bfd      	cmp	r3, #253	; 0xfd
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:799
        g_our_node_id = local_node_id;
   15dde:	bf9d      	ittte	ls
   15de0:	4b02      	ldrls	r3, [pc, #8]	; (15dec <mesh_set_node_address+0x14>)
   15de2:	7018      	strbls	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:800
        success = true;
   15de4:	2001      	movls	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:797
    bool success = false;
   15de6:	2000      	movhi	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:803
    }
    return success;
}
   15de8:	4770      	bx	lr
   15dea:	bf00      	nop
   15dec:	2007c0cd 	.word	0x2007c0cd

00015df0 <mesh_get_node_address>:
mesh_get_node_address():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:808

uint8_t mesh_get_node_address(void)
{
    return g_our_node_id;
}
   15df0:	4b01      	ldr	r3, [pc, #4]	; (15df8 <mesh_get_node_address+0x8>)
   15df2:	7818      	ldrb	r0, [r3, #0]
   15df4:	4770      	bx	lr
   15df6:	bf00      	nop
   15df8:	2007c0cd 	.word	0x2007c0cd

00015dfc <mesh_form_pkt>:
mesh_form_pkt():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:955
}

bool mesh_form_pkt(mesh_packet_t *pkt, const uint8_t dst,
                   const mesh_protocol_t type, const uint8_t hop_count_max,
                   uint8_t num_ptrs, ...)
{
   15dfc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15e00:	4604      	mov	r4, r0
   15e02:	4691      	mov	r9, r2
   15e04:	461e      	mov	r6, r3
   15e06:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:958
    bool ok = false;

    if(MESH_ZERO_ADDR == dst || dst == g_our_node_id   ||   /* Invalid destination */
   15e0a:	460f      	mov	r7, r1
   15e0c:	2900      	cmp	r1, #0
   15e0e:	d065      	beq.n	15edc <mesh_form_pkt+0xe0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 1)
   15e10:	4b34      	ldr	r3, [pc, #208]	; (15ee4 <mesh_form_pkt+0xe8>)
   15e12:	f893 8000 	ldrb.w	r8, [r3]
   15e16:	4541      	cmp	r1, r8
   15e18:	d060      	beq.n	15edc <mesh_form_pkt+0xe0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:958 (discriminator 2)
   15e1a:	2e0f      	cmp	r6, #15
   15e1c:	d85e      	bhi.n	15edc <mesh_form_pkt+0xe0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:959
       hop_count_max > MESH_HOP_COUNT_MAX ||                /* Hop count overflow */
   15e1e:	2800      	cmp	r0, #0
   15e20:	d05e      	beq.n	15ee0 <mesh_form_pkt+0xe4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:967
        ok = false;
        return ok;
    }

    /* All good so far, so zero out the structure */
    memset(pkt, 0, sizeof(*pkt));
   15e22:	2220      	movs	r2, #32
   15e24:	2100      	movs	r1, #0
   15e26:	f003 ff6f 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:970

    /* Force broadcast packet to be NACK type otherwise the type given by user */
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   15e2a:	2fff      	cmp	r7, #255	; 0xff
   15e2c:	bf08      	it	eq
   15e2e:	f04f 0900 	moveq.w	r9, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:973

    /* Populate packet header */
    pkt->info.version = MESH_VERSION;
   15e32:	2203      	movs	r2, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   15e34:	7923      	ldrb	r3, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:979
    // Redundant due to memset() :
    // pkt->info.hop_count = 0;
    pkt->info.retries_rem = g_retry_count;
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();

    pkt->nwk.dst = dst;
   15e36:	7067      	strb	r7, [r4, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:970
    pkt->info.pkt_type = (MESH_BROADCAST_ADDR == dst) ? mesh_pkt_nack : type;
   15e38:	f369 1387 	bfi	r3, r9, #6, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:973
    pkt->info.version = MESH_VERSION;
   15e3c:	f362 0302 	bfi	r3, r2, #0, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   15e40:	4a29      	ldr	r2, [pc, #164]	; (15ee8 <mesh_form_pkt+0xec>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:980
    pkt->nwk.src = g_our_node_id;
   15e42:	f884 8000 	strb.w	r8, [r4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   15e46:	7812      	ldrb	r2, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:981
    pkt->mac.src = g_our_node_id;
   15e48:	f884 8002 	strb.w	r8, [r4, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   15e4c:	f362 03c5 	bfi	r3, r2, #3, #3
mesh_get_next_seq_num():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   15e50:	4a26      	ldr	r2, [pc, #152]	; (15eec <mesh_form_pkt+0xf0>)
mesh_form_pkt():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:976
    pkt->info.retries_rem = g_retry_count;
   15e52:	7123      	strb	r3, [r4, #4]
mesh_get_next_seq_num():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:121
    return ++s_next_packet_id;
   15e54:	7813      	ldrb	r3, [r2, #0]
   15e56:	3301      	adds	r3, #1
   15e58:	b2db      	uxtb	r3, r3
   15e5a:	7013      	strb	r3, [r2, #0]
mesh_form_pkt():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:977
    pkt->info.pkt_seq_num = mesh_get_next_seq_num();
   15e5c:	71a3      	strb	r3, [r4, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:985

    /* Copy the data, and set the data_len */
    va_list vl;
    va_start(vl, num_ptrs);
   15e5e:	ab0b      	add	r3, sp, #44	; 0x2c
   15e60:	9301      	str	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:986
    if (num_ptrs > 0) {
   15e62:	b9c5      	cbnz	r5, 15e96 <mesh_form_pkt+0x9a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1005
            }
        }
    }
    /* For the case of ping packet when data will be NULL */
    else {
        ok = true;
   15e64:	2501      	movs	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    }
    va_end(vl);

    /* Populate routing info last, but it could be NULL */
    g_locked = true;
   15e66:	2301      	movs	r3, #1
   15e68:	f8df 8084 	ldr.w	r8, [pc, #132]	; 15ef0 <mesh_form_pkt+0xf4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   15e6c:	4638      	mov	r0, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1010
    g_locked = true;
   15e6e:	f888 3000 	strb.w	r3, [r8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1011
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(dst);
   15e72:	f7ff fe3b 	bl	15aec <mesh_find_rte_tbl_entry>
   15e76:	4607      	mov	r7, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1012
    mesh_update_rte_scores(entry);
   15e78:	f7ff fe4a 	bl	15b10 <mesh_update_rte_scores>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1013
    g_locked = false;
   15e7c:	2300      	movs	r3, #0
   15e7e:	f888 3000 	strb.w	r3, [r8]
   15e82:	7963      	ldrb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1015

    if (NULL == entry) {
   15e84:	bb1f      	cbnz	r7, 15ece <mesh_form_pkt+0xd2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1016
        pkt->info.hop_count_max = hop_count_max;
   15e86:	f366 1307 	bfi	r3, r6, #4, #4
   15e8a:	7163      	strb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1017
        pkt->mac.dst = MESH_ZERO_ADDR;
   15e8c:	70e7      	strb	r7, [r4, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1025
        pkt->info.hop_count_max = entry->num_hops;
        pkt->mac.dst = entry->next_hop;
    }

    return ok;
}
   15e8e:	4628      	mov	r0, r5
   15e90:	b003      	add	sp, #12
   15e92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   15e96:	f104 0908 	add.w	r9, r4, #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   15e9a:	9a01      	ldr	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   15e9c:	79e0      	ldrb	r0, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   15e9e:	4613      	mov	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   15ea0:	6852      	ldr	r2, [r2, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:989
            const void *p = va_arg(vl, void*);
   15ea2:	f853 1b08 	ldr.w	r1, [r3], #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:991
            const uint8_t next_len = (s + pkt->info.data_len);
   15ea6:	eb00 0802 	add.w	r8, r0, r2
   15eaa:	fa5f f888 	uxtb.w	r8, r8
   15eae:	3d01      	subs	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   15eb0:	f1b8 0f18 	cmp.w	r8, #24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:990
            const int   s = va_arg(vl, int);
   15eb4:	9301      	str	r3, [sp, #4]
   15eb6:	b2ed      	uxtb	r5, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:993
            if (next_len <= sizeof(pkt->data)) {
   15eb8:	d807      	bhi.n	15eca <mesh_form_pkt+0xce>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:994
                memcpy( (&(pkt->data[0]) + pkt->info.data_len), p, s);
   15eba:	4448      	add	r0, r9
   15ebc:	f003 feff 	bl	19cbe <memcpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:995
                pkt->info.data_len = next_len;
   15ec0:	f884 8007 	strb.w	r8, [r4, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:988
        while(num_ptrs--) {
   15ec4:	2d00      	cmp	r5, #0
   15ec6:	d1e8      	bne.n	15e9a <mesh_form_pkt+0x9e>
   15ec8:	e7cc      	b.n	15e64 <mesh_form_pkt+0x68>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:998
                ok = false;
   15eca:	2500      	movs	r5, #0
   15ecc:	e7cb      	b.n	15e66 <mesh_form_pkt+0x6a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1020
        pkt->info.hop_count_max = entry->num_hops;
   15ece:	78ba      	ldrb	r2, [r7, #2]
   15ed0:	f362 1307 	bfi	r3, r2, #4, #4
   15ed4:	7163      	strb	r3, [r4, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1021
        pkt->mac.dst = entry->next_hop;
   15ed6:	787b      	ldrb	r3, [r7, #1]
   15ed8:	70e3      	strb	r3, [r4, #3]
   15eda:	e7d8      	b.n	15e8e <mesh_form_pkt+0x92>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:963
        return ok;
   15edc:	2500      	movs	r5, #0
   15ede:	e7d6      	b.n	15e8e <mesh_form_pkt+0x92>
   15ee0:	4605      	mov	r5, r0
   15ee2:	e7d4      	b.n	15e8e <mesh_form_pkt+0x92>
   15ee4:	2007c0cd 	.word	0x2007c0cd
   15ee8:	2007c0d4 	.word	0x2007c0d4
   15eec:	2007c6a7 	.word	0x2007c6a7
   15ef0:	2007c58d 	.word	0x2007c58d

00015ef4 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1061

    /* We don't want a task to send a packet, while mesh_service() is simultaneously
     * trying to send a packet too.  We also want to add to pending packets and lock
     * out mesh_send() from accessing the structures.
     */
    g_locked = true;
   15ef4:	2201      	movs	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1054
{
   15ef6:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   15ef8:	4e13      	ldr	r6, [pc, #76]	; (15f48 <mesh_send_formed_pkt+0x54>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   15efa:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1061
    g_locked = true;
   15efc:	7032      	strb	r2, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1062
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   15efe:	b920      	cbnz	r0, 15f0a <mesh_send_formed_pkt+0x16>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1055
    bool ok = false;
   15f00:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1075

        if (ack_pkt || rsp_pkt) {
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
        }
    }
    g_locked = false;
   15f02:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1078

    return ok;
}
   15f04:	4628      	mov	r0, r5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1075
    g_locked = false;
   15f06:	7033      	strb	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1078
}
   15f08:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1062 (discriminator 1)
    if (NULL != pkt && (ok = mesh_send_packet(pkt))) {
   15f0a:	f7ff fdb7 	bl	15a7c <mesh_send_packet>
   15f0e:	4605      	mov	r5, r0
   15f10:	2800      	cmp	r0, #0
   15f12:	d0f5      	beq.n	15f00 <mesh_send_formed_pkt+0xc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1064
        const bool ack_pkt = (mesh_pkt_ack == pkt->info.pkt_type || mesh_pkt_ack_app == pkt->info.pkt_type);
   15f14:	7923      	ldrb	r3, [r4, #4]
   15f16:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   15f1a:	2b40      	cmp	r3, #64	; 0x40
   15f1c:	d010      	beq.n	15f40 <mesh_send_formed_pkt+0x4c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1064 (discriminator 2)
   15f1e:	f1a3 0180 	sub.w	r1, r3, #128	; 0x80
   15f22:	424a      	negs	r2, r1
   15f24:	414a      	adcs	r2, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 2)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   15f26:	2bc0      	cmp	r3, #192	; 0xc0
   15f28:	d10b      	bne.n	15f42 <mesh_send_formed_pkt+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 1)
   15f2a:	78e3      	ldrb	r3, [r4, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1067 (discriminator 1)
        const bool rsp_pkt = (mesh_pkt_ack_rsp == pkt->info.pkt_type &&
   15f2c:	b14b      	cbz	r3, 15f42 <mesh_send_formed_pkt+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1068 (discriminator 4)
                              pkt->mac.dst != MESH_ZERO_ADDR &&
   15f2e:	7861      	ldrb	r1, [r4, #1]
   15f30:	4299      	cmp	r1, r3
   15f32:	d006      	beq.n	15f42 <mesh_send_formed_pkt+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1072
            mesh_pending_packets_add(pkt, pkt->info.hop_count_max);
   15f34:	7961      	ldrb	r1, [r4, #5]
   15f36:	4620      	mov	r0, r4
   15f38:	0909      	lsrs	r1, r1, #4
   15f3a:	f7ff fe1d 	bl	15b78 <mesh_pending_packets_add>
   15f3e:	e7e0      	b.n	15f02 <mesh_send_formed_pkt+0xe>
   15f40:	4602      	mov	r2, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1071
        if (ack_pkt || rsp_pkt) {
   15f42:	2a00      	cmp	r2, #0
   15f44:	d1f6      	bne.n	15f34 <mesh_send_formed_pkt+0x40>
   15f46:	e7dc      	b.n	15f02 <mesh_send_formed_pkt+0xe>
   15f48:	2007c58d 	.word	0x2007c58d

00015f4c <mesh_init>:
mesh_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   15f4c:	b082      	sub	sp, #8
   15f4e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15f52:	4691      	mov	r9, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   15f54:	1e42      	subs	r2, r0, #1
   15f56:	b2d2      	uxtb	r2, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   15f58:	b08d      	sub	sp, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   15f5a:	2afd      	cmp	r2, #253	; 0xfd
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:750
{
   15f5c:	4605      	mov	r5, r0
   15f5e:	460e      	mov	r6, r1
   15f60:	9315      	str	r3, [sp, #84]	; 0x54
   15f62:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:755
    if (MESH_ZERO_ADDR == id || MESH_BROADCAST_ADDR == id) {
   15f66:	d905      	bls.n	15f74 <mesh_init+0x28>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:756
        return status;
   15f68:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:793
}
   15f6a:	b00d      	add	sp, #52	; 0x34
   15f6c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15f70:	b002      	add	sp, #8
   15f72:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:760
    if (NULL == d.app_recv || NULL == d.radio_init ||
   15f74:	2b00      	cmp	r3, #0
   15f76:	d0f7      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 1)
   15f78:	9f17      	ldr	r7, [sp, #92]	; 0x5c
   15f7a:	2f00      	cmp	r7, #0
   15f7c:	d0f4      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:760 (discriminator 2)
   15f7e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   15f80:	2b00      	cmp	r3, #0
   15f82:	d0f1      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:761
        NULL == d.radio_recv || NULL == d.radio_send ||
   15f84:	9b18      	ldr	r3, [sp, #96]	; 0x60
   15f86:	2b00      	cmp	r3, #0
   15f88:	d0ee      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:761 (discriminator 1)
   15f8a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   15f8c:	2b00      	cmp	r3, #0
   15f8e:	d0eb      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   15f90:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:766
    memset(&g_our_pnd_pkts[0], 0, sizeof(g_our_pnd_pkts));
   15f92:	2248      	movs	r2, #72	; 0x48
   15f94:	2100      	movs	r1, #0
   15f96:	4823      	ldr	r0, [pc, #140]	; (16024 <mesh_init+0xd8>)
   15f98:	f003 feb6 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:767
    memset(&g_mesh_pnd_pkts[0], 0, sizeof(g_mesh_pnd_pkts));
   15f9c:	2290      	movs	r2, #144	; 0x90
   15f9e:	2100      	movs	r1, #0
   15fa0:	4821      	ldr	r0, [pc, #132]	; (16028 <mesh_init+0xdc>)
   15fa2:	f003 feb1 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:768
    memset(&g_rte_table[0], 0, sizeof(g_rte_table));
   15fa6:	2210      	movs	r2, #16
   15fa8:	2100      	movs	r1, #0
   15faa:	4820      	ldr	r0, [pc, #128]	; (1602c <mesh_init+0xe0>)
   15fac:	f003 feac 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:769
    memset(&g_pkt_hist[0], 0, sizeof(g_pkt_hist));
   15fb0:	4b1f      	ldr	r3, [pc, #124]	; (16030 <mesh_init+0xe4>)
   15fb2:	601c      	str	r4, [r3, #0]
   15fb4:	605c      	str	r4, [r3, #4]
   15fb6:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:771
    memset(&g_mesh_stats, 0, sizeof(g_mesh_stats));
   15fb8:	4b1e      	ldr	r3, [pc, #120]	; (16034 <mesh_init+0xe8>)
   15fba:	601c      	str	r4, [r3, #0]
   15fbc:	605c      	str	r4, [r3, #4]
   15fbe:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:774
    g_our_node_id = id;
   15fc0:	4b1d      	ldr	r3, [pc, #116]	; (16038 <mesh_init+0xec>)
   15fc2:	701d      	strb	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   15fc4:	4b1d      	ldr	r3, [pc, #116]	; (1603c <mesh_init+0xf0>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   15fc6:	4d1e      	ldr	r5, [pc, #120]	; (16040 <mesh_init+0xf4>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:775
    g_rpt_node = is_rpt_node;
   15fc8:	701e      	strb	r6, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   15fca:	ae15      	add	r6, sp, #84	; 0x54
   15fcc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   15fce:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   15fd0:	6833      	ldr	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   15fd2:	2218      	movs	r2, #24
   15fd4:	4621      	mov	r1, r4
   15fd6:	481b      	ldr	r0, [pc, #108]	; (16044 <mesh_init+0xf8>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:776
    g_driver = d;
   15fd8:	602b      	str	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:777
    memset(g_our_name, 0, sizeof(g_our_name));
   15fda:	f003 fe95 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:778
    strncpy(g_our_name, node_name, sizeof(g_our_name)-1);
   15fde:	4649      	mov	r1, r9
   15fe0:	2217      	movs	r2, #23
   15fe2:	4818      	ldr	r0, [pc, #96]	; (16044 <mesh_init+0xf8>)
   15fe4:	f005 fb7b 	bl	1b6de <strncpy>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:781
    status = g_driver.radio_init(NULL, 0);
   15fe8:	4621      	mov	r1, r4
   15fea:	4620      	mov	r0, r4
   15fec:	47b8      	blx	r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:782
    if (status && send_discovery_packet) {
   15fee:	2800      	cmp	r0, #0
   15ff0:	d0ba      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:782 (discriminator 1)
   15ff2:	f1b8 0f00 	cmp.w	r8, #0
   15ff6:	d102      	bne.n	15ffe <mesh_init+0xb2>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:789
        status = mesh_update_soft_timers();
   15ff8:	f7ff fd1a 	bl	15a30 <mesh_update_soft_timers>
   15ffc:	e7b5      	b.n	15f6a <mesh_init+0x1e>
mesh_send():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   15ffe:	2306      	movs	r3, #6
   16000:	9302      	str	r3, [sp, #8]
   16002:	4b11      	ldr	r3, [pc, #68]	; (16048 <mesh_init+0xfc>)
   16004:	4622      	mov	r2, r4
   16006:	9301      	str	r3, [sp, #4]
   16008:	2301      	movs	r3, #1
   1600a:	21ff      	movs	r1, #255	; 0xff
   1600c:	9300      	str	r3, [sp, #0]
   1600e:	a804      	add	r0, sp, #16
   16010:	f7ff fef4 	bl	15dfc <mesh_form_pkt>
   16014:	2800      	cmp	r0, #0
   16016:	d0a7      	beq.n	15f68 <mesh_init+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   16018:	a804      	add	r0, sp, #16
   1601a:	f7ff ff6b 	bl	15ef4 <mesh_send_formed_pkt>
mesh_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:788
    if (status) {
   1601e:	2800      	cmp	r0, #0
   16020:	d0a2      	beq.n	15f68 <mesh_init+0x1c>
   16022:	e7e9      	b.n	15ff8 <mesh_init+0xac>
   16024:	2007c642 	.word	0x2007c642
   16028:	2007c58e 	.word	0x2007c58e
   1602c:	2007c697 	.word	0x2007c697
   16030:	2007c68a 	.word	0x2007c68a
   16034:	2007c61e 	.word	0x2007c61e
   16038:	2007c0cd 	.word	0x2007c0cd
   1603c:	2007c696 	.word	0x2007c696
   16040:	2007c578 	.word	0x2007c578
   16044:	2007c62a 	.word	0x2007c62a
   16048:	00020a26 	.word	0x00020a26

0001604c <mesh_send>:
mesh_send():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   1604c:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   1604e:	2b18      	cmp	r3, #24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:931
{
   16050:	b08d      	sub	sp, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:942
    if(len <= sizeof(packet.data) && !(!!pData ^ !!len)) {
   16052:	d807      	bhi.n	16064 <mesh_send+0x18>
   16054:	1c1d      	adds	r5, r3, #0
   16056:	fab2 f482 	clz	r4, r2
   1605a:	bf18      	it	ne
   1605c:	2501      	movne	r5, #1
   1605e:	0964      	lsrs	r4, r4, #5
   16060:	42ac      	cmp	r4, r5
   16062:	d101      	bne.n	16068 <mesh_send+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:932
    bool status = false;
   16064:	2000      	movs	r0, #0
   16066:	e00e      	b.n	16086 <mesh_send+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:944
        if (mesh_form_pkt(&packet, dst, type, hop_count_max, pair_cnt, pData, len)) {
   16068:	9302      	str	r3, [sp, #8]
   1606a:	9201      	str	r2, [sp, #4]
   1606c:	9500      	str	r5, [sp, #0]
   1606e:	460a      	mov	r2, r1
   16070:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   16074:	4601      	mov	r1, r0
   16076:	a804      	add	r0, sp, #16
   16078:	f7ff fec0 	bl	15dfc <mesh_form_pkt>
   1607c:	2800      	cmp	r0, #0
   1607e:	d0f1      	beq.n	16064 <mesh_send+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:945
            status = mesh_send_formed_pkt(&packet);
   16080:	a804      	add	r0, sp, #16
   16082:	f7ff ff37 	bl	15ef4 <mesh_send_formed_pkt>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:950
}
   16086:	b00d      	add	sp, #52	; 0x34
   16088:	bd30      	pop	{r4, r5, pc}

0001608a <mesh_send_ack>:
mesh_send_ack():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.h:273
 * This simplifies sending an acknowledgment back because the user does not need to know
 * about some of the parameters for mesh_send() function.
 * @param   p_orig_pkt  The unmodified original packet that was received.
 */
static inline bool mesh_send_ack(char* pData, uint8_t len, const mesh_packet_t* p_orig_pkt)
{
   1608a:	b513      	push	{r0, r1, r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.h:275
    /* Response needs to be NACK otherwise loop of ACKs will occur */
    return mesh_send(p_orig_pkt->nwk.src, mesh_pkt_ack_rsp, pData, len, p_orig_pkt->info.hop_count_max);
   1608c:	7953      	ldrb	r3, [r2, #5]
   1608e:	7814      	ldrb	r4, [r2, #0]
   16090:	091b      	lsrs	r3, r3, #4
   16092:	9300      	str	r3, [sp, #0]
   16094:	4602      	mov	r2, r0
   16096:	460b      	mov	r3, r1
   16098:	4620      	mov	r0, r4
   1609a:	2103      	movs	r1, #3
   1609c:	f7ff ffd6 	bl	1604c <mesh_send>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.h:276
}
   160a0:	b002      	add	sp, #8
   160a2:	bd10      	pop	{r4, pc}

000160a4 <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1100

    return entry;
}

uint8_t mesh_get_num_routing_entries(void)
{
   160a4:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1101
    uint8_t idx = 0, found_entries = 0;
   160a6:	4618      	mov	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1104

    for (idx = 0; idx < g_rte_tbl_size; idx++) {
        if (MESH_ZERO_ADDR != g_rte_table[idx].dst) {
   160a8:	4a04      	ldr	r2, [pc, #16]	; (160bc <mesh_get_num_routing_entries+0x18>)
   160aa:	f812 1023 	ldrb.w	r1, [r2, r3, lsl #2]
   160ae:	b109      	cbz	r1, 160b4 <mesh_get_num_routing_entries+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1105
            ++found_entries;
   160b0:	3001      	adds	r0, #1
   160b2:	b2c0      	uxtb	r0, r0
   160b4:	3301      	adds	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1103 (discriminator 2)
    for (idx = 0; idx < g_rte_tbl_size; idx++) {
   160b6:	2b04      	cmp	r3, #4
   160b8:	d1f7      	bne.n	160aa <mesh_get_num_routing_entries+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1110
        }
    }

    return found_entries;
}
   160ba:	4770      	bx	lr
   160bc:	2007c697 	.word	0x2007c697

000160c0 <mesh_service>:
mesh_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:818
{
   160c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   160c4:	b088      	sub	sp, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:819
    mesh_packet_t packet = { {0},{0} };
   160c6:	2220      	movs	r2, #32
   160c8:	2100      	movs	r1, #0
   160ca:	4668      	mov	r0, sp
   160cc:	f003 fe1c 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:825
    if (g_locked) {
   160d0:	4ba3      	ldr	r3, [pc, #652]	; (16360 <mesh_service+0x2a0>)
   160d2:	781b      	ldrb	r3, [r3, #0]
   160d4:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   160d8:	bb2b      	cbnz	r3, 16126 <mesh_service+0x66>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:829
    if (g_driver.radio_recv(&packet, sizeof(packet)))
   160da:	4fa2      	ldr	r7, [pc, #648]	; (16364 <mesh_service+0x2a4>)
   160dc:	2120      	movs	r1, #32
   160de:	693b      	ldr	r3, [r7, #16]
   160e0:	4668      	mov	r0, sp
   160e2:	4798      	blx	r3
   160e4:	b908      	cbnz	r0, 160ea <mesh_service+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:820
    mesh_packet_t *pMeshPacket = NULL;
   160e6:	2400      	movs	r4, #0
   160e8:	e011      	b.n	1610e <mesh_service+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:834
        g_mesh_stats.pkts_intercepted++;
   160ea:	4d9f      	ldr	r5, [pc, #636]	; (16368 <mesh_service+0x2a8>)
   160ec:	886b      	ldrh	r3, [r5, #2]
   160ee:	3301      	adds	r3, #1
   160f0:	806b      	strh	r3, [r5, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   160f2:	f7ff ffd7 	bl	160a4 <mesh_get_num_routing_entries>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   160f6:	f89d 2004 	ldrb.w	r2, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:835
        g_mesh_stats.rte_entries = mesh_get_num_routing_entries();
   160fa:	72a8      	strb	r0, [r5, #10]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:839
        if (MESH_VERSION != packet.info.version) {
   160fc:	f002 0307 	and.w	r3, r2, #7
   16100:	2b03      	cmp	r3, #3
   16102:	d013      	beq.n	1612c <mesh_service+0x6c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:841
            g_error_mask |= mesh_err_ver_mismatch;
   16104:	4a99      	ldr	r2, [pc, #612]	; (1636c <mesh_service+0x2ac>)
   16106:	7813      	ldrb	r3, [r2, #0]
   16108:	f043 0301 	orr.w	r3, r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   1610c:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:919 (discriminator 3)
    mesh_update_soft_timers();
   1610e:	f7ff fc8f 	bl	15a30 <mesh_update_soft_timers>
mesh_handle_pending_packets():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:525 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_mesh_pnd_pkts[0], g_mesh_pnd_pkts_size);
   16112:	2204      	movs	r2, #4
   16114:	4996      	ldr	r1, [pc, #600]	; (16370 <mesh_service+0x2b0>)
   16116:	4620      	mov	r0, r4
   16118:	f7ff fda2 	bl	15c60 <mesh_handle_pnd_pkts_for_arr>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:526 (discriminator 3)
    mesh_handle_pnd_pkts_for_arr(pRxPkt, &g_our_pnd_pkts[0],  g_our_pnd_pkts_size);
   1611c:	2202      	movs	r2, #2
   1611e:	4995      	ldr	r1, [pc, #596]	; (16374 <mesh_service+0x2b4>)
   16120:	4620      	mov	r0, r4
   16122:	f7ff fd9d 	bl	15c60 <mesh_handle_pnd_pkts_for_arr>
mesh_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:926
}
   16126:	b008      	add	sp, #32
   16128:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:844
        else if (packet.mac.src == g_our_node_id) {
   1612c:	4b92      	ldr	r3, [pc, #584]	; (16378 <mesh_service+0x2b8>)
   1612e:	f89d e002 	ldrb.w	lr, [sp, #2]
   16132:	781e      	ldrb	r6, [r3, #0]
   16134:	45b6      	cmp	lr, r6
   16136:	d104      	bne.n	16142 <mesh_service+0x82>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:846
            g_error_mask |= mesh_err_dup_node;
   16138:	4a8c      	ldr	r2, [pc, #560]	; (1636c <mesh_service+0x2ac>)
   1613a:	7813      	ldrb	r3, [r2, #0]
   1613c:	f043 0302 	orr.w	r3, r3, #2
   16140:	e7e4      	b.n	1610c <mesh_service+0x4c>
mesh_update_history_and_routing():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   16142:	4d8e      	ldr	r5, [pc, #568]	; (1637c <mesh_service+0x2bc>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   16144:	4621      	mov	r1, r4
   16146:	46a8      	mov	r8, r5
   16148:	f3c2 02c2 	ubfx	r2, r2, #3, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:542
    new_pkt.src = pPkt->nwk.src;
   1614c:	f89d 0000 	ldrb.w	r0, [sp]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:543
    new_pkt.pkt_id = pPkt->info.pkt_seq_num;
   16150:	f89d c006 	ldrb.w	ip, [sp, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:544
    new_pkt.retries = pPkt->info.retries_rem;
   16154:	fa5f f982 	uxtb.w	r9, r2
   16158:	eb01 0341 	add.w	r3, r1, r1, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:549
        if(existing->src == new_pkt.src && existing->pkt_id == new_pkt.pkt_id) {
   1615c:	f813 a005 	ldrb.w	sl, [r3, r5]
   16160:	4582      	cmp	sl, r0
   16162:	d123      	bne.n	161ac <mesh_service+0xec>
   16164:	442b      	add	r3, r5
   16166:	f893 a001 	ldrb.w	sl, [r3, #1]
   1616a:	45e2      	cmp	sl, ip
   1616c:	d11e      	bne.n	161ac <mesh_service+0xec>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   1616e:	789d      	ldrb	r5, [r3, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:553
            existing->retries = new_pkt.retries;
   16170:	709a      	strb	r2, [r3, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:552
            *is_retry_packet = (existing->retries != new_pkt.retries);
   16172:	ebb5 0509 	subs.w	r5, r5, r9
   16176:	bf18      	it	ne
   16178:	2501      	movne	r5, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:550
            duplicate_packet = true;
   1617a:	f04f 0901 	mov.w	r9, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:600
    entry = mesh_get_rte_to_modify(pPkt->mac.src);
   1617e:	f89d 0002 	ldrb.w	r0, [sp, #2]
   16182:	f7ff fd41 	bl	15c08 <mesh_get_rte_to_modify>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:601
    entry->dst = pPkt->mac.src;
   16186:	f89d 2002 	ldrb.w	r2, [sp, #2]
   1618a:	7002      	strb	r2, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:602
    entry->next_hop = pPkt->mac.src;
   1618c:	7042      	strb	r2, [r0, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:603
    entry->num_hops = 0;
   1618e:	2200      	movs	r2, #0
   16190:	7082      	strb	r2, [r0, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:604
    mesh_update_rte_scores(entry);
   16192:	f7ff fcbd 	bl	15b10 <mesh_update_rte_scores>
mesh_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:855
            const bool unique_packet = !duplicate || is_retry_packet;
   16196:	f1b9 0f00 	cmp.w	r9, #0
   1619a:	d001      	beq.n	161a0 <mesh_service+0xe0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:869 (discriminator 6)
            if (!unique_packet)
   1619c:	2d00      	cmp	r5, #0
   1619e:	d0a2      	beq.n	160e6 <mesh_service+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:879
            else if (g_our_node_id == packet.nwk.src) {
   161a0:	f89d 3000 	ldrb.w	r3, [sp]
   161a4:	42b3      	cmp	r3, r6
   161a6:	d133      	bne.n	16210 <mesh_service+0x150>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:905
                pMeshPacket = &packet;
   161a8:	466c      	mov	r4, sp
   161aa:	e7b0      	b.n	1610e <mesh_service+0x4e>
   161ac:	3101      	adds	r1, #1
mesh_update_history_and_routing():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:547
    for(i = 0; i < g_pkt_history_size; i++) {
   161ae:	2904      	cmp	r1, #4
   161b0:	d1d2      	bne.n	16158 <mesh_service+0x98>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   161b2:	4973      	ldr	r1, [pc, #460]	; (16380 <mesh_service+0x2c0>)
   161b4:	680b      	ldr	r3, [r1, #0]
   161b6:	709a      	strb	r2, [r3, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   161b8:	4a72      	ldr	r2, [pc, #456]	; (16384 <mesh_service+0x2c4>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   161ba:	7018      	strb	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   161bc:	4293      	cmp	r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:564
        *g_pkt_hist_wptr = new_pkt;
   161be:	f883 c001 	strb.w	ip, [r3, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:566
        if (g_pkt_hist_wptr == &(g_pkt_hist[g_pkt_history_size-1])) {
   161c2:	d106      	bne.n	161d2 <mesh_service+0x112>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:567
            g_pkt_hist_wptr = &(g_pkt_hist[0]);
   161c4:	f8c1 8000 	str.w	r8, [r1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   161c8:	4586      	cmp	lr, r0
   161ca:	d105      	bne.n	161d8 <mesh_service+0x118>
mesh_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:851
            bool is_retry_packet = false;
   161cc:	2500      	movs	r5, #0
mesh_update_history_and_routing():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:537
    bool duplicate_packet = false;
   161ce:	46a9      	mov	r9, r5
   161d0:	e7d5      	b.n	1617e <mesh_service+0xbe>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:570
            g_pkt_hist_wptr++;
   161d2:	3303      	adds	r3, #3
   161d4:	600b      	str	r3, [r1, #0]
   161d6:	e7f7      	b.n	161c8 <mesh_service+0x108>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:577
        if (pPkt->mac.src != pPkt->nwk.src && g_our_node_id != pPkt->nwk.src) {
   161d8:	4286      	cmp	r6, r0
   161da:	d0f7      	beq.n	161cc <mesh_service+0x10c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:578
            entry = mesh_get_rte_to_modify(pPkt->nwk.src);
   161dc:	f7ff fd14 	bl	15c08 <mesh_get_rte_to_modify>
   161e0:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:579
            mesh_update_rte_scores(entry);
   161e2:	f7ff fc95 	bl	15b10 <mesh_update_rte_scores>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:586
            if (MESH_ZERO_ADDR == entry->dst || pPkt->info.hop_count <= entry->num_hops) {
   161e6:	782b      	ldrb	r3, [r5, #0]
   161e8:	b133      	cbz	r3, 161f8 <mesh_service+0x138>
   161ea:	f89d 3005 	ldrb.w	r3, [sp, #5]
   161ee:	78aa      	ldrb	r2, [r5, #2]
   161f0:	f003 030f 	and.w	r3, r3, #15
   161f4:	4293      	cmp	r3, r2
   161f6:	dce9      	bgt.n	161cc <mesh_service+0x10c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:587
                entry->dst = pPkt->nwk.src;
   161f8:	f89d 3000 	ldrb.w	r3, [sp]
   161fc:	702b      	strb	r3, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:588
                entry->next_hop = pPkt->mac.src;
   161fe:	f89d 3002 	ldrb.w	r3, [sp, #2]
   16202:	706b      	strb	r3, [r5, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:589
                entry->num_hops = pPkt->info.hop_count;
   16204:	f89d 3005 	ldrb.w	r3, [sp, #5]
   16208:	f3c3 0303 	ubfx	r3, r3, #0, #4
   1620c:	70ab      	strb	r3, [r5, #2]
   1620e:	e7dd      	b.n	161cc <mesh_service+0x10c>
mesh_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:883
            else if(MESH_BROADCAST_ADDR == packet.nwk.dst)
   16210:	f89d 8001 	ldrb.w	r8, [sp, #1]
   16214:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
   16218:	d11b      	bne.n	16252 <mesh_service+0x192>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:886
                if (!g_driver.app_recv(&packet, sizeof(packet))) {
   1621a:	683b      	ldr	r3, [r7, #0]
   1621c:	2120      	movs	r1, #32
   1621e:	4668      	mov	r0, sp
   16220:	4798      	blx	r3
   16222:	b920      	cbnz	r0, 1622e <mesh_service+0x16e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:887
                    g_error_mask |= mesh_err_app_recv;
   16224:	4a51      	ldr	r2, [pc, #324]	; (1636c <mesh_service+0x2ac>)
   16226:	7813      	ldrb	r3, [r2, #0]
   16228:	f043 0304 	orr.w	r3, r3, #4
   1622c:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:891
                if (packet.info.hop_count++ < packet.info.hop_count_max) {
   1622e:	f89d 3005 	ldrb.w	r3, [sp, #5]
   16232:	f003 020f 	and.w	r2, r3, #15
   16236:	1c51      	adds	r1, r2, #1
   16238:	f361 0303 	bfi	r3, r1, #0, #4
   1623c:	f88d 3005 	strb.w	r3, [sp, #5]
   16240:	f3c3 1303 	ubfx	r3, r3, #4, #4
   16244:	429a      	cmp	r2, r3
   16246:	f6bf af4e 	bge.w	160e6 <mesh_service+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:893
                    mesh_send_packet(&packet);
   1624a:	4668      	mov	r0, sp
   1624c:	f7ff fc16 	bl	15a7c <mesh_send_packet>
   16250:	e749      	b.n	160e6 <mesh_service+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:896
            else if (g_our_node_id == packet.nwk.dst)
   16252:	4546      	cmp	r6, r8
   16254:	d12e      	bne.n	162b4 <mesh_service+0x1f4>
mesh_handle_our_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:691
    if (!dup && pPkt->info.data_len > 0) {
   16256:	f1b9 0f00 	cmp.w	r9, #0
   1625a:	d10c      	bne.n	16276 <mesh_service+0x1b6>
   1625c:	f89d 3007 	ldrb.w	r3, [sp, #7]
   16260:	b14b      	cbz	r3, 16276 <mesh_service+0x1b6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:693
        if (!g_driver.app_recv(pPkt, sizeof(*pPkt))) {
   16262:	683b      	ldr	r3, [r7, #0]
   16264:	2120      	movs	r1, #32
   16266:	4668      	mov	r0, sp
   16268:	4798      	blx	r3
   1626a:	b920      	cbnz	r0, 16276 <mesh_service+0x1b6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:694
            g_error_mask |= mesh_err_app_recv;
   1626c:	4a3f      	ldr	r2, [pc, #252]	; (1636c <mesh_service+0x2ac>)
   1626e:	7813      	ldrb	r3, [r2, #0]
   16270:	f043 0304 	orr.w	r3, r3, #4
   16274:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:699
    if (ack && mesh_pkt_ack == pPkt->info.pkt_type) {
   16276:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1627a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   1627e:	2b40      	cmp	r3, #64	; 0x40
   16280:	d112      	bne.n	162a8 <mesh_service+0x1e8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   16282:	f89d 3007 	ldrb.w	r3, [sp, #7]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   16286:	466a      	mov	r2, sp
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:702
        if (0 == pPkt->info.data_len) {
   16288:	b923      	cbnz	r3, 16294 <mesh_service+0x1d4>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:705
            mesh_send_ack(g_our_name, size, pPkt);
   1628a:	2118      	movs	r1, #24
   1628c:	483e      	ldr	r0, [pc, #248]	; (16388 <mesh_service+0x2c8>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   1628e:	f7ff fefc 	bl	1608a <mesh_send_ack>
   16292:	e789      	b.n	161a8 <mesh_service+0xe8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:708
        else if (!mesh_send_ack((char*)&g_mesh_stats, sizeof(g_mesh_stats), pPkt))
   16294:	210c      	movs	r1, #12
   16296:	4834      	ldr	r0, [pc, #208]	; (16368 <mesh_service+0x2a8>)
   16298:	f7ff fef7 	bl	1608a <mesh_send_ack>
   1629c:	2800      	cmp	r0, #0
   1629e:	d183      	bne.n	161a8 <mesh_service+0xe8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:716
            mesh_send_ack(NULL, 0, pPkt);
   162a0:	2100      	movs	r1, #0
   162a2:	466a      	mov	r2, sp
   162a4:	4608      	mov	r0, r1
   162a6:	e7f2      	b.n	1628e <mesh_service+0x1ce>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:725
    else if (MESH_ZERO_ADDR == pPkt->mac.dst) {
   162a8:	f89d 3003 	ldrb.w	r3, [sp, #3]
   162ac:	2b00      	cmp	r3, #0
   162ae:	f47f af7b 	bne.w	161a8 <mesh_service+0xe8>
   162b2:	e7f5      	b.n	162a0 <mesh_service+0x1e0>
mesh_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:904
            else if (g_rpt_node && packet.info.hop_count < packet.info.hop_count_max) {
   162b4:	4b35      	ldr	r3, [pc, #212]	; (1638c <mesh_service+0x2cc>)
   162b6:	781f      	ldrb	r7, [r3, #0]
   162b8:	2f00      	cmp	r7, #0
   162ba:	f43f af14 	beq.w	160e6 <mesh_service+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:904 (discriminator 1)
   162be:	f89d 5005 	ldrb.w	r5, [sp, #5]
   162c2:	f005 090f 	and.w	r9, r5, #15
   162c6:	ea4f 1a15 	mov.w	sl, r5, lsr #4
   162ca:	45d1      	cmp	r9, sl
   162cc:	f6bf af0b 	bge.w	160e6 <mesh_service+0x26>
mesh_handle_mesh_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:617
    mesh_rte_table_t *entry = mesh_find_rte_tbl_entry(pPkt->nwk.dst);
   162d0:	4640      	mov	r0, r8
   162d2:	f7ff fc0b 	bl	15aec <mesh_find_rte_tbl_entry>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   162d6:	f89d 3003 	ldrb.w	r3, [sp, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   162da:	f109 0901 	add.w	r9, r9, #1
   162de:	f369 0503 	bfi	r5, r9, #0, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   162e2:	429e      	cmp	r6, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:622
    pPkt->info.hop_count++;
   162e4:	f88d 5005 	strb.w	r5, [sp, #5]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:625
    if (g_our_node_id == pPkt->mac.dst) {
   162e8:	d124      	bne.n	16334 <mesh_service+0x274>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:627
        const bool ack_pkt = (mesh_pkt_ack == pPkt->info.pkt_type) || (mesh_pkt_ack_app == pPkt->info.pkt_type);
   162ea:	f89d 3004 	ldrb.w	r3, [sp, #4]
   162ee:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   162f2:	2b40      	cmp	r3, #64	; 0x40
   162f4:	d003      	beq.n	162fe <mesh_service+0x23e>
   162f6:	f1a3 0280 	sub.w	r2, r3, #128	; 0x80
   162fa:	4257      	negs	r7, r2
   162fc:	4157      	adcs	r7, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   162fe:	b350      	cbz	r0, 16356 <mesh_service+0x296>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   16300:	2bc0      	cmp	r3, #192	; 0xc0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:629
        const uint8_t next_dst = entry ? entry->next_hop : MESH_ZERO_ADDR;
   16302:	7844      	ldrb	r4, [r0, #1]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   16304:	d120      	bne.n	16348 <mesh_service+0x288>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:630
        const bool ack_rsp = (mesh_pkt_ack_rsp == pPkt->info.pkt_type) && /* ACK's response packet */
   16306:	45a0      	cmp	r8, r4
   16308:	d012      	beq.n	16330 <mesh_service+0x270>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   1630a:	3400      	adds	r4, #0
   1630c:	bf18      	it	ne
   1630e:	2401      	movne	r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   16310:	433c      	orrs	r4, r7
   16312:	f004 0401 	and.w	r4, r4, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:651
    if (entry) {
   16316:	b1d0      	cbz	r0, 1634e <mesh_service+0x28e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:652
        pPkt->mac.dst = entry->next_hop;
   16318:	7843      	ldrb	r3, [r0, #1]
   1631a:	f88d 3003 	strb.w	r3, [sp, #3]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:653
        num_hops = entry->num_hops;
   1631e:	7885      	ldrb	r5, [r0, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:659
    mesh_send_packet(pPkt);
   16320:	4668      	mov	r0, sp
   16322:	f7ff fbab 	bl	15a7c <mesh_send_packet>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:673
    if(ensure_delivery) {
   16326:	2c00      	cmp	r4, #0
   16328:	f43f af3e 	beq.w	161a8 <mesh_service+0xe8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   1632c:	4629      	mov	r1, r5
   1632e:	e007      	b.n	16340 <mesh_service+0x280>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   16330:	2400      	movs	r4, #0
   16332:	e7ed      	b.n	16310 <mesh_service+0x250>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:640
    else if (MESH_ZERO_ADDR == pPkt->mac.dst && NULL == entry) {
   16334:	2b00      	cmp	r3, #0
   16336:	f47f af37 	bne.w	161a8 <mesh_service+0xe8>
   1633a:	2800      	cmp	r0, #0
   1633c:	d1ec      	bne.n	16318 <mesh_service+0x258>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:642
        mesh_pending_packets_add(pPkt, pPkt->info.hop_count_max);
   1633e:	4651      	mov	r1, sl
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:677
        mesh_pending_packets_add(pPkt, num_hops);
   16340:	4668      	mov	r0, sp
   16342:	f7ff fc19 	bl	15b78 <mesh_pending_packets_add>
   16346:	e72f      	b.n	161a8 <mesh_service+0xe8>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:634
        ensure_delivery = ack_pkt | ack_rsp;
   16348:	463c      	mov	r4, r7
   1634a:	e7e5      	b.n	16318 <mesh_service+0x258>
   1634c:	463c      	mov	r4, r7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:656
        pPkt->mac.dst = MESH_ZERO_ADDR;
   1634e:	2500      	movs	r5, #0
   16350:	f88d 5003 	strb.w	r5, [sp, #3]
   16354:	e7e4      	b.n	16320 <mesh_service+0x260>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:631
                              (pPkt->nwk.dst  != next_dst) &&  /* Through intermediate node */
   16356:	2bc0      	cmp	r3, #192	; 0xc0
   16358:	d1f8      	bne.n	1634c <mesh_service+0x28c>
   1635a:	4604      	mov	r4, r0
   1635c:	e7d8      	b.n	16310 <mesh_service+0x250>
   1635e:	bf00      	nop
   16360:	2007c58d 	.word	0x2007c58d
   16364:	2007c578 	.word	0x2007c578
   16368:	2007c61e 	.word	0x2007c61e
   1636c:	2007c58c 	.word	0x2007c58c
   16370:	2007c58e 	.word	0x2007c58e
   16374:	2007c642 	.word	0x2007c642
   16378:	2007c0cd 	.word	0x2007c0cd
   1637c:	2007c68a 	.word	0x2007c68a
   16380:	2007c0d0 	.word	0x2007c0d0
   16384:	2007c693 	.word	0x2007c693
   16388:	2007c62a 	.word	0x2007c62a
   1638c:	2007c696 	.word	0x2007c696

00016390 <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1126

    return false;
}

uint8_t mesh_get_pnd_pkt_count(void)
{
   16390:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1127
    uint8_t i = 0, count = 0;
   16392:	4618      	mov	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1130

    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_mesh_pnd_pkts[i].pkt.nwk.dst) {
   16394:	4a09      	ldr	r2, [pc, #36]	; (163bc <mesh_get_pnd_pkt_count+0x2c>)
   16396:	18d1      	adds	r1, r2, r3
   16398:	7849      	ldrb	r1, [r1, #1]
   1639a:	b109      	cbz	r1, 163a0 <mesh_get_pnd_pkt_count+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1131
            ++count;
   1639c:	3001      	adds	r0, #1
   1639e:	b2c0      	uxtb	r0, r0
   163a0:	3324      	adds	r3, #36	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1129 (discriminator 2)
    for (i = 0; i < g_mesh_pnd_pkts_size; i++) {
   163a2:	2b90      	cmp	r3, #144	; 0x90
   163a4:	d1f7      	bne.n	16396 <mesh_get_pnd_pkt_count+0x6>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1136 (discriminator 1)
        }
    }

    for (i = 0; i < g_our_pnd_pkts_size; i++) {
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   163a6:	4b06      	ldr	r3, [pc, #24]	; (163c0 <mesh_get_pnd_pkt_count+0x30>)
   163a8:	785a      	ldrb	r2, [r3, #1]
   163aa:	b10a      	cbz	r2, 163b0 <mesh_get_pnd_pkt_count+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   163ac:	3001      	adds	r0, #1
   163ae:	b2c0      	uxtb	r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1136
        if (MESH_ZERO_ADDR != g_our_pnd_pkts[i].pkt.nwk.dst) {
   163b0:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   163b4:	b10b      	cbz	r3, 163ba <mesh_get_pnd_pkt_count+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1137
            ++count;
   163b6:	3001      	adds	r0, #1
   163b8:	b2c0      	uxtb	r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/mesh.c:1142
        }
    }

    return count;
}
   163ba:	4770      	bx	lr
   163bc:	2007c58e 	.word	0x2007c58e
   163c0:	2007c642 	.word	0x2007c642

000163c4 <nordic_transfer>:
nordic_transfer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:24



// LOW LEVEL NORDIC IO FUNCTION:
static char nordic_transfer(char command, char* data, unsigned short length, bool copy)
{
   163c4:	b530      	push	{r4, r5, lr}
board_io_nordic_cs():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:57
static inline char board_io_nordic_cs(void)      { LPC_GPIO0->FIOCLR = (1 << BIO_NORDIC_CS_P0PIN); return 1; }
   163c6:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   163ca:	4c36      	ldr	r4, [pc, #216]	; (164a4 <nordic_transfer+0xe0>)
   163cc:	61e5      	str	r5, [r4, #28]
ssp_exchange_byte():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   163ce:	4c36      	ldr	r4, [pc, #216]	; (164a8 <nordic_transfer+0xe4>)
   163d0:	60a0      	str	r0, [r4, #8]
   163d2:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   163d4:	68c4      	ldr	r4, [r0, #12]
   163d6:	06e4      	lsls	r4, r4, #27
   163d8:	d4fc      	bmi.n	163d4 <nordic_transfer+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   163da:	6880      	ldr	r0, [r0, #8]
   163dc:	b2c0      	uxtb	r0, r0
nordic_transfer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:31

	NORDIC_LOCK_SPI();
	NORDIC_CS_ENABLE();

	char status = NORDIC_EXCHANGE_SPI(command);
	if(copy) {
   163de:	b963      	cbnz	r3, 163fa <nordic_transfer+0x36>
   163e0:	460b      	mov	r3, r1
ssp_exchange_byte():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77
    pSSP->DR = out;
   163e2:	4c31      	ldr	r4, [pc, #196]	; (164a8 <nordic_transfer+0xe4>)
nordic_transfer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:35 (discriminator 1)
	    NORDIC_EXCHANGE_MULTI_BYTE(data, length);
	}
	else {
        for( i = 0; i < length; i++) {
   163e4:	1a5d      	subs	r5, r3, r1
   163e6:	4295      	cmp	r5, r2
   163e8:	da09      	bge.n	163fe <nordic_transfer+0x3a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:36 (discriminator 3)
            NORDIC_EXCHANGE_SPI(data[i]);
   163ea:	f813 5b01 	ldrb.w	r5, [r3], #1
ssp_exchange_byte():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:77 (discriminator 3)
   163ee:	60a5      	str	r5, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:78
    while(pSSP->SR & (1 << 4)); // Wait until SSP is busy
   163f0:	68e5      	ldr	r5, [r4, #12]
   163f2:	06ed      	lsls	r5, r5, #27
   163f4:	d4fc      	bmi.n	163f0 <nordic_transfer+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:79
    return pSSP->DR;
   163f6:	68a5      	ldr	r5, [r4, #8]
   163f8:	e7f4      	b.n	163e4 <nordic_transfer+0x20>
   163fa:	4b2b      	ldr	r3, [pc, #172]	; (164a8 <nordic_transfer+0xe4>)
ssp_exchange_data():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:96
    while (len > 0) {
   163fc:	b922      	cbnz	r2, 16408 <nordic_transfer+0x44>
board_io_nordic_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   163fe:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   16402:	4b28      	ldr	r3, [pc, #160]	; (164a4 <nordic_transfer+0xe0>)
   16404:	619a      	str	r2, [r3, #24]
nordic_transfer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:44

	NORDIC_CS_DISABLE();
	NORDIC_UNLOCK_SPI();

	return status;
}
   16406:	bd30      	pop	{r4, r5, pc}
ssp_exchange_data():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:97
        if (len >= spi_fifo_size) {
   16408:	2a07      	cmp	r2, #7
   1640a:	780c      	ldrb	r4, [r1, #0]
   1640c:	dd29      	ble.n	16462 <nordic_transfer+0x9e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1640e:	609c      	str	r4, [r3, #8]
   16410:	784c      	ldrb	r4, [r1, #1]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:102
            len -= spi_fifo_size;
   16412:	3a08      	subs	r2, #8
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:98
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   16414:	609c      	str	r4, [r3, #8]
   16416:	788c      	ldrb	r4, [r1, #2]
   16418:	609c      	str	r4, [r3, #8]
   1641a:	78cc      	ldrb	r4, [r1, #3]
   1641c:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:99
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1641e:	790c      	ldrb	r4, [r1, #4]
   16420:	609c      	str	r4, [r3, #8]
   16422:	794c      	ldrb	r4, [r1, #5]
   16424:	609c      	str	r4, [r3, #8]
   16426:	798c      	ldrb	r4, [r1, #6]
   16428:	609c      	str	r4, [r3, #8]
   1642a:	79cd      	ldrb	r5, [r1, #7]
   1642c:	f101 0408 	add.w	r4, r1, #8
   16430:	609d      	str	r5, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:103
            while (!(pSSP->RIS & rx_fifo_half_full_bitmask));
   16432:	699d      	ldr	r5, [r3, #24]
   16434:	076d      	lsls	r5, r5, #29
   16436:	d5fc      	bpl.n	16432 <nordic_transfer+0x6e>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:104
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   16438:	689d      	ldr	r5, [r3, #8]
   1643a:	700d      	strb	r5, [r1, #0]
   1643c:	689d      	ldr	r5, [r3, #8]
   1643e:	704d      	strb	r5, [r1, #1]
   16440:	689d      	ldr	r5, [r3, #8]
   16442:	708d      	strb	r5, [r1, #2]
   16444:	689d      	ldr	r5, [r3, #8]
   16446:	70cd      	strb	r5, [r1, #3]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:107
            while(pSSP->SR & spi_busy_bitmask);
   16448:	68dd      	ldr	r5, [r3, #12]
   1644a:	06ed      	lsls	r5, r5, #27
   1644c:	d4fc      	bmi.n	16448 <nordic_transfer+0x84>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:108
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1644e:	689d      	ldr	r5, [r3, #8]
   16450:	710d      	strb	r5, [r1, #4]
   16452:	689d      	ldr	r5, [r3, #8]
   16454:	714d      	strb	r5, [r1, #5]
   16456:	689d      	ldr	r5, [r3, #8]
   16458:	718d      	strb	r5, [r1, #6]
   1645a:	689d      	ldr	r5, [r3, #8]
   1645c:	71cd      	strb	r5, [r1, #7]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1645e:	4621      	mov	r1, r4
   16460:	e7cc      	b.n	163fc <nordic_transfer+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:110
        else if (len >= spi_half_fifo_size) {
   16462:	2a03      	cmp	r2, #3
   16464:	dd14      	ble.n	16490 <nordic_transfer+0xcc>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   16466:	609c      	str	r4, [r3, #8]
   16468:	784c      	ldrb	r4, [r1, #1]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:112
            len -= spi_half_fifo_size;
   1646a:	3a04      	subs	r2, #4
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:111
            pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++; pSSP->DR = *dataOut++;
   1646c:	609c      	str	r4, [r3, #8]
   1646e:	788c      	ldrb	r4, [r1, #2]
   16470:	609c      	str	r4, [r3, #8]
   16472:	78cd      	ldrb	r5, [r1, #3]
   16474:	1d0c      	adds	r4, r1, #4
   16476:	609d      	str	r5, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:113
            while(pSSP->SR & spi_busy_bitmask);
   16478:	68dd      	ldr	r5, [r3, #12]
   1647a:	06ed      	lsls	r5, r5, #27
   1647c:	d4fc      	bmi.n	16478 <nordic_transfer+0xb4>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:114
            *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR; *dataIn++ = pSSP->DR;
   1647e:	689d      	ldr	r5, [r3, #8]
   16480:	700d      	strb	r5, [r1, #0]
   16482:	689d      	ldr	r5, [r3, #8]
   16484:	704d      	strb	r5, [r1, #1]
   16486:	689d      	ldr	r5, [r3, #8]
   16488:	708d      	strb	r5, [r1, #2]
   1648a:	689d      	ldr	r5, [r3, #8]
   1648c:	70cd      	strb	r5, [r1, #3]
   1648e:	e7e6      	b.n	1645e <nordic_transfer+0x9a>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   16490:	1c4d      	adds	r5, r1, #1
   16492:	609c      	str	r4, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:118
            --len;
   16494:	3a01      	subs	r2, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:119
            while(pSSP->SR & spi_busy_bitmask);
   16496:	68dc      	ldr	r4, [r3, #12]
   16498:	06e4      	lsls	r4, r4, #27
   1649a:	d4fc      	bmi.n	16496 <nordic_transfer+0xd2>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:120
            *dataIn++ = pSSP->DR;
   1649c:	689c      	ldr	r4, [r3, #8]
   1649e:	700c      	strb	r4, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:117
            pSSP->DR = *dataOut++;
   164a0:	4629      	mov	r1, r5
   164a2:	e7ab      	b.n	163fc <nordic_transfer+0x38>
   164a4:	2009c000 	.word	0x2009c000
   164a8:	40088000 	.word	0x40088000

000164ac <nordic_readRegister>:
nordic_readRegister():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
#define nordic_outputData(command, data, length)	\
			nordic_transfer(command, data, length, false)

static char nordic_readRegister(char reg)
{
	char data = 0;
   164ac:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:52
{
   164ae:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:53
	char data = 0;
   164b0:	a902      	add	r1, sp, #8
   164b2:	f801 3d01 	strb.w	r3, [r1, #-1]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:56
	char opcode = (reg & 0x1F) | 0x00;

	nordic_exchangeData(opcode, &data, 1);
   164b6:	2301      	movs	r3, #1
   164b8:	f000 001f 	and.w	r0, r0, #31
   164bc:	461a      	mov	r2, r3
   164be:	f7ff ff81 	bl	163c4 <nordic_transfer>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:58
	return data;
}
   164c2:	f89d 0007 	ldrb.w	r0, [sp, #7]
   164c6:	b003      	add	sp, #12
   164c8:	f85d fb04 	ldr.w	pc, [sp], #4

000164cc <nordic_writeRegister>:
nordic_writeRegister():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:61

static void nordic_writeRegister(char reg, char data)
{
   164cc:	b513      	push	{r0, r1, r4, lr}
   164ce:	ac02      	add	r4, sp, #8
   164d0:	f804 1d01 	strb.w	r1, [r4, #-1]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:62
	char opcode = (reg & 0x1F) | 0x20;
   164d4:	f000 001f 	and.w	r0, r0, #31
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:63
	nordic_outputData(opcode, &data, 1);
   164d8:	2300      	movs	r3, #0
   164da:	2201      	movs	r2, #1
   164dc:	4621      	mov	r1, r4
   164de:	f040 0020 	orr.w	r0, r0, #32
   164e2:	f7ff ff6f 	bl	163c4 <nordic_transfer>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:64
}
   164e6:	b002      	add	sp, #8
   164e8:	bd10      	pop	{r4, pc}

000164ea <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:117
bool nordic_is_tx_fifo_full()
{
	return !!(nordic_readStatusRegister() & (1<<0));
}
bool nordic_is_tx_fifo_empty()
{
   164ea:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:118
	return !!(nordic_readRegister(0x17) & (1<<4));
   164ec:	2017      	movs	r0, #23
   164ee:	f7ff ffdd 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:119
}
   164f2:	f3c0 1000 	ubfx	r0, r0, #4, #1
   164f6:	bd08      	pop	{r3, pc}

000164f8 <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:122
void nordic_clear_all_intr_flags()
{
	nordic_writeRegister(7, 0x70);
   164f8:	2170      	movs	r1, #112	; 0x70
   164fa:	2007      	movs	r0, #7
   164fc:	f7ff bfe6 	b.w	164cc <nordic_writeRegister>

00016500 <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:126
}
void nordic_queue_tx_fifo(char *data, unsigned short length)
{
	nordic_outputData(0xA0, data, length);
   16500:	460a      	mov	r2, r1
   16502:	2300      	movs	r3, #0
   16504:	4601      	mov	r1, r0
   16506:	20a0      	movs	r0, #160	; 0xa0
   16508:	f7ff bf5c 	b.w	163c4 <nordic_transfer>

0001650c <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:147

    NORDIC_CE_LOW();
    nordic_flush_tx_fifo();
}
void nordic_standby1_to_tx_mode1()
{
   1650c:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   1650e:	2000      	movs	r0, #0
   16510:	f7ff ffcc 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:149
}
   16514:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:148
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x01));	// Set the PRIM_RX to 0
   16518:	f000 01fe 	and.w	r1, r0, #254	; 0xfe
   1651c:	2000      	movs	r0, #0
   1651e:	f7ff bfd5 	b.w	164cc <nordic_writeRegister>
   16522:	Address 0x0000000000016522 is out of bounds.


00016524 <nordic_rx_to_Stanby1>:
board_io_nordic_ce_low():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   16524:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   16528:	4b01      	ldr	r3, [pc, #4]	; (16530 <nordic_rx_to_Stanby1+0xc>)
   1652a:	61da      	str	r2, [r3, #28]
   1652c:	4770      	bx	lr
   1652e:	bf00      	nop
   16530:	2009c020 	.word	0x2009c020

00016534 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:161
void nordic_rx_to_Stanby1()
{
	NORDIC_CE_LOW();
}
void nordic_standby1_to_rx()
{
   16534:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:162
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x01));	// Set the PRIM_RX to 1
   16536:	2000      	movs	r0, #0
   16538:	f7ff ffb8 	bl	164ac <nordic_readRegister>
   1653c:	f040 0101 	orr.w	r1, r0, #1
   16540:	b2c9      	uxtb	r1, r1
   16542:	2000      	movs	r0, #0
   16544:	f7ff ffc2 	bl	164cc <nordic_writeRegister>
board_io_nordic_ce_high():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:61
static inline void board_io_nordic_ce_high(void) { LPC_GPIO1->FIOSET = (1 << BIO_NORDIC_CE_P1PIN); }
   16548:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   1654c:	4b01      	ldr	r3, [pc, #4]	; (16554 <nordic_standby1_to_rx+0x20>)
   1654e:	619a      	str	r2, [r3, #24]
   16550:	bd08      	pop	{r3, pc}
   16552:	bf00      	nop
   16554:	2009c020 	.word	0x2009c020

00016558 <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:198
{
	return !!(nordic_readStatusRegister() & (1<<5));
}
void nordic_clear_packet_sent_flag()
{
	nordic_writeRegister(7, (1<<5));
   16558:	2120      	movs	r1, #32
   1655a:	2007      	movs	r0, #7
   1655c:	f7ff bfb6 	b.w	164cc <nordic_writeRegister>

00016560 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:210
{
	nordic_writeRegister(7, (1<<4));
}
void nordic_flush_tx_fifo()
{
	nordic_outputData(0xE1, 0, 0);
   16560:	2300      	movs	r3, #0
   16562:	20e1      	movs	r0, #225	; 0xe1
   16564:	461a      	mov	r2, r3
   16566:	4619      	mov	r1, r3
   16568:	f7ff bf2c 	b.w	163c4 <nordic_transfer>

0001656c <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:130
{
   1656c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1656e:	4604      	mov	r4, r0
   16570:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:131
    nordic_flush_tx_fifo();
   16572:	f7ff fff5 	bl	16560 <nordic_flush_tx_fifo>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:132
    nordic_queue_tx_fifo(data, length);
   16576:	4620      	mov	r0, r4
   16578:	4629      	mov	r1, r5
   1657a:	f7ff ffc1 	bl	16500 <nordic_queue_tx_fifo>
board_io_nordic_ce_high():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:61
   1657e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   16582:	4c0c      	ldr	r4, [pc, #48]	; (165b4 <nordic_mode1_send_single_packet+0x48>)
   16584:	61a2      	str	r2, [r4, #24]
nordic_mode1_send_single_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:138
    volatile uint16_t i = 0;
   16586:	2200      	movs	r2, #0
   16588:	f8ad 2006 	strh.w	r2, [sp, #6]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 2)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   1658c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   16590:	3301      	adds	r3, #1
   16592:	b29b      	uxth	r3, r3
   16594:	f8ad 3006 	strh.w	r3, [sp, #6]
   16598:	b933      	cbnz	r3, 165a8 <nordic_mode1_send_single_packet+0x3c>
board_io_nordic_ce_low():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:62
static inline void board_io_nordic_ce_low (void) { LPC_GPIO1->FIOCLR = (1 << BIO_NORDIC_CE_P1PIN); }
   1659a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   1659e:	61e3      	str	r3, [r4, #28]
nordic_mode1_send_single_packet():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:144
    nordic_flush_tx_fifo();
   165a0:	f7ff ffde 	bl	16560 <nordic_flush_tx_fifo>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:145
}
   165a4:	b003      	add	sp, #12
   165a6:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:139 (discriminator 1)
    while (++i != 0 && !nordic_is_tx_fifo_empty()) {
   165a8:	f7ff ff9f 	bl	164ea <nordic_is_tx_fifo_empty>
   165ac:	2800      	cmp	r0, #0
   165ae:	d0ed      	beq.n	1658c <nordic_mode1_send_single_packet+0x20>
   165b0:	e7f3      	b.n	1659a <nordic_mode1_send_single_packet+0x2e>
   165b2:	bf00      	nop
   165b4:	2009c020 	.word	0x2009c020

000165b8 <nordic_is_packet_available>:
nordic_is_packet_available():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:214
}

bool nordic_is_packet_available()
{
   165b8:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:221
     * and is manually cleared by clear_packet_available_flag() and doesn't
     * really cover us in the case when we may get multiple rx payloads
     * into the rx fifo. Therefore, reading 0x17 register's bit 0 is
     * more reliable because it states when rx fifo is empty (when 1).
     */
	return !(nordic_readRegister(0x17) & (1<<0));
   165ba:	2017      	movs	r0, #23
   165bc:	f7ff ff76 	bl	164ac <nordic_readRegister>
   165c0:	43c0      	mvns	r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:223
	//return !!(nordic_readStatusRegister() & (1<<6));
}
   165c2:	f000 0001 	and.w	r0, r0, #1
   165c6:	bd08      	pop	{r3, pc}

000165c8 <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:226
void nordic_clear_packet_available_flag()
{
	nordic_writeRegister(7, (1<<6));
   165c8:	2140      	movs	r1, #64	; 0x40
   165ca:	2007      	movs	r0, #7
   165cc:	f7ff bf7e 	b.w	164cc <nordic_writeRegister>

000165d0 <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:229
}
char nordic_read_rx_fifo(char *data, unsigned short length)
{
   165d0:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:230
	return ((nordic_exchangeData(0x61, data, length) & 0x0E) >> 1);
   165d2:	460a      	mov	r2, r1
   165d4:	2301      	movs	r3, #1
   165d6:	4601      	mov	r1, r0
   165d8:	2061      	movs	r0, #97	; 0x61
   165da:	f7ff fef3 	bl	163c4 <nordic_transfer>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:231
}
   165de:	f3c0 0042 	ubfx	r0, r0, #1, #3
   165e2:	bd08      	pop	{r3, pc}

000165e4 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:234
void nordic_flush_rx_fifo()
{
	nordic_outputData(0xE2, 0, 0);
   165e4:	2300      	movs	r3, #0
   165e6:	20e2      	movs	r0, #226	; 0xe2
   165e8:	461a      	mov	r2, r3
   165ea:	4619      	mov	r1, r3
   165ec:	f7ff beea 	b.w	163c4 <nordic_transfer>

000165f0 <nordic_set_intr_signals>:
nordic_set_intr_signals():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246



// CONFIGURATION FUNCTIONS:
void nordic_set_intr_signals(bool rx, bool tx, bool maxTransmissions)
{
   165f0:	b570      	push	{r4, r5, r6, lr}
   165f2:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   165f4:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:246
{
   165f6:	460d      	mov	r5, r1
   165f8:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:247
	char configRegister = nordic_readRegister(0);
   165fa:	f7ff ff57 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249

	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   165fe:	b166      	cbz	r6, 1661a <nordic_set_intr_signals+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 1)
   16600:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 4)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   16604:	b16d      	cbz	r5, 16622 <nordic_set_intr_signals+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 1)
   16606:	f000 01df 	and.w	r1, r0, #223	; 0xdf
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 4)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   1660a:	b16c      	cbz	r4, 16628 <nordic_set_intr_signals+0x38>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 1)
   1660c:	f001 01ef 	and.w	r1, r1, #239	; 0xef
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)

	nordic_writeRegister(0, configRegister);
   16610:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:254 (discriminator 4)
}
   16612:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:253 (discriminator 4)
	nordic_writeRegister(0, configRegister);
   16616:	f7ff bf59 	b.w	164cc <nordic_writeRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:249 (discriminator 2)
	configRegister =               rx ? (configRegister & ~(1<<6)) : (configRegister | (1<<6));
   1661a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   1661e:	b2c0      	uxtb	r0, r0
   16620:	e7f0      	b.n	16604 <nordic_set_intr_signals+0x14>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:250 (discriminator 2)
	configRegister =               tx ? (configRegister & ~(1<<5)) : (configRegister | (1<<5));
   16622:	f040 0120 	orr.w	r1, r0, #32
   16626:	e7f0      	b.n	1660a <nordic_set_intr_signals+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:251 (discriminator 2)
	configRegister = maxTransmissions ? (configRegister & ~(1<<4)) : (configRegister | (1<<4));
   16628:	f041 0110 	orr.w	r1, r1, #16
   1662c:	e7f0      	b.n	16610 <nordic_set_intr_signals+0x20>

0001662e <nordic_set_crc>:
nordic_set_crc():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:262
{
	return nordic_readRegister(7);
}

void nordic_set_crc(unsigned char length)
{
   1662e:	b510      	push	{r4, lr}
   16630:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:263
	char configRegister = nordic_readRegister(0);
   16632:	2000      	movs	r0, #0
   16634:	f7ff ff3a 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:266

	configRegister |= (1<<3);						// Enable CRC for now
	if(0 == length) configRegister &= ~(1<<3);		// Disable CRC if length is 0
   16638:	b934      	cbnz	r4, 16648 <nordic_set_crc+0x1a>
   1663a:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC

	nordic_writeRegister(0, configRegister);
   1663e:	2000      	movs	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:271
}
   16640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:270
	nordic_writeRegister(0, configRegister);
   16644:	f7ff bf42 	b.w	164cc <nordic_writeRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267
	else if(1 == length) configRegister &= ~(1<<2);	// 1Byte CRC
   16648:	2c01      	cmp	r4, #1
   1664a:	d104      	bne.n	16656 <nordic_set_crc+0x28>
   1664c:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:267 (discriminator 1)
   16650:	f041 0108 	orr.w	r1, r1, #8
   16654:	e7f3      	b.n	1663e <nordic_set_crc+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   16656:	2c02      	cmp	r4, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:265
	configRegister |= (1<<3);						// Enable CRC for now
   16658:	bf14      	ite	ne
   1665a:	f040 0108 	orrne.w	r1, r0, #8
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:268
	else if(2 == length) configRegister |=  (1<<2);	// 2Byte CRC
   1665e:	f040 010c 	orreq.w	r1, r0, #12
   16662:	b2c9      	uxtb	r1, r1
   16664:	e7eb      	b.n	1663e <nordic_set_crc+0x10>

00016666 <nordic_power_up>:
nordic_power_up():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:274

void nordic_power_up()
{
   16666:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   16668:	2000      	movs	r0, #0
   1666a:	f7ff ff1f 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:276
}
   1666e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:275
	nordic_writeRegister(0, (nordic_readRegister(0) | 0x02));
   16672:	f040 0102 	orr.w	r1, r0, #2
   16676:	b2c9      	uxtb	r1, r1
   16678:	2000      	movs	r0, #0
   1667a:	f7ff bf27 	b.w	164cc <nordic_writeRegister>

0001667e <nordic_power_down>:
nordic_power_down():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:278
void nordic_power_down()
{
   1667e:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   16680:	2000      	movs	r0, #0
   16682:	f7ff ff13 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:280
}
   16686:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:279
	nordic_writeRegister(0, (nordic_readRegister(0) & ~0x02));
   1668a:	f000 01fd 	and.w	r1, r0, #253	; 0xfd
   1668e:	2000      	movs	r0, #0
   16690:	f7ff bf1c 	b.w	164cc <nordic_writeRegister>

00016694 <nordic_set_channel>:
nordic_set_channel():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
void nordic_set_channel(unsigned short MHz)
{
	if(MHz > (2400 + 125)) MHz = (2400+125);
   16694:	f640 13dd 	movw	r3, #2525	; 0x9dd
   16698:	4298      	cmp	r0, r3
   1669a:	d80b      	bhi.n	166b4 <nordic_set_channel+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:284
	else if(MHz < 2400)    MHz = 2402;
   1669c:	f640 1362 	movw	r3, #2402	; 0x962
   166a0:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   166a4:	bf38      	it	cc
   166a6:	4618      	movcc	r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:286

	MHz -= 2400;
   166a8:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:287
	nordic_writeRegister(5, (char)MHz);
   166ac:	b2c9      	uxtb	r1, r1
   166ae:	2005      	movs	r0, #5
   166b0:	f7ff bf0c 	b.w	164cc <nordic_writeRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:283
	if(MHz > (2400 + 125)) MHz = (2400+125);
   166b4:	4618      	mov	r0, r3
   166b6:	e7f7      	b.n	166a8 <nordic_set_channel+0x14>

000166b8 <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:297
		nordic_writeRegister(6, (nordic_readRegister(6) | 0x80));
	else
		nordic_writeRegister(6, (nordic_readRegister(6) & ~0x80));
}
void nordic_set_air_data_rate(unsigned short kbps)
{
   166b8:	b510      	push	{r4, lr}
   166ba:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:298
	char currentRegData = nordic_readRegister(6);
   166bc:	2006      	movs	r0, #6
   166be:	f7ff fef5 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301

	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
	if(250  == kbps)      currentRegData |= (1<<5);
   166c2:	2cfa      	cmp	r4, #250	; 0xfa
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:300
	currentRegData &= ~((1<<5) | (1<<3));	// Set configuration to 1Mbps for now.
   166c4:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301
	if(250  == kbps)      currentRegData |= (1<<5);
   166c8:	d106      	bne.n	166d8 <nordic_set_air_data_rate+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:301 (discriminator 1)
   166ca:	f041 0120 	orr.w	r1, r1, #32
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	else if(2000 == kbps) currentRegData |= (1<<3);

	nordic_writeRegister(6, currentRegData);
   166ce:	2006      	movs	r0, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:305
}
   166d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:304
	nordic_writeRegister(6, currentRegData);
   166d4:	f7ff befa 	b.w	164cc <nordic_writeRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:302
	else if(2000 == kbps) currentRegData |= (1<<3);
   166d8:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   166dc:	bf08      	it	eq
   166de:	f041 0108 	orreq.w	r1, r1, #8
   166e2:	e7f4      	b.n	166ce <nordic_set_air_data_rate+0x16>

000166e4 <nordic_set_power_level>:
nordic_set_power_level():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:307
void nordic_set_power_level(unsigned char powerLevel)
{
   166e4:	b510      	push	{r4, lr}
   166e6:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	char currentRegData = 0;
	if(powerLevel > 3) powerLevel = 3;

	currentRegData  = nordic_readRegister(6) & ~(0x06);
   166e8:	2006      	movs	r0, #6
   166ea:	f7ff fedf 	bl	164ac <nordic_readRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   166ee:	2c03      	cmp	r4, #3
   166f0:	bf28      	it	cs
   166f2:	2403      	movcs	r4, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:311
	currentRegData  = nordic_readRegister(6) & ~(0x06);
   166f4:	f020 0106 	bic.w	r1, r0, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:312
	currentRegData |= (powerLevel << 1);
   166f8:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314

	nordic_writeRegister(6, currentRegData);
   166fc:	b2c9      	uxtb	r1, r1
   166fe:	2006      	movs	r0, #6
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:315
}
   16700:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:314
	nordic_writeRegister(6, currentRegData);
   16704:	f7ff bee2 	b.w	164cc <nordic_writeRegister>

00016708 <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:325



// Nordic Enhanced shockburst Options
void nordic_set_auto_transmit_options(unsigned short txDelayUs, unsigned char retries)
{
   16708:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   1670c:	bf28      	it	cs
   1670e:	f44f 607a 	movcs.w	r0, #4000	; 0xfa0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	if(txDelayUs < 250)  txDelayUs = 250;
	if(txDelayUs > 4000) txDelayUs = 4000;
	if(retries > 15)     retries = 15;

	char waitDelay = (txDelayUs / 250) - 1;
   16712:	28fa      	cmp	r0, #250	; 0xfa
   16714:	bf38      	it	cc
   16716:	20fa      	movcc	r0, #250	; 0xfa
   16718:	23fa      	movs	r3, #250	; 0xfa
   1671a:	fbb0 f3f3 	udiv	r3, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332

	char controlReg = (waitDelay << 4) | retries;
   1671e:	290f      	cmp	r1, #15
   16720:	bf28      	it	cs
   16722:	210f      	movcs	r1, #15
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:330
	char waitDelay = (txDelayUs / 250) - 1;
   16724:	3b01      	subs	r3, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:332
	char controlReg = (waitDelay << 4) | retries;
   16726:	b2db      	uxtb	r3, r3
   16728:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:333
	nordic_writeRegister(4, controlReg);
   1672c:	b2c9      	uxtb	r1, r1
   1672e:	2004      	movs	r0, #4
   16730:	f7ff becc 	b.w	164cc <nordic_writeRegister>

00016734 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:357

// Nordic Address & PIPE Configuration
void nordic_set_payload_for_pipe(unsigned char pipeNumber, unsigned char payload)
{
	const unsigned char pipeAddressBase = 0x11;
	unsigned char pipeAddress = pipeNumber + pipeAddressBase;
   16734:	3011      	adds	r0, #17
   16736:	b2c0      	uxtb	r0, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:359

	if(pipeAddress > 0x16)
   16738:	2816      	cmp	r0, #22
   1673a:	d804      	bhi.n	16746 <nordic_set_payload_for_pipe+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
		return; // Invalid Pipe #

	if(payload > 32)
		payload = 32;

	nordic_writeRegister(pipeAddress, payload);
   1673c:	2920      	cmp	r1, #32
   1673e:	bf28      	it	cs
   16740:	2120      	movcs	r1, #32
   16742:	f7ff bec3 	b.w	164cc <nordic_writeRegister>
   16746:	4770      	bx	lr

00016748 <nordic_set_addr_width>:
nordic_set_addr_width():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
}
void nordic_set_addr_width(unsigned short width)
{
	char controlReg = 3; // 5-byte

	if(3 == width) controlReg = 1;
   16748:	2803      	cmp	r0, #3
   1674a:	d006      	beq.n	1675a <nordic_set_addr_width+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:372
	if(4 == width) controlReg = 2;
   1674c:	2804      	cmp	r0, #4
   1674e:	bf14      	ite	ne
   16750:	2103      	movne	r1, #3
   16752:	2102      	moveq	r1, #2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:374

	nordic_writeRegister(3, controlReg);
   16754:	2003      	movs	r0, #3
   16756:	f7ff beb9 	b.w	164cc <nordic_writeRegister>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:371
	if(3 == width) controlReg = 1;
   1675a:	2101      	movs	r1, #1
   1675c:	e7fa      	b.n	16754 <nordic_set_addr_width+0xc>

0001675e <nordic_set_tx_address>:
nordic_set_tx_address():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:378
}
void nordic_set_tx_address(char* address, unsigned short length)
{
	nordic_outputData( (0x10 | 0x20), address, length);
   1675e:	460a      	mov	r2, r1
   16760:	2300      	movs	r3, #0
   16762:	4601      	mov	r1, r0
   16764:	2030      	movs	r0, #48	; 0x30
   16766:	f7ff be2d 	b.w	163c4 <nordic_transfer>

0001676a <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:382
}
void nordic_set_rx_pipe0_addr(char* address, unsigned short length)
{
	nordic_outputData( (0x0A | 0x20), address, length);
   1676a:	460a      	mov	r2, r1
   1676c:	2300      	movs	r3, #0
   1676e:	4601      	mov	r1, r0
   16770:	202a      	movs	r0, #42	; 0x2a
   16772:	f7ff be27 	b.w	163c4 <nordic_transfer>
   16776:	Address 0x0000000000016776 is out of bounds.


00016778 <nordic_init>:
nordic_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:72
{
   16778:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1677a:	4604      	mov	r4, r0
   1677c:	460e      	mov	r6, r1
   1677e:	4615      	mov	r5, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:73
	nordic_flush_rx_fifo();
   16780:	f7ff ff30 	bl	165e4 <nordic_flush_rx_fifo>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:74
	nordic_flush_tx_fifo();
   16784:	f7ff feec 	bl	16560 <nordic_flush_tx_fifo>
board_io_nordic_ce_low():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:62
   16788:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   1678c:	4b2a      	ldr	r3, [pc, #168]	; (16838 <nordic_init+0xc0>)
   1678e:	61da      	str	r2, [r3, #28]
nordic_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:77
	nordic_power_down();
   16790:	f7ff ff75 	bl	1667e <nordic_power_down>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:78
	nordic_set_intr_signals(true, false, false);
   16794:	2200      	movs	r2, #0
   16796:	2001      	movs	r0, #1
   16798:	4611      	mov	r1, r2
   1679a:	f7ff ff29 	bl	165f0 <nordic_set_intr_signals>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:79
	nordic_clear_all_intr_flags();
   1679e:	f7ff feab 	bl	164f8 <nordic_clear_all_intr_flags>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:80
	nordic_set_crc(2);
   167a2:	2002      	movs	r0, #2
   167a4:	f7ff ff43 	bl	1662e <nordic_set_crc>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:82
	nordic_set_channel(mhz);
   167a8:	4630      	mov	r0, r6
   167aa:	f7ff ff73 	bl	16694 <nordic_set_channel>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:83
	nordic_set_air_data_rate(bitrate_kbps);
   167ae:	4628      	mov	r0, r5
   167b0:	f7ff ff82 	bl	166b8 <nordic_set_air_data_rate>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:84
	nordic_set_power_level(3);
   167b4:	2003      	movs	r0, #3
   167b6:	f7ff ff95 	bl	166e4 <nordic_set_power_level>
nordic_enable_pipes():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:429
	if(pipe2) controlReg |= 0x04;
	if(pipe3) controlReg |= 0x08;
	if(pipe4) controlReg |= 0x10;
	if(pipe5) controlReg |= 0x20;

	nordic_writeRegister(2, controlReg);
   167ba:	2103      	movs	r1, #3
   167bc:	2002      	movs	r0, #2
   167be:	f7ff fe85 	bl	164cc <nordic_writeRegister>
nordic_set_auto_ack_for_pipes():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:416
	nordic_writeRegister(1, controlReg);
   167c2:	2100      	movs	r1, #0
   167c4:	2001      	movs	r0, #1
   167c6:	f7ff fe81 	bl	164cc <nordic_writeRegister>
nordic_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:88
	nordic_set_auto_transmit_options(500, 3);
   167ca:	2103      	movs	r1, #3
   167cc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   167d0:	f7ff ff9a 	bl	16708 <nordic_set_auto_transmit_options>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:90
	nordic_set_payload_for_pipe(0, payload);
   167d4:	4621      	mov	r1, r4
   167d6:	2000      	movs	r0, #0
   167d8:	f7ff ffac 	bl	16734 <nordic_set_payload_for_pipe>
nordic_set_payload_for_pipe():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:365
	nordic_writeRegister(pipeAddress, payload);
   167dc:	2100      	movs	r1, #0
   167de:	2012      	movs	r0, #18
   167e0:	f7ff fe74 	bl	164cc <nordic_writeRegister>
   167e4:	2100      	movs	r1, #0
   167e6:	2013      	movs	r0, #19
   167e8:	f7ff fe70 	bl	164cc <nordic_writeRegister>
   167ec:	2100      	movs	r1, #0
   167ee:	2014      	movs	r0, #20
   167f0:	f7ff fe6c 	bl	164cc <nordic_writeRegister>
   167f4:	2100      	movs	r1, #0
   167f6:	2015      	movs	r0, #21
   167f8:	f7ff fe68 	bl	164cc <nordic_writeRegister>
   167fc:	2100      	movs	r1, #0
   167fe:	2016      	movs	r0, #22
   16800:	f7ff fe64 	bl	164cc <nordic_writeRegister>
nordic_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   16804:	4b0d      	ldr	r3, [pc, #52]	; (1683c <nordic_init+0xc4>)
   16806:	6818      	ldr	r0, [r3, #0]
   16808:	791b      	ldrb	r3, [r3, #4]
   1680a:	9000      	str	r0, [sp, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   1680c:	2005      	movs	r0, #5
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:97
	char address[] = { 0xE7, 0xDE, 0xAD, 0xE7, 0xE7 }; // Any random value
   1680e:	f88d 3004 	strb.w	r3, [sp, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:99
	nordic_set_addr_width   (         addressWidth);
   16812:	f7ff ff99 	bl	16748 <nordic_set_addr_width>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:100
	nordic_set_tx_address   (address, addressWidth);
   16816:	4668      	mov	r0, sp
   16818:	2105      	movs	r1, #5
   1681a:	f7ff ffa0 	bl	1675e <nordic_set_tx_address>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:101
	nordic_set_rx_pipe0_addr(address, addressWidth);
   1681e:	2105      	movs	r1, #5
   16820:	4668      	mov	r0, sp
   16822:	f7ff ffa2 	bl	1676a <nordic_set_rx_pipe0_addr>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:103
	nordic_power_up();
   16826:	f7ff ff1e 	bl	16666 <nordic_power_up>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:104
	NORDIC_DELAY_US(2000);
   1682a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   1682e:	f7fc fadd 	bl	12dec <delay_us>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/nrf24L01Plus.c:105
}
   16832:	b002      	add	sp, #8
   16834:	bd70      	pop	{r4, r5, r6, pc}
   16836:	bf00      	nop
   16838:	2009c020 	.word	0x2009c020
   1683c:	00020a2d 	.word	0x00020a2d

00016840 <nrf_driver_init>:
nrf_driver_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:143
}



static int nrf_driver_init(void* p, int len)
{
   16840:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:144
    if (NULL == g_rx_queue) {
   16842:	4e17      	ldr	r6, [pc, #92]	; (168a0 <nrf_driver_init+0x60>)
   16844:	6832      	ldr	r2, [r6, #0]
   16846:	b922      	cbnz	r2, 16852 <nrf_driver_init+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:145
        g_rx_queue = xQueueCreate(WIRELESS_RX_QUEUE_SIZE, MESH_PAYLOAD);
   16848:	2120      	movs	r1, #32
   1684a:	2003      	movs	r0, #3
   1684c:	f7fa fad8 	bl	10e00 <xQueueGenericCreate>
   16850:	6030      	str	r0, [r6, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:147
    }
    if (NULL == g_ack_queue) {
   16852:	4d14      	ldr	r5, [pc, #80]	; (168a4 <nrf_driver_init+0x64>)
   16854:	682a      	ldr	r2, [r5, #0]
   16856:	b922      	cbnz	r2, 16862 <nrf_driver_init+0x22>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:148
        g_ack_queue = xQueueCreate(1, MESH_PAYLOAD);
   16858:	2120      	movs	r1, #32
   1685a:	2001      	movs	r0, #1
   1685c:	f7fa fad0 	bl	10e00 <xQueueGenericCreate>
   16860:	6028      	str	r0, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:150
    }
    if (NULL == g_nrf_activity_sem) {
   16862:	4c11      	ldr	r4, [pc, #68]	; (168a8 <nrf_driver_init+0x68>)
   16864:	6821      	ldr	r1, [r4, #0]
   16866:	b921      	cbnz	r1, 16872 <nrf_driver_init+0x32>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:151
        g_nrf_activity_sem = xSemaphoreCreateBinary();
   16868:	2203      	movs	r2, #3
   1686a:	2001      	movs	r0, #1
   1686c:	f7fa fac8 	bl	10e00 <xQueueGenericCreate>
   16870:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:159
    // Optional: Provide names of the FreeRTOS objects for the Trace Facility
    vTraceSetSemaphoreName(g_nrf_activity_sem, "NRF Act Sem");
    vTraceSetQueueName(g_rx_queue,  "NRF RX-Q");
    vTraceSetQueueName(g_ack_queue, "NRF ACK-Q");

    nordic_init(MESH_PAYLOAD, WIRELESS_CHANNEL_NUM, WIRELESS_AIR_DATARATE_KBPS);
   16872:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   16876:	f640 11c3 	movw	r1, #2499	; 0x9c3
   1687a:	2020      	movs	r0, #32
   1687c:	f7ff ff7c 	bl	16778 <nordic_init>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:160
    nordic_standby1_to_rx();
   16880:	f7ff fe58 	bl	16534 <nordic_standby1_to_rx>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:163

    /* Hook up the interrupt callback for nordic pin */
    eint3_enable_port0(BIO_NORDIC_IRQ_P0PIN, eint_falling_edge, nrf_irq_callback);
   16884:	2016      	movs	r0, #22
   16886:	4a09      	ldr	r2, [pc, #36]	; (168ac <nrf_driver_init+0x6c>)
   16888:	2101      	movs	r1, #1
   1688a:	f7fb fdbf 	bl	1240c <eint3_enable_port0>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:165

    return (NULL != g_rx_queue && NULL != g_ack_queue && NULL != g_nrf_activity_sem);
   1688e:	6830      	ldr	r0, [r6, #0]
   16890:	b128      	cbz	r0, 1689e <nrf_driver_init+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 1)
   16892:	6828      	ldr	r0, [r5, #0]
   16894:	b118      	cbz	r0, 1689e <nrf_driver_init+0x5e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:165 (discriminator 3)
   16896:	6820      	ldr	r0, [r4, #0]
   16898:	3000      	adds	r0, #0
   1689a:	bf18      	it	ne
   1689c:	2001      	movne	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:166
}
   1689e:	bd70      	pop	{r4, r5, r6, pc}
   168a0:	2007c6b4 	.word	0x2007c6b4
   168a4:	2007c6ac 	.word	0x2007c6ac
   168a8:	2007c6b0 	.word	0x2007c6b0
   168ac:	00016959 	.word	0x00016959

000168b0 <nrf_driver_app_recv>:
nrf_driver_app_recv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:241

static int nrf_driver_app_recv(void *p, int len)
{
    /* Only mesh_pkt_ack_rsp is an ACK packet, others are to REQUEST for ack or nack */
    const mesh_packet_t *pkt = (mesh_packet_t*) p;
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   168b0:	7903      	ldrb	r3, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   168b2:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   168b4:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   168b8:	2bc0      	cmp	r3, #192	; 0xc0
   168ba:	bf0c      	ite	eq
   168bc:	4b0e      	ldreq	r3, [pc, #56]	; (168f8 <nrf_driver_app_recv+0x48>)
   168be:	4b0f      	ldrne	r3, [pc, #60]	; (168fc <nrf_driver_app_recv+0x4c>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:243

    int ok = xQueueSend(qhandle, p, 0);
   168c0:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:241
    const QueueHandle_t qhandle = (mesh_pkt_ack_rsp == pkt->info.pkt_type) ? g_ack_queue : g_rx_queue;
   168c2:	681d      	ldr	r5, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   168c4:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:238
{
   168c6:	b088      	sub	sp, #32
   168c8:	4606      	mov	r6, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:243
    int ok = xQueueSend(qhandle, p, 0);
   168ca:	461a      	mov	r2, r3
   168cc:	4628      	mov	r0, r5
   168ce:	f7fa fab1 	bl	10e34 <xQueueGenericSend>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:246

    /* If queue was full, discard oldest data, and push again */
    if (!ok) {
   168d2:	4604      	mov	r4, r0
   168d4:	b960      	cbnz	r0, 168f0 <nrf_driver_app_recv+0x40>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:248
        mesh_packet_t discarded_pkt;
        xQueueReceive(qhandle, &discarded_pkt, 0);
   168d6:	4603      	mov	r3, r0
   168d8:	4602      	mov	r2, r0
   168da:	4669      	mov	r1, sp
   168dc:	4628      	mov	r0, r5
   168de:	f7fa fbb1 	bl	11044 <xQueueGenericReceive>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:249
        ok = xQueueSend(qhandle, p, 0);
   168e2:	4623      	mov	r3, r4
   168e4:	4622      	mov	r2, r4
   168e6:	4631      	mov	r1, r6
   168e8:	4628      	mov	r0, r5
   168ea:	f7fa faa3 	bl	10e34 <xQueueGenericSend>
   168ee:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:253
    }

    return ok;
}
   168f0:	4620      	mov	r0, r4
   168f2:	b008      	add	sp, #32
   168f4:	bd70      	pop	{r4, r5, r6, pc}
   168f6:	bf00      	nop
   168f8:	2007c6ac 	.word	0x2007c6ac
   168fc:	2007c6b4 	.word	0x2007c6b4

00016900 <nrf_driver_send>:
nrf_driver_send():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:169
{
   16900:	b538      	push	{r3, r4, r5, lr}
   16902:	4604      	mov	r4, r0
   16904:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:188
    if (mesh_get_node_address() != pkt->nwk.src) {
   16906:	f7ff fa73 	bl	15df0 <mesh_get_node_address>
   1690a:	7823      	ldrb	r3, [r4, #0]
   1690c:	4283      	cmp	r3, r0
   1690e:	d00a      	beq.n	16926 <nrf_driver_send+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:189
        if (MESH_ZERO_ADDR == pkt->mac.dst) {
   16910:	78e3      	ldrb	r3, [r4, #3]
   16912:	b943      	cbnz	r3, 16926 <nrf_driver_send+0x26>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:190
            const uint32_t timeSlotDelayUs = ((rand() % slots) + 1) * s_pkt_air_time_us;
   16914:	f004 fc36 	bl	1b184 <rand>
   16918:	23bd      	movs	r3, #189	; 0xbd
   1691a:	f000 0003 	and.w	r0, r0, #3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:191
            delay_us(timeSlotDelayUs); /**< Maximize mesh nodes to repeat the packet and not collide */
   1691e:	fb00 3003 	mla	r0, r0, r3, r3
   16922:	f7fc fa63 	bl	12dec <delay_us>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:196
	nordic_rx_to_Stanby1();
   16926:	f7ff fdfd 	bl	16524 <nordic_rx_to_Stanby1>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:197
	nordic_standby1_to_tx_mode1();
   1692a:	f7ff fdef 	bl	1650c <nordic_standby1_to_tx_mode1>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:200
	nordic_mode1_send_single_packet(p, len);
   1692e:	b2a9      	uxth	r1, r5
   16930:	4620      	mov	r0, r4
   16932:	f7ff fe1b 	bl	1656c <nordic_mode1_send_single_packet>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:201
	nordic_clear_packet_sent_flag();
   16936:	f7ff fe0f 	bl	16558 <nordic_clear_packet_sent_flag>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:204
	nordic_standby1_to_rx();
   1693a:	f7ff fdfb 	bl	16534 <nordic_standby1_to_rx>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:211
	if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   1693e:	f7fa fff1 	bl	11924 <xTaskGetSchedulerState>
   16942:	2802      	cmp	r0, #2
   16944:	d104      	bne.n	16950 <nrf_driver_send+0x50>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:212
	    xSemaphoreGiveFromISR(g_nrf_activity_sem, NULL);
   16946:	4b03      	ldr	r3, [pc, #12]	; (16954 <nrf_driver_send+0x54>)
   16948:	2100      	movs	r1, #0
   1694a:	6818      	ldr	r0, [r3, #0]
   1694c:	f7fa fb46 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:216
}
   16950:	2001      	movs	r0, #1
   16952:	bd38      	pop	{r3, r4, r5, pc}
   16954:	2007c6b0 	.word	0x2007c6b0

00016958 <nrf_irq_callback>:
nrf_irq_callback():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   16958:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:72
{
   1695a:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:73
    long yieldRequired = 0;
   1695c:	a902      	add	r1, sp, #8
   1695e:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:74
    xSemaphoreGiveFromISR(g_nrf_activity_sem, &yieldRequired);
   16962:	4b08      	ldr	r3, [pc, #32]	; (16984 <nrf_irq_callback+0x2c>)
   16964:	6818      	ldr	r0, [r3, #0]
   16966:	f7fa fb39 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:75
    portEND_SWITCHING_ISR(yieldRequired);
   1696a:	9b01      	ldr	r3, [sp, #4]
   1696c:	b13b      	cbz	r3, 1697e <nrf_irq_callback+0x26>
   1696e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   16972:	4b05      	ldr	r3, [pc, #20]	; (16988 <nrf_irq_callback+0x30>)
   16974:	601a      	str	r2, [r3, #0]
   16976:	f3bf 8f4f 	dsb	sy
   1697a:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:76
}
   1697e:	b003      	add	sp, #12
   16980:	f85d fb04 	ldr.w	pc, [sp], #4
   16984:	2007c6b0 	.word	0x2007c6b0
   16988:	e000ed04 	.word	0xe000ed04

0001698c <nrf_driver_receive>:
nrf_driver_receive():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:219
{
   1698c:	b538      	push	{r3, r4, r5, lr}
   1698e:	4604      	mov	r4, r0
   16990:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:222
	if(nordic_is_packet_available())
   16992:	f7ff fe11 	bl	165b8 <nordic_is_packet_available>
   16996:	b148      	cbz	r0, 169ac <nrf_driver_receive+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:224
		nordic_read_rx_fifo(p, len);
   16998:	b2a9      	uxth	r1, r5
   1699a:	4620      	mov	r0, r4
   1699c:	f7ff fe18 	bl	165d0 <nordic_read_rx_fifo>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   169a0:	f7ff fe0a 	bl	165b8 <nordic_is_packet_available>
   169a4:	b908      	cbnz	r0, 169aa <nrf_driver_receive+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:229
		    nordic_clear_packet_available_flag();
   169a6:	f7ff fe0f 	bl	165c8 <nordic_clear_packet_available_flag>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:228
		if (!nordic_is_packet_available()) {
   169aa:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:235
}
   169ac:	bd38      	pop	{r3, r4, r5, pc}

000169ae <nrf_driver_get_timer>:
nrf_driver_get_timer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:257

static int nrf_driver_get_timer(void *p, int len)
{
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   169ae:	2904      	cmp	r1, #4
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:256
{
   169b0:	b538      	push	{r3, r4, r5, lr}
   169b2:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:257
    const int ok = (sizeof(uint32_t) == len) && (NULL != p);
   169b4:	d10d      	bne.n	169d2 <nrf_driver_get_timer+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:257 (discriminator 1)
   169b6:	1c04      	adds	r4, r0, #0
   169b8:	bf18      	it	ne
   169ba:	2401      	movne	r4, #1
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116 (discriminator 6)
   169bc:	f7f9 fdac 	bl	10518 <sys_get_uptime_us>
nrf_driver_get_timer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:260 (discriminator 6)
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);

    if (ok) {
   169c0:	b12c      	cbz	r4, 169ce <nrf_driver_get_timer+0x20>
sys_get_uptime_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/lpc_sys.h:116
   169c2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   169c6:	2300      	movs	r3, #0
   169c8:	f002 fd5c 	bl	19484 <__aeabi_uldivmod>
nrf_driver_get_timer():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:258
    const uint32_t timerValueMs = (sys_get_uptime_ms() & UINT32_MAX);
   169cc:	6028      	str	r0, [r5, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:266
        uint32_t *timer = (uint32_t*)p;
        *timer = timerValueMs;
    }

    return ok;
}
   169ce:	4620      	mov	r0, r4
   169d0:	bd38      	pop	{r3, r4, r5, pc}
   169d2:	2400      	movs	r4, #0
   169d4:	e7f2      	b.n	169bc <nrf_driver_get_timer+0xe>
   169d6:	Address 0x00000000000169d6 is out of bounds.


000169d8 <wireless_init>:
wireless_init():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   169d8:	b500      	push	{lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   169da:	4b0c      	ldr	r3, [pc, #48]	; (16a0c <wireless_init+0x34>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:79
{
   169dc:	b08d      	sub	sp, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:82
    driver.radio_init = nrf_driver_init;
   169de:	9309      	str	r3, [sp, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   169e0:	4b0b      	ldr	r3, [pc, #44]	; (16a10 <wireless_init+0x38>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   169e2:	4a0c      	ldr	r2, [pc, #48]	; (16a14 <wireless_init+0x3c>)
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:83
    driver.radio_recv = nrf_driver_receive;
   169e4:	930b      	str	r3, [sp, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:84
    driver.radio_send = nrf_driver_send;
   169e6:	4b0c      	ldr	r3, [pc, #48]	; (16a18 <wireless_init+0x40>)
   169e8:	930a      	str	r3, [sp, #40]	; 0x28
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:85
    driver.get_timer  = nrf_driver_get_timer;
   169ea:	ab0c      	add	r3, sp, #48	; 0x30
   169ec:	f843 2d10 	str.w	r2, [r3, #-16]!
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:88
    return mesh_init(WIRELESS_NODE_ADDR, true, WIRELESS_NODE_NAME, driver, false);
   169f0:	2200      	movs	r2, #0
   169f2:	9204      	str	r2, [sp, #16]
   169f4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   169f6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   169fa:	4b08      	ldr	r3, [pc, #32]	; (16a1c <wireless_init+0x44>)
   169fc:	4a08      	ldr	r2, [pc, #32]	; (16a20 <wireless_init+0x48>)
   169fe:	2101      	movs	r1, #1
   16a00:	206a      	movs	r0, #106	; 0x6a
   16a02:	f7ff faa3 	bl	15f4c <mesh_init>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:89
}
   16a06:	b00d      	add	sp, #52	; 0x34
   16a08:	f85d fb04 	ldr.w	pc, [sp], #4
   16a0c:	00016841 	.word	0x00016841
   16a10:	0001698d 	.word	0x0001698d
   16a14:	000169af 	.word	0x000169af
   16a18:	00016901 	.word	0x00016901
   16a1c:	000168b1 	.word	0x000168b1
   16a20:	00020a32 	.word	0x00020a32

00016a24 <wireless_service>:
wireless_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:112
{
   16a24:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:125
    if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
   16a26:	f7fa ff7d 	bl	11924 <xTaskGetSchedulerState>
   16a2a:	4b0f      	ldr	r3, [pc, #60]	; (16a68 <wireless_service+0x44>)
   16a2c:	2802      	cmp	r0, #2
board_io_nordic_irq_sig():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:59
static inline char board_io_nordic_irq_sig(void) { return !!(LPC_GPIO0->FIOPIN & (1 << BIO_NORDIC_IRQ_P0PIN)); }
   16a2e:	695b      	ldr	r3, [r3, #20]
wireless_service():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:125
   16a30:	d112      	bne.n	16a58 <wireless_service+0x34>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:126
        if (!nordic_intr_signal()) {
   16a32:	025a      	lsls	r2, r3, #9
   16a34:	d50c      	bpl.n	16a50 <wireless_service+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   16a36:	f7ff fcab 	bl	16390 <mesh_get_pnd_pkt_count>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   16a3a:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:127
            const TickType_t blockTime = mesh_get_pnd_pkt_count() ? 1 : portMAX_DELAY;
   16a3c:	2800      	cmp	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:128
            xSemaphoreTake(g_nrf_activity_sem, blockTime);
   16a3e:	480b      	ldr	r0, [pc, #44]	; (16a6c <wireless_service+0x48>)
   16a40:	bf14      	ite	ne
   16a42:	2201      	movne	r2, #1
   16a44:	f04f 32ff 	moveq.w	r2, #4294967295	; 0xffffffff
   16a48:	4619      	mov	r1, r3
   16a4a:	6800      	ldr	r0, [r0, #0]
   16a4c:	f7fa fafa 	bl	11044 <xQueueGenericReceive>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   16a50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:130
        mesh_service();
   16a54:	f7ff bb34 	b.w	160c0 <mesh_service>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:134
        if (nordic_intr_signal() || mesh_get_pnd_pkt_count() > 0) {
   16a58:	025b      	lsls	r3, r3, #9
   16a5a:	d5f9      	bpl.n	16a50 <wireless_service+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:134 (discriminator 1)
   16a5c:	f7ff fc98 	bl	16390 <mesh_get_pnd_pkt_count>
   16a60:	2800      	cmp	r0, #0
   16a62:	d1f5      	bne.n	16a50 <wireless_service+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/wireless/src/wireless.c:138
}
   16a64:	bd08      	pop	{r3, pc}
   16a66:	bf00      	nop
   16a68:	2009c000 	.word	0x2009c000
   16a6c:	2007c6b0 	.word	0x2007c6b0

00016a70 <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16a70:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16a72:	4c06      	ldr	r4, [pc, #24]	; (16a8c <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   16a74:	6823      	ldr	r3, [r4, #0]
   16a76:	b93b      	cbnz	r3, 16a88 <SingletonTemplate<I2C2>::getInstance()+0x18>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16a78:	f44f 7094 	mov.w	r0, #296	; 0x128
   16a7c:	f000 fbc8 	bl	17210 <operator new(unsigned int)>
   16a80:	4605      	mov	r5, r0
   16a82:	f7fb fd11 	bl	124a8 <I2C2::I2C2()>
   16a86:	6025      	str	r5, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16a88:	6820      	ldr	r0, [r4, #0]
   16a8a:	bd38      	pop	{r3, r4, r5, pc}
   16a8c:	2007c494 	.word	0x2007c494

00016a90 <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16a90:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16a92:	4c08      	ldr	r4, [pc, #32]	; (16ab4 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   16a94:	6823      	ldr	r3, [r4, #0]
   16a96:	b95b      	cbnz	r3, 16ab0 <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16a98:	200c      	movs	r0, #12
   16a9a:	f000 fbb9 	bl	17210 <operator new(unsigned int)>
   16a9e:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:43
    i2c2_device(uint8_t addr) : mI2C(I2C2::getInstance()), mOurAddr(addr)
   16aa0:	f7ff ffe6 	bl	16a70 <SingletonTemplate<I2C2>::getInstance()>
   16aa4:	2390      	movs	r3, #144	; 0x90
   16aa6:	712b      	strb	r3, [r5, #4]
_ZN8I2C_TempC4Ec():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/temperature_sensor.hpp:36
 * Base class of an I2C temperature sensor
 */
class I2C_Temp : private i2c2_device
{
    public:
        I2C_Temp(char addr) : i2c2_device(addr), mOffsetCelcius(0) {}
   16aa8:	2300      	movs	r3, #0
_ZN11i2c2_deviceC4Eh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:43
   16aaa:	6028      	str	r0, [r5, #0]
_ZN8I2C_TempC4Ec():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/temperature_sensor.hpp:36
   16aac:	60ab      	str	r3, [r5, #8]
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
   16aae:	6025      	str	r5, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16ab0:	6820      	ldr	r0, [r4, #0]
   16ab2:	bd38      	pop	{r3, r4, r5, pc}
   16ab4:	2007c6b8 	.word	0x2007c6b8

00016ab8 <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16ab8:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16aba:	4c07      	ldr	r4, [pc, #28]	; (16ad8 <SingletonTemplate<LED_Display>::getInstance()+0x20>)
   16abc:	6823      	ldr	r3, [r4, #0]
   16abe:	b94b      	cbnz	r3, 16ad4 <SingletonTemplate<LED_Display>::getInstance()+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16ac0:	2008      	movs	r0, #8
   16ac2:	f000 fba5 	bl	17210 <operator new(unsigned int)>
   16ac6:	4605      	mov	r5, r0
_ZN11i2c2_deviceC4Eh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:43
   16ac8:	f7ff ffd2 	bl	16a70 <SingletonTemplate<I2C2>::getInstance()>
   16acc:	2340      	movs	r3, #64	; 0x40
   16ace:	6028      	str	r0, [r5, #0]
   16ad0:	712b      	strb	r3, [r5, #4]
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
   16ad2:	6025      	str	r5, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16ad4:	6820      	ldr	r0, [r4, #0]
   16ad6:	bd38      	pop	{r3, r4, r5, pc}
   16ad8:	2007c6c8 	.word	0x2007c6c8

00016adc <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16adc:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16ade:	4c04      	ldr	r4, [pc, #16]	; (16af0 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   16ae0:	6823      	ldr	r3, [r4, #0]
   16ae2:	b91b      	cbnz	r3, 16aec <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16ae4:	2001      	movs	r0, #1
   16ae6:	f000 fb93 	bl	17210 <operator new(unsigned int)>
   16aea:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16aec:	6820      	ldr	r0, [r4, #0]
   16aee:	bd10      	pop	{r4, pc}
   16af0:	2007c6c0 	.word	0x2007c6c0

00016af4 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16af4:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16af6:	4c05      	ldr	r4, [pc, #20]	; (16b0c <SingletonTemplate<LED>::getInstance()+0x18>)
   16af8:	6825      	ldr	r5, [r4, #0]
   16afa:	b925      	cbnz	r5, 16b06 <SingletonTemplate<LED>::getInstance()+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16afc:	2001      	movs	r0, #1
   16afe:	f000 fb87 	bl	17210 <operator new(unsigned int)>
_ZN3LEDC4Ev():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/LED.hpp:50
        uint8_t getValues(void) const;      ///< Get the LED bit values currently set

    private:
        uint8_t mLedValue; ///< Current bits set on the LEDs

        LED() : mLedValue (0) {}    ///< Private constructor of this Singleton class
   16b02:	7005      	strb	r5, [r0, #0]
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
   16b04:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16b06:	6820      	ldr	r0, [r4, #0]
   16b08:	bd38      	pop	{r3, r4, r5, pc}
   16b0a:	bf00      	nop
   16b0c:	2007c6c4 	.word	0x2007c6c4

00016b10 <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:48
 */
class Storage
{
    public:
        /// @returns Single Flash Drive Object Reference
        static FileSystemObject& getFlashDrive()
   16b10:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:50
        {
            static FileSystemObject* pFlashDrive = new FileSystemObject(driveNumFlashMem);
   16b12:	4d10      	ldr	r5, [pc, #64]	; (16b54 <Storage::getFlashDrive()+0x44>)
   16b14:	4e10      	ldr	r6, [pc, #64]	; (16b58 <Storage::getFlashDrive()+0x48>)
   16b16:	782c      	ldrb	r4, [r5, #0]
   16b18:	f3bf 8f5b 	dmb	ish
   16b1c:	f014 0401 	ands.w	r4, r4, #1
   16b20:	d115      	bne.n	16b4e <Storage::getFlashDrive()+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:50 (discriminator 1)
   16b22:	4628      	mov	r0, r5
   16b24:	f001 fd7d 	bl	18622 <__cxa_guard_acquire>
   16b28:	b188      	cbz	r0, 16b4e <Storage::getFlashDrive()+0x3e>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   16b2a:	f44f 700e 	mov.w	r0, #568	; 0x238
   16b2e:	f000 fb6f 	bl	17210 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:105 (discriminator 2)

        /// Private constructor to forbid this object creation
        FileSystemObject(DriveNumberType volumeNum) :
            mVolNum(volumeNum)
        {
            mVolStr[0] = volumeNum + '0';
   16b32:	2330      	movs	r3, #48	; 0x30
   16b34:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   16b38:	233a      	movs	r3, #58	; 0x3a
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:103 (discriminator 2)
            mVolNum(volumeNum)
   16b3a:	f880 4234 	strb.w	r4, [r0, #564]	; 0x234
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:106 (discriminator 2)
            mVolStr[1] = ':';
   16b3e:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:107 (discriminator 2)
            mVolStr[2] = '\0';
   16b42:	f880 4237 	strb.w	r4, [r0, #567]	; 0x237
_ZN7Storage13getFlashDriveEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:50 (discriminator 2)
   16b46:	6030      	str	r0, [r6, #0]
   16b48:	4628      	mov	r0, r5
   16b4a:	f001 fd76 	bl	1863a <__cxa_guard_release>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:52
            return *pFlashDrive;
        }
   16b4e:	6830      	ldr	r0, [r6, #0]
   16b50:	bd70      	pop	{r4, r5, r6, pc}
   16b52:	bf00      	nop
   16b54:	2007c6d8 	.word	0x2007c6d8
   16b58:	2007c6dc 	.word	0x2007c6dc

00016b5c <hl_print_line()>:
_ZL13hl_print_linev():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:50
#include "c_tlm_comp.h"



/// Just prints a line to separate the output printed by high level initialization
static void hl_print_line() { puts("----------------------------------------------------------"); }
   16b5c:	4801      	ldr	r0, [pc, #4]	; (16b64 <hl_print_line()+0x8>)
   16b5e:	f004 bae1 	b.w	1b124 <puts>
   16b62:	bf00      	nop
   16b64:	00020e08 	.word	0x00020e08

00016b68 <ssp_set_max_clock>:
ssp_set_max_clock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:40
{
   16b68:	b538      	push	{r3, r4, r5, lr}
   16b6a:	4604      	mov	r4, r0
   16b6c:	460d      	mov	r5, r1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:42
    const unsigned int cpuClockMhz = sys_get_cpu_clock() / (1000 * 1000UL);
   16b6e:	f7f9 fe61 	bl	10834 <sys_get_cpu_clock>
   16b72:	4b07      	ldr	r3, [pc, #28]	; (16b90 <ssp_set_max_clock+0x28>)
   16b74:	fbb0 f0f3 	udiv	r0, r0, r3
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:41
    unsigned int divider = 2;
   16b78:	2302      	movs	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   16b7a:	fbb0 f2f3 	udiv	r2, r0, r3
   16b7e:	42aa      	cmp	r2, r5
   16b80:	d904      	bls.n	16b8c <ssp_set_max_clock+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:49 (discriminator 1)
   16b82:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   16b86:	d001      	beq.n	16b8c <ssp_set_max_clock+0x24>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:51
        divider += 2;
   16b88:	3302      	adds	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:49
    while(max_clock_mhz < (cpuClockMhz / divider) && divider <= 254)
   16b8a:	e7f6      	b.n	16b7a <ssp_set_max_clock+0x12>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:54
    pSSP->CPSR = divider;
   16b8c:	6123      	str	r3, [r4, #16]
   16b8e:	bd38      	pop	{r3, r4, r5, pc}
   16b90:	000f4240 	.word	0x000f4240

00016b94 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
    puts("Calling your main()");
    hl_print_line();
}

static bool hl_mount_storage(FileSystemObject& drive, const char* pDescStr)
{
   16b94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
_ZNK16FileSystemObject12getDrivePathEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:46
            return mVolStr;
   16b96:	f200 2635 	addw	r6, r0, #565	; 0x235
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:212
   16b9a:	460c      	mov	r4, r1
_ZNK16FileSystemObject5mountEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:56
            return f_mount((FATFS*)&mFileSystem, getDrivePath(), 1);
   16b9c:	2201      	movs	r2, #1
   16b9e:	4631      	mov	r1, r6
   16ba0:	f7fd ff20 	bl	149e4 <f_mount>
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:218
    unsigned int totalKb = 0;
    unsigned int availKb = 0;
    const char st = drive.mount();
    bool mounted = (0 == st);

    if(mounted && FR_OK == drive.getDriveInfo(&totalKb, &availKb))
   16ba4:	4605      	mov	r5, r0
   16ba6:	bb38      	cbnz	r0, 16bf8 <hl_mount_storage(FileSystemObject&, char const*)+0x64>
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:72
            unsigned long int fre_clust = 0;
   16ba8:	9003      	str	r0, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:75
            if (FR_OK == (result = f_getfree(mVolStr, &fre_clust, &pFatFs)))
   16baa:	aa02      	add	r2, sp, #8
   16bac:	a903      	add	r1, sp, #12
   16bae:	4630      	mov	r0, r6
   16bb0:	f7fe fa79 	bl	150a6 <f_getfree>
   16bb4:	bb40      	cbnz	r0, 16c08 <hl_mount_storage(FileSystemObject&, char const*)+0x74>
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   16bb6:	9802      	ldr	r0, [sp, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   16bb8:	9b03      	ldr	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   16bba:	7882      	ldrb	r2, [r0, #2]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:79
                unsigned int freeSectors = fre_clust * pFatFs->csize;
   16bbc:	fb03 f102 	mul.w	r1, r3, r2
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
                unsigned int totalSectors = (pFatFs->n_fatent - 2) * pFatFs->csize;
   16bc0:	6983      	ldr	r3, [r0, #24]
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
    {
        const unsigned int maxBytesForKbRange = (32 * 1024);
        const char *size = (totalKb < maxBytesForKbRange) ? "KB" : "MB";
   16bc2:	4812      	ldr	r0, [pc, #72]	; (16c0c <hl_mount_storage(FileSystemObject&, char const*)+0x78>)
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:78
   16bc4:	3b02      	subs	r3, #2
   16bc6:	435a      	muls	r2, r3
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:83
                *pTotalDriveSpaceKB = totalSectors / 2;
   16bc8:	0852      	lsrs	r2, r2, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:221
   16bca:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   16bce:	bf38      	it	cc
   16bd0:	2001      	movcc	r0, #1
   16bd2:	4b0f      	ldr	r3, [pc, #60]	; (16c10 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   16bd4:	bf24      	itt	cs
   16bd6:	4603      	movcs	r3, r0
   16bd8:	f44f 6080 	movcs.w	r0, #1024	; 0x400
_ZNK16FileSystemObject12getDriveInfoEPjS0_():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:82
                *pAvailableSpaceKB  = freeSectors / 2;
   16bdc:	0849      	lsrs	r1, r1, #1
_ZL16hl_mount_storageR16FileSystemObjectPKc():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:224
        unsigned int div = (totalKb < maxBytesForKbRange) ? 1 : 1024;

        printf("%s: OK -- Capacity %-5d%s, Available: %-5u%s\n",
   16bde:	fbb1 f1f0 	udiv	r1, r1, r0
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:225
               pDescStr, totalKb/div, size, availKb/div, size);
   16be2:	fbb2 f2f0 	udiv	r2, r2, r0
   16be6:	9100      	str	r1, [sp, #0]
   16be8:	9301      	str	r3, [sp, #4]
   16bea:	4621      	mov	r1, r4
   16bec:	4809      	ldr	r0, [pc, #36]	; (16c14 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   16bee:	f004 fa25 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:216
    bool mounted = (0 == st);
   16bf2:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:233
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
        mounted = false;
    }

    return mounted;
}
   16bf4:	b004      	add	sp, #16
   16bf6:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   16bf8:	4b07      	ldr	r3, [pc, #28]	; (16c18 <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228 (discriminator 4)
   16bfa:	462a      	mov	r2, r5
   16bfc:	4621      	mov	r1, r4
   16bfe:	4807      	ldr	r0, [pc, #28]	; (16c1c <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   16c00:	f004 fa1c 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:229 (discriminator 4)
        mounted = false;
   16c04:	2000      	movs	r0, #0
   16c06:	e7f5      	b.n	16bf4 <hl_mount_storage(FileSystemObject&, char const*)+0x60>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:228
        printf("%s: Error or not present.  Error #%i, Mounted: %s\n", pDescStr, st, mounted ? "Yes" : "No");
   16c08:	4b05      	ldr	r3, [pc, #20]	; (16c20 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   16c0a:	e7f6      	b.n	16bfa <hl_mount_storage(FileSystemObject&, char const*)+0x66>
   16c0c:	00020e46 	.word	0x00020e46
   16c10:	00020e43 	.word	0x00020e43
   16c14:	00020e50 	.word	0x00020e50
   16c18:	00020e4d 	.word	0x00020e4d
   16c1c:	00020e7e 	.word	0x00020e7e
   16c20:	00020e49 	.word	0x00020e49

00016c24 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:101
    classType& SingletonTemplate<classType>::getInstance()
   16c24:	b510      	push	{r4, lr}
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16c26:	4c04      	ldr	r4, [pc, #16]	; (16c38 <SingletonTemplate<Switches>::getInstance()+0x14>)
   16c28:	6823      	ldr	r3, [r4, #0]
   16c2a:	b91b      	cbnz	r3, 16c34 <SingletonTemplate<Switches>::getInstance()+0x10>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16c2c:	2001      	movs	r0, #1
   16c2e:	f000 faef 	bl	17210 <operator new(unsigned int)>
   16c32:	6020      	str	r0, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:108
    }
   16c34:	6820      	ldr	r0, [r4, #0]
   16c36:	bd10      	pop	{r4, pc}
   16c38:	2007c6bc 	.word	0x2007c6bc

00016c3c <high_level_init()>:
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
static inline char board_io_flash_ds(void)  { LPC_GPIO0->FIOSET = (1 << BIO_FLASH_CS_P0PIN);   return 0; }
   16c3c:	2340      	movs	r3, #64	; 0x40
   16c3e:	49b6      	ldr	r1, [pc, #728]	; (16f18 <high_level_init()+0x2dc>)
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
{
   16c40:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:53
   16c42:	618b      	str	r3, [r1, #24]
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
static inline char board_io_sd_ds(void)     { LPC_GPIO1->FIOSET = (1 << BIO_SD_CARD_CS_P1PIN); return 0; }
   16c44:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   16c48:	4ab4      	ldr	r2, [pc, #720]	; (16f1c <high_level_init()+0x2e0>)
ssp_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   16c4a:	2507      	movs	r5, #7
board_io_sd_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:55
   16c4c:	6193      	str	r3, [r2, #24]
board_io_nordic_ds():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:58
static inline char board_io_nordic_ds(void)      { LPC_GPIO0->FIOSET = (1 << BIO_NORDIC_CS_P0PIN); return 0; }
   16c4e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   16c52:	618b      	str	r3, [r1, #24]
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:78
    board_io_flash_ds();
    board_io_sd_ds();
    board_io_nordic_ds();

    /* Initialize Uart0 pins on P0.2 and P0.3 */
    LPC_PINCON->PINSEL0 &= ~(0xF << 4);
   16c54:	4bb2      	ldr	r3, [pc, #712]	; (16f20 <high_level_init()+0x2e4>)
ssp_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   16c56:	2402      	movs	r4, #2
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:78
   16c58:	6818      	ldr	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:84
   16c5a:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:78
   16c5e:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   16c62:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:79
    LPC_PINCON->PINSEL0 |=  (0x5 << 4);
   16c64:	6818      	ldr	r0, [r3, #0]
   16c66:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   16c6a:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:82

    /* Initialize Flash CS on P0.6*/
    LPC_PINCON->PINSEL0 &= ~(0x3 << 12);
   16c6c:	6818      	ldr	r0, [r3, #0]
   16c6e:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   16c72:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:83
    LPC_GPIO0->FIODIR   |=  (1 << BIO_FLASH_CS_P0PIN);
   16c74:	6808      	ldr	r0, [r1, #0]
   16c76:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   16c7a:	6008      	str	r0, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:86

    /* Initialize SSP1 on P0.7, P0.8, and P0.9 */
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
   16c7c:	6818      	ldr	r0, [r3, #0]
   16c7e:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   16c82:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:87
    LPC_PINCON->PINSEL0 |=  (0x2A << 14);
   16c84:	6818      	ldr	r0, [r3, #0]
   16c86:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   16c8a:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:90

    /* Initialize I2C2 pins on P0.10 and P0.11 */
    LPC_PINCON->PINSEL0 &= ~(0x0F << 20);
   16c8c:	6818      	ldr	r0, [r3, #0]
   16c8e:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   16c92:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:91
    LPC_PINCON->PINSEL0 |=  (0x0A << 20);
   16c94:	6818      	ldr	r0, [r3, #0]
   16c96:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   16c9a:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:94

    /* Initialize SSP0 on P0.15, P0.17, and P0.18 */
    LPC_PINCON->PINSEL0 &= ~(0x3 << 30);
   16c9c:	6818      	ldr	r0, [r3, #0]
   16c9e:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   16ca2:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:95
    LPC_PINCON->PINSEL0 |=  (0x2 << 30);
   16ca4:	6818      	ldr	r0, [r3, #0]
   16ca6:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   16caa:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:96
    LPC_PINCON->PINSEL1 &= ~(0xF << 2);
   16cac:	6858      	ldr	r0, [r3, #4]
   16cae:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   16cb2:	6058      	str	r0, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:97
    LPC_PINCON->PINSEL1 |=  (0xA << 2);
   16cb4:	6858      	ldr	r0, [r3, #4]
   16cb6:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   16cba:	6058      	str	r0, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:100

    /* Initialize Nordic signals: P0.16: CS, P0.22: IRQ, P1.24: CE */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 0);
   16cbc:	6858      	ldr	r0, [r3, #4]
   16cbe:	f020 0003 	bic.w	r0, r0, #3
   16cc2:	6058      	str	r0, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:101
    LPC_GPIO0->FIODIR   |=  (1 << BIO_NORDIC_CS_P0PIN);
   16cc4:	6808      	ldr	r0, [r1, #0]
   16cc6:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   16cca:	6008      	str	r0, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:102
    LPC_PINCON->PINSEL1 &= ~(0x3 << 12);
   16ccc:	6858      	ldr	r0, [r3, #4]
   16cce:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   16cd2:	6058      	str	r0, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:103
    LPC_GPIO0->FIODIR   &= ~(1 << BIO_NORDIC_IRQ_P0PIN);
   16cd4:	6808      	ldr	r0, [r1, #0]
   16cd6:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   16cda:	6008      	str	r0, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:104
    LPC_PINCON->PINSEL3 &= ~(0x3 << 16);
   16cdc:	68d9      	ldr	r1, [r3, #12]
   16cde:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   16ce2:	60d9      	str	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:105
    LPC_GPIO1->FIODIR   |=  (1 << BIO_NORDIC_CE_P1PIN);
   16ce4:	6811      	ldr	r1, [r2, #0]
   16ce6:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   16cea:	6011      	str	r1, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:108

    /* Initialize light sensor ADC pin on P0.25 */
    LPC_PINCON->PINSEL1 &= ~(0x3 << 18);
   16cec:	6859      	ldr	r1, [r3, #4]
   16cee:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   16cf2:	6059      	str	r1, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:109
    LPC_PINCON->PINSEL1 |=  (0x1 << 18);
   16cf4:	6859      	ldr	r1, [r3, #4]
   16cf6:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   16cfa:	6059      	str	r1, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:112

    /* Initialize LED0-3 on P1.0, P1.1, P1.4, P1.8 */
    LPC_PINCON->PINSEL2 &= ~(0x3030F << 0);
   16cfc:	6898      	ldr	r0, [r3, #8]
   16cfe:	4989      	ldr	r1, [pc, #548]	; (16f24 <high_level_init()+0x2e8>)
   16d00:	4001      	ands	r1, r0
   16d02:	6099      	str	r1, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:113
    LPC_GPIO1->FIODIR   |=  ( BIO_LED_PORT1_MASK );
   16d04:	6811      	ldr	r1, [r2, #0]
   16d06:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   16d0a:	f041 0101 	orr.w	r1, r1, #1
   16d0e:	6011      	str	r1, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:116

    /* Initialize SW0-3 on P1.9, P1.10, P1.14, P1.15 */
    LPC_PINCON->PINSEL2 &= ~(0xF << 18);
   16d10:	6899      	ldr	r1, [r3, #8]
   16d12:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   16d16:	6099      	str	r1, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:117
    LPC_PINCON->PINSEL2 &= ~(0xF << 28);
   16d18:	6899      	ldr	r1, [r3, #8]
   16d1a:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   16d1e:	6099      	str	r1, [r3, #8]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:118
    LPC_GPIO1->FIODIR   &= ~( BIO_SW_PORT1_MASK );
   16d20:	6811      	ldr	r1, [r2, #0]
   16d22:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   16d26:	6011      	str	r1, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:121

    /* Initialize IR pin to be used as capture pin (not GPIO) */
    LPC_PINCON->PINSEL3 &= ~(0x3 << 4);
   16d28:	68d9      	ldr	r1, [r3, #12]
   16d2a:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   16d2e:	60d9      	str	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:122
    LPC_PINCON->PINSEL3 |=  (0x3 << 4);
   16d30:	68d9      	ldr	r1, [r3, #12]
   16d32:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   16d36:	60d9      	str	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:125

    /* Initialize SD card CS(P1.25) and CD (P1.26 - card detect) signals*/
    LPC_PINCON->PINSEL3 &= ~(0xF << 18);
   16d38:	68d9      	ldr	r1, [r3, #12]
   16d3a:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   16d3e:	60d9      	str	r1, [r3, #12]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:126
    LPC_GPIO1->FIODIR |=  (1 << BIO_SD_CARD_CS_P1PIN);
   16d40:	6813      	ldr	r3, [r2, #0]
   16d42:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   16d46:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/bio.h:127
    LPC_GPIO1->FIODIR &= ~(1 << BIO_SD_CARD_CD_P1PIN);
   16d48:	6813      	ldr	r3, [r2, #0]
   16d4a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   16d4e:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:95
    adc0_init();
   16d50:	f7fb f9f6 	bl	12140 <adc0_init>
ssp1_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:40
    lpc_pconp(pconp_ssp1, true);
   16d54:	2101      	movs	r1, #1
   16d56:	200a      	movs	r0, #10
   16d58:	f7f9 fb76 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:41
    lpc_pclk(pclk_ssp1, clkdiv_1);
   16d5c:	2101      	movs	r1, #1
   16d5e:	200a      	movs	r0, #10
   16d60:	f7f9 fb8c 	bl	1047c <lpc_pclk>
ssp_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   16d64:	4870      	ldr	r0, [pc, #448]	; (16f28 <high_level_init()+0x2ec>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   16d66:	2101      	movs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   16d68:	6005      	str	r5, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   16d6a:	6044      	str	r4, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   16d6c:	f7ff fefc 	bl	16b68 <ssp_set_max_clock>
ssp1_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:46
    ssp1_dma_init();
   16d70:	f7fb fccc 	bl	1270c <ssp1_dma_init>
ssp0_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp0.h:42
 * Configures CLK, MISO, MOSI pins with a slow SCK speed
 */
static inline void ssp0_init(unsigned int max_clock_mhz)
{
    // @note Pins are initialized by bio.h
    lpc_pconp(pconp_ssp0, true);
   16d74:	2101      	movs	r1, #1
   16d76:	2015      	movs	r0, #21
   16d78:	f7f9 fb66 	bl	10448 <lpc_pconp>
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp0.h:43
    lpc_pclk(pclk_ssp0, clkdiv_1);
   16d7c:	2101      	movs	r1, #1
   16d7e:	2015      	movs	r0, #21
   16d80:	f7f9 fb7c 	bl	1047c <lpc_pclk>
ssp_init():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   16d84:	4869      	ldr	r0, [pc, #420]	; (16f2c <high_level_init()+0x2f0>)
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   16d86:	2101      	movs	r1, #1
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:63
    pSSP->CR0 = 7;          // 8-bit mode
   16d88:	6005      	str	r5, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:64
    pSSP->CR1 = (1 << 1);   // Enable SSP as Master
   16d8a:	6044      	str	r4, [r0, #4]
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/base/ssp_prv.h:65
    ssp_set_max_clock(pSSP, 1);   // Set default speed
   16d8c:	f7ff feec 	bl	16b68 <ssp_set_max_clock>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:99
    if (!I2C2::getInstance().init(SYS_CFG_I2C2_CLK_KHZ)) {
   16d90:	f7ff fe6e 	bl	16a70 <SingletonTemplate<I2C2>::getInstance()>
   16d94:	2164      	movs	r1, #100	; 0x64
   16d96:	f7fb fb51 	bl	1243c <I2C2::init(unsigned int)>
   16d9a:	b910      	cbnz	r0, 16da2 <high_level_init()+0x166>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:100
        puts("ERROR: Possible short on SDA or SCL wire (I2C2)!");
   16d9c:	4864      	ldr	r0, [pc, #400]	; (16f30 <high_level_init()+0x2f4>)
   16d9e:	f004 f9c1 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:113
    lpc_sys_setup_system_timer();
   16da2:	f7f9 fb8f 	bl	104c4 <lpc_sys_setup_system_timer>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:121
    if (!wireless_init()) {
   16da6:	f7ff fe17 	bl	169d8 <wireless_init>
   16daa:	b910      	cbnz	r0, 16db2 <high_level_init()+0x176>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:122
        puts("ERROR: Failed to initialize wireless");
   16dac:	4861      	ldr	r0, [pc, #388]	; (16f34 <high_level_init()+0x2f8>)
   16dae:	f004 f9b9 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:127
        tlm_component_add(SYS_CFG_DISK_TLM_NAME);
   16db2:	4861      	ldr	r0, [pc, #388]	; (16f38 <high_level_init()+0x2fc>)
   16db4:	f7fc f85a 	bl	12e6c <tlm_component_add>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:128
        tlm_component_add(SYS_CFG_DEBUG_TLM_NAME);
   16db8:	4860      	ldr	r0, [pc, #384]	; (16f3c <high_level_init()+0x300>)
   16dba:	f7fc f857 	bl	12e6c <tlm_component_add>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:135
    delay_ms(SYS_CFG_STARTUP_DELAY_MS);
   16dbe:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   16dc2:	f7fc f828 	bl	12e16 <delay_ms>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:136
    hl_print_line();
   16dc6:	f7ff fec9 	bl	16b5c <hl_print_line()>
hl_print_boot_info():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:244
        const unsigned int cpuClock = sys_get_cpu_clock();
        const unsigned int sig = cpuClock / (1000 * 1000);
        const unsigned int fraction = (cpuClock - (sig*1000*1000)) / 1000;
        printf("System Boot @ %u.%u Mhz\n", sig, fraction);
    #else
        printf("System Boot @ %.3f Mhz\n", sys_get_cpu_clock() / (1000 * 1000.0f));
   16dca:	f7f9 fd33 	bl	10834 <sys_get_cpu_clock>
   16dce:	f002 f991 	bl	190f4 <__aeabi_ui2f>
   16dd2:	495b      	ldr	r1, [pc, #364]	; (16f40 <high_level_init()+0x304>)
   16dd4:	f002 fa9a 	bl	1930c <__aeabi_fdiv>
   16dd8:	f002 f812 	bl	18e00 <__aeabi_f2d>
   16ddc:	4602      	mov	r2, r0
   16dde:	460b      	mov	r3, r1
   16de0:	4858      	ldr	r0, [pc, #352]	; (16f44 <high_level_init()+0x308>)
   16de2:	f004 f92b 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:247
    #endif

    if(boot_watchdog_recover == sys_get_boot_type()) {
   16de6:	f7f9 fa15 	bl	10214 <sys_get_boot_type>
   16dea:	2805      	cmp	r0, #5
   16dec:	ac04      	add	r4, sp, #16
   16dee:	d114      	bne.n	16e1a <high_level_init()+0x1de>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:248
        char taskName[sizeof(FAULT_LAST_RUNNING_TASK_NAME) * 2] = { 0 };
   16df0:	2300      	movs	r3, #0
   16df2:	6063      	str	r3, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:249
        memcpy(&taskName[0], (void*) &(FAULT_LAST_RUNNING_TASK_NAME), sizeof(FAULT_LAST_RUNNING_TASK_NAME));
   16df4:	4b54      	ldr	r3, [pc, #336]	; (16f48 <high_level_init()+0x30c>)
   16df6:	681b      	ldr	r3, [r3, #0]
   16df8:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:251

        hl_print_line();
   16dfa:	f7ff feaf 	bl	16b5c <hl_print_line()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
        printf("System rebooted after crash.  Relevant info:\n"
               "PC: 0x%08X.  LR: 0x%08X.  PSR: 0x%08X\n"
               "Possible last running OS Task: '%s'\n",
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   16dfe:	4b53      	ldr	r3, [pc, #332]	; (16f4c <high_level_init()+0x310>)
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   16e00:	4853      	ldr	r0, [pc, #332]	; (16f50 <high_level_init()+0x314>)
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:255
                (unsigned int)FAULT_PC, (unsigned int)FAULT_LR, (unsigned int)FAULT_PSR,
   16e02:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   16e04:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   16e06:	6d5b      	ldr	r3, [r3, #84]	; 0x54
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:256
                taskName);
   16e08:	9400      	str	r4, [sp, #0]
   16e0a:	f004 f917 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:257
        hl_print_line();
   16e0e:	f7ff fea5 	bl	16b5c <hl_print_line()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:258
        delay_ms(SYS_CFG_CRASH_STARTUP_DELAY_MS);
   16e12:	f241 3088 	movw	r0, #5000	; 0x1388
   16e16:	f7fb fffe 	bl	12e16 <delay_ms>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:145
    if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   16e1a:	f7ff fe79 	bl	16b10 <Storage::getFlashDrive()>
   16e1e:	494d      	ldr	r1, [pc, #308]	; (16f54 <high_level_init()+0x318>)
   16e20:	f7ff feb8 	bl	16b94 <hl_mount_storage(FileSystemObject&, char const*)>
   16e24:	4605      	mov	r5, r0
   16e26:	bb68      	cbnz	r0, 16e84 <high_level_init()+0x248>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:147
        printf("Erasing and formatting SPI flash, this can take a while ... ");
   16e28:	484b      	ldr	r0, [pc, #300]	; (16f58 <high_level_init()+0x31c>)
   16e2a:	f004 f907 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:149
        flash_chip_erase();
   16e2e:	f7fc fe91 	bl	13b54 <flash_chip_erase>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
        printf("%s\n", FR_OK == Storage::getFlashDrive().format() ? "Done" : "Error");
   16e32:	f7ff fe6d 	bl	16b10 <Storage::getFlashDrive()>
_ZNK16FileSystemObject6formatEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:94
            return f_mkfs(getDrivePath(), 0, 0);
   16e36:	4629      	mov	r1, r5
   16e38:	462a      	mov	r2, r5
   16e3a:	f200 2035 	addw	r0, r0, #565	; 0x235
   16e3e:	f7fe f997 	bl	15170 <f_mkfs>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:150
   16e42:	4b46      	ldr	r3, [pc, #280]	; (16f5c <high_level_init()+0x320>)
   16e44:	4a46      	ldr	r2, [pc, #280]	; (16f60 <high_level_init()+0x324>)
   16e46:	2800      	cmp	r0, #0
   16e48:	bf0c      	ite	eq
   16e4a:	4610      	moveq	r0, r2
   16e4c:	4618      	movne	r0, r3
   16e4e:	f004 f969 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:152
        if (!hl_mount_storage(Storage::getFlashDrive(), " Flash "))
   16e52:	f7ff fe5d 	bl	16b10 <Storage::getFlashDrive()>
   16e56:	493f      	ldr	r1, [pc, #252]	; (16f54 <high_level_init()+0x318>)
   16e58:	f7ff fe9c 	bl	16b94 <hl_mount_storage(FileSystemObject&, char const*)>
   16e5c:	b990      	cbnz	r0, 16e84 <high_level_init()+0x248>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:154
            printf("SPI FLASH is possibly damaged!\n");
   16e5e:	4841      	ldr	r0, [pc, #260]	; (16f64 <high_level_init()+0x328>)
   16e60:	f004 f960 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:155
            printf("Page size: %u\n", (unsigned) flash_get_page_size());
   16e64:	f7fc fe22 	bl	13aac <flash_get_page_size>
   16e68:	4601      	mov	r1, r0
   16e6a:	483f      	ldr	r0, [pc, #252]	; (16f68 <high_level_init()+0x32c>)
   16e6c:	f004 f8e6 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:156
            printf("Mem  size: %u (raw bytes)\n", (unsigned) (flash_get_page_count() * flash_get_page_size()));
   16e70:	f7fc fe0c 	bl	13a8c <flash_get_page_count>
   16e74:	4605      	mov	r5, r0
   16e76:	f7fc fe19 	bl	13aac <flash_get_page_size>
   16e7a:	fb00 f105 	mul.w	r1, r0, r5
   16e7e:	483b      	ldr	r0, [pc, #236]	; (16f6c <high_level_init()+0x330>)
   16e80:	f004 f8dc 	bl	1b03c <iprintf>
_ZN7Storage10getSDDriveEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:57

        /// @returns Single SD Card Drive Object reference
        static FileSystemObject& getSDDrive()
        {
            static FileSystemObject* pSDCardDrive = new FileSystemObject(driveNumSdCard);
   16e84:	4e3a      	ldr	r6, [pc, #232]	; (16f70 <high_level_init()+0x334>)
   16e86:	4f3b      	ldr	r7, [pc, #236]	; (16f74 <high_level_init()+0x338>)
   16e88:	7833      	ldrb	r3, [r6, #0]
   16e8a:	f3bf 8f5b 	dmb	ish
   16e8e:	f013 0501 	ands.w	r5, r3, #1
   16e92:	d116      	bne.n	16ec2 <high_level_init()+0x286>
   16e94:	4630      	mov	r0, r6
   16e96:	f001 fbc4 	bl	18622 <__cxa_guard_acquire>
   16e9a:	b190      	cbz	r0, 16ec2 <high_level_init()+0x286>
   16e9c:	f44f 700e 	mov.w	r0, #568	; 0x238
   16ea0:	f000 f9b6 	bl	17210 <operator new(unsigned int)>
_ZN16FileSystemObjectC4E15DriveNumberType():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:103
            mVolNum(volumeNum)
   16ea4:	2301      	movs	r3, #1
   16ea6:	f880 3234 	strb.w	r3, [r0, #564]	; 0x234
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:105
            mVolStr[0] = volumeNum + '0';
   16eaa:	2331      	movs	r3, #49	; 0x31
   16eac:	f880 3235 	strb.w	r3, [r0, #565]	; 0x235
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   16eb0:	233a      	movs	r3, #58	; 0x3a
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:107
            mVolStr[2] = '\0';
   16eb2:	f880 5237 	strb.w	r5, [r0, #567]	; 0x237
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/src/FileSystemObject.hpp:106
            mVolStr[1] = ':';
   16eb6:	f880 3236 	strb.w	r3, [r0, #566]	; 0x236
_ZN7Storage10getSDDriveEv():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/storage.hpp:57
   16eba:	6038      	str	r0, [r7, #0]
   16ebc:	4630      	mov	r0, r6
   16ebe:	f001 fbbc 	bl	1863a <__cxa_guard_release>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
    hl_mount_storage(Storage::getSDDrive(), "SD Card");
   16ec2:	492d      	ldr	r1, [pc, #180]	; (16f78 <high_level_init()+0x33c>)
   16ec4:	6838      	ldr	r0, [r7, #0]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16ec6:	4d2d      	ldr	r5, [pc, #180]	; (16f7c <high_level_init()+0x340>)
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:160
   16ec8:	f7ff fe64 	bl	16b94 <hl_mount_storage(FileSystemObject&, char const*)>
ssp1_set_max_clock():
/home/bionia/SJSU-DEV/firmware/lib/L2_Drivers/ssp1.h:56
    ssp_set_max_clock(LPC_SSP1, max_clock_mhz);
   16ecc:	2118      	movs	r1, #24
   16ece:	4816      	ldr	r0, [pc, #88]	; (16f28 <high_level_init()+0x2ec>)
   16ed0:	f7ff fe4a 	bl	16b68 <ssp_set_max_clock>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:164
    hl_print_line();
   16ed4:	f7ff fe42 	bl	16b5c <hl_print_line()>
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
   16ed8:	682b      	ldr	r3, [r5, #0]
   16eda:	b94b      	cbnz	r3, 16ef0 <high_level_init()+0x2b4>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16edc:	2008      	movs	r0, #8
   16ede:	f000 f997 	bl	17210 <operator new(unsigned int)>
   16ee2:	4606      	mov	r6, r0
_ZN11i2c2_deviceC4Eh():
/home/bionia/SJSU-DEV/firmware/lib/L4_IO/i2c2_device.hpp:43
   16ee4:	f7ff fdc4 	bl	16a70 <SingletonTemplate<I2C2>::getInstance()>
   16ee8:	2338      	movs	r3, #56	; 0x38
   16eea:	6030      	str	r0, [r6, #0]
   16eec:	7133      	strb	r3, [r6, #4]
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
   16eee:	602e      	str	r6, [r5, #0]
hl_init_board_io():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:266

static bool hl_init_board_io(void)
{
    bool success = true;

    if(!AS.init()) { puts("ERROR: Acceleration Sensor"); success = false; }
   16ef0:	6828      	ldr	r0, [r5, #0]
   16ef2:	f7fe fc30 	bl	15756 <Acceleration_Sensor::init()>
   16ef6:	4606      	mov	r6, r0
   16ef8:	b910      	cbnz	r0, 16f00 <high_level_init()+0x2c4>
   16efa:	4821      	ldr	r0, [pc, #132]	; (16f80 <high_level_init()+0x344>)
   16efc:	f004 f912 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:267
    if(!TS.init()) { puts("ERROR: Temperature Sensor"); success = false; }
   16f00:	f7ff fdc6 	bl	16a90 <SingletonTemplate<TemperatureSensor>::getInstance()>
   16f04:	f7fe fd22 	bl	1594c <I2C_Temp::init()>
   16f08:	4605      	mov	r5, r0
   16f0a:	2800      	cmp	r0, #0
   16f0c:	d13c      	bne.n	16f88 <high_level_init()+0x34c>
   16f0e:	481d      	ldr	r0, [pc, #116]	; (16f84 <high_level_init()+0x348>)
   16f10:	f004 f908 	bl	1b124 <puts>
   16f14:	462e      	mov	r6, r5
   16f16:	e037      	b.n	16f88 <high_level_init()+0x34c>
   16f18:	2009c000 	.word	0x2009c000
   16f1c:	2009c020 	.word	0x2009c020
   16f20:	4002c000 	.word	0x4002c000
   16f24:	fffcfcf0 	.word	0xfffcfcf0
   16f28:	40030000 	.word	0x40030000
   16f2c:	40088000 	.word	0x40088000
   16f30:	00020a4f 	.word	0x00020a4f
   16f34:	00020a80 	.word	0x00020a80
   16f38:	00020aa5 	.word	0x00020aa5
   16f3c:	00020aaa 	.word	0x00020aaa
   16f40:	49742400 	.word	0x49742400
   16f44:	00020ab0 	.word	0x00020ab0
   16f48:	40024044 	.word	0x40024044
   16f4c:	40024000 	.word	0x40024000
   16f50:	00020ac8 	.word	0x00020ac8
   16f54:	00020b40 	.word	0x00020b40
   16f58:	00020b48 	.word	0x00020b48
   16f5c:	00020a3c 	.word	0x00020a3c
   16f60:	00020a37 	.word	0x00020a37
   16f64:	00020b85 	.word	0x00020b85
   16f68:	00020ba4 	.word	0x00020ba4
   16f6c:	00020bb3 	.word	0x00020bb3
   16f70:	2007c6d0 	.word	0x2007c6d0
   16f74:	2007c6d4 	.word	0x2007c6d4
   16f78:	00020bce 	.word	0x00020bce
   16f7c:	2007c6cc 	.word	0x2007c6cc
   16f80:	00020bd6 	.word	0x00020bd6
   16f84:	00020bf1 	.word	0x00020bf1
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:268
    if(!LD.init()) { puts("ERROR: 7-Segment Display"); success = false; }
   16f88:	f7ff fd96 	bl	16ab8 <SingletonTemplate<LED_Display>::getInstance()>
   16f8c:	f7fe fc66 	bl	1585c <LED_Display::init()>
   16f90:	4605      	mov	r5, r0
   16f92:	b918      	cbnz	r0, 16f9c <high_level_init()+0x360>
   16f94:	486d      	ldr	r0, [pc, #436]	; (1714c <high_level_init()+0x510>)
   16f96:	f004 f8c5 	bl	1b124 <puts>
   16f9a:	462e      	mov	r6, r5
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:103
        if(0 == mpSingletonInstance)
   16f9c:	4d6c      	ldr	r5, [pc, #432]	; (17150 <high_level_init()+0x514>)
   16f9e:	682b      	ldr	r3, [r5, #0]
   16fa0:	b91b      	cbnz	r3, 16faa <high_level_init()+0x36e>
/home/bionia/SJSU-DEV/firmware/lib/L3_Utils/singleton_template.hpp:105
            mpSingletonInstance = new classType();
   16fa2:	2001      	movs	r0, #1
   16fa4:	f000 f934 	bl	17210 <operator new(unsigned int)>
   16fa8:	6028      	str	r0, [r5, #0]
hl_init_board_io():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:271

    /* These devices don't have a way to check if init() failed */
    IS.init(); // IR sensor
   16faa:	6828      	ldr	r0, [r5, #0]
   16fac:	f7fe fc24 	bl	157f8 <IR_Sensor::init()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:272
    LS.init(); // Light sensor
   16fb0:	f7ff fd94 	bl	16adc <SingletonTemplate<Light_Sensor>::getInstance()>
   16fb4:	f7fe fcb6 	bl	15924 <Light_Sensor::init()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:273
    LE.init(); // LEDs
   16fb8:	f7ff fd9c 	bl	16af4 <SingletonTemplate<LED>::getInstance()>
   16fbc:	f7fe fc87 	bl	158ce <LED::init()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:274
    SW.init(); // Switches
   16fc0:	f7ff fe30 	bl	16c24 <SingletonTemplate<Switches>::getInstance()>
   16fc4:	f7fe fcb3 	bl	1592e <Switches::init()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:277

    /* Turn off all LEDs */
    LE.setAll(0);
   16fc8:	f7ff fd94 	bl	16af4 <SingletonTemplate<LED>::getInstance()>
   16fcc:	2100      	movs	r1, #0
   16fce:	f7fe fc81 	bl	158d4 <LED::setAll(unsigned char)>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:167
    if(!hl_init_board_io()) {
   16fd2:	2e00      	cmp	r6, #0
   16fd4:	f040 8081 	bne.w	170da <high_level_init()+0x49e>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:168
        hl_print_line();
   16fd8:	f7ff fdc0 	bl	16b5c <hl_print_line()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:169
        LD.setLeftDigit('-');
   16fdc:	f7ff fd6c 	bl	16ab8 <SingletonTemplate<LED_Display>::getInstance()>
   16fe0:	212d      	movs	r1, #45	; 0x2d
   16fe2:	f7fe fc23 	bl	1582c <LED_Display::setLeftDigit(char)>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:170
        LD.setRightDigit('-');
   16fe6:	f7ff fd67 	bl	16ab8 <SingletonTemplate<LED_Display>::getInstance()>
   16fea:	212d      	movs	r1, #45	; 0x2d
   16fec:	f7fe fc2a 	bl	15844 <LED_Display::setRightDigit(char)>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:171
        LE.setAll(0xFF);
   16ff0:	f7ff fd80 	bl	16af4 <SingletonTemplate<LED>::getInstance()>
   16ff4:	21ff      	movs	r1, #255	; 0xff
   16ff6:	f7fe fc6d 	bl	158d4 <LED::setAll(unsigned char)>
hl_wireless_set_addr_from_file():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:285
}

static void hl_wireless_set_addr_from_file(void)
{
    uint8_t wireless_node_addr = WIRELESS_NODE_ADDR;
    char nAddrStr[16] = { 0 };
   16ffa:	2210      	movs	r2, #16
   16ffc:	2100      	movs	r1, #0
   16ffe:	4620      	mov	r0, r4
   17000:	f002 fe82 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:287

    if (FR_OK == Storage::read(WIRELESS_NODE_ADDR_FILE, nAddrStr, sizeof(nAddrStr)-1, 0)) {
   17004:	2300      	movs	r3, #0
   17006:	220f      	movs	r2, #15
   17008:	4621      	mov	r1, r4
   1700a:	4852      	ldr	r0, [pc, #328]	; (17154 <high_level_init()+0x518>)
   1700c:	f7fe fcda 	bl	159c4 <Storage::read(char const*, void*, unsigned int, unsigned int)>
   17010:	b980      	cbnz	r0, 17034 <high_level_init()+0x3f8>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:288
        wireless_node_addr = atoi(nAddrStr);
   17012:	4620      	mov	r0, r4
   17014:	f002 fbc5 	bl	197a2 <atoi>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:289
        bool ok = mesh_set_node_address(wireless_node_addr);
   17018:	b2c5      	uxtb	r5, r0
   1701a:	4628      	mov	r0, r5
   1701c:	f7fe fedc 	bl	15dd8 <mesh_set_node_address>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:291
        printf("Set wireless node address to %i from '%s' file: %s\n",
                    wireless_node_addr, WIRELESS_NODE_ADDR_FILE, ok ? "Done!" : "FAILED");
   17020:	4a4d      	ldr	r2, [pc, #308]	; (17158 <high_level_init()+0x51c>)
   17022:	4b4e      	ldr	r3, [pc, #312]	; (1715c <high_level_init()+0x520>)
   17024:	4629      	mov	r1, r5
   17026:	2800      	cmp	r0, #0
   17028:	bf18      	it	ne
   1702a:	4613      	movne	r3, r2
   1702c:	4a49      	ldr	r2, [pc, #292]	; (17154 <high_level_init()+0x518>)
   1702e:	484c      	ldr	r0, [pc, #304]	; (17160 <high_level_init()+0x524>)
   17030:	f004 f804 	bl	1b03c <iprintf>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:181
    srand(LS.getRawValue() + time(NULL));
   17034:	f7ff fd52 	bl	16adc <SingletonTemplate<Light_Sensor>::getInstance()>
   17038:	f7fe fc76 	bl	15928 <Light_Sensor::getRawValue()>
   1703c:	4605      	mov	r5, r0
   1703e:	2000      	movs	r0, #0
   17040:	f005 fa36 	bl	1c4b0 <time>
   17044:	4428      	add	r0, r5
   17046:	f004 f875 	bl	1b134 <srand>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:185
        char buff[512] = { 0 };
   1704a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1704e:	2100      	movs	r1, #0
   17050:	4620      	mov	r0, r4
   17052:	f002 fe59 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:186
        sys_get_mem_info_str(buff);
   17056:	4620      	mov	r0, r4
   17058:	f7f9 fa74 	bl	10544 <sys_get_mem_info_str>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:187
        printf("%s", buff);
   1705c:	4621      	mov	r1, r4
   1705e:	4841      	ldr	r0, [pc, #260]	; (17164 <high_level_init()+0x528>)
   17060:	f003 ffec 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:188
        hl_print_line();
   17064:	f7ff fd7a 	bl	16b5c <hl_print_line()>
hl_handle_board_id():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:299

static void hl_handle_board_id(void)
{
    const uint8_t buttons_to_program_id = (1 << 3) | (1 << 0);
    const char notProgrammed = 0xFF;
    char board_id_on_spi_flash[128] = { 0 };
   17068:	2280      	movs	r2, #128	; 0x80
   1706a:	2100      	movs	r1, #0
   1706c:	4620      	mov	r0, r4
   1706e:	f002 fe4b 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:300
    flash_read_permanent_id(board_id_on_spi_flash);
   17072:	4620      	mov	r0, r4
   17074:	f7fc fcf6 	bl	13a64 <flash_read_permanent_id>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:302

    if (notProgrammed != board_id_on_spi_flash[0]) {
   17078:	7822      	ldrb	r2, [r4, #0]
   1707a:	2aff      	cmp	r2, #255	; 0xff
   1707c:	d03b      	beq.n	170f6 <high_level_init()+0x4ba>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:303
        printf("Board ID is: '%s' (0x%02X)\n", board_id_on_spi_flash, (board_id_on_spi_flash[0] & 0xFF));
   1707e:	4621      	mov	r1, r4
   17080:	4839      	ldr	r0, [pc, #228]	; (17168 <high_level_init()+0x52c>)
   17082:	f003 ffdb 	bl	1b03c <iprintf>
chip_get_prog_max():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/chip_info.h:49

/// @returns the number of times the chip was programmed a different program than the preceding program
static inline uint32_t chip_get_prog_modify_count(void) {   return *(chip_get_magic_location() + 1);    }

/// @returns the highest program size that was programmed
static inline uint32_t chip_get_prog_max(void)          {   return *(chip_get_magic_location() + 2);    }
   17086:	f24f 0308 	movw	r3, #61448	; 0xf008
hl_show_prog_info():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332

static void hl_show_prog_info(void)
{
    const unsigned int prog_count   = chip_get_prog_count();
    const unsigned int prog_modify  = chip_get_prog_modify_count();
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   1708a:	681d      	ldr	r5, [r3, #0]
chip_get_prog_min():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/chip_info.h:52

/// @returns the lowest program size that was programmed
static inline uint32_t chip_get_prog_min(void)          {   return *(chip_get_magic_location() + 3);    }
   1708c:	f24f 030c 	movw	r3, #61452	; 0xf00c
hl_show_prog_info():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   17090:	681c      	ldr	r4, [r3, #0]
chip_get_prog_time_ms():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/chip_info.h:55

/// @returns the number of milliseconds it took to program the last program.
static inline uint32_t chip_get_prog_time_ms(void)      {   return *(chip_get_magic_location() + 4);    }
   17092:	f24f 0310 	movw	r3, #61456	; 0xf010
   17096:	681e      	ldr	r6, [r3, #0]
chip_get_prog_count():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/chip_info.h:43
static inline uint32_t chip_get_prog_count(void)        {   return *(chip_get_magic_location() + 0);    }
   17098:	f44f 4370 	mov.w	r3, #61440	; 0xf000
hl_show_prog_info():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    const unsigned int prog_time_ms = chip_get_prog_time_ms();

    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   1709c:	681a      	ldr	r2, [r3, #0]
   1709e:	f24f 0304 	movw	r3, #61444	; 0xf004
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:332
    const unsigned int prog_max_kb  = chip_get_prog_max() / 1024;
   170a2:	0aad      	lsrs	r5, r5, #10
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   170a4:	6819      	ldr	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:333
    const unsigned int prog_min_kb  = chip_get_prog_min() / 1024;
   170a6:	0aa4      	lsrs	r4, r4, #10
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:336
    printf("CPU flash altered/programmed counts: %u/%u\n", prog_modify, prog_count);
   170a8:	4830      	ldr	r0, [pc, #192]	; (1716c <high_level_init()+0x530>)
   170aa:	f003 ffc7 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:337
    printf("CPU programmed flash (min/max): %uKb - %uKb\n", prog_min_kb, prog_max_kb);
   170ae:	462a      	mov	r2, r5
   170b0:	4621      	mov	r1, r4
   170b2:	482f      	ldr	r0, [pc, #188]	; (17170 <high_level_init()+0x534>)
   170b4:	f003 ffc2 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:338
    printf("Last programming took %u ms\n", prog_time_ms);
   170b8:	4631      	mov	r1, r6
   170ba:	482e      	ldr	r0, [pc, #184]	; (17174 <high_level_init()+0x538>)
   170bc:	f003 ffbe 	bl	1b03c <iprintf>
_Z15high_level_initv():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:194
    hl_print_line();
   170c0:	f7ff fd4c 	bl	16b5c <hl_print_line()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:203
    logger_init(SYS_CFG_LOGGER_TASK_PRIORITY);
   170c4:	2001      	movs	r0, #1
   170c6:	f7fb fd69 	bl	12b9c <logger_init>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:207
    puts("Calling your main()");
   170ca:	482b      	ldr	r0, [pc, #172]	; (17178 <high_level_init()+0x53c>)
   170cc:	f004 f82a 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:208
    hl_print_line();
   170d0:	f7ff fd44 	bl	16b5c <hl_print_line()>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:209
}
   170d4:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   170d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:174
        LD.setNumber(TS.getFarenheit());
   170da:	f7ff fced 	bl	16ab8 <SingletonTemplate<LED_Display>::getInstance()>
   170de:	4605      	mov	r5, r0
   170e0:	f7ff fcd6 	bl	16a90 <SingletonTemplate<TemperatureSensor>::getInstance()>
   170e4:	f7fe fc5c 	bl	159a0 <I2C_Temp::getFarenheit()>
   170e8:	f002 f9ac 	bl	19444 <__aeabi_f2uiz>
   170ec:	b2c1      	uxtb	r1, r0
   170ee:	4628      	mov	r0, r5
   170f0:	f7fe fbd0 	bl	15894 <LED_Display::setNumber(char)>
   170f4:	e781      	b.n	16ffa <high_level_init()+0x3be>
hl_handle_board_id():
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:305
    else if (SW.getSwitchValues() == buttons_to_program_id) {
   170f6:	f7ff fd95 	bl	16c24 <SingletonTemplate<Switches>::getInstance()>
   170fa:	f7fe fc1b 	bl	15934 <Switches::getSwitchValues()>
   170fe:	2809      	cmp	r0, #9
   17100:	d11f      	bne.n	17142 <high_level_init()+0x506>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:306
        printf("Enter a board ID (64 chars max): \n");
   17102:	481e      	ldr	r0, [pc, #120]	; (1717c <high_level_init()+0x540>)
   17104:	f004 f80e 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:307
        scanf("%64s", &board_id_on_spi_flash[0]);
   17108:	4621      	mov	r1, r4
   1710a:	481d      	ldr	r0, [pc, #116]	; (17180 <high_level_init()+0x544>)
   1710c:	f004 f91a 	bl	1b344 <iscanf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:309
        printf("Board ID to program: '%s'\n", board_id_on_spi_flash);
   17110:	4621      	mov	r1, r4
   17112:	481c      	ldr	r0, [pc, #112]	; (17184 <high_level_init()+0x548>)
   17114:	f003 ff92 	bl	1b03c <iprintf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:310
        printf("Enter 'Y' to confirm.  BOARD ID CANNOT BE CHANGED AND IS PERMANENT\n");
   17118:	481b      	ldr	r0, [pc, #108]	; (17188 <high_level_init()+0x54c>)
   1711a:	f004 f803 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   1711e:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   17120:	a903      	add	r1, sp, #12
   17122:	481a      	ldr	r0, [pc, #104]	; (1718c <high_level_init()+0x550>)
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:312
        char confirm[4] = { 0 };
   17124:	9303      	str	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:313
        scanf("%3s", confirm);
   17126:	f004 f90d 	bl	1b344 <iscanf>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:315
        if ('Y' == confirm[0]) {
   1712a:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1712e:	2b59      	cmp	r3, #89	; 0x59
   17130:	d103      	bne.n	1713a <high_level_init()+0x4fe>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:316
            flash_write_permanent_id(board_id_on_spi_flash);
   17132:	4620      	mov	r0, r4
   17134:	f7fc fc74 	bl	13a20 <flash_write_permanent_id>
   17138:	e7a5      	b.n	17086 <high_level_init()+0x44a>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:319
            puts("Board ID not programmed");
   1713a:	4815      	ldr	r0, [pc, #84]	; (17190 <high_level_init()+0x554>)
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   1713c:	f003 fff2 	bl	1b124 <puts>
   17140:	e7a1      	b.n	17086 <high_level_init()+0x44a>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:323
        puts("You can program a PERMANENT ID of your board.");
   17142:	4814      	ldr	r0, [pc, #80]	; (17194 <high_level_init()+0x558>)
   17144:	f003 ffee 	bl	1b124 <puts>
/home/bionia/SJSU-DEV/firmware/lib/L5_HighLevel/source/high_level_init.cpp:324
        puts("To do this, hold SW1 and SW4 and reset the board.");
   17148:	4813      	ldr	r0, [pc, #76]	; (17198 <high_level_init()+0x55c>)
   1714a:	e7f7      	b.n	1713c <high_level_init()+0x500>
   1714c:	00020c0b 	.word	0x00020c0b
   17150:	2007c310 	.word	0x2007c310
   17154:	00020c24 	.word	0x00020c24
   17158:	00020a42 	.word	0x00020a42
   1715c:	00020a48 	.word	0x00020a48
   17160:	00020c2a 	.word	0x00020c2a
   17164:	00020c5e 	.word	0x00020c5e
   17168:	00020c61 	.word	0x00020c61
   1716c:	00020d7e 	.word	0x00020d7e
   17170:	00020daa 	.word	0x00020daa
   17174:	00020dd7 	.word	0x00020dd7
   17178:	00020df4 	.word	0x00020df4
   1717c:	00020c7d 	.word	0x00020c7d
   17180:	00020c9f 	.word	0x00020c9f
   17184:	00020ca4 	.word	0x00020ca4
   17188:	00020cbf 	.word	0x00020cbf
   1718c:	00020d02 	.word	0x00020d02
   17190:	00020d06 	.word	0x00020d06
   17194:	00020d1e 	.word	0x00020d1e
   17198:	00020d4c 	.word	0x00020d4c

0001719c <__malloc_lock>:
__malloc_lock():
/home/bionia/SJSU-DEV/firmware/lib/newlib/malloc_lock.c:33
 *        GCC calls these functions before and after calling the malloc() functions.
 */

__attribute__ ((used)) void __malloc_lock( void *_r )
{
    vPortEnterCritical();
   1719c:	f7f9 bc82 	b.w	10aa4 <vPortEnterCritical>

000171a0 <__malloc_unlock>:
__malloc_unlock():
/home/bionia/SJSU-DEV/firmware/lib/newlib/malloc_lock.c:38
}

__attribute__ ((used)) void __malloc_unlock( void *_r )
{
    vPortExitCritical();
   171a0:	f7f9 bc90 	b.w	10ac4 <vPortExitCritical>

000171a4 <_sbrk>:
_sbrk():
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:57
extern "C" void * _sbrk(size_t req_bytes)
{
    char  *ret_mem = 0;

    /* Initialize Heap pointer to bottom of RAM region 1 */
    if (!g_next_heap_ptr) {
   171a4:	4b12      	ldr	r3, [pc, #72]	; (171f0 <_sbrk+0x4c>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:53
{
   171a6:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   171a8:	681a      	ldr	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:53
{
   171aa:	4601      	mov	r1, r0
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:57
    if (!g_next_heap_ptr) {
   171ac:	b912      	cbnz	r2, 171b4 <_sbrk+0x10>
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:58
        g_next_heap_ptr = (char*) ram_region_1_base;
   171ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   171b2:	601a      	str	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:61
    }

    ret_mem = g_next_heap_ptr;    /* Save the pointer we will return */
   171b4:	6818      	ldr	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:73
     * @note
     * If next heap pointer is exactly at ram_region_1_end, then we've got perfectly aligned
     * ret_mem to the end of SRAM1. If it is greater, then we've been asked for too much so try
     * to return from SRAM2.
     */
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   171b6:	4a0f      	ldr	r2, [pc, #60]	; (171f4 <_sbrk+0x50>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   171b8:	1844      	adds	r4, r0, r1
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:73
    if ((unsigned)g_next_heap_ptr > ((unsigned)ram_region_1_end) &&
   171ba:	4d0f      	ldr	r5, [pc, #60]	; (171f8 <_sbrk+0x54>)
   171bc:	4422      	add	r2, r4
   171be:	42aa      	cmp	r2, r5
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:81
        /* Defined by linker.  This is location after global memory space */
        extern char _pvHeapStart[];
        g_next_heap_ptr = _pvHeapStart;

        ret_mem = g_next_heap_ptr;
        g_next_heap_ptr += req_bytes;
   171c0:	bf97      	itett	ls
   171c2:	4a0e      	ldrls	r2, [pc, #56]	; (171fc <_sbrk+0x58>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:62
    g_next_heap_ptr += req_bytes; /* Increase our pointer */
   171c4:	601c      	strhi	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:81
        g_next_heap_ptr += req_bytes;
   171c6:	1888      	addls	r0, r1, r2
   171c8:	6018      	strls	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:85
    }

    /* Did we exhaust the 2nd ram region too ? */
    if (g_next_heap_ptr >= ram_region_2_end) {
   171ca:	681c      	ldr	r4, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:80
        ret_mem = g_next_heap_ptr;
   171cc:	bf98      	it	ls
   171ce:	4610      	movls	r0, r2
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:85
    if (g_next_heap_ptr >= ram_region_2_end) {
   171d0:	4a0b      	ldr	r2, [pc, #44]	; (17200 <_sbrk+0x5c>)
   171d2:	4294      	cmp	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:86
        g_next_heap_ptr = (char*) ram_region_2_end;
   171d4:	bf82      	ittt	hi
   171d6:	3201      	addhi	r2, #1
   171d8:	601a      	strhi	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:87
        ret_mem = 0;
   171da:	2000      	movhi	r0, #0
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:93
    }

    /* Seems like newlib is calling us twice, one for real allocation and once more
     * with req_bytes set to zero, so do not increment counters for this case
     */
    if (req_bytes > 0) {
   171dc:	b139      	cbz	r1, 171ee <_sbrk+0x4a>
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:94
        ++g_sbrk_calls;
   171de:	4a09      	ldr	r2, [pc, #36]	; (17204 <_sbrk+0x60>)
   171e0:	6813      	ldr	r3, [r2, #0]
   171e2:	3301      	adds	r3, #1
   171e4:	6013      	str	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:95
        g_last_sbrk_ptr = ret_mem;
   171e6:	4b08      	ldr	r3, [pc, #32]	; (17208 <_sbrk+0x64>)
   171e8:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:96
        g_last_sbrk_size = req_bytes;
   171ea:	4b08      	ldr	r3, [pc, #32]	; (1720c <_sbrk+0x68>)
   171ec:	6019      	str	r1, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:100
    }

    return ret_mem;        /*  Return pointer to start of new heap area.   */
}
   171ee:	bd30      	pop	{r4, r5, pc}
   171f0:	2007c6e8 	.word	0x2007c6e8
   171f4:	efff7fff 	.word	0xefff7fff
   171f8:	10073ffe 	.word	0x10073ffe
   171fc:	2007c8cc 	.word	0x2007c8cc
   17200:	20083fff 	.word	0x20083fff
   17204:	2007c6e0 	.word	0x2007c6e0
   17208:	2007c6e4 	.word	0x2007c6e4
   1720c:	2007c6ec 	.word	0x2007c6ec

00017210 <operator new(unsigned int)>:
_Znwj():
   17210:	f002 bd16 	b.w	19c40 <malloc>

00017214 <operator delete(void*)>:
_ZdlPv():
   17214:	f002 bd1c 	b.w	19c50 <free>

00017218 <sys_get_mem_info>:
sys_get_mem_info():
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:110
void operator delete(void *p)       {   free(p);                }
void operator delete[](void *p)     {   free(p);                }
/** @} */

extern "C" sys_mem_t sys_get_mem_info()
{
   17218:	b530      	push	{r4, r5, lr}
   1721a:	4604      	mov	r4, r0
   1721c:	b08b      	sub	sp, #44	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:120

    // Heap pointer starts after global memory in SRAM2
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;

    // Only print malloc() info if it has been used (arena is > 0)
    struct mallinfo info = mallinfo();
   1721e:	4668      	mov	r0, sp
   17220:	f002 ffd6 	bl	1a1d0 <mallinfo>
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:117
    const unsigned int globalMem = (unsigned int) &_pvHeapStart - (unsigned int)ram_region_2_base;
   17224:	4b21      	ldr	r3, [pc, #132]	; (172ac <sys_get_mem_info+0x94>)
   17226:	4d22      	ldr	r5, [pc, #136]	; (172b0 <sys_get_mem_info+0x98>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:122

    meminfo.used_global = globalMem;
   17228:	6023      	str	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:123
    meminfo.avail_heap = info.fordblks;
   1722a:	9b08      	ldr	r3, [sp, #32]
   1722c:	4a21      	ldr	r2, [pc, #132]	; (172b4 <sys_get_mem_info+0x9c>)
   1722e:	60a3      	str	r3, [r4, #8]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:124
    meminfo.used_heap = info.uordblks;
   17230:	9b07      	ldr	r3, [sp, #28]
   17232:	6063      	str	r3, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:130

    /* HACK: 20131214 (GCC 4.7.4)
     *  Current version newlib nano returns zero for all mallinfo struct members.
     *  So this is a hack to deduce the used heap.
     */
    if (0 == meminfo.used_heap) {
   17234:	b953      	cbnz	r3, 1724c <sys_get_mem_info+0x34>
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:131
        if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   17236:	6813      	ldr	r3, [r2, #0]
   17238:	491f      	ldr	r1, [pc, #124]	; (172b8 <sys_get_mem_info+0xa0>)
   1723a:	428b      	cmp	r3, r1
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
        }
        else {
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   1723c:	bf8a      	itet	hi
   1723e:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:132
            meminfo.used_heap = (g_next_heap_ptr - ram_region_1_base);
   17242:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:135
            meminfo.used_heap = one_sram_block_size + (g_next_heap_ptr - ram_region_2_base);
   17246:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   1724a:	6063      	str	r3, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:150
    }

    /* If next heap is still in SRAM1 then we have got all of SRAM2 and the remaining of the SRAM1
     * If next heap pointer is in SRAM2, then we've got whatever is left in SRAM 2
     */
    meminfo.avail_sys = 0;
   1724c:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   1724e:	6861      	ldr	r1, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:150
    meminfo.avail_sys = 0;
   17250:	60e3      	str	r3, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:142
    if (meminfo.used_heap > (2 * one_sram_block_size)) {
   17252:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:144
		meminfo.used_heap -= ( (ram_region_2_base - ram_region_1_base) - one_sram_block_size);
   17256:	bf82      	ittt	hi
   17258:	f101 4170 	addhi.w	r1, r1, #4026531840	; 0xf0000000
   1725c:	f5a1 21e8 	subhi.w	r1, r1, #475136	; 0x74000
   17260:	6061      	strhi	r1, [r4, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:151
    if ((unsigned) g_next_heap_ptr <= (unsigned)ram_region_1_end) {
   17262:	6811      	ldr	r1, [r2, #0]
   17264:	4a14      	ldr	r2, [pc, #80]	; (172b8 <sys_get_mem_info+0xa0>)
   17266:	4291      	cmp	r1, r2
   17268:	d813      	bhi.n	17292 <sys_get_mem_info+0x7a>
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:152
        meminfo.avail_sys = one_sram_block_size + (unsigned) (ram_region_1_end - g_next_heap_ptr) - globalMem;
   1726a:	f1c5 5300 	rsb	r3, r5, #536870912	; 0x20000000
   1726e:	1a52      	subs	r2, r2, r1
   17270:	f503 2304 	add.w	r3, r3, #540672	; 0x84000
   17274:	441a      	add	r2, r3
   17276:	60e2      	str	r2, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:168
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
    meminfo.last_sbrk_size  = g_last_sbrk_size;
    meminfo.num_sbrk_calls  = g_sbrk_calls;

    return meminfo;
}
   17278:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   1727a:	4b10      	ldr	r3, [pc, #64]	; (172bc <sys_get_mem_info+0xa4>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:162
    meminfo.next_malloc_ptr = g_next_heap_ptr;
   1727c:	61e1      	str	r1, [r4, #28]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:163
    meminfo.last_sbrk_ptr   = g_last_sbrk_ptr;
   1727e:	681b      	ldr	r3, [r3, #0]
   17280:	61a3      	str	r3, [r4, #24]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:164
    meminfo.last_sbrk_size  = g_last_sbrk_size;
   17282:	4b0f      	ldr	r3, [pc, #60]	; (172c0 <sys_get_mem_info+0xa8>)
   17284:	681b      	ldr	r3, [r3, #0]
   17286:	6163      	str	r3, [r4, #20]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:165
    meminfo.num_sbrk_calls  = g_sbrk_calls;
   17288:	4b0e      	ldr	r3, [pc, #56]	; (172c4 <sys_get_mem_info+0xac>)
   1728a:	681b      	ldr	r3, [r3, #0]
   1728c:	6123      	str	r3, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:168
}
   1728e:	b00b      	add	sp, #44	; 0x2c
   17290:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:154
    else if ((unsigned)g_next_heap_ptr < (unsigned)ram_region_2_end){
   17292:	4b0d      	ldr	r3, [pc, #52]	; (172c8 <sys_get_mem_info+0xb0>)
   17294:	4299      	cmp	r1, r3
   17296:	d8ef      	bhi.n	17278 <sys_get_mem_info+0x60>
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:156
        int avail = (int) (ram_region_2_end - g_next_heap_ptr) - globalMem;
   17298:	f1c1 4380 	rsb	r3, r1, #1073741824	; 0x40000000
   1729c:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
   172a0:	1b5b      	subs	r3, r3, r5
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:157
        if (avail > 0) {
   172a2:	2b00      	cmp	r3, #0
/home/bionia/SJSU-DEV/firmware/lib/newlib/memory.cpp:158
            meminfo.avail_sys = avail;
   172a4:	bfc8      	it	gt
   172a6:	60e3      	strgt	r3, [r4, #12]
   172a8:	e7e6      	b.n	17278 <sys_get_mem_info+0x60>
   172aa:	bf00      	nop
   172ac:	000008cc 	.word	0x000008cc
   172b0:	2007c8cc 	.word	0x2007c8cc
   172b4:	2007c6e8 	.word	0x2007c6e8
   172b8:	10008000 	.word	0x10008000
   172bc:	2007c6e4 	.word	0x2007c6e4
   172c0:	2007c6ec 	.word	0x2007c6ec
   172c4:	2007c6e0 	.word	0x2007c6e0
   172c8:	20083fff 	.word	0x20083fff

000172cc <remap_fatfs_errors>:
remap_fatfs_errors():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:250
}

#ifdef CFG_FATFS
static int remap_fatfs_errors(FRESULT f)
{
    switch (f)
   172cc:	3803      	subs	r0, #3
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:249
{
   172ce:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:250
    switch (f)
   172d0:	280a      	cmp	r0, #10
   172d2:	d822      	bhi.n	1731a <remap_fatfs_errors+0x4e>
   172d4:	e8df f000 	tbb	[pc, r0]
   172d8:	0d060621 	.word	0x0d060621
   172dc:	191d1519 	.word	0x191d1519
   172e0:	2111      	.short	0x2111
   172e2:	21          	.byte	0x21
   172e3:	00          	.byte	0x00
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:256
    {
        case FR_NO_FILE:
            errno = ENOENT;
            break;
        case FR_NO_PATH:
            errno = ENOENT;
   172e4:	f002 fa62 	bl	197ac <__errno>
   172e8:	2302      	movs	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:287
            break;
        case FR_INVALID_OBJECT:
            errno = EBADF;
            break;
        default:
            errno = EIO;
   172ea:	6003      	str	r3, [r0, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:292
            break;
    }

    return -1;
}
   172ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   172f0:	bd08      	pop	{r3, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:259
            errno = EINVAL;
   172f2:	f002 fa5b 	bl	197ac <__errno>
   172f6:	2316      	movs	r3, #22
   172f8:	e7f7      	b.n	172ea <remap_fatfs_errors+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:262
            errno = ENODEV;
   172fa:	f002 fa57 	bl	197ac <__errno>
   172fe:	2313      	movs	r3, #19
   17300:	e7f3      	b.n	172ea <remap_fatfs_errors+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:268
            errno = EEXIST;
   17302:	f002 fa53 	bl	197ac <__errno>
   17306:	2311      	movs	r3, #17
   17308:	e7ef      	b.n	172ea <remap_fatfs_errors+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:274
            errno = EACCES;
   1730a:	f002 fa4f 	bl	197ac <__errno>
   1730e:	230d      	movs	r3, #13
   17310:	e7eb      	b.n	172ea <remap_fatfs_errors+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:284
            errno = EBADF;
   17312:	f002 fa4b 	bl	197ac <__errno>
   17316:	2309      	movs	r3, #9
   17318:	e7e7      	b.n	172ea <remap_fatfs_errors+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:287
            errno = EIO;
   1731a:	f002 fa47 	bl	197ac <__errno>
   1731e:	2305      	movs	r3, #5
   17320:	e7e3      	b.n	172ea <remap_fatfs_errors+0x1e>
   17322:	Address 0x0000000000017322 is out of bounds.


00017324 <findslot>:
findslot():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   17324:	1c43      	adds	r3, r0, #1
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:214
{
   17326:	b570      	push	{r4, r5, r6, lr}
   17328:	490e      	ldr	r1, [pc, #56]	; (17364 <findslot+0x40>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:218
    if ((fh != -1) && (fh == lastfh))
   1732a:	d006      	beq.n	1733a <findslot+0x16>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:218 (discriminator 1)
   1732c:	4b0e      	ldr	r3, [pc, #56]	; (17368 <findslot+0x44>)
   1732e:	681b      	ldr	r3, [r3, #0]
   17330:	4298      	cmp	r0, r3
   17332:	d102      	bne.n	1733a <findslot+0x16>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:219
        return slot;
   17334:	680a      	ldr	r2, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:228
}
   17336:	4610      	mov	r0, r2
   17338:	bd70      	pop	{r4, r5, r6, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   1733a:	2300      	movs	r3, #0
   1733c:	461c      	mov	r4, r3
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   1733e:	4d0b      	ldr	r5, [pc, #44]	; (1736c <findslot+0x48>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:221
    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
   17340:	600b      	str	r3, [r1, #0]
   17342:	2b06      	cmp	r3, #6
   17344:	461a      	mov	r2, r3
   17346:	d006      	beq.n	17356 <findslot+0x32>
   17348:	1c53      	adds	r3, r2, #1
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   1734a:	eb05 1603 	add.w	r6, r5, r3, lsl #4
   1734e:	f856 6c10 	ldr.w	r6, [r6, #-16]
   17352:	42b0      	cmp	r0, r6
   17354:	d104      	bne.n	17360 <findslot+0x3c>
   17356:	b104      	cbz	r4, 1735a <findslot+0x36>
   17358:	600a      	str	r2, [r1, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:225
    lastfh = fh;
   1735a:	4b03      	ldr	r3, [pc, #12]	; (17368 <findslot+0x44>)
   1735c:	6018      	str	r0, [r3, #0]
   1735e:	e7ea      	b.n	17336 <findslot+0x12>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:222
        if (openfiles[slot].handle == fh)
   17360:	2401      	movs	r4, #1
   17362:	e7ee      	b.n	17342 <findslot+0x1e>
   17364:	2007c75c 	.word	0x2007c75c
   17368:	2007c0d8 	.word	0x2007c0d8
   1736c:	2007c6fc 	.word	0x2007c6fc

00017370 <remap_handle>:
remap_handle():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   17370:	4b08      	ldr	r3, [pc, #32]	; (17394 <remap_handle+0x24>)
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:234
{
   17372:	b510      	push	{r4, lr}
   17374:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:235
    CHECK_INIT(_REENT);
   17376:	6818      	ldr	r0, [r3, #0]
   17378:	b118      	cbz	r0, 17382 <remap_handle+0x12>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 1)
   1737a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1737c:	b90b      	cbnz	r3, 17382 <remap_handle+0x12>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:235 (discriminator 2)
   1737e:	f002 fb1f 	bl	199c0 <__sinit>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:237
    if (fh == STDIN_FILENO)
   17382:	b124      	cbz	r4, 1738e <remap_handle+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:239
    if (fh == STDOUT_FILENO)
   17384:	2c01      	cmp	r4, #1
   17386:	d002      	beq.n	1738e <remap_handle+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:241
    if (fh == STDERR_FILENO)
   17388:	2c02      	cmp	r4, #2
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:244
    return fh - FILE_HANDLE_OFFSET;
   1738a:	bf18      	it	ne
   1738c:	3c20      	subne	r4, #32
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:245
}
   1738e:	4620      	mov	r0, r4
   17390:	bd10      	pop	{r4, pc}
   17392:	bf00      	nop
   17394:	2007c0e0 	.word	0x2007c0e0

00017398 <sys_set_outchar_func>:
sys_set_outchar_func():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:64
    g_output_dev_fptr = func;
   17398:	4b01      	ldr	r3, [pc, #4]	; (173a0 <sys_set_outchar_func+0x8>)
   1739a:	6018      	str	r0, [r3, #0]
   1739c:	4770      	bx	lr
   1739e:	bf00      	nop
   173a0:	2007c6f4 	.word	0x2007c6f4

000173a4 <sys_set_inchar_func>:
sys_set_inchar_func():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:68
    g_input_dev_fptr = func;
   173a4:	4b01      	ldr	r3, [pc, #4]	; (173ac <sys_set_inchar_func+0x8>)
   173a6:	6018      	str	r0, [r3, #0]
   173a8:	4770      	bx	lr
   173aa:	bf00      	nop
   173ac:	2007c6f0 	.word	0x2007c6f0

000173b0 <_kill>:
_kill():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:72
{
   173b0:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:73
    puts("Unexpected call to kill()");
   173b2:	4802      	ldr	r0, [pc, #8]	; (173bc <_kill+0xc>)
   173b4:	f003 feb6 	bl	1b124 <puts>
   173b8:	e7fe      	b.n	173b8 <_kill+0x8>
   173ba:	bf00      	nop
   173bc:	00020ecb 	.word	0x00020ecb

000173c0 <_exit>:
_exit():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:79
{
   173c0:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:80
    puts("Unexpected call to exit()");
   173c2:	4802      	ldr	r0, [pc, #8]	; (173cc <_exit+0xc>)
   173c4:	f003 feae 	bl	1b124 <puts>
   173c8:	e7fe      	b.n	173c8 <_exit+0x8>
   173ca:	bf00      	nop
   173cc:	00020eb1 	.word	0x00020eb1

000173d0 <_getpid>:
_getpid():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:84
int _getpid(int n) { return 0; }
   173d0:	2000      	movs	r0, #0
   173d2:	4770      	bx	lr

000173d4 <_init>:
_init():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:85
int _init(void) {   return 1;   }
   173d4:	2001      	movs	r0, #1
   173d6:	4770      	bx	lr

000173d8 <syscalls_init>:
syscalls_init():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:320

    return -1;
}

void syscalls_init(void)
{
   173d8:	b570      	push	{r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:324
    static char initialized = 0;
    int slot;

    if (initialized)
   173da:	4b0a      	ldr	r3, [pc, #40]	; (17404 <syscalls_init+0x2c>)
   173dc:	781d      	ldrb	r5, [r3, #0]
   173de:	b985      	cbnz	r5, 17402 <syscalls_init+0x2a>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:327
        return;

    initialized = 1;
   173e0:	2601      	movs	r6, #1
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:329

    __builtin_memset(openfiles, 0, sizeof(openfiles));
   173e2:	4c09      	ldr	r4, [pc, #36]	; (17408 <syscalls_init+0x30>)
   173e4:	2260      	movs	r2, #96	; 0x60
   173e6:	4629      	mov	r1, r5
   173e8:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:327
    initialized = 1;
   173ea:	701e      	strb	r6, [r3, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:329
    __builtin_memset(openfiles, 0, sizeof(openfiles));
   173ec:	f002 fc8c 	bl	19d08 <memset>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:332

    for (slot = 0; slot < MAX_OPEN_FILES; slot++)
        openfiles[slot].handle = -1;
   173f0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   173f4:	6323      	str	r3, [r4, #48]	; 0x30
   173f6:	6423      	str	r3, [r4, #64]	; 0x40
   173f8:	6523      	str	r3, [r4, #80]	; 0x50
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:336

    openfiles[0].handle = MONITOR_STDIN;
    openfiles[1].handle = MONITOR_STDOUT;
    openfiles[2].handle = MONITOR_STDERR;
   173fa:	2302      	movs	r3, #2
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:334
    openfiles[0].handle = MONITOR_STDIN;
   173fc:	6025      	str	r5, [r4, #0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:335
    openfiles[1].handle = MONITOR_STDOUT;
   173fe:	6126      	str	r6, [r4, #16]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:336
    openfiles[2].handle = MONITOR_STDERR;
   17400:	6223      	str	r3, [r4, #32]
   17402:	bd70      	pop	{r4, r5, r6, pc}
   17404:	2007c6f8 	.word	0x2007c6f8
   17408:	2007c6fc 	.word	0x2007c6fc

0001740c <_read>:
_read():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:371
    return set_errno (EIO);
#endif
}

int _read(int fd, char *ptr, int len)
{
   1740c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   17410:	4689      	mov	r9, r1
   17412:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:378
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnRead = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   17414:	f7ff ffac 	bl	17370 <remap_handle>
   17418:	4605      	mov	r5, r0
   1741a:	f7ff ff83 	bl	17324 <findslot>
   1741e:	2806      	cmp	r0, #6
   17420:	d106      	bne.n	17430 <_read+0x24>
set_errno():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   17422:	f002 f9c3 	bl	197ac <__errno>
   17426:	2309      	movs	r3, #9
   17428:	6003      	str	r3, [r0, #0]
_read():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:439
        }
            break;
    }

    if (bytesUnRead < 0)
        return -1;
   1742a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1742e:	e016      	b.n	1745e <_read+0x52>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:381
    if (openfiles[slot].flags & O_WRONLY)
   17430:	4e1b      	ldr	r6, [pc, #108]	; (174a0 <_read+0x94>)
   17432:	0107      	lsls	r7, r0, #4
   17434:	19f3      	adds	r3, r6, r7
   17436:	689b      	ldr	r3, [r3, #8]
   17438:	07db      	lsls	r3, r3, #31
   1743a:	d4f2      	bmi.n	17422 <_read+0x16>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:390
    switch (fh)
   1743c:	2d00      	cmp	r5, #0
   1743e:	d011      	beq.n	17464 <_read+0x58>
   17440:	db01      	blt.n	17446 <_read+0x3a>
   17442:	2d05      	cmp	r5, #5
   17444:	ddf1      	ble.n	1742a <_read+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:420
            if (openfiles[slot].fatfsFCB)
   17446:	19f3      	adds	r3, r6, r7
   17448:	68d8      	ldr	r0, [r3, #12]
   1744a:	2800      	cmp	r0, #0
   1744c:	d0ed      	beq.n	1742a <_read+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:425
                if ((f = f_read(openfiles[slot].fatfsFCB, ptr, len,
   1744e:	ab01      	add	r3, sp, #4
   17450:	4622      	mov	r2, r4
   17452:	4649      	mov	r1, r9
   17454:	f7fd fb9b 	bl	14b8e <f_read>
   17458:	b1f8      	cbz	r0, 1749a <_read+0x8e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:427
                    return remap_fatfs_errors(f);
   1745a:	f7ff ff37 	bl	172cc <remap_fatfs_errors>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:444

    openfiles[slot].pos += len - bytesUnRead;

    return len - bytesUnRead;
}
   1745e:	b003      	add	sp, #12
   17460:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:394
            if (g_input_dev_fptr)
   17464:	4b0f      	ldr	r3, [pc, #60]	; (174a4 <_read+0x98>)
   17466:	681a      	ldr	r2, [r3, #0]
   17468:	4698      	mov	r8, r3
   1746a:	b132      	cbz	r2, 1747a <_read+0x6e>
   1746c:	464d      	mov	r5, r9
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:396 (discriminator 1)
                for (i = 0; i < len; i++)
   1746e:	eba5 0309 	sub.w	r3, r5, r9
   17472:	429c      	cmp	r4, r3
   17474:	dc0a      	bgt.n	1748c <_read+0x80>
   17476:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:402
            bytesUnRead = len - i;
   1747a:	1b60      	subs	r0, r4, r5
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:438
    if (bytesUnRead < 0)
   1747c:	2800      	cmp	r0, #0
   1747e:	dbd4      	blt.n	1742a <_read+0x1e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:441
    openfiles[slot].pos += len - bytesUnRead;
   17480:	443e      	add	r6, r7
   17482:	6873      	ldr	r3, [r6, #4]
   17484:	1a20      	subs	r0, r4, r0
   17486:	4403      	add	r3, r0
   17488:	6073      	str	r3, [r6, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:443
    return len - bytesUnRead;
   1748a:	e7e8      	b.n	1745e <_read+0x52>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:398 (discriminator 3)
                    *ptr++ = g_input_dev_fptr(0);
   1748c:	f8d8 3000 	ldr.w	r3, [r8]
   17490:	2000      	movs	r0, #0
   17492:	4798      	blx	r3
   17494:	f805 0b01 	strb.w	r0, [r5], #1
   17498:	e7e9      	b.n	1746e <_read+0x62>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:429
                bytesUnRead = len - fatfsBytesRead;
   1749a:	9801      	ldr	r0, [sp, #4]
   1749c:	1a20      	subs	r0, r4, r0
   1749e:	e7ed      	b.n	1747c <_read+0x70>
   174a0:	2007c6fc 	.word	0x2007c6fc
   174a4:	2007c6f0 	.word	0x2007c6f0

000174a8 <_lseek>:
_lseek():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:447

int _lseek(int fd, int ptr, int dir)
{
   174a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   174aa:	460e      	mov	r6, r1
   174ac:	4617      	mov	r7, r2
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:452
    int fh;
    int slot;
    FRESULT f = FR_INVALID_OBJECT;

    if (((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   174ae:	f7ff ff5f 	bl	17370 <remap_handle>
   174b2:	f7ff ff37 	bl	17324 <findslot>
   174b6:	2806      	cmp	r0, #6
   174b8:	d004      	beq.n	174c4 <_lseek+0x1c>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:453
            || !openfiles[slot].fatfsFCB)
   174ba:	4c12      	ldr	r4, [pc, #72]	; (17504 <_lseek+0x5c>)
   174bc:	0105      	lsls	r5, r0, #4
   174be:	1962      	adds	r2, r4, r5
   174c0:	68d0      	ldr	r0, [r2, #12]
   174c2:	b930      	cbnz	r0, 174d2 <_lseek+0x2a>
set_errno():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   174c4:	f002 f972 	bl	197ac <__errno>
   174c8:	2309      	movs	r3, #9
   174ca:	6003      	str	r3, [r0, #0]
_lseek():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:454
        return set_errno(EBADF);
   174cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   174d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:457

#ifdef CFG_FATFS
    if (dir == SEEK_SET)
   174d2:	b93f      	cbnz	r7, 174e4 <_lseek+0x3c>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:458
        f = f_lseek(openfiles[slot].fatfsFCB, ptr);
   174d4:	4631      	mov	r1, r6
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:463
    else if (dir == SEEK_CUR)
        f = f_lseek(openfiles[slot].fatfsFCB,
                openfiles[slot].fatfsFCB->fptr + ptr);
    else if (dir == SEEK_END)
        f = f_lseek(openfiles[slot].fatfsFCB,
   174d6:	f7fd fd3f 	bl	14f58 <f_lseek>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:466
                openfiles[slot].fatfsFCB->fsize + ptr);

    if (f != FR_OK)
   174da:	b170      	cbz	r0, 174fa <_lseek+0x52>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:476
    ptr = ptr;
    dir = dir;
    f = f;
    return set_errno (EIO);
#endif
}
   174dc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:467
        return remap_fatfs_errors(f);
   174e0:	f7ff bef4 	b.w	172cc <remap_fatfs_errors>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:459
    else if (dir == SEEK_CUR)
   174e4:	2f01      	cmp	r7, #1
   174e6:	d102      	bne.n	174ee <_lseek+0x46>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:460
        f = f_lseek(openfiles[slot].fatfsFCB,
   174e8:	6881      	ldr	r1, [r0, #8]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   174ea:	4431      	add	r1, r6
   174ec:	e7f3      	b.n	174d6 <_lseek+0x2e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:462
    else if (dir == SEEK_END)
   174ee:	2f02      	cmp	r7, #2
   174f0:	d101      	bne.n	174f6 <_lseek+0x4e>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:463
        f = f_lseek(openfiles[slot].fatfsFCB,
   174f2:	68c1      	ldr	r1, [r0, #12]
   174f4:	e7f9      	b.n	174ea <_lseek+0x42>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:450
    FRESULT f = FR_INVALID_OBJECT;
   174f6:	2009      	movs	r0, #9
   174f8:	e7f0      	b.n	174dc <_lseek+0x34>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:469
    return openfiles[slot].pos = openfiles[slot].fatfsFCB->fptr;
   174fa:	1963      	adds	r3, r4, r5
   174fc:	68da      	ldr	r2, [r3, #12]
   174fe:	6890      	ldr	r0, [r2, #8]
   17500:	6058      	str	r0, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:476
}
   17502:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17504:	2007c6fc 	.word	0x2007c6fc

00017508 <_write>:
_write():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:479

int _write(int fd, const char *ptr, int len)
{
   17508:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1750c:	460f      	mov	r7, r1
   1750e:	4614      	mov	r4, r2
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:486
    int fh;
    int slot;
    //portTickType xBlockTime;
    int bytesUnWritten = -1;

    if ((slot = findslot(fh = remap_handle(fd))) == MAX_OPEN_FILES)
   17510:	f7ff ff2e 	bl	17370 <remap_handle>
   17514:	4606      	mov	r6, r0
   17516:	f7ff ff05 	bl	17324 <findslot>
   1751a:	2806      	cmp	r0, #6
   1751c:	4605      	mov	r5, r0
   1751e:	d104      	bne.n	1752a <_write+0x22>
set_errno():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   17520:	f002 f944 	bl	197ac <__errno>
   17524:	2309      	movs	r3, #9
   17526:	6003      	str	r3, [r0, #0]
   17528:	e006      	b.n	17538 <_write+0x30>
   1752a:	2e05      	cmp	r6, #5
   1752c:	d826      	bhi.n	1757c <_write+0x74>
   1752e:	2001      	movs	r0, #1
   17530:	40b0      	lsls	r0, r6
   17532:	f010 0f39 	tst.w	r0, #57	; 0x39
   17536:	d002      	beq.n	1753e <_write+0x36>
_write():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:540

                bytesUnWritten = len - fatfsBytesWritten;
            }
            else
#endif
                return set_errno(EBADF);
   17538:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1753c:	e02c      	b.n	17598 <_write+0x90>
   1753e:	f010 0f06 	tst.w	r0, #6
   17542:	d01b      	beq.n	1757c <_write+0x74>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:506
            if (g_output_dev_fptr)
   17544:	4e17      	ldr	r6, [pc, #92]	; (175a4 <_write+0x9c>)
   17546:	6830      	ldr	r0, [r6, #0]
   17548:	b130      	cbz	r0, 17558 <_write+0x50>
   1754a:	46b8      	mov	r8, r7
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:508 (discriminator 1)
                for (i = 0; i < len; i++)
   1754c:	eba8 0307 	sub.w	r3, r8, r7
   17550:	429c      	cmp	r4, r3
   17552:	dc0e      	bgt.n	17572 <_write+0x6a>
   17554:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   17558:	1a20      	subs	r0, r4, r0
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:545
        }
            break;
    }

    if (bytesUnWritten == -1 || bytesUnWritten == len)
   1755a:	1c43      	adds	r3, r0, #1
   1755c:	d0ec      	beq.n	17538 <_write+0x30>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:545 (discriminator 1)
   1755e:	42a0      	cmp	r0, r4
   17560:	d0ea      	beq.n	17538 <_write+0x30>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:548
        return -1;

    openfiles[slot].pos += len - bytesUnWritten;
   17562:	4b11      	ldr	r3, [pc, #68]	; (175a8 <_write+0xa0>)
   17564:	1a20      	subs	r0, r4, r0
   17566:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   1756a:	685a      	ldr	r2, [r3, #4]
   1756c:	4402      	add	r2, r0
   1756e:	605a      	str	r2, [r3, #4]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:550

    return len - bytesUnWritten;
   17570:	e012      	b.n	17598 <_write+0x90>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:510 (discriminator 3)
                    g_output_dev_fptr(*ptr++);
   17572:	6833      	ldr	r3, [r6, #0]
   17574:	f818 0b01 	ldrb.w	r0, [r8], #1
   17578:	4798      	blx	r3
   1757a:	e7e7      	b.n	1754c <_write+0x44>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:527
            if (openfiles[slot].fatfsFCB)
   1757c:	4b0a      	ldr	r3, [pc, #40]	; (175a8 <_write+0xa0>)
   1757e:	eb03 1305 	add.w	r3, r3, r5, lsl #4
   17582:	68d8      	ldr	r0, [r3, #12]
   17584:	2800      	cmp	r0, #0
   17586:	d0cb      	beq.n	17520 <_write+0x18>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:532
                if ((f = f_write(openfiles[slot].fatfsFCB, ptr, len,
   17588:	ab01      	add	r3, sp, #4
   1758a:	4622      	mov	r2, r4
   1758c:	4639      	mov	r1, r7
   1758e:	f7fd fbb6 	bl	14cfe <f_write>
   17592:	b120      	cbz	r0, 1759e <_write+0x96>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:534
                    return remap_fatfs_errors(f);
   17594:	f7ff fe9a 	bl	172cc <remap_fatfs_errors>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:551
}
   17598:	b002      	add	sp, #8
   1759a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:536
                bytesUnWritten = len - fatfsBytesWritten;
   1759e:	9801      	ldr	r0, [sp, #4]
   175a0:	e7da      	b.n	17558 <_write+0x50>
   175a2:	bf00      	nop
   175a4:	2007c6f4 	.word	0x2007c6f4
   175a8:	2007c6fc 	.word	0x2007c6fc

000175ac <_close>:
_close():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:649

    return fh >= 0 ? (fh + FILE_HANDLE_OFFSET) : -1;
}

int _close(int fd)
{
   175ac:	b538      	push	{r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:652
    int slot;

    if ((slot = findslot(remap_handle(fd))) == MAX_OPEN_FILES)
   175ae:	f7ff fedf 	bl	17370 <remap_handle>
   175b2:	f7ff feb7 	bl	17324 <findslot>
   175b6:	2806      	cmp	r0, #6
   175b8:	d106      	bne.n	175c8 <_close+0x1c>
set_errno():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   175ba:	f002 f8f7 	bl	197ac <__errno>
   175be:	2309      	movs	r3, #9
   175c0:	6003      	str	r3, [r0, #0]
_close():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:653
        return set_errno(EBADF);
   175c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   175c6:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:655

    openfiles[slot].handle = -1;
   175c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   175cc:	4b0b      	ldr	r3, [pc, #44]	; (175fc <_close+0x50>)
   175ce:	0100      	lsls	r0, r0, #4
   175d0:	181c      	adds	r4, r3, r0
   175d2:	501a      	str	r2, [r3, r0]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:658

#ifdef CFG_FATFS
    if (openfiles[slot].fatfsFCB)
   175d4:	68e0      	ldr	r0, [r4, #12]
   175d6:	b908      	cbnz	r0, 175dc <_close+0x30>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:671
        if (f != FR_OK)
            return remap_fatfs_errors(f);
    }
#endif

    return 0;
   175d8:	2000      	movs	r0, #0
   175da:	bd38      	pop	{r3, r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:662
        f = f_close(openfiles[slot].fatfsFCB);
   175dc:	f7fd fcaa 	bl	14f34 <f_close>
   175e0:	4605      	mov	r5, r0
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:663
        free(openfiles[slot].fatfsFCB);
   175e2:	68e0      	ldr	r0, [r4, #12]
   175e4:	f002 fb34 	bl	19c50 <free>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:664
        openfiles[slot].fatfsFCB = NULL;
   175e8:	2300      	movs	r3, #0
   175ea:	60e3      	str	r3, [r4, #12]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:666
        if (f != FR_OK)
   175ec:	2d00      	cmp	r5, #0
   175ee:	d0f3      	beq.n	175d8 <_close+0x2c>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   175f0:	4628      	mov	r0, r5
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:672
}
   175f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:667
            return remap_fatfs_errors(f);
   175f6:	f7ff be69 	b.w	172cc <remap_fatfs_errors>
   175fa:	bf00      	nop
   175fc:	2007c6fc 	.word	0x2007c6fc

00017600 <_fstat>:
_fstat():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:682
//  a good way to handle this, couldn't come up with anything.  For now, it
//  returns ENOSYS (not implemented).
//
int _fstat(int fd __attribute__ ((unused)),
        struct stat *st __attribute__ ((unused)))
{
   17600:	b508      	push	{r3, lr}
set_errno():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:314
    errno = errval;
   17602:	f002 f8d3 	bl	197ac <__errno>
   17606:	2358      	movs	r3, #88	; 0x58
   17608:	6003      	str	r3, [r0, #0]
_fstat():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:684
    return set_errno(ENOSYS);
}
   1760a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1760e:	bd08      	pop	{r3, pc}

00017610 <_isatty>:
_isatty():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:765
}
;

int _isatty(int fd)
{
    if (fd == (int)stdout || fd == (int)stdin || fd == (int)stderr) {
   17610:	4b07      	ldr	r3, [pc, #28]	; (17630 <_isatty+0x20>)
   17612:	681b      	ldr	r3, [r3, #0]
   17614:	689a      	ldr	r2, [r3, #8]
   17616:	4282      	cmp	r2, r0
   17618:	d007      	beq.n	1762a <_isatty+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 1)
   1761a:	685a      	ldr	r2, [r3, #4]
   1761c:	4282      	cmp	r2, r0
   1761e:	d004      	beq.n	1762a <_isatty+0x1a>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:765 (discriminator 2)
   17620:	68db      	ldr	r3, [r3, #12]
   17622:	1a1b      	subs	r3, r3, r0
   17624:	4258      	negs	r0, r3
   17626:	4158      	adcs	r0, r3
   17628:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:766
        return 1;
   1762a:	2001      	movs	r0, #1
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_syscalls.c:771
    }
    else {
        return 0;
    }
}
   1762c:	4770      	bx	lr
   1762e:	bf00      	nop
   17630:	2007c0e0 	.word	0x2007c0e0

00017634 <_gettimeofday>:
_gettimeofday():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:69
    return mktime (&tm);
}

/// GCC C libraries call this function to get time of day
__attribute__ ((used)) int _gettimeofday (struct timeval *tp, void *tzp)
{
   17634:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   17636:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:69
{
   17638:	b08d      	sub	sp, #52	; 0x34
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:70
    if (tp)
   1763a:	b3a8      	cbz	r0, 176a8 <_gettimeofday+0x74>
rtc_read_to_struct():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   1763c:	2500      	movs	r5, #0
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:30
    rtc_t t = rtc_gettime();
   1763e:	4668      	mov	r0, sp
   17640:	f7fa ffa4 	bl	1258c <rtc_gettime>
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   17644:	f89d 3000 	ldrb.w	r3, [sp]
rtc_get_epoch():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   17648:	a803      	add	r0, sp, #12
rtc_read_to_struct():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:31
    time_ptr->tm_sec   = t.sec;
   1764a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1764e:	9303      	str	r3, [sp, #12]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   17650:	f89d 3001 	ldrb.w	r3, [sp, #1]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:39
    time_ptr->tm_isdst = 0;
   17654:	950b      	str	r5, [sp, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:32
    time_ptr->tm_min   = t.min;
   17656:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1765a:	9304      	str	r3, [sp, #16]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:33
    time_ptr->tm_hour  = t.hour;
   1765c:	f89d 3002 	ldrb.w	r3, [sp, #2]
   17660:	f003 031f 	and.w	r3, r3, #31
   17664:	9305      	str	r3, [sp, #20]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:34
    time_ptr->tm_mday  = t.day;
   17666:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1766a:	f003 031f 	and.w	r3, r3, #31
   1766e:	9306      	str	r3, [sp, #24]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:35
    time_ptr->tm_mon   = t.month - 1;
   17670:	f89d 3005 	ldrb.w	r3, [sp, #5]
   17674:	f003 030f 	and.w	r3, r3, #15
   17678:	3b01      	subs	r3, #1
   1767a:	9307      	str	r3, [sp, #28]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:36
    time_ptr->tm_year  = t.year - 1900;
   1767c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   17680:	f3c3 030b 	ubfx	r3, r3, #0, #12
   17684:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   17688:	9308      	str	r3, [sp, #32]
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:37
    time_ptr->tm_wday  = t.dow;
   1768a:	f89d 3003 	ldrb.w	r3, [sp, #3]
   1768e:	f003 0307 	and.w	r3, r3, #7
   17692:	9309      	str	r3, [sp, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:38
    time_ptr->tm_yday  = t.doy - 1;
   17694:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   17698:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1769c:	3b01      	subs	r3, #1
   1769e:	930a      	str	r3, [sp, #40]	; 0x28
rtc_get_epoch():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:64
    return mktime (&tm);
   176a0:	f002 fc1a 	bl	19ed8 <mktime>
_gettimeofday():
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:74
    {
        unsigned int milliseconds = 0;
        tp->tv_sec = rtc_get_epoch (&milliseconds);
        tp->tv_usec = milliseconds * 1000;
   176a4:	e884 0021 	stmia.w	r4, {r0, r5}
/home/bionia/SJSU-DEV/firmware/lib/newlib/newlib_time.c:78
    }

    return 0;
}
   176a8:	2000      	movs	r0, #0
   176aa:	b00d      	add	sp, #52	; 0x34
   176ac:	bd30      	pop	{r4, r5, pc}

000176ae <GpioInterrupt::GpioInterrupt()>:
_ZN13GpioInterruptC2Ev():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:15
//		single = new GpioInterrupt;

//	return single;
//}

GpioInterrupt::GpioInterrupt(){}
   176ae:	4770      	bx	lr

000176b0 <GpioInterrupt::Initialize()>:
_ZN13GpioInterrupt10InitializeEv():
/home/bionia/SJSU-DEV/firmware/lib/L0_LowLevel/core_cm3.h:1489
   176b0:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   176b4:	4b01      	ldr	r3, [pc, #4]	; (176bc <GpioInterrupt::Initialize()+0xc>)
   176b6:	601a      	str	r2, [r3, #0]
   176b8:	4770      	bx	lr
   176ba:	bf00      	nop
   176bc:	e000e100 	.word	0xe000e100

000176c0 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)>:
_ZN13GpioInterrupt22AttachInterruptHandlerEhmPFvvE18InterruptCondition():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:21

void GpioInterrupt::Initialize(){
	NVIC_EnableIRQ(EINT3_IRQn);
}

bool GpioInterrupt::AttachInterruptHandler(uint8_t port, uint32_t pin, IsrPointer pin_isr, InterruptCondition condition){
   176c0:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:22
	if (port == 1 || port > 2 || port < 0) return false;
   176c2:	2901      	cmp	r1, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:21
bool GpioInterrupt::AttachInterruptHandler(uint8_t port, uint32_t pin, IsrPointer pin_isr, InterruptCondition condition){
   176c4:	4604      	mov	r4, r0
   176c6:	f89d 000c 	ldrb.w	r0, [sp, #12]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:22
	if (port == 1 || port > 2 || port < 0) return false;
   176ca:	d03b      	beq.n	17744 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x84>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:22 (discriminator 2)
   176cc:	2902      	cmp	r1, #2
   176ce:	dc39      	bgt.n	17744 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x84>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:23
	if (pin > 0 || pin > 31) return false;
   176d0:	2a00      	cmp	r2, #0
   176d2:	d137      	bne.n	17744 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x84>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:24
	if (pin_isr == NULL) return false;
   176d4:	2b00      	cmp	r3, #0
   176d6:	d035      	beq.n	17744 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x84>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:27

	//set lookup
	port == 2 ? pin_isr_map[1][pin] = pin_isr : pin_isr_map[port][pin] = pin_isr;
   176d8:	2902      	cmp	r1, #2
   176da:	4a1b      	ldr	r2, [pc, #108]	; (17748 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x88>)
   176dc:	d107      	bne.n	176ee <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x2e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:27 (discriminator 1)
   176de:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:42
			LPC_GPIOINT->IO0IntEnF |= (1 << pin);
		}
	}
	//if (port == 2) {
	else {
		if (condition == kRisingEdge)
   176e2:	b9f8      	cbnz	r0, 17724 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x64>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:43
			LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   176e4:	6b13      	ldr	r3, [r2, #48]	; 0x30
   176e6:	f043 0301 	orr.w	r3, r3, #1
   176ea:	6313      	str	r3, [r2, #48]	; 0x30
   176ec:	e008      	b.n	17700 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x40>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:27 (discriminator 2)
	port == 2 ? pin_isr_map[1][pin] = pin_isr : pin_isr_map[port][pin] = pin_isr;
   176ee:	01cd      	lsls	r5, r1, #7
   176f0:	5163      	str	r3, [r4, r5]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:30 (discriminator 2)
	if (port == 0){
   176f2:	2900      	cmp	r1, #0
   176f4:	d1f5      	bne.n	176e2 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x22>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:31
		if (condition == kRisingEdge)
   176f6:	b928      	cbnz	r0, 17704 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x44>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:32
			LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   176f8:	6913      	ldr	r3, [r2, #16]
   176fa:	f043 0301 	orr.w	r3, r3, #1
   176fe:	6113      	str	r3, [r2, #16]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:51
		else {
			LPC_GPIOINT->IO2IntEnR |= (1 << pin);
			LPC_GPIOINT->IO2IntEnF |= (1 << pin);
		}
	}
	return true;
   17700:	2001      	movs	r0, #1
   17702:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:33
		else if (condition == kFallingEdge) 
   17704:	2801      	cmp	r0, #1
   17706:	d104      	bne.n	17712 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x52>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:34
			LPC_GPIOINT->IO0IntEnF |= (1 << pin);
   17708:	6953      	ldr	r3, [r2, #20]
   1770a:	f043 0301 	orr.w	r3, r3, #1
   1770e:	6153      	str	r3, [r2, #20]
   17710:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:36
			LPC_GPIOINT->IO0IntEnR |= (1 << pin);
   17712:	6913      	ldr	r3, [r2, #16]
   17714:	f043 0301 	orr.w	r3, r3, #1
   17718:	6113      	str	r3, [r2, #16]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:37
			LPC_GPIOINT->IO0IntEnF |= (1 << pin);
   1771a:	6953      	ldr	r3, [r2, #20]
   1771c:	f043 0301 	orr.w	r3, r3, #1
   17720:	6153      	str	r3, [r2, #20]
   17722:	e7ed      	b.n	17700 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x40>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:44
		else if (condition == kFallingEdge)
   17724:	2801      	cmp	r0, #1
   17726:	d104      	bne.n	17732 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x72>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:45
			LPC_GPIOINT->IO2IntEnF |= (1 << pin);
   17728:	6b53      	ldr	r3, [r2, #52]	; 0x34
   1772a:	f043 0301 	orr.w	r3, r3, #1
   1772e:	6353      	str	r3, [r2, #52]	; 0x34
   17730:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:47
			LPC_GPIOINT->IO2IntEnR |= (1 << pin);
   17732:	6b13      	ldr	r3, [r2, #48]	; 0x30
   17734:	f043 0301 	orr.w	r3, r3, #1
   17738:	6313      	str	r3, [r2, #48]	; 0x30
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:48
			LPC_GPIOINT->IO2IntEnF |= (1 << pin);
   1773a:	6b53      	ldr	r3, [r2, #52]	; 0x34
   1773c:	f043 0301 	orr.w	r3, r3, #1
   17740:	6353      	str	r3, [r2, #52]	; 0x34
   17742:	e7dd      	b.n	17700 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)+0x40>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:22
	if (port == 1 || port > 2 || port < 0) return false;
   17744:	2000      	movs	r0, #0
   17746:	bd30      	pop	{r4, r5, pc}
   17748:	40028080 	.word	0x40028080

0001774c <GpioInterrupt::HandleInterrupt()>:
_ZN13GpioInterrupt15HandleInterruptEv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:55
}

void GpioInterrupt::HandleInterrupt(){
	if (LPC_GPIOINT->IO0IntStatR) {
   1774c:	4b0c      	ldr	r3, [pc, #48]	; (17780 <GpioInterrupt::HandleInterrupt()+0x34>)
   1774e:	685a      	ldr	r2, [r3, #4]
   17750:	b12a      	cbz	r2, 1775e <GpioInterrupt::HandleInterrupt()+0x12>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:56
		LPC_GPIOINT->IO0IntClr = LPC_GPIOINT->IO0IntStatR;
   17752:	685a      	ldr	r2, [r3, #4]
   17754:	60da      	str	r2, [r3, #12]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:57
		pin_isr_map[0][LPC_GPIOINT->IO0IntStatR]();
   17756:	685b      	ldr	r3, [r3, #4]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:69
		LPC_GPIOINT->IO2IntClr = LPC_GPIOINT->IO2IntStatR;
		pin_isr_map[1][LPC_GPIOINT->IO2IntStatR]();
	}
	else {
		LPC_GPIOINT->IO2IntClr = LPC_GPIOINT->IO2IntStatF;
		pin_isr_map[1][LPC_GPIOINT->IO2IntStatF]();
   17758:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
   1775c:	4718      	bx	r3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:59
	else if (LPC_GPIOINT->IO0IntStatF) {
   1775e:	689a      	ldr	r2, [r3, #8]
   17760:	b11a      	cbz	r2, 1776a <GpioInterrupt::HandleInterrupt()+0x1e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:60
		LPC_GPIOINT->IO0IntClr = LPC_GPIOINT->IO0IntStatF;
   17762:	689a      	ldr	r2, [r3, #8]
   17764:	60da      	str	r2, [r3, #12]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:61
		pin_isr_map[0][LPC_GPIOINT->IO0IntStatF]();
   17766:	689b      	ldr	r3, [r3, #8]
   17768:	e7f6      	b.n	17758 <GpioInterrupt::HandleInterrupt()+0xc>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:63
	else if (LPC_GPIOINT->IO2IntStatR) {
   1776a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   1776c:	b122      	cbz	r2, 17778 <GpioInterrupt::HandleInterrupt()+0x2c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:64
		LPC_GPIOINT->IO2IntClr = LPC_GPIOINT->IO2IntStatR;
   1776e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   17770:	62da      	str	r2, [r3, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:65
		pin_isr_map[1][LPC_GPIOINT->IO2IntStatR]();
   17772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:69
		pin_isr_map[1][LPC_GPIOINT->IO2IntStatF]();
   17774:	3320      	adds	r3, #32
   17776:	e7ef      	b.n	17758 <GpioInterrupt::HandleInterrupt()+0xc>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:68
		LPC_GPIOINT->IO2IntClr = LPC_GPIOINT->IO2IntStatF;
   17778:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   1777a:	62da      	str	r2, [r3, #44]	; 0x2c
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/GpioInterrupt.cpp:69
		pin_isr_map[1][LPC_GPIOINT->IO2IntStatF]();
   1777c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   1777e:	e7f9      	b.n	17774 <GpioInterrupt::HandleInterrupt()+0x28>
   17780:	40028080 	.word	0x40028080

00017784 <Disp::line(unsigned char)>:
_ZN4Disp4lineEh():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:4
#include "disp.h"
#include "uart0_min.h"

void Disp::line(uint8_t times){
   17784:	b570      	push	{r4, r5, r6, lr}
   17786:	460e      	mov	r6, r1
   17788:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:6
	for(uint8_t i = 0; i < times; ++i){
		uart0_puts("1 1 0 0");
   1778a:	4d05      	ldr	r5, [pc, #20]	; (177a0 <Disp::line(unsigned char)+0x1c>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:5 (discriminator 3)
	for(uint8_t i = 0; i < times; ++i){
   1778c:	b2e3      	uxtb	r3, r4
   1778e:	42b3      	cmp	r3, r6
   17790:	f104 0401 	add.w	r4, r4, #1
   17794:	da03      	bge.n	1779e <Disp::line(unsigned char)+0x1a>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:6 (discriminator 2)
		uart0_puts("1 1 0 0");
   17796:	4628      	mov	r0, r5
   17798:	f7f9 f8e8 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:5 (discriminator 2)
	for(uint8_t i = 0; i < times; ++i){
   1779c:	e7f6      	b.n	1778c <Disp::line(unsigned char)+0x8>
   1779e:	bd70      	pop	{r4, r5, r6, pc}
   177a0:	00020ef5 	.word	0x00020ef5

000177a4 <Disp::dot(unsigned char)>:
_ZN4Disp3dotEh():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:10
	}
}

void Disp::dot(uint8_t times){
   177a4:	b570      	push	{r4, r5, r6, lr}
   177a6:	460e      	mov	r6, r1
   177a8:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:12
	for(uint8_t i = 0; i < times; ++i){
		uart0_puts("1 0 0 0");
   177aa:	4d05      	ldr	r5, [pc, #20]	; (177c0 <Disp::dot(unsigned char)+0x1c>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:11 (discriminator 3)
	for(uint8_t i = 0; i < times; ++i){
   177ac:	b2e3      	uxtb	r3, r4
   177ae:	42b3      	cmp	r3, r6
   177b0:	f104 0401 	add.w	r4, r4, #1
   177b4:	da03      	bge.n	177be <Disp::dot(unsigned char)+0x1a>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:12 (discriminator 2)
		uart0_puts("1 0 0 0");
   177b6:	4628      	mov	r0, r5
   177b8:	f7f9 f8d8 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:11 (discriminator 2)
	for(uint8_t i = 0; i < times; ++i){
   177bc:	e7f6      	b.n	177ac <Disp::dot(unsigned char)+0x8>
   177be:	bd70      	pop	{r4, r5, r6, pc}
   177c0:	00020ee5 	.word	0x00020ee5

000177c4 <Disp::end()>:
_ZN4Disp3endEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:17
	}
}

void Disp::end(){
	uart0_puts("0 0 0 1");
   177c4:	4801      	ldr	r0, [pc, #4]	; (177cc <Disp::end()+0x8>)
   177c6:	f7f9 b8d1 	b.w	1096c <uart0_puts>
   177ca:	bf00      	nop
   177cc:	00020eed 	.word	0x00020eed

000177d0 <Disp::none()>:
_ZN4Disp4noneEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/disp.cpp:21
}

void Disp::none(){
	uart0_puts("0 0 0 0");
   177d0:	4801      	ldr	r0, [pc, #4]	; (177d8 <Disp::none()+0x8>)
   177d2:	f7f9 b8cb 	b.w	1096c <uart0_puts>
   177d6:	bf00      	nop
   177d8:	00020efd 	.word	0x00020efd

000177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>:
_ZN9LabGPIO_1C2Ehh():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:5
#include "labgpio.h"
#include "LPC17xx.h"

LabGPIO_1::LabGPIO_1(uint8_t port, uint8_t pin) {
	portNum = port;
   177dc:	7001      	strb	r1, [r0, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:6
	pinNum = pin;
   177de:	7042      	strb	r2, [r0, #1]
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:7
}
   177e0:	4770      	bx	lr
_ZN9LabGPIO_1C1Ehh():
   177e2:	Address 0x00000000000177e2 is out of bounds.


000177e4 <LabGPIO_1::setAsInput()>:
_ZN9LabGPIO_110setAsInputEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:10

void LabGPIO_1::setAsInput() {
	if (portNum == 0)	
   177e4:	7803      	ldrb	r3, [r0, #0]
   177e6:	7841      	ldrb	r1, [r0, #1]
   177e8:	b91b      	cbnz	r3, 177f2 <LabGPIO_1::setAsInput()+0xe>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:11
		LPC_GPIO0->FIODIR &= ~(1 << pinNum);
   177ea:	4807      	ldr	r0, [pc, #28]	; (17808 <LabGPIO_1::setAsInput()+0x24>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:15
	else if (portNum == 1)	
		LPC_GPIO1->FIODIR &= ~(1 << pinNum);
	else	
		LPC_GPIO2->FIODIR &= ~(1 << pinNum);
   177ec:	6802      	ldr	r2, [r0, #0]
   177ee:	2301      	movs	r3, #1
   177f0:	e003      	b.n	177fa <LabGPIO_1::setAsInput()+0x16>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:12
	else if (portNum == 1)	
   177f2:	2b01      	cmp	r3, #1
   177f4:	d106      	bne.n	17804 <LabGPIO_1::setAsInput()+0x20>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:13
		LPC_GPIO1->FIODIR &= ~(1 << pinNum);
   177f6:	4805      	ldr	r0, [pc, #20]	; (1780c <LabGPIO_1::setAsInput()+0x28>)
   177f8:	6802      	ldr	r2, [r0, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:15
		LPC_GPIO2->FIODIR &= ~(1 << pinNum);
   177fa:	408b      	lsls	r3, r1
   177fc:	ea22 0303 	bic.w	r3, r2, r3
   17800:	6003      	str	r3, [r0, #0]
   17802:	4770      	bx	lr
   17804:	4802      	ldr	r0, [pc, #8]	; (17810 <LabGPIO_1::setAsInput()+0x2c>)
   17806:	e7f1      	b.n	177ec <LabGPIO_1::setAsInput()+0x8>
   17808:	2009c000 	.word	0x2009c000
   1780c:	2009c020 	.word	0x2009c020
   17810:	2009c040 	.word	0x2009c040

00017814 <LabGPIO_1::setAsOutput()>:
_ZN9LabGPIO_111setAsOutputEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:19
}

void LabGPIO_1::setAsOutput() {
	if (portNum == 0)
   17814:	7803      	ldrb	r3, [r0, #0]
   17816:	7842      	ldrb	r2, [r0, #1]
   17818:	b91b      	cbnz	r3, 17822 <LabGPIO_1::setAsOutput()+0xe>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:20
		LPC_GPIO0->FIODIR |= (1 << pinNum);
   1781a:	4907      	ldr	r1, [pc, #28]	; (17838 <LabGPIO_1::setAsOutput()+0x24>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:24
	else if (portNum == 1)
		LPC_GPIO1->FIODIR |= (1 << pinNum);
	else
		LPC_GPIO2->FIODIR |= (1 << pinNum);
   1781c:	6808      	ldr	r0, [r1, #0]
   1781e:	2301      	movs	r3, #1
   17820:	e003      	b.n	1782a <LabGPIO_1::setAsOutput()+0x16>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:21
	else if (portNum == 1)
   17822:	2b01      	cmp	r3, #1
   17824:	d105      	bne.n	17832 <LabGPIO_1::setAsOutput()+0x1e>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:22
		LPC_GPIO1->FIODIR |= (1 << pinNum);
   17826:	4905      	ldr	r1, [pc, #20]	; (1783c <LabGPIO_1::setAsOutput()+0x28>)
   17828:	6808      	ldr	r0, [r1, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:24
		LPC_GPIO2->FIODIR |= (1 << pinNum);
   1782a:	4093      	lsls	r3, r2
   1782c:	4303      	orrs	r3, r0
   1782e:	600b      	str	r3, [r1, #0]
   17830:	4770      	bx	lr
   17832:	4903      	ldr	r1, [pc, #12]	; (17840 <LabGPIO_1::setAsOutput()+0x2c>)
   17834:	e7f2      	b.n	1781c <LabGPIO_1::setAsOutput()+0x8>
   17836:	bf00      	nop
   17838:	2009c000 	.word	0x2009c000
   1783c:	2009c020 	.word	0x2009c020
   17840:	2009c040 	.word	0x2009c040

00017844 <LabGPIO_1::setDirection(bool)>:
_ZN9LabGPIO_112setDirectionEb():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:27
}

void LabGPIO_1::setDirection(bool output){
   17844:	b530      	push	{r4, r5, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:28
	if (portNum == 0)
   17846:	7803      	ldrb	r3, [r0, #0]
   17848:	7844      	ldrb	r4, [r0, #1]
   1784a:	b93b      	cbnz	r3, 1785c <LabGPIO_1::setDirection(bool)+0x18>
   1784c:	2301      	movs	r3, #1
   1784e:	480d      	ldr	r0, [pc, #52]	; (17884 <LabGPIO_1::setDirection(bool)+0x40>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:31
		LPC_GPIO0->FIODIR = (output ? (LPC_GPIO0->FIODIR | (1 << pinNum)) : (LPC_GPIO0->FIODIR & ~(1 << pinNum)));
	else if (portNum == 1)
		LPC_GPIO1->FIODIR = (output ? (LPC_GPIO1->FIODIR | (1 << pinNum)) : (LPC_GPIO1->FIODIR & ~(1 << pinNum)));
   17850:	6802      	ldr	r2, [r0, #0]
   17852:	40a3      	lsls	r3, r4
   17854:	b131      	cbz	r1, 17864 <LabGPIO_1::setDirection(bool)+0x20>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:31 (discriminator 1)
   17856:	4313      	orrs	r3, r2
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:31 (discriminator 4)
   17858:	6003      	str	r3, [r0, #0]
   1785a:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:30
	else if (portNum == 1)
   1785c:	2b01      	cmp	r3, #1
   1785e:	d104      	bne.n	1786a <LabGPIO_1::setDirection(bool)+0x26>
   17860:	4809      	ldr	r0, [pc, #36]	; (17888 <LabGPIO_1::setDirection(bool)+0x44>)
   17862:	e7f5      	b.n	17850 <LabGPIO_1::setDirection(bool)+0xc>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:31 (discriminator 2)
		LPC_GPIO1->FIODIR = (output ? (LPC_GPIO1->FIODIR | (1 << pinNum)) : (LPC_GPIO1->FIODIR & ~(1 << pinNum)));
   17864:	ea22 0303 	bic.w	r3, r2, r3
   17868:	e7f6      	b.n	17858 <LabGPIO_1::setDirection(bool)+0x14>
   1786a:	2001      	movs	r0, #1
   1786c:	4d07      	ldr	r5, [pc, #28]	; (1788c <LabGPIO_1::setDirection(bool)+0x48>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:33
	else
		LPC_GPIO2->FIODIR = (output ? (LPC_GPIO2->FIODIR | (1 << pinNum)) : (LPC_GPIO2->FIODIR & ~(1 << pinNum)));
   1786e:	fa00 f304 	lsl.w	r3, r0, r4
   17872:	682a      	ldr	r2, [r5, #0]
   17874:	b111      	cbz	r1, 1787c <LabGPIO_1::setDirection(bool)+0x38>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:33 (discriminator 1)
   17876:	4313      	orrs	r3, r2
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:33 (discriminator 4)
   17878:	602b      	str	r3, [r5, #0]
   1787a:	bd30      	pop	{r4, r5, pc}
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:33 (discriminator 2)
   1787c:	ea22 0303 	bic.w	r3, r2, r3
   17880:	e7fa      	b.n	17878 <LabGPIO_1::setDirection(bool)+0x34>
   17882:	bf00      	nop
   17884:	2009c000 	.word	0x2009c000
   17888:	2009c020 	.word	0x2009c020
   1788c:	2009c040 	.word	0x2009c040

00017890 <LabGPIO_1::setHigh()>:
_ZN9LabGPIO_17setHighEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:37
}

void LabGPIO_1::setHigh() {
	if (portNum == 0)
   17890:	7803      	ldrb	r3, [r0, #0]
   17892:	7842      	ldrb	r2, [r0, #1]
   17894:	b923      	cbnz	r3, 178a0 <LabGPIO_1::setHigh()+0x10>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:38
		LPC_GPIO0->FIOSET = (1 << pinNum);
   17896:	2301      	movs	r3, #1
   17898:	4093      	lsls	r3, r2
   1789a:	4a06      	ldr	r2, [pc, #24]	; (178b4 <LabGPIO_1::setHigh()+0x24>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:42
	else if (portNum == 1)
		LPC_GPIO1->FIOSET = (1 << pinNum);
	else
		LPC_GPIO2->FIOSET = (1 << pinNum);
   1789c:	6193      	str	r3, [r2, #24]
   1789e:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:39
	else if (portNum == 1)
   178a0:	2b01      	cmp	r3, #1
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:42
		LPC_GPIO2->FIOSET = (1 << pinNum);
   178a2:	bf15      	itete	ne
   178a4:	2301      	movne	r3, #1
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:40
		LPC_GPIO1->FIOSET = (1 << pinNum);
   178a6:	4093      	lsleq	r3, r2
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:42
		LPC_GPIO2->FIOSET = (1 << pinNum);
   178a8:	4093      	lslne	r3, r2
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:40
		LPC_GPIO1->FIOSET = (1 << pinNum);
   178aa:	4a03      	ldreq	r2, [pc, #12]	; (178b8 <LabGPIO_1::setHigh()+0x28>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:42
		LPC_GPIO2->FIOSET = (1 << pinNum);
   178ac:	bf18      	it	ne
   178ae:	4a03      	ldrne	r2, [pc, #12]	; (178bc <LabGPIO_1::setHigh()+0x2c>)
   178b0:	e7f4      	b.n	1789c <LabGPIO_1::setHigh()+0xc>
   178b2:	bf00      	nop
   178b4:	2009c000 	.word	0x2009c000
   178b8:	2009c020 	.word	0x2009c020
   178bc:	2009c040 	.word	0x2009c040

000178c0 <LabGPIO_1::setLow()>:
_ZN9LabGPIO_16setLowEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:46
}

void LabGPIO_1::setLow() {
	if (portNum == 0)
   178c0:	7803      	ldrb	r3, [r0, #0]
   178c2:	7842      	ldrb	r2, [r0, #1]
   178c4:	b923      	cbnz	r3, 178d0 <LabGPIO_1::setLow()+0x10>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:47
		LPC_GPIO0->FIOCLR = (1 << pinNum);
   178c6:	2301      	movs	r3, #1
   178c8:	4093      	lsls	r3, r2
   178ca:	4a06      	ldr	r2, [pc, #24]	; (178e4 <LabGPIO_1::setLow()+0x24>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:51
	else if (portNum == 1)
		LPC_GPIO1->FIOCLR = (1 << pinNum);
	else
		LPC_GPIO2->FIOCLR = (1 << pinNum);
   178cc:	61d3      	str	r3, [r2, #28]
   178ce:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:48
	else if (portNum == 1)
   178d0:	2b01      	cmp	r3, #1
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:51
		LPC_GPIO2->FIOCLR = (1 << pinNum);
   178d2:	bf15      	itete	ne
   178d4:	2301      	movne	r3, #1
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:49
		LPC_GPIO1->FIOCLR = (1 << pinNum);
   178d6:	4093      	lsleq	r3, r2
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:51
		LPC_GPIO2->FIOCLR = (1 << pinNum);
   178d8:	4093      	lslne	r3, r2
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:49
		LPC_GPIO1->FIOCLR = (1 << pinNum);
   178da:	4a03      	ldreq	r2, [pc, #12]	; (178e8 <LabGPIO_1::setLow()+0x28>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:51
		LPC_GPIO2->FIOCLR = (1 << pinNum);
   178dc:	bf18      	it	ne
   178de:	4a03      	ldrne	r2, [pc, #12]	; (178ec <LabGPIO_1::setLow()+0x2c>)
   178e0:	e7f4      	b.n	178cc <LabGPIO_1::setLow()+0xc>
   178e2:	bf00      	nop
   178e4:	2009c000 	.word	0x2009c000
   178e8:	2009c020 	.word	0x2009c020
   178ec:	2009c040 	.word	0x2009c040

000178f0 <LabGPIO_1::getLevel()>:
_ZN9LabGPIO_18getLevelEv():
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:64
	else
		LPC_GPIO2->FIOPIN = (high ? (LPC_GPIO2->FIOPIN | (1 << pinNum)) : (LPC_GPIO2->FIOPIN & ~(1 << pinNum)));
}

bool LabGPIO_1::getLevel() {
	if (portNum == 0)
   178f0:	7803      	ldrb	r3, [r0, #0]
   178f2:	7842      	ldrb	r2, [r0, #1]
   178f4:	b91b      	cbnz	r3, 178fe <LabGPIO_1::getLevel()+0xe>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:65
		return (LPC_GPIO0->FIOPIN & (1 << pinNum) ? true : false);
   178f6:	4b08      	ldr	r3, [pc, #32]	; (17918 <LabGPIO_1::getLevel()+0x28>)
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:69
	else if(portNum == 1)
		return (LPC_GPIO1->FIOPIN & (1 << pinNum) ? true : false);
	else
		return (LPC_GPIO2->FIOPIN & (1 << pinNum) ? true : false);
   178f8:	6959      	ldr	r1, [r3, #20]
   178fa:	2301      	movs	r3, #1
   178fc:	e003      	b.n	17906 <LabGPIO_1::getLevel()+0x16>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:66
	else if(portNum == 1)
   178fe:	2b01      	cmp	r3, #1
   17900:	d107      	bne.n	17912 <LabGPIO_1::getLevel()+0x22>
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:67
		return (LPC_GPIO1->FIOPIN & (1 << pinNum) ? true : false);
   17902:	4906      	ldr	r1, [pc, #24]	; (1791c <LabGPIO_1::getLevel()+0x2c>)
   17904:	6949      	ldr	r1, [r1, #20]
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:69
		return (LPC_GPIO2->FIOPIN & (1 << pinNum) ? true : false);
   17906:	4093      	lsls	r3, r2
   17908:	420b      	tst	r3, r1
   1790a:	bf14      	ite	ne
   1790c:	2001      	movne	r0, #1
   1790e:	2000      	moveq	r0, #0
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:70
}
   17910:	4770      	bx	lr
/home/bionia/SJSU-DEV/firmware/Labs/L1GPIO/L5_Application/labgpio.cpp:69
		return (LPC_GPIO2->FIOPIN & (1 << pinNum) ? true : false);
   17912:	4b03      	ldr	r3, [pc, #12]	; (17920 <LabGPIO_1::getLevel()+0x30>)
   17914:	e7f0      	b.n	178f8 <LabGPIO_1::getLevel()+0x8>
   17916:	bf00      	nop
   17918:	2009c000 	.word	0x2009c000
   1791c:	2009c020 	.word	0x2009c020
   17920:	2009c040 	.word	0x2009c040

00017924 <vControlLED(void*)>:
_Z11vControlLEDPv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:18
bool btn3 = false;
bool rst = false;

SemaphoreHandle_t led_sema = NULL;

void vControlLED(void *pvParameters) {
   17924:	b5f0      	push	{r4, r5, r6, r7, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:21
	uint32_t param = (uint32_t)(pvParameters);

	if (param == 0){
   17926:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:18
void vControlLED(void *pvParameters) {
   17928:	b087      	sub	sp, #28
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:21
	if (param == 0){
   1792a:	b9d0      	cbnz	r0, 17962 <vControlLED(void*)+0x3e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:22
		LabGPIO_1 out = LabGPIO_1(1, 19);
   1792c:	2213      	movs	r2, #19
   1792e:	2101      	movs	r1, #1
   17930:	a805      	add	r0, sp, #20
   17932:	f7ff ff53 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:23
		out.setDirection(true);
   17936:	2101      	movs	r1, #1
   17938:	a805      	add	r0, sp, #20
   1793a:	f7ff ff83 	bl	17844 <LabGPIO_1::setDirection(bool)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:30

		while(1){
			toggleLED ? out.setLow() : out.setHigh();
			if (pressed){
				toggleLED = toggleLED ? false : true;
				pressed = false;
   1793e:	4626      	mov	r6, r4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:28
			if (pressed){
   17940:	4dac      	ldr	r5, [pc, #688]	; (17bf4 <vControlLED(void*)+0x2d0>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:27
			toggleLED ? out.setLow() : out.setHigh();
   17942:	a805      	add	r0, sp, #20
   17944:	b154      	cbz	r4, 1795c <vControlLED(void*)+0x38>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:27 (discriminator 1)
   17946:	f7ff ffbb 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:28
			if (pressed){
   1794a:	782b      	ldrb	r3, [r5, #0]
   1794c:	b113      	cbz	r3, 17954 <vControlLED(void*)+0x30>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:29
				toggleLED = toggleLED ? false : true;
   1794e:	f084 0401 	eor.w	r4, r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:30
				pressed = false;
   17952:	702e      	strb	r6, [r5, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:32
			}
			vTaskDelay(250);
   17954:	20fa      	movs	r0, #250	; 0xfa
   17956:	f7f9 fef1 	bl	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:27
			toggleLED ? out.setLow() : out.setHigh();
   1795a:	e7f2      	b.n	17942 <vControlLED(void*)+0x1e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:27 (discriminator 2)
   1795c:	f7ff ff98 	bl	17890 <LabGPIO_1::setHigh()>
   17960:	e7f3      	b.n	1794a <vControlLED(void*)+0x26>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:36
		}
		vTaskDelete(NULL);
	}
	else if (param == 1){
   17962:	2801      	cmp	r0, #1
   17964:	d124      	bne.n	179b0 <vControlLED(void*)+0x8c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:39
		LabGPIO_1 out = LabGPIO_1(1, 4);
		out.setAsOutput();
		bool toggleLED = false;
   17966:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:37
		LabGPIO_1 out = LabGPIO_1(1, 4);
   17968:	4601      	mov	r1, r0
   1796a:	2204      	movs	r2, #4
   1796c:	a805      	add	r0, sp, #20
   1796e:	f7ff ff35 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:38
		out.setAsOutput();
   17972:	a805      	add	r0, sp, #20
   17974:	f7ff ff4e 	bl	17814 <LabGPIO_1::setAsOutput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:42
		
		while(1){
			if (xSemaphoreTake(led_sema, portMAX_DELAY) == pdTRUE){
   17978:	4627      	mov	r7, r4
   1797a:	4e9f      	ldr	r6, [pc, #636]	; (17bf8 <vControlLED(void*)+0x2d4>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:44
				toggleLED ? out.setLow() : out.setHigh();
				if (pressed){
   1797c:	4d9d      	ldr	r5, [pc, #628]	; (17bf4 <vControlLED(void*)+0x2d0>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:42
			if (xSemaphoreTake(led_sema, portMAX_DELAY) == pdTRUE){
   1797e:	2300      	movs	r3, #0
   17980:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   17984:	4619      	mov	r1, r3
   17986:	6830      	ldr	r0, [r6, #0]
   17988:	f7f9 fb5c 	bl	11044 <xQueueGenericReceive>
   1798c:	2801      	cmp	r0, #1
   1798e:	d1f6      	bne.n	1797e <vControlLED(void*)+0x5a>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:43
				toggleLED ? out.setLow() : out.setHigh();
   17990:	a805      	add	r0, sp, #20
   17992:	b154      	cbz	r4, 179aa <vControlLED(void*)+0x86>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:43 (discriminator 1)
   17994:	f7ff ff94 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:44
				if (pressed){
   17998:	782b      	ldrb	r3, [r5, #0]
   1799a:	b113      	cbz	r3, 179a2 <vControlLED(void*)+0x7e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:45
					toggleLED = toggleLED ? false : true;
   1799c:	f084 0401 	eor.w	r4, r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:46
					pressed = false;
   179a0:	702f      	strb	r7, [r5, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:48
				}
				vTaskDelay(250);
   179a2:	20fa      	movs	r0, #250	; 0xfa
   179a4:	f7f9 feca 	bl	1173c <vTaskDelay>
   179a8:	e7e9      	b.n	1797e <vControlLED(void*)+0x5a>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:43 (discriminator 2)
				toggleLED ? out.setLow() : out.setHigh();
   179aa:	f7ff ff71 	bl	17890 <LabGPIO_1::setHigh()>
   179ae:	e7f3      	b.n	17998 <vControlLED(void*)+0x74>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:54
			}
		}
		vTaskDelete(NULL);
	}
	else {
		LabGPIO_1 out1 = LabGPIO_1(1, 0);
   179b0:	2200      	movs	r2, #0
   179b2:	2101      	movs	r1, #1
   179b4:	a801      	add	r0, sp, #4
   179b6:	f7ff ff11 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:55
		LabGPIO_1 out2 = LabGPIO_1(1, 1);
   179ba:	2201      	movs	r2, #1
   179bc:	a802      	add	r0, sp, #8
   179be:	4611      	mov	r1, r2
   179c0:	f7ff ff0c 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:56
		LabGPIO_1 out3 = LabGPIO_1(1, 4);
   179c4:	2204      	movs	r2, #4
   179c6:	2101      	movs	r1, #1
   179c8:	a803      	add	r0, sp, #12
   179ca:	f7ff ff07 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:57
		LabGPIO_1 out4 = LabGPIO_1(1, 8);
   179ce:	2208      	movs	r2, #8
   179d0:	2101      	movs	r1, #1
   179d2:	a804      	add	r0, sp, #16
   179d4:	f7ff ff02 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:58
		out1.setAsOutput();
   179d8:	a801      	add	r0, sp, #4
   179da:	f7ff ff1b 	bl	17814 <LabGPIO_1::setAsOutput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:59
		out2.setAsOutput();
   179de:	a802      	add	r0, sp, #8
   179e0:	f7ff ff18 	bl	17814 <LabGPIO_1::setAsOutput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:60
		out3.setAsOutput();
   179e4:	a803      	add	r0, sp, #12
   179e6:	f7ff ff15 	bl	17814 <LabGPIO_1::setAsOutput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:61
		out4.setAsOutput();
   179ea:	a804      	add	r0, sp, #16
   179ec:	f7ff ff12 	bl	17814 <LabGPIO_1::setAsOutput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:62
		TickType_t xLastWakeTime = xTaskGetTickCount();
   179f0:	f7f9 fd7a 	bl	114e8 <xTaskGetTickCount>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:65

		while(1){
			while(btn1){
   179f4:	4d81      	ldr	r5, [pc, #516]	; (17bfc <vControlLED(void*)+0x2d8>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:108
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
			}
			while(btn2){
   179f6:	4e82      	ldr	r6, [pc, #520]	; (17c00 <vControlLED(void*)+0x2dc>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:128
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
			}
			while(btn3){
   179f8:	4f82      	ldr	r7, [pc, #520]	; (17c04 <vControlLED(void*)+0x2e0>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:62
		TickType_t xLastWakeTime = xTaskGetTickCount();
   179fa:	9005      	str	r0, [sp, #20]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:65
			while(btn1){
   179fc:	782b      	ldrb	r3, [r5, #0]
   179fe:	2b00      	cmp	r3, #0
   17a00:	f000 8145 	beq.w	17c8e <vControlLED(void*)+0x36a>
   17a04:	2403      	movs	r4, #3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:67 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17a06:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:73 (discriminator 3)
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17a08:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:67 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17a0a:	d021      	beq.n	17a50 <vControlLED(void*)+0x12c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:68 (discriminator 2)
					out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17a0c:	f7ff ff58 	bl	178c0 <LabGPIO_1::setLow()>
   17a10:	a802      	add	r0, sp, #8
   17a12:	f7ff ff55 	bl	178c0 <LabGPIO_1::setLow()>
   17a16:	a803      	add	r0, sp, #12
   17a18:	f7ff ff3a 	bl	17890 <LabGPIO_1::setHigh()>
   17a1c:	a804      	add	r0, sp, #16
   17a1e:	f7ff ff37 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:69 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17a22:	f240 114d 	movw	r1, #333	; 0x14d
   17a26:	a805      	add	r0, sp, #20
   17a28:	f7f9 fe5c 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:70 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17a2c:	a801      	add	r0, sp, #4
   17a2e:	f7ff ff2f 	bl	17890 <LabGPIO_1::setHigh()>
   17a32:	a802      	add	r0, sp, #8
   17a34:	f7ff ff2c 	bl	17890 <LabGPIO_1::setHigh()>
   17a38:	a803      	add	r0, sp, #12
   17a3a:	f7ff ff29 	bl	17890 <LabGPIO_1::setHigh()>
   17a3e:	a804      	add	r0, sp, #16
   17a40:	f7ff ff26 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:71 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17a44:	f240 114d 	movw	r1, #333	; 0x14d
   17a48:	a805      	add	r0, sp, #20
   17a4a:	f7f9 fe4b 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:67 (discriminator 2)
				for(uint8_t i = 0; i < 2; ++i){
   17a4e:	e7da      	b.n	17a06 <vControlLED(void*)+0xe2>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:73
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17a50:	f7ff ff36 	bl	178c0 <LabGPIO_1::setLow()>
   17a54:	a802      	add	r0, sp, #8
   17a56:	f7ff ff1b 	bl	17890 <LabGPIO_1::setHigh()>
   17a5a:	a803      	add	r0, sp, #12
   17a5c:	f7ff ff18 	bl	17890 <LabGPIO_1::setHigh()>
   17a60:	a804      	add	r0, sp, #16
   17a62:	f7ff ff15 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:74
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17a66:	f240 114d 	movw	r1, #333	; 0x14d
   17a6a:	a805      	add	r0, sp, #20
   17a6c:	f7f9 fe3a 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:75
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17a70:	a801      	add	r0, sp, #4
   17a72:	f7ff ff0d 	bl	17890 <LabGPIO_1::setHigh()>
   17a76:	a802      	add	r0, sp, #8
   17a78:	f7ff ff0a 	bl	17890 <LabGPIO_1::setHigh()>
   17a7c:	a803      	add	r0, sp, #12
   17a7e:	f7ff ff07 	bl	17890 <LabGPIO_1::setHigh()>
   17a82:	a804      	add	r0, sp, #16
   17a84:	f7ff ff04 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:76
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17a88:	f240 114d 	movw	r1, #333	; 0x14d
   17a8c:	a805      	add	r0, sp, #20
   17a8e:	f7f9 fe29 	bl	116e4 <vTaskDelayUntil>
   17a92:	2403      	movs	r4, #3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:78 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17a94:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:85 (discriminator 3)
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17a96:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:78 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17a98:	d021      	beq.n	17ade <vControlLED(void*)+0x1ba>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:79 (discriminator 2)
					out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17a9a:	f7ff ff11 	bl	178c0 <LabGPIO_1::setLow()>
   17a9e:	a802      	add	r0, sp, #8
   17aa0:	f7ff fef6 	bl	17890 <LabGPIO_1::setHigh()>
   17aa4:	a803      	add	r0, sp, #12
   17aa6:	f7ff fef3 	bl	17890 <LabGPIO_1::setHigh()>
   17aaa:	a804      	add	r0, sp, #16
   17aac:	f7ff fef0 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:80 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17ab0:	f240 114d 	movw	r1, #333	; 0x14d
   17ab4:	a805      	add	r0, sp, #20
   17ab6:	f7f9 fe15 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:81 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17aba:	a801      	add	r0, sp, #4
   17abc:	f7ff fee8 	bl	17890 <LabGPIO_1::setHigh()>
   17ac0:	a802      	add	r0, sp, #8
   17ac2:	f7ff fee5 	bl	17890 <LabGPIO_1::setHigh()>
   17ac6:	a803      	add	r0, sp, #12
   17ac8:	f7ff fee2 	bl	17890 <LabGPIO_1::setHigh()>
   17acc:	a804      	add	r0, sp, #16
   17ace:	f7ff fedf 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:82 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17ad2:	f240 114d 	movw	r1, #333	; 0x14d
   17ad6:	a805      	add	r0, sp, #20
   17ad8:	f7f9 fe04 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:78 (discriminator 2)
				for(uint8_t i = 0; i < 2; ++i){
   17adc:	e7da      	b.n	17a94 <vControlLED(void*)+0x170>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:85
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17ade:	f7ff feef 	bl	178c0 <LabGPIO_1::setLow()>
   17ae2:	a802      	add	r0, sp, #8
   17ae4:	f7ff feec 	bl	178c0 <LabGPIO_1::setLow()>
   17ae8:	a803      	add	r0, sp, #12
   17aea:	f7ff fee9 	bl	178c0 <LabGPIO_1::setLow()>
   17aee:	a804      	add	r0, sp, #16
   17af0:	f7ff fee6 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:86
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17af4:	f240 114d 	movw	r1, #333	; 0x14d
   17af8:	a805      	add	r0, sp, #20
   17afa:	f7f9 fdf3 	bl	116e4 <vTaskDelayUntil>
   17afe:	2404      	movs	r4, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:88 (discriminator 3)
				for(uint8_t i = 0; i < 3; ++i){
   17b00:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:94 (discriminator 3)
				out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17b02:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:88 (discriminator 3)
				for(uint8_t i = 0; i < 3; ++i){
   17b04:	d021      	beq.n	17b4a <vControlLED(void*)+0x226>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:89 (discriminator 2)
					out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17b06:	f7ff fedb 	bl	178c0 <LabGPIO_1::setLow()>
   17b0a:	a802      	add	r0, sp, #8
   17b0c:	f7ff fec0 	bl	17890 <LabGPIO_1::setHigh()>
   17b10:	a803      	add	r0, sp, #12
   17b12:	f7ff febd 	bl	17890 <LabGPIO_1::setHigh()>
   17b16:	a804      	add	r0, sp, #16
   17b18:	f7ff feba 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:90 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17b1c:	f240 114d 	movw	r1, #333	; 0x14d
   17b20:	a805      	add	r0, sp, #20
   17b22:	f7f9 fddf 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:91 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17b26:	a801      	add	r0, sp, #4
   17b28:	f7ff feb2 	bl	17890 <LabGPIO_1::setHigh()>
   17b2c:	a802      	add	r0, sp, #8
   17b2e:	f7ff feaf 	bl	17890 <LabGPIO_1::setHigh()>
   17b32:	a803      	add	r0, sp, #12
   17b34:	f7ff feac 	bl	17890 <LabGPIO_1::setHigh()>
   17b38:	a804      	add	r0, sp, #16
   17b3a:	f7ff fea9 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:92 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17b3e:	f240 114d 	movw	r1, #333	; 0x14d
   17b42:	a805      	add	r0, sp, #20
   17b44:	f7f9 fdce 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:88 (discriminator 2)
				for(uint8_t i = 0; i < 3; ++i){
   17b48:	e7da      	b.n	17b00 <vControlLED(void*)+0x1dc>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:94
				out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17b4a:	f7ff feb9 	bl	178c0 <LabGPIO_1::setLow()>
   17b4e:	a802      	add	r0, sp, #8
   17b50:	f7ff feb6 	bl	178c0 <LabGPIO_1::setLow()>
   17b54:	a803      	add	r0, sp, #12
   17b56:	f7ff fe9b 	bl	17890 <LabGPIO_1::setHigh()>
   17b5a:	a804      	add	r0, sp, #16
   17b5c:	f7ff fe98 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:95
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17b60:	f240 114d 	movw	r1, #333	; 0x14d
   17b64:	a805      	add	r0, sp, #20
   17b66:	f7f9 fdbd 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:96
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17b6a:	a801      	add	r0, sp, #4
   17b6c:	f7ff fe90 	bl	17890 <LabGPIO_1::setHigh()>
   17b70:	a802      	add	r0, sp, #8
   17b72:	f7ff fe8d 	bl	17890 <LabGPIO_1::setHigh()>
   17b76:	a803      	add	r0, sp, #12
   17b78:	f7ff fe8a 	bl	17890 <LabGPIO_1::setHigh()>
   17b7c:	a804      	add	r0, sp, #16
   17b7e:	f7ff fe87 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:97
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17b82:	f240 114d 	movw	r1, #333	; 0x14d
   17b86:	a805      	add	r0, sp, #20
   17b88:	f7f9 fdac 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:99
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17b8c:	a801      	add	r0, sp, #4
   17b8e:	f7ff fe97 	bl	178c0 <LabGPIO_1::setLow()>
   17b92:	a802      	add	r0, sp, #8
   17b94:	f7ff fe94 	bl	178c0 <LabGPIO_1::setLow()>
   17b98:	a803      	add	r0, sp, #12
   17b9a:	f7ff fe91 	bl	178c0 <LabGPIO_1::setLow()>
   17b9e:	a804      	add	r0, sp, #16
   17ba0:	f7ff fe8e 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:100
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17ba4:	f240 114d 	movw	r1, #333	; 0x14d
   17ba8:	a805      	add	r0, sp, #20
   17baa:	f7f9 fd9b 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:102
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17bae:	a801      	add	r0, sp, #4
   17bb0:	f7ff fe86 	bl	178c0 <LabGPIO_1::setLow()>
   17bb4:	a802      	add	r0, sp, #8
   17bb6:	f7ff fe6b 	bl	17890 <LabGPIO_1::setHigh()>
   17bba:	a803      	add	r0, sp, #12
   17bbc:	f7ff fe68 	bl	17890 <LabGPIO_1::setHigh()>
   17bc0:	a804      	add	r0, sp, #16
   17bc2:	f7ff fe65 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:103
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17bc6:	f240 114d 	movw	r1, #333	; 0x14d
   17bca:	a805      	add	r0, sp, #20
   17bcc:	f7f9 fd8a 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:105
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17bd0:	a801      	add	r0, sp, #4
   17bd2:	f7ff fe75 	bl	178c0 <LabGPIO_1::setLow()>
   17bd6:	a802      	add	r0, sp, #8
   17bd8:	f7ff fe72 	bl	178c0 <LabGPIO_1::setLow()>
   17bdc:	a803      	add	r0, sp, #12
   17bde:	f7ff fe6f 	bl	178c0 <LabGPIO_1::setLow()>
   17be2:	a804      	add	r0, sp, #16
   17be4:	f7ff fe6c 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:106
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17be8:	f240 114d 	movw	r1, #333	; 0x14d
   17bec:	a805      	add	r0, sp, #20
   17bee:	f7f9 fd79 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:65
			while(btn1){
   17bf2:	e703      	b.n	179fc <vControlLED(void*)+0xd8>
   17bf4:	2007c86c 	.word	0x2007c86c
   17bf8:	2007c868 	.word	0x2007c868
   17bfc:	2007c760 	.word	0x2007c760
   17c00:	2007c761 	.word	0x2007c761
   17c04:	2007c762 	.word	0x2007c762
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:117
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17c08:	f7ff fe5a 	bl	178c0 <LabGPIO_1::setLow()>
   17c0c:	a802      	add	r0, sp, #8
   17c0e:	f7ff fe57 	bl	178c0 <LabGPIO_1::setLow()>
   17c12:	a803      	add	r0, sp, #12
   17c14:	f7ff fe54 	bl	178c0 <LabGPIO_1::setLow()>
   17c18:	a804      	add	r0, sp, #16
   17c1a:	f7ff fe51 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:118
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17c1e:	f240 114d 	movw	r1, #333	; 0x14d
   17c22:	a805      	add	r0, sp, #20
   17c24:	f7f9 fd5e 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:120
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17c28:	a801      	add	r0, sp, #4
   17c2a:	f7ff fe49 	bl	178c0 <LabGPIO_1::setLow()>
   17c2e:	a802      	add	r0, sp, #8
   17c30:	f7ff fe2e 	bl	17890 <LabGPIO_1::setHigh()>
   17c34:	a803      	add	r0, sp, #12
   17c36:	f7ff fe2b 	bl	17890 <LabGPIO_1::setHigh()>
   17c3a:	a804      	add	r0, sp, #16
   17c3c:	f7ff fe28 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:121
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17c40:	f240 114d 	movw	r1, #333	; 0x14d
   17c44:	a805      	add	r0, sp, #20
   17c46:	f7f9 fd4d 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:122
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17c4a:	a801      	add	r0, sp, #4
   17c4c:	f7ff fe20 	bl	17890 <LabGPIO_1::setHigh()>
   17c50:	a802      	add	r0, sp, #8
   17c52:	f7ff fe1d 	bl	17890 <LabGPIO_1::setHigh()>
   17c56:	a803      	add	r0, sp, #12
   17c58:	f7ff fe1a 	bl	17890 <LabGPIO_1::setHigh()>
   17c5c:	a804      	add	r0, sp, #16
   17c5e:	f7ff fe17 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:123
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17c62:	f240 114d 	movw	r1, #333	; 0x14d
   17c66:	a805      	add	r0, sp, #20
   17c68:	f7f9 fd3c 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:125
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17c6c:	a801      	add	r0, sp, #4
   17c6e:	f7ff fe27 	bl	178c0 <LabGPIO_1::setLow()>
   17c72:	a802      	add	r0, sp, #8
   17c74:	f7ff fe24 	bl	178c0 <LabGPIO_1::setLow()>
   17c78:	a803      	add	r0, sp, #12
   17c7a:	f7ff fe21 	bl	178c0 <LabGPIO_1::setLow()>
   17c7e:	a804      	add	r0, sp, #16
   17c80:	f7ff fe1e 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:126
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17c84:	f240 114d 	movw	r1, #333	; 0x14d
   17c88:	a805      	add	r0, sp, #20
   17c8a:	f7f9 fd2b 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:108
			while(btn2){
   17c8e:	7833      	ldrb	r3, [r6, #0]
   17c90:	2b00      	cmp	r3, #0
   17c92:	f000 8182 	beq.w	17f9a <vControlLED(void*)+0x676>
   17c96:	2403      	movs	r4, #3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:110 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17c98:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:117 (discriminator 3)
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17c9a:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:110 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17c9c:	d0b4      	beq.n	17c08 <vControlLED(void*)+0x2e4>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:111 (discriminator 2)
					out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17c9e:	f7ff fe0f 	bl	178c0 <LabGPIO_1::setLow()>
   17ca2:	a802      	add	r0, sp, #8
   17ca4:	f7ff fe0c 	bl	178c0 <LabGPIO_1::setLow()>
   17ca8:	a803      	add	r0, sp, #12
   17caa:	f7ff fdf1 	bl	17890 <LabGPIO_1::setHigh()>
   17cae:	a804      	add	r0, sp, #16
   17cb0:	f7ff fdee 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:112 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17cb4:	f240 114d 	movw	r1, #333	; 0x14d
   17cb8:	a805      	add	r0, sp, #20
   17cba:	f7f9 fd13 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:113 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17cbe:	a801      	add	r0, sp, #4
   17cc0:	f7ff fde6 	bl	17890 <LabGPIO_1::setHigh()>
   17cc4:	a802      	add	r0, sp, #8
   17cc6:	f7ff fde3 	bl	17890 <LabGPIO_1::setHigh()>
   17cca:	a803      	add	r0, sp, #12
   17ccc:	f7ff fde0 	bl	17890 <LabGPIO_1::setHigh()>
   17cd0:	a804      	add	r0, sp, #16
   17cd2:	f7ff fddd 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:114 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17cd6:	f240 114d 	movw	r1, #333	; 0x14d
   17cda:	a805      	add	r0, sp, #20
   17cdc:	f7f9 fd02 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:110 (discriminator 2)
				for(uint8_t i = 0; i < 2; ++i){
   17ce0:	e7da      	b.n	17c98 <vControlLED(void*)+0x374>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:140
					out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
				}
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17ce2:	f7ff fded 	bl	178c0 <LabGPIO_1::setLow()>
   17ce6:	a802      	add	r0, sp, #8
   17ce8:	f7ff fdd2 	bl	17890 <LabGPIO_1::setHigh()>
   17cec:	a803      	add	r0, sp, #12
   17cee:	f7ff fdcf 	bl	17890 <LabGPIO_1::setHigh()>
   17cf2:	a804      	add	r0, sp, #16
   17cf4:	f7ff fdcc 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:141
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17cf8:	f240 114d 	movw	r1, #333	; 0x14d
   17cfc:	a805      	add	r0, sp, #20
   17cfe:	f7f9 fcf1 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:142
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17d02:	a801      	add	r0, sp, #4
   17d04:	f7ff fdc4 	bl	17890 <LabGPIO_1::setHigh()>
   17d08:	a802      	add	r0, sp, #8
   17d0a:	f7ff fdc1 	bl	17890 <LabGPIO_1::setHigh()>
   17d0e:	a803      	add	r0, sp, #12
   17d10:	f7ff fdbe 	bl	17890 <LabGPIO_1::setHigh()>
   17d14:	a804      	add	r0, sp, #16
   17d16:	f7ff fdbb 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:143
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17d1a:	f240 114d 	movw	r1, #333	; 0x14d
   17d1e:	a805      	add	r0, sp, #20
   17d20:	f7f9 fce0 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:145
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17d24:	a801      	add	r0, sp, #4
   17d26:	f7ff fdcb 	bl	178c0 <LabGPIO_1::setLow()>
   17d2a:	a802      	add	r0, sp, #8
   17d2c:	f7ff fdc8 	bl	178c0 <LabGPIO_1::setLow()>
   17d30:	a803      	add	r0, sp, #12
   17d32:	f7ff fdc5 	bl	178c0 <LabGPIO_1::setLow()>
   17d36:	a804      	add	r0, sp, #16
   17d38:	f7ff fdc2 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:146
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17d3c:	f240 114d 	movw	r1, #333	; 0x14d
   17d40:	a805      	add	r0, sp, #20
   17d42:	f7f9 fccf 	bl	116e4 <vTaskDelayUntil>
   17d46:	2404      	movs	r4, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:148 (discriminator 3)
				//O
				for(uint8_t i = 0; i < 3; ++i){
   17d48:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:155 (discriminator 3)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
				}
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17d4a:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:148 (discriminator 3)
				for(uint8_t i = 0; i < 3; ++i){
   17d4c:	d021      	beq.n	17d92 <vControlLED(void*)+0x46e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:149 (discriminator 2)
					out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17d4e:	f7ff fdb7 	bl	178c0 <LabGPIO_1::setLow()>
   17d52:	a802      	add	r0, sp, #8
   17d54:	f7ff fdb4 	bl	178c0 <LabGPIO_1::setLow()>
   17d58:	a803      	add	r0, sp, #12
   17d5a:	f7ff fd99 	bl	17890 <LabGPIO_1::setHigh()>
   17d5e:	a804      	add	r0, sp, #16
   17d60:	f7ff fd96 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:150 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17d64:	f240 114d 	movw	r1, #333	; 0x14d
   17d68:	a805      	add	r0, sp, #20
   17d6a:	f7f9 fcbb 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:151 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17d6e:	a801      	add	r0, sp, #4
   17d70:	f7ff fd8e 	bl	17890 <LabGPIO_1::setHigh()>
   17d74:	a802      	add	r0, sp, #8
   17d76:	f7ff fd8b 	bl	17890 <LabGPIO_1::setHigh()>
   17d7a:	a803      	add	r0, sp, #12
   17d7c:	f7ff fd88 	bl	17890 <LabGPIO_1::setHigh()>
   17d80:	a804      	add	r0, sp, #16
   17d82:	f7ff fd85 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:152 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17d86:	f240 114d 	movw	r1, #333	; 0x14d
   17d8a:	a805      	add	r0, sp, #20
   17d8c:	f7f9 fcaa 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:148 (discriminator 2)
				for(uint8_t i = 0; i < 3; ++i){
   17d90:	e7da      	b.n	17d48 <vControlLED(void*)+0x424>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:155
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17d92:	f7ff fd95 	bl	178c0 <LabGPIO_1::setLow()>
   17d96:	a802      	add	r0, sp, #8
   17d98:	f7ff fd92 	bl	178c0 <LabGPIO_1::setLow()>
   17d9c:	a803      	add	r0, sp, #12
   17d9e:	f7ff fd8f 	bl	178c0 <LabGPIO_1::setLow()>
   17da2:	a804      	add	r0, sp, #16
   17da4:	f7ff fd8c 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:156
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17da8:	f240 114d 	movw	r1, #333	; 0x14d
   17dac:	a805      	add	r0, sp, #20
   17dae:	f7f9 fc99 	bl	116e4 <vTaskDelayUntil>
   17db2:	2403      	movs	r4, #3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:158 (discriminator 3)
				//I
				for(uint8_t i = 0; i < 2; ++i){
   17db4:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:165 (discriminator 3)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
				}
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17db6:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:158 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17db8:	d021      	beq.n	17dfe <vControlLED(void*)+0x4da>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:159 (discriminator 2)
					out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17dba:	f7ff fd81 	bl	178c0 <LabGPIO_1::setLow()>
   17dbe:	a802      	add	r0, sp, #8
   17dc0:	f7ff fd66 	bl	17890 <LabGPIO_1::setHigh()>
   17dc4:	a803      	add	r0, sp, #12
   17dc6:	f7ff fd63 	bl	17890 <LabGPIO_1::setHigh()>
   17dca:	a804      	add	r0, sp, #16
   17dcc:	f7ff fd60 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:160 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17dd0:	f240 114d 	movw	r1, #333	; 0x14d
   17dd4:	a805      	add	r0, sp, #20
   17dd6:	f7f9 fc85 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:161 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17dda:	a801      	add	r0, sp, #4
   17ddc:	f7ff fd58 	bl	17890 <LabGPIO_1::setHigh()>
   17de0:	a802      	add	r0, sp, #8
   17de2:	f7ff fd55 	bl	17890 <LabGPIO_1::setHigh()>
   17de6:	a803      	add	r0, sp, #12
   17de8:	f7ff fd52 	bl	17890 <LabGPIO_1::setHigh()>
   17dec:	a804      	add	r0, sp, #16
   17dee:	f7ff fd4f 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:162 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17df2:	f240 114d 	movw	r1, #333	; 0x14d
   17df6:	a805      	add	r0, sp, #20
   17df8:	f7f9 fc74 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:158 (discriminator 2)
				for(uint8_t i = 0; i < 2; ++i){
   17dfc:	e7da      	b.n	17db4 <vControlLED(void*)+0x490>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:165
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17dfe:	f7ff fd5f 	bl	178c0 <LabGPIO_1::setLow()>
   17e02:	a802      	add	r0, sp, #8
   17e04:	f7ff fd5c 	bl	178c0 <LabGPIO_1::setLow()>
   17e08:	a803      	add	r0, sp, #12
   17e0a:	f7ff fd59 	bl	178c0 <LabGPIO_1::setLow()>
   17e0e:	a804      	add	r0, sp, #16
   17e10:	f7ff fd56 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:166
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17e14:	f240 114d 	movw	r1, #333	; 0x14d
   17e18:	a805      	add	r0, sp, #20
   17e1a:	f7f9 fc63 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:168
				//N
				out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17e1e:	a801      	add	r0, sp, #4
   17e20:	f7ff fd4e 	bl	178c0 <LabGPIO_1::setLow()>
   17e24:	a802      	add	r0, sp, #8
   17e26:	f7ff fd4b 	bl	178c0 <LabGPIO_1::setLow()>
   17e2a:	a803      	add	r0, sp, #12
   17e2c:	f7ff fd30 	bl	17890 <LabGPIO_1::setHigh()>
   17e30:	a804      	add	r0, sp, #16
   17e32:	f7ff fd2d 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:169
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17e36:	f240 114d 	movw	r1, #333	; 0x14d
   17e3a:	a805      	add	r0, sp, #20
   17e3c:	f7f9 fc52 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:170
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17e40:	a801      	add	r0, sp, #4
   17e42:	f7ff fd25 	bl	17890 <LabGPIO_1::setHigh()>
   17e46:	a802      	add	r0, sp, #8
   17e48:	f7ff fd22 	bl	17890 <LabGPIO_1::setHigh()>
   17e4c:	a803      	add	r0, sp, #12
   17e4e:	f7ff fd1f 	bl	17890 <LabGPIO_1::setHigh()>
   17e52:	a804      	add	r0, sp, #16
   17e54:	f7ff fd1c 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:171
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17e58:	f240 114d 	movw	r1, #333	; 0x14d
   17e5c:	a805      	add	r0, sp, #20
   17e5e:	f7f9 fc41 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:172
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17e62:	a801      	add	r0, sp, #4
   17e64:	f7ff fd2c 	bl	178c0 <LabGPIO_1::setLow()>
   17e68:	a802      	add	r0, sp, #8
   17e6a:	f7ff fd11 	bl	17890 <LabGPIO_1::setHigh()>
   17e6e:	a803      	add	r0, sp, #12
   17e70:	f7ff fd0e 	bl	17890 <LabGPIO_1::setHigh()>
   17e74:	a804      	add	r0, sp, #16
   17e76:	f7ff fd0b 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:173
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17e7a:	f240 114d 	movw	r1, #333	; 0x14d
   17e7e:	a805      	add	r0, sp, #20
   17e80:	f7f9 fc30 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:174
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17e84:	a801      	add	r0, sp, #4
   17e86:	f7ff fd03 	bl	17890 <LabGPIO_1::setHigh()>
   17e8a:	a802      	add	r0, sp, #8
   17e8c:	f7ff fd00 	bl	17890 <LabGPIO_1::setHigh()>
   17e90:	a803      	add	r0, sp, #12
   17e92:	f7ff fcfd 	bl	17890 <LabGPIO_1::setHigh()>
   17e96:	a804      	add	r0, sp, #16
   17e98:	f7ff fcfa 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:175
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17e9c:	f240 114d 	movw	r1, #333	; 0x14d
   17ea0:	a805      	add	r0, sp, #20
   17ea2:	f7f9 fc1f 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:177
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17ea6:	a801      	add	r0, sp, #4
   17ea8:	f7ff fd0a 	bl	178c0 <LabGPIO_1::setLow()>
   17eac:	a802      	add	r0, sp, #8
   17eae:	f7ff fd07 	bl	178c0 <LabGPIO_1::setLow()>
   17eb2:	a803      	add	r0, sp, #12
   17eb4:	f7ff fd04 	bl	178c0 <LabGPIO_1::setLow()>
   17eb8:	a804      	add	r0, sp, #16
   17eba:	f7ff fd01 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:178
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17ebe:	f240 114d 	movw	r1, #333	; 0x14d
   17ec2:	a805      	add	r0, sp, #20
   17ec4:	f7f9 fc0e 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:180
				//T
				out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17ec8:	a801      	add	r0, sp, #4
   17eca:	f7ff fcf9 	bl	178c0 <LabGPIO_1::setLow()>
   17ece:	a802      	add	r0, sp, #8
   17ed0:	f7ff fcf6 	bl	178c0 <LabGPIO_1::setLow()>
   17ed4:	a803      	add	r0, sp, #12
   17ed6:	f7ff fcdb 	bl	17890 <LabGPIO_1::setHigh()>
   17eda:	a804      	add	r0, sp, #16
   17edc:	f7ff fcd8 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:181
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17ee0:	f240 114d 	movw	r1, #333	; 0x14d
   17ee4:	a805      	add	r0, sp, #20
   17ee6:	f7f9 fbfd 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:182
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17eea:	a801      	add	r0, sp, #4
   17eec:	f7ff fcd0 	bl	17890 <LabGPIO_1::setHigh()>
   17ef0:	a802      	add	r0, sp, #8
   17ef2:	f7ff fccd 	bl	17890 <LabGPIO_1::setHigh()>
   17ef6:	a803      	add	r0, sp, #12
   17ef8:	f7ff fcca 	bl	17890 <LabGPIO_1::setHigh()>
   17efc:	a804      	add	r0, sp, #16
   17efe:	f7ff fcc7 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:183
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17f02:	f240 114d 	movw	r1, #333	; 0x14d
   17f06:	a805      	add	r0, sp, #20
   17f08:	f7f9 fbec 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:185
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17f0c:	a801      	add	r0, sp, #4
   17f0e:	f7ff fcd7 	bl	178c0 <LabGPIO_1::setLow()>
   17f12:	a802      	add	r0, sp, #8
   17f14:	f7ff fcd4 	bl	178c0 <LabGPIO_1::setLow()>
   17f18:	a803      	add	r0, sp, #12
   17f1a:	f7ff fcd1 	bl	178c0 <LabGPIO_1::setLow()>
   17f1e:	a804      	add	r0, sp, #16
   17f20:	f7ff fcce 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:186
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17f24:	f240 114d 	movw	r1, #333	; 0x14d
   17f28:	a805      	add	r0, sp, #20
   17f2a:	f7f9 fbdb 	bl	116e4 <vTaskDelayUntil>
   17f2e:	2404      	movs	r4, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:188 (discriminator 3)
				//S
				for(uint8_t i = 0; i < 3; ++i){
   17f30:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:195 (discriminator 3)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
				}
				//Stop
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17f32:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:188 (discriminator 3)
				for(uint8_t i = 0; i < 3; ++i){
   17f34:	d021      	beq.n	17f7a <vControlLED(void*)+0x656>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:189 (discriminator 2)
					out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17f36:	f7ff fcc3 	bl	178c0 <LabGPIO_1::setLow()>
   17f3a:	a802      	add	r0, sp, #8
   17f3c:	f7ff fca8 	bl	17890 <LabGPIO_1::setHigh()>
   17f40:	a803      	add	r0, sp, #12
   17f42:	f7ff fca5 	bl	17890 <LabGPIO_1::setHigh()>
   17f46:	a804      	add	r0, sp, #16
   17f48:	f7ff fca2 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:190 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17f4c:	f240 114d 	movw	r1, #333	; 0x14d
   17f50:	a805      	add	r0, sp, #20
   17f52:	f7f9 fbc7 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:191 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17f56:	a801      	add	r0, sp, #4
   17f58:	f7ff fc9a 	bl	17890 <LabGPIO_1::setHigh()>
   17f5c:	a802      	add	r0, sp, #8
   17f5e:	f7ff fc97 	bl	17890 <LabGPIO_1::setHigh()>
   17f62:	a803      	add	r0, sp, #12
   17f64:	f7ff fc94 	bl	17890 <LabGPIO_1::setHigh()>
   17f68:	a804      	add	r0, sp, #16
   17f6a:	f7ff fc91 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:192 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17f6e:	f240 114d 	movw	r1, #333	; 0x14d
   17f72:	a805      	add	r0, sp, #20
   17f74:	f7f9 fbb6 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:188 (discriminator 2)
				for(uint8_t i = 0; i < 3; ++i){
   17f78:	e7da      	b.n	17f30 <vControlLED(void*)+0x60c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:195
				out1.setLow();	out2.setLow();	out3.setLow();	out4.setLow();
   17f7a:	f7ff fca1 	bl	178c0 <LabGPIO_1::setLow()>
   17f7e:	a802      	add	r0, sp, #8
   17f80:	f7ff fc9e 	bl	178c0 <LabGPIO_1::setLow()>
   17f84:	a803      	add	r0, sp, #12
   17f86:	f7ff fc9b 	bl	178c0 <LabGPIO_1::setLow()>
   17f8a:	a804      	add	r0, sp, #16
   17f8c:	f7ff fc98 	bl	178c0 <LabGPIO_1::setLow()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:196
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17f90:	f240 114d 	movw	r1, #333	; 0x14d
   17f94:	a805      	add	r0, sp, #20
   17f96:	f7f9 fba5 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:128
			while(btn3){
   17f9a:	783b      	ldrb	r3, [r7, #0]
   17f9c:	2b00      	cmp	r3, #0
   17f9e:	d048      	beq.n	18032 <vControlLED(void*)+0x70e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:130
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17fa0:	a801      	add	r0, sp, #4
   17fa2:	f7ff fc8d 	bl	178c0 <LabGPIO_1::setLow()>
   17fa6:	a802      	add	r0, sp, #8
   17fa8:	f7ff fc72 	bl	17890 <LabGPIO_1::setHigh()>
   17fac:	a803      	add	r0, sp, #12
   17fae:	f7ff fc6f 	bl	17890 <LabGPIO_1::setHigh()>
   17fb2:	a804      	add	r0, sp, #16
   17fb4:	f7ff fc6c 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:131
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17fb8:	f240 114d 	movw	r1, #333	; 0x14d
   17fbc:	a805      	add	r0, sp, #20
   17fbe:	f7f9 fb91 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:132
				out1.setHigh(); out2.setHigh();	out3.setHigh();	out4.setHigh();
   17fc2:	a801      	add	r0, sp, #4
   17fc4:	f7ff fc64 	bl	17890 <LabGPIO_1::setHigh()>
   17fc8:	a802      	add	r0, sp, #8
   17fca:	f7ff fc61 	bl	17890 <LabGPIO_1::setHigh()>
   17fce:	a803      	add	r0, sp, #12
   17fd0:	f7ff fc5e 	bl	17890 <LabGPIO_1::setHigh()>
   17fd4:	a804      	add	r0, sp, #16
   17fd6:	f7ff fc5b 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:133
				vTaskDelayUntil(&xLastWakeTime, (1000/3));
   17fda:	f240 114d 	movw	r1, #333	; 0x14d
   17fde:	a805      	add	r0, sp, #20
   17fe0:	f7f9 fb80 	bl	116e4 <vTaskDelayUntil>
   17fe4:	2403      	movs	r4, #3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:134 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17fe6:	3c01      	subs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:140 (discriminator 3)
				out1.setLow();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   17fe8:	a801      	add	r0, sp, #4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:134 (discriminator 3)
				for(uint8_t i = 0; i < 2; ++i){
   17fea:	f43f ae7a 	beq.w	17ce2 <vControlLED(void*)+0x3be>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:135 (discriminator 2)
					out1.setLow();	out2.setLow();	out3.setHigh();	out4.setHigh();
   17fee:	f7ff fc67 	bl	178c0 <LabGPIO_1::setLow()>
   17ff2:	a802      	add	r0, sp, #8
   17ff4:	f7ff fc64 	bl	178c0 <LabGPIO_1::setLow()>
   17ff8:	a803      	add	r0, sp, #12
   17ffa:	f7ff fc49 	bl	17890 <LabGPIO_1::setHigh()>
   17ffe:	a804      	add	r0, sp, #16
   18000:	f7ff fc46 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:136 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   18004:	f240 114d 	movw	r1, #333	; 0x14d
   18008:	a805      	add	r0, sp, #20
   1800a:	f7f9 fb6b 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:137 (discriminator 2)
					out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   1800e:	a801      	add	r0, sp, #4
   18010:	f7ff fc3e 	bl	17890 <LabGPIO_1::setHigh()>
   18014:	a802      	add	r0, sp, #8
   18016:	f7ff fc3b 	bl	17890 <LabGPIO_1::setHigh()>
   1801a:	a803      	add	r0, sp, #12
   1801c:	f7ff fc38 	bl	17890 <LabGPIO_1::setHigh()>
   18020:	a804      	add	r0, sp, #16
   18022:	f7ff fc35 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:138 (discriminator 2)
					vTaskDelayUntil(&xLastWakeTime, (1000/3));
   18026:	f240 114d 	movw	r1, #333	; 0x14d
   1802a:	a805      	add	r0, sp, #20
   1802c:	f7f9 fb5a 	bl	116e4 <vTaskDelayUntil>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:134 (discriminator 2)
				for(uint8_t i = 0; i < 2; ++i){
   18030:	e7d9      	b.n	17fe6 <vControlLED(void*)+0x6c2>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:198
			}
			if(rst){
   18032:	4b0a      	ldr	r3, [pc, #40]	; (1805c <vControlLED(void*)+0x738>)
   18034:	781b      	ldrb	r3, [r3, #0]
   18036:	b15b      	cbz	r3, 18050 <vControlLED(void*)+0x72c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:199
				out1.setHigh();	out2.setHigh();	out3.setHigh();	out4.setHigh();
   18038:	a801      	add	r0, sp, #4
   1803a:	f7ff fc29 	bl	17890 <LabGPIO_1::setHigh()>
   1803e:	a802      	add	r0, sp, #8
   18040:	f7ff fc26 	bl	17890 <LabGPIO_1::setHigh()>
   18044:	a803      	add	r0, sp, #12
   18046:	f7ff fc23 	bl	17890 <LabGPIO_1::setHigh()>
   1804a:	a804      	add	r0, sp, #16
   1804c:	f7ff fc20 	bl	17890 <LabGPIO_1::setHigh()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:201
			}
			vTaskDelay(500);
   18050:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   18054:	f7f9 fb72 	bl	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:202
		}
   18058:	e4d0      	b.n	179fc <vControlLED(void*)+0xd8>
   1805a:	bf00      	nop
   1805c:	2007c86d 	.word	0x2007c86d

00018060 <vButtonPress(void*)>:
_Z12vButtonPressPv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:347
	xSemaphoreGiveFromISR(button_press_semaphore, &yield);
	//allows blocked tasks to run
	portYIELD_FROM_ISR(yield);
}

void vButtonPress(void *pvParameters){
   18060:	b508      	push	{r3, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:350
	while(1){
		//block waiting for the semaphore to become available
		if(xSemaphoreTake(button_press_semaphore, portMAX_DELAY) == pdTRUE){
   18062:	4c0a      	ldr	r4, [pc, #40]	; (1808c <vButtonPress(void*)+0x2c>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:351
			uart0_puts("ma");
   18064:	4d0a      	ldr	r5, [pc, #40]	; (18090 <vButtonPress(void*)+0x30>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:352
			LPC_GPIO1->FIOCLR = (1 << 1);
   18066:	4e0b      	ldr	r6, [pc, #44]	; (18094 <vButtonPress(void*)+0x34>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:350
		if(xSemaphoreTake(button_press_semaphore, portMAX_DELAY) == pdTRUE){
   18068:	2300      	movs	r3, #0
   1806a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1806e:	4619      	mov	r1, r3
   18070:	6820      	ldr	r0, [r4, #0]
   18072:	f7f8 ffe7 	bl	11044 <xQueueGenericReceive>
   18076:	2801      	cmp	r0, #1
   18078:	d104      	bne.n	18084 <vButtonPress(void*)+0x24>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:351
			uart0_puts("ma");
   1807a:	4628      	mov	r0, r5
   1807c:	f7f8 fc76 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:352
			LPC_GPIO1->FIOCLR = (1 << 1);
   18080:	2302      	movs	r3, #2
   18082:	61f3      	str	r3, [r6, #28]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:354
		}
		vTaskDelay(1);
   18084:	2001      	movs	r0, #1
   18086:	f7f9 fb59 	bl	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:350
		if(xSemaphoreTake(button_press_semaphore, portMAX_DELAY) == pdTRUE){
   1808a:	e7ed      	b.n	18068 <vButtonPress(void*)+0x8>
   1808c:	2007c764 	.word	0x2007c764
   18090:	00020f0d 	.word	0x00020f0d
   18094:	2009c020 	.word	0x2009c020

00018098 <vReadSwitch(void*)>:
_Z11vReadSwitchPv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:207
void vReadSwitch(void *pvParameters){
   18098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:210
	if (param == 0){
   1809c:	4604      	mov	r4, r0
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:207
void vReadSwitch(void *pvParameters){
   1809e:	b086      	sub	sp, #24
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:210
	if (param == 0){
   180a0:	b9e8      	cbnz	r0, 180de <vReadSwitch(void*)+0x46>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:211
		LabGPIO_1 in = LabGPIO_1(1, 20);
   180a2:	2214      	movs	r2, #20
   180a4:	2101      	movs	r1, #1
   180a6:	eb0d 0002 	add.w	r0, sp, r2
   180aa:	f7ff fb97 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:212
		in.setDirection(false);
   180ae:	4621      	mov	r1, r4
   180b0:	a805      	add	r0, sp, #20
   180b2:	f7ff fbc7 	bl	17844 <LabGPIO_1::setDirection(bool)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:215
			toggleDisp ? uart0_puts("0") : uart0_puts("1");
   180b6:	4d72      	ldr	r5, [pc, #456]	; (18280 <vReadSwitch(void*)+0x1e8>)
   180b8:	4e72      	ldr	r6, [pc, #456]	; (18284 <vReadSwitch(void*)+0x1ec>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:217
				pressed = true;
   180ba:	4f73      	ldr	r7, [pc, #460]	; (18288 <vReadSwitch(void*)+0x1f0>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:215
			toggleDisp ? uart0_puts("0") : uart0_puts("1");
   180bc:	b16c      	cbz	r4, 180da <vReadSwitch(void*)+0x42>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:215 (discriminator 1)
   180be:	4630      	mov	r0, r6
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:215 (discriminator 2)
   180c0:	f7f8 fc54 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:216 (discriminator 2)
			if (in.getLevel()){
   180c4:	a805      	add	r0, sp, #20
   180c6:	f7ff fc13 	bl	178f0 <LabGPIO_1::getLevel()>
   180ca:	b110      	cbz	r0, 180d2 <vReadSwitch(void*)+0x3a>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:217
				pressed = true;
   180cc:	2301      	movs	r3, #1
   180ce:	703b      	strb	r3, [r7, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:218
				toggleDisp = toggleDisp ? false : true;
   180d0:	405c      	eors	r4, r3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:220
			vTaskDelay(250);
   180d2:	20fa      	movs	r0, #250	; 0xfa
   180d4:	f7f9 fb32 	bl	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:215
			toggleDisp ? uart0_puts("0") : uart0_puts("1");
   180d8:	e7f0      	b.n	180bc <vReadSwitch(void*)+0x24>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:215 (discriminator 2)
   180da:	4628      	mov	r0, r5
   180dc:	e7f0      	b.n	180c0 <vReadSwitch(void*)+0x28>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:224
	else if (param == 1){
   180de:	2801      	cmp	r0, #1
   180e0:	d11c      	bne.n	1811c <vReadSwitch(void*)+0x84>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:225
		LabGPIO_1 in = LabGPIO_1(1, 10);
   180e2:	4601      	mov	r1, r0
   180e4:	220a      	movs	r2, #10
   180e6:	a805      	add	r0, sp, #20
   180e8:	f7ff fb78 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:226
		in.setAsInput();
   180ec:	a805      	add	r0, sp, #20
   180ee:	f7ff fb79 	bl	177e4 <LabGPIO_1::setAsInput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:227
		bool toggleDisp = false;
   180f2:	2400      	movs	r4, #0
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:229
			toggleDisp ? uart0_puts("1") : uart0_puts("0");
   180f4:	4d63      	ldr	r5, [pc, #396]	; (18284 <vReadSwitch(void*)+0x1ec>)
   180f6:	4e62      	ldr	r6, [pc, #392]	; (18280 <vReadSwitch(void*)+0x1e8>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:231
				pressed = true;
   180f8:	4f63      	ldr	r7, [pc, #396]	; (18288 <vReadSwitch(void*)+0x1f0>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:229
			toggleDisp ? uart0_puts("1") : uart0_puts("0");
   180fa:	b16c      	cbz	r4, 18118 <vReadSwitch(void*)+0x80>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:229 (discriminator 1)
   180fc:	4630      	mov	r0, r6
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:229 (discriminator 2)
   180fe:	f7f8 fc35 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:230 (discriminator 2)
			if (in.getLevel()){
   18102:	a805      	add	r0, sp, #20
   18104:	f7ff fbf4 	bl	178f0 <LabGPIO_1::getLevel()>
   18108:	b110      	cbz	r0, 18110 <vReadSwitch(void*)+0x78>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:231
				pressed = true;
   1810a:	2301      	movs	r3, #1
   1810c:	703b      	strb	r3, [r7, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:232
				toggleDisp = toggleDisp ? false : true;
   1810e:	405c      	eors	r4, r3
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:234
			vTaskDelay(250);
   18110:	20fa      	movs	r0, #250	; 0xfa
   18112:	f7f9 fb13 	bl	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:229
			toggleDisp ? uart0_puts("1") : uart0_puts("0");
   18116:	e7f0      	b.n	180fa <vReadSwitch(void*)+0x62>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:229 (discriminator 2)
   18118:	4628      	mov	r0, r5
   1811a:	e7f0      	b.n	180fe <vReadSwitch(void*)+0x66>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:239
		LabGPIO_1 in1 = LabGPIO_1(1, 9);
   1811c:	2209      	movs	r2, #9
   1811e:	2101      	movs	r1, #1
   18120:	a802      	add	r0, sp, #8
   18122:	f7ff fb5b 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:240
		LabGPIO_1 in2 = LabGPIO_1(1, 14);
   18126:	220e      	movs	r2, #14
   18128:	2101      	movs	r1, #1
   1812a:	a803      	add	r0, sp, #12
   1812c:	f7ff fb56 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:241
		LabGPIO_1 in3 = LabGPIO_1(1, 15);
   18130:	220f      	movs	r2, #15
   18132:	2101      	movs	r1, #1
   18134:	a804      	add	r0, sp, #16
   18136:	f7ff fb51 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:242
		LabGPIO_1 rest = LabGPIO_1(1, 10);
   1813a:	220a      	movs	r2, #10
   1813c:	2101      	movs	r1, #1
   1813e:	a805      	add	r0, sp, #20
   18140:	f7ff fb4c 	bl	177dc <LabGPIO_1::LabGPIO_1(unsigned char, unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:243
		in1.setAsInput();
   18144:	a802      	add	r0, sp, #8
   18146:	f7ff fb4d 	bl	177e4 <LabGPIO_1::setAsInput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:244
		in2.setAsInput();
   1814a:	a803      	add	r0, sp, #12
   1814c:	f7ff fb4a 	bl	177e4 <LabGPIO_1::setAsInput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:249
			if (btn1){
   18150:	f8df 8144 	ldr.w	r8, [pc, #324]	; 18298 <vReadSwitch(void*)+0x200>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:245
		in3.setAsInput();
   18154:	a804      	add	r0, sp, #16
   18156:	f7ff fb45 	bl	177e4 <LabGPIO_1::setAsInput()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:246
		rest.setAsInput();
   1815a:	a805      	add	r0, sp, #20
   1815c:	f7ff fb42 	bl	177e4 <LabGPIO_1::setAsInput()>
   18160:	4646      	mov	r6, r8
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:261
			else if (btn2){
   18162:	4c4a      	ldr	r4, [pc, #296]	; (1828c <vReadSwitch(void*)+0x1f4>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:249
			if (btn1){
   18164:	f898 3000 	ldrb.w	r3, [r8]
   18168:	2b00      	cmp	r3, #0
   1816a:	d034      	beq.n	181d6 <vReadSwitch(void*)+0x13e>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:250
				d.line(2);	//G
   1816c:	2102      	movs	r1, #2
   1816e:	a801      	add	r0, sp, #4
   18170:	f7ff fb08 	bl	17784 <Disp::line(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:251
				d.dot(1);		
   18174:	2101      	movs	r1, #1
   18176:	a801      	add	r0, sp, #4
   18178:	f7ff fb14 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:252
				d.end();	//end letter
   1817c:	a801      	add	r0, sp, #4
   1817e:	f7ff fb21 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:253
				d.dot(2);	//I
   18182:	2102      	movs	r1, #2
   18184:	a801      	add	r0, sp, #4
   18186:	f7ff fb0d 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:254
				d.end();	//end letter
   1818a:	a801      	add	r0, sp, #4
   1818c:	f7ff fb1a 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:255
				d.dot(3);	//V
   18190:	2103      	movs	r1, #3
   18192:	a801      	add	r0, sp, #4
   18194:	f7ff fb06 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:256
				d.line(1);
   18198:	2101      	movs	r1, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:262
				d.line(2);	//M
   1819a:	a801      	add	r0, sp, #4
   1819c:	f7ff faf2 	bl	17784 <Disp::line(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:263
				d.end();	//end letter
   181a0:	a801      	add	r0, sp, #4
   181a2:	f7ff fb0f 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:264
				d.dot(1);	//E
   181a6:	2101      	movs	r1, #1
   181a8:	a801      	add	r0, sp, #4
   181aa:	f7ff fafb 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:265
				d.end();	//end letter
   181ae:	a801      	add	r0, sp, #4
   181b0:	f7ff fb08 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:286
			if (in1.getLevel()){
   181b4:	a802      	add	r0, sp, #8
   181b6:	f7ff fb9b 	bl	178f0 <LabGPIO_1::getLevel()>
   181ba:	4607      	mov	r7, r0
   181bc:	2800      	cmp	r0, #0
   181be:	d046      	beq.n	1824e <vReadSwitch(void*)+0x1b6>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:287
				btn1 = true;
   181c0:	2301      	movs	r3, #1
   181c2:	7033      	strb	r3, [r6, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:288
				btn2 = btn3 = false;
   181c4:	2300      	movs	r3, #0
   181c6:	4a32      	ldr	r2, [pc, #200]	; (18290 <vReadSwitch(void*)+0x1f8>)
   181c8:	7023      	strb	r3, [r4, #0]
   181ca:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:300
			vTaskDelay(500);
   181cc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   181d0:	f7f9 fab4 	bl	1173c <vTaskDelay>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:249
			if (btn1){
   181d4:	e7c6      	b.n	18164 <vReadSwitch(void*)+0xcc>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:261
			else if (btn2){
   181d6:	7825      	ldrb	r5, [r4, #0]
   181d8:	b10d      	cbz	r5, 181de <vReadSwitch(void*)+0x146>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:262
				d.line(2);	//M
   181da:	2102      	movs	r1, #2
   181dc:	e7dd      	b.n	1819a <vReadSwitch(void*)+0x102>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:267
			else if (btn3){
   181de:	4b2c      	ldr	r3, [pc, #176]	; (18290 <vReadSwitch(void*)+0x1f8>)
   181e0:	781b      	ldrb	r3, [r3, #0]
   181e2:	b383      	cbz	r3, 18246 <vReadSwitch(void*)+0x1ae>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:268
				d.dot(0);	//P
   181e4:	4629      	mov	r1, r5
   181e6:	a801      	add	r0, sp, #4
   181e8:	f7ff fadc 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:269
				d.line(2);	
   181ec:	2102      	movs	r1, #2
   181ee:	a801      	add	r0, sp, #4
   181f0:	f7ff fac8 	bl	17784 <Disp::line(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:270
				d.dot(0);
   181f4:	4629      	mov	r1, r5
   181f6:	a801      	add	r0, sp, #4
   181f8:	f7ff fad4 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:271
				d.end();	//end letter
   181fc:	a801      	add	r0, sp, #4
   181fe:	f7ff fae1 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:272
				d.line(3);	//O
   18202:	2103      	movs	r1, #3
   18204:	a801      	add	r0, sp, #4
   18206:	f7ff fabd 	bl	17784 <Disp::line(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:273
				d.end();	//end letter
   1820a:	a801      	add	r0, sp, #4
   1820c:	f7ff fada 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:274
				d.dot(2);	//I
   18210:	2102      	movs	r1, #2
   18212:	a801      	add	r0, sp, #4
   18214:	f7ff fac6 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:275
				d.end();	//end letter
   18218:	a801      	add	r0, sp, #4
   1821a:	f7ff fad3 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:276
				d.line(1);	//N
   1821e:	2101      	movs	r1, #1
   18220:	a801      	add	r0, sp, #4
   18222:	f7ff faaf 	bl	17784 <Disp::line(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:277
				d.dot(0);
   18226:	4629      	mov	r1, r5
   18228:	a801      	add	r0, sp, #4
   1822a:	f7ff fabb 	bl	177a4 <Disp::dot(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:278
				d.end();	//end letter
   1822e:	a801      	add	r0, sp, #4
   18230:	f7ff fac8 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:279
				d.line(1);	//T
   18234:	2101      	movs	r1, #1
   18236:	a801      	add	r0, sp, #4
   18238:	f7ff faa4 	bl	17784 <Disp::line(unsigned char)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:280
				d.end();	//end letter
   1823c:	a801      	add	r0, sp, #4
   1823e:	f7ff fac1 	bl	177c4 <Disp::end()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:281
				d.dot(3);	//S
   18242:	2103      	movs	r1, #3
   18244:	e7b0      	b.n	181a8 <vReadSwitch(void*)+0x110>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:285
				d.none();
   18246:	a801      	add	r0, sp, #4
   18248:	f7ff fac2 	bl	177d0 <Disp::none()>
   1824c:	e7b2      	b.n	181b4 <vReadSwitch(void*)+0x11c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:290
			else if (in2.getLevel()){
   1824e:	a803      	add	r0, sp, #12
   18250:	f7ff fb4e 	bl	178f0 <LabGPIO_1::getLevel()>
   18254:	4605      	mov	r5, r0
   18256:	b128      	cbz	r0, 18264 <vReadSwitch(void*)+0x1cc>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:291
				btn2 = true;
   18258:	2301      	movs	r3, #1
   1825a:	7023      	strb	r3, [r4, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:292
				btn1 = btn3 = false;
   1825c:	4b0c      	ldr	r3, [pc, #48]	; (18290 <vReadSwitch(void*)+0x1f8>)
   1825e:	7037      	strb	r7, [r6, #0]
   18260:	701f      	strb	r7, [r3, #0]
   18262:	e7b3      	b.n	181cc <vReadSwitch(void*)+0x134>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:294
			else if (in3.getLevel()){
   18264:	a804      	add	r0, sp, #16
   18266:	f7ff fb43 	bl	178f0 <LabGPIO_1::getLevel()>
   1826a:	2301      	movs	r3, #1
   1826c:	b120      	cbz	r0, 18278 <vReadSwitch(void*)+0x1e0>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:295
				btn3 = true;
   1826e:	4a08      	ldr	r2, [pc, #32]	; (18290 <vReadSwitch(void*)+0x1f8>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:296
				btn1 = btn2 = false;
   18270:	7025      	strb	r5, [r4, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:295
				btn3 = true;
   18272:	7013      	strb	r3, [r2, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:296
				btn1 = btn2 = false;
   18274:	7035      	strb	r5, [r6, #0]
   18276:	e7a9      	b.n	181cc <vReadSwitch(void*)+0x134>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:299
				rst = true;
   18278:	4a06      	ldr	r2, [pc, #24]	; (18294 <vReadSwitch(void*)+0x1fc>)
   1827a:	7013      	strb	r3, [r2, #0]
   1827c:	e7a6      	b.n	181cc <vReadSwitch(void*)+0x134>
   1827e:	bf00      	nop
   18280:	00020ef3 	.word	0x00020ef3
   18284:	00020f03 	.word	0x00020f03
   18288:	2007c86c 	.word	0x2007c86c
   1828c:	2007c761 	.word	0x2007c761
   18290:	2007c762 	.word	0x2007c762
   18294:	2007c86d 	.word	0x2007c86d
   18298:	2007c760 	.word	0x2007c760

0001829c <Eint3Handler()>:
_Z12Eint3Handlerv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:334
	intr.HandleInterrupt();
   1829c:	4801      	ldr	r0, [pc, #4]	; (182a4 <Eint3Handler()+0x8>)
   1829e:	f7ff ba55 	b.w	1774c <GpioInterrupt::HandleInterrupt()>
   182a2:	bf00      	nop
   182a4:	2007c768 	.word	0x2007c768

000182a8 <extBtnISR()>:
_Z9extBtnISRv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:360
	}
	vTaskDelete(NULL);
}

void extBtnISR(void){
	long yield = 0;
   182a8:	2300      	movs	r3, #0
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:359
void extBtnISR(void){
   182aa:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:360
	long yield = 0;
   182ac:	a902      	add	r1, sp, #8
   182ae:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:361
	xSemaphoreGiveFromISR(led_sema, &yield);
   182b2:	4b0b      	ldr	r3, [pc, #44]	; (182e0 <extBtnISR()+0x38>)
   182b4:	6818      	ldr	r0, [r3, #0]
   182b6:	f7f8 fe91 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:362
	pressed = true;
   182ba:	2201      	movs	r2, #1
   182bc:	4b09      	ldr	r3, [pc, #36]	; (182e4 <extBtnISR()+0x3c>)
   182be:	701a      	strb	r2, [r3, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:363
	portYIELD_FROM_ISR(yield);	//unblocks vControlLED
   182c0:	9b01      	ldr	r3, [sp, #4]
   182c2:	b13b      	cbz	r3, 182d4 <extBtnISR()+0x2c>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:363 (discriminator 1)
   182c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   182c8:	4b07      	ldr	r3, [pc, #28]	; (182e8 <extBtnISR()+0x40>)
   182ca:	601a      	str	r2, [r3, #0]
   182cc:	f3bf 8f4f 	dsb	sy
   182d0:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:364
	uart0_puts("EC");
   182d4:	4805      	ldr	r0, [pc, #20]	; (182ec <extBtnISR()+0x44>)
   182d6:	f7f8 fb49 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:365
}
   182da:	b003      	add	sp, #12
   182dc:	f85d fb04 	ldr.w	pc, [sp], #4
   182e0:	2007c868 	.word	0x2007c868
   182e4:	2007c86c 	.word	0x2007c86c
   182e8:	e000ed04 	.word	0xe000ed04
   182ec:	00020f08 	.word	0x00020f08

000182f0 <myButtonPressISR()>:
_Z16myButtonPressISRv():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:337
void myButtonPressISR(void) {
   182f0:	b507      	push	{r0, r1, r2, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:338
	LPC_GPIO1->FIOCLR = (1 << 8);
   182f2:	f44f 7280 	mov.w	r2, #256	; 0x100
   182f6:	4b0d      	ldr	r3, [pc, #52]	; (1832c <myButtonPressISR()+0x3c>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:339
	uart0_puts("Se");
   182f8:	480d      	ldr	r0, [pc, #52]	; (18330 <myButtonPressISR()+0x40>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:338
	LPC_GPIO1->FIOCLR = (1 << 8);
   182fa:	61da      	str	r2, [r3, #28]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:339
	uart0_puts("Se");
   182fc:	f7f8 fb36 	bl	1096c <uart0_puts>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:340
	long yield = 0;
   18300:	2300      	movs	r3, #0
   18302:	a902      	add	r1, sp, #8
   18304:	f841 3d04 	str.w	r3, [r1, #-4]!
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:342
	xSemaphoreGiveFromISR(button_press_semaphore, &yield);
   18308:	4b0a      	ldr	r3, [pc, #40]	; (18334 <myButtonPressISR()+0x44>)
   1830a:	6818      	ldr	r0, [r3, #0]
   1830c:	f7f8 fe66 	bl	10fdc <xQueueGiveFromISR>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:344
	portYIELD_FROM_ISR(yield);
   18310:	9b01      	ldr	r3, [sp, #4]
   18312:	b13b      	cbz	r3, 18324 <myButtonPressISR()+0x34>
   18314:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18318:	4b07      	ldr	r3, [pc, #28]	; (18338 <myButtonPressISR()+0x48>)
   1831a:	601a      	str	r2, [r3, #0]
   1831c:	f3bf 8f4f 	dsb	sy
   18320:	f3bf 8f6f 	isb	sy
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:345
}
   18324:	b003      	add	sp, #12
   18326:	f85d fb04 	ldr.w	pc, [sp], #4
   1832a:	bf00      	nop
   1832c:	2009c020 	.word	0x2009c020
   18330:	00020f05 	.word	0x00020f05
   18334:	2007c764 	.word	0x2007c764
   18338:	e000ed04 	.word	0xe000ed04

0001833c <main>:
main():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:367

int main(int argc, char const *argv[]) {
   1833c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:379
	isr_register(EINT3_IRQn, Eint3Handler);
	//can only have 1 pin connection per interrupt port
	//intr.AttachInterruptHandler(0, 0, manHandleRise, kRisingEdge);
	//intr.AttachInterruptHandler(2, 0, manHandleEdge, kBothEdges);

	intr.AttachInterruptHandler(2, 0, myButtonPressISR, kRisingEdge);	//sema
   1833e:	2600      	movs	r6, #0
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:380
	intr.AttachInterruptHandler(0, 0, extBtnISR, kFallingEdge);		//EC sema
   18340:	2401      	movs	r4, #1
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:373
	intr.Initialize();
   18342:	482b      	ldr	r0, [pc, #172]	; (183f0 <main+0xb4>)
   18344:	f7ff f9b4 	bl	176b0 <GpioInterrupt::Initialize()>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:374
	isr_register(EINT3_IRQn, Eint3Handler);
   18348:	492a      	ldr	r1, [pc, #168]	; (183f4 <main+0xb8>)
   1834a:	2015      	movs	r0, #21
   1834c:	f7f8 f99e 	bl	1068c <isr_register>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:379
	intr.AttachInterruptHandler(2, 0, myButtonPressISR, kRisingEdge);	//sema
   18350:	4b29      	ldr	r3, [pc, #164]	; (183f8 <main+0xbc>)
   18352:	4632      	mov	r2, r6
   18354:	2102      	movs	r1, #2
   18356:	9600      	str	r6, [sp, #0]
   18358:	4825      	ldr	r0, [pc, #148]	; (183f0 <main+0xb4>)
   1835a:	f7ff f9b1 	bl	176c0 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:380
	intr.AttachInterruptHandler(0, 0, extBtnISR, kFallingEdge);		//EC sema
   1835e:	4b27      	ldr	r3, [pc, #156]	; (183fc <main+0xc0>)
   18360:	4632      	mov	r2, r6
   18362:	4631      	mov	r1, r6
   18364:	9400      	str	r4, [sp, #0]
   18366:	4822      	ldr	r0, [pc, #136]	; (183f0 <main+0xb4>)
   18368:	f7ff f9aa 	bl	176c0 <GpioInterrupt::AttachInterruptHandler(unsigned char, unsigned long, void (*)(), InterruptCondition)>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:384

	//tasks
	const uint32_t STACK_SIZE = 1024;
	TaskHandle_t xHandle = NULL;
   1836c:	ad04      	add	r5, sp, #16
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:387
	
	//semaphore
	button_press_semaphore = xSemaphoreCreateBinary();	//for synchronization
   1836e:	2203      	movs	r2, #3
   18370:	4631      	mov	r1, r6
   18372:	4620      	mov	r0, r4
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:384
	TaskHandle_t xHandle = NULL;
   18374:	f845 6d04 	str.w	r6, [r5, #-4]!
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:387
	button_press_semaphore = xSemaphoreCreateBinary();	//for synchronization
   18378:	f7f8 fd42 	bl	10e00 <xQueueGenericCreate>
   1837c:	4b20      	ldr	r3, [pc, #128]	; (18400 <main+0xc4>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:388
	xTaskCreate(vButtonPress, "Sema", STACK_SIZE, (void*) 1, 1, &xHandle);
   1837e:	f44f 6280 	mov.w	r2, #1024	; 0x400
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:387
	button_press_semaphore = xSemaphoreCreateBinary();	//for synchronization
   18382:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:388
	xTaskCreate(vButtonPress, "Sema", STACK_SIZE, (void*) 1, 1, &xHandle);
   18384:	491f      	ldr	r1, [pc, #124]	; (18404 <main+0xc8>)
   18386:	4623      	mov	r3, r4
   18388:	e88d 0030 	stmia.w	sp, {r4, r5}
   1838c:	481e      	ldr	r0, [pc, #120]	; (18408 <main+0xcc>)
   1838e:	f7f8 ff9f 	bl	112d0 <xTaskCreate>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:390
	//EC semaphore
	led_sema = xSemaphoreCreateBinary();
   18392:	2203      	movs	r2, #3
   18394:	4631      	mov	r1, r6
   18396:	4620      	mov	r0, r4
   18398:	f7f8 fd32 	bl	10e00 <xQueueGenericCreate>
   1839c:	4b1b      	ldr	r3, [pc, #108]	; (1840c <main+0xd0>)
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:393

	//internal
	xTaskCreate(vControlLED, "IntBut", STACK_SIZE, (void*) 1, 1, &xHandle);
   1839e:	f44f 6280 	mov.w	r2, #1024	; 0x400
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:390
	led_sema = xSemaphoreCreateBinary();
   183a2:	6018      	str	r0, [r3, #0]
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:393
	xTaskCreate(vControlLED, "IntBut", STACK_SIZE, (void*) 1, 1, &xHandle);
   183a4:	491a      	ldr	r1, [pc, #104]	; (18410 <main+0xd4>)
   183a6:	4623      	mov	r3, r4
   183a8:	e88d 0030 	stmia.w	sp, {r4, r5}
   183ac:	4819      	ldr	r0, [pc, #100]	; (18414 <main+0xd8>)
   183ae:	f7f8 ff8f 	bl	112d0 <xTaskCreate>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:394
	xTaskCreate(vReadSwitch, "IntLED", STACK_SIZE, (void*) 1, 1, &xHandle);
   183b2:	4623      	mov	r3, r4
   183b4:	f44f 6280 	mov.w	r2, #1024	; 0x400
   183b8:	4917      	ldr	r1, [pc, #92]	; (18418 <main+0xdc>)
   183ba:	e88d 0030 	stmia.w	sp, {r4, r5}
   183be:	4817      	ldr	r0, [pc, #92]	; (1841c <main+0xe0>)
   183c0:	f7f8 ff86 	bl	112d0 <xTaskCreate>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:399
	//external 
	//xTaskCreate(vControlLED, "ExtBut", STACK_SIZE, (void*) 0, 1, &xHandle);
	//xTaskCreate(vReadSwitch, "ExtLED", STACK_SIZE, (void*) 0, 1, &xHandle);
	//extra credit: Morse Code: "Give me points"
	xTaskCreate(vControlLED, "ECBut", STACK_SIZE, (void*) 2, 1, &xHandle);
   183c4:	2302      	movs	r3, #2
   183c6:	f44f 6280 	mov.w	r2, #1024	; 0x400
   183ca:	4915      	ldr	r1, [pc, #84]	; (18420 <main+0xe4>)
   183cc:	e88d 0030 	stmia.w	sp, {r4, r5}
   183d0:	4810      	ldr	r0, [pc, #64]	; (18414 <main+0xd8>)
   183d2:	f7f8 ff7d 	bl	112d0 <xTaskCreate>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:400
	xTaskCreate(vReadSwitch, "ECLED", STACK_SIZE, (void*) 2, 1, &xHandle);
   183d6:	2302      	movs	r3, #2
   183d8:	f44f 6280 	mov.w	r2, #1024	; 0x400
   183dc:	4911      	ldr	r1, [pc, #68]	; (18424 <main+0xe8>)
   183de:	e88d 0030 	stmia.w	sp, {r4, r5}
   183e2:	480e      	ldr	r0, [pc, #56]	; (1841c <main+0xe0>)
   183e4:	f7f8 ff74 	bl	112d0 <xTaskCreate>
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:410
	//NVIC_EnableIRQ(EINT3_IRQn);

	//LPC_GPIOINT->IO0IntEnR |= (1 << 0);		//lower button
	//LPC_GPIOINT->IO2IntEnR |= (1 << 1);		//upper button

	vTaskStartScheduler();
   183e8:	f7f9 f844 	bl	11474 <vTaskStartScheduler>
   183ec:	e7fe      	b.n	183ec <main+0xb0>
   183ee:	bf00      	nop
   183f0:	2007c768 	.word	0x2007c768
   183f4:	0001829d 	.word	0x0001829d
   183f8:	000182f1 	.word	0x000182f1
   183fc:	000182a9 	.word	0x000182a9
   18400:	2007c764 	.word	0x2007c764
   18404:	00020f0b 	.word	0x00020f0b
   18408:	00018061 	.word	0x00018061
   1840c:	2007c868 	.word	0x2007c868
   18410:	00020f10 	.word	0x00020f10
   18414:	00017925 	.word	0x00017925
   18418:	00020f17 	.word	0x00020f17
   1841c:	00018099 	.word	0x00018099
   18420:	00020f1e 	.word	0x00020f1e
   18424:	00020f24 	.word	0x00020f24

00018428 <_GLOBAL__sub_I_pressed>:
_GLOBAL__sub_I_pressed():
/home/bionia/SJSU-DEV/firmware/Labs/L2EINT/L5_Application/main.cpp:307
GpioInterrupt intr;
   18428:	4801      	ldr	r0, [pc, #4]	; (18430 <_GLOBAL__sub_I_pressed+0x8>)
   1842a:	f7ff b940 	b.w	176ae <GpioInterrupt::GpioInterrupt()>
   1842e:	bf00      	nop
   18430:	2007c768 	.word	0x2007c768

00018434 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   18434:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   18436:	2310      	movs	r3, #16
   18438:	2400      	movs	r4, #0
   1843a:	9302      	str	r3, [sp, #8]
   1843c:	6803      	ldr	r3, [r0, #0]
   1843e:	4615      	mov	r5, r2
   18440:	699e      	ldr	r6, [r3, #24]
   18442:	9400      	str	r4, [sp, #0]
   18444:	466b      	mov	r3, sp
   18446:	f88d 4004 	strb.w	r4, [sp, #4]
   1844a:	9403      	str	r4, [sp, #12]
   1844c:	6812      	ldr	r2, [r2, #0]
   1844e:	47b0      	blx	r6
   18450:	f89d 3004 	ldrb.w	r3, [sp, #4]
   18454:	f003 0306 	and.w	r3, r3, #6
   18458:	2b06      	cmp	r3, #6
   1845a:	bf09      	itett	eq
   1845c:	2001      	moveq	r0, #1
   1845e:	4620      	movne	r0, r4
   18460:	9b00      	ldreq	r3, [sp, #0]
   18462:	602b      	streq	r3, [r5, #0]
   18464:	b004      	add	sp, #16
   18466:	bd70      	pop	{r4, r5, r6, pc}

00018468 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   18468:	9800      	ldr	r0, [sp, #0]
   1846a:	4290      	cmp	r0, r2
   1846c:	bf0c      	ite	eq
   1846e:	2006      	moveq	r0, #6
   18470:	2001      	movne	r0, #1
   18472:	4770      	bx	lr

00018474 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD2Ev():
   18474:	b510      	push	{r4, lr}
   18476:	4604      	mov	r4, r0
   18478:	4b02      	ldr	r3, [pc, #8]	; (18484 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1847a:	6003      	str	r3, [r0, #0]
   1847c:	f000 fb25 	bl	18aca <std::type_info::~type_info()>
   18480:	4620      	mov	r0, r4
   18482:	bd10      	pop	{r4, pc}
   18484:	00020f64 	.word	0x00020f64

00018488 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   18488:	b510      	push	{r4, lr}
   1848a:	4604      	mov	r4, r0
   1848c:	f7ff fff2 	bl	18474 <__cxxabiv1::__class_type_info::~__class_type_info()>
   18490:	4620      	mov	r0, r4
   18492:	2108      	movs	r1, #8
   18494:	f000 f8c3 	bl	1861e <operator delete(void*, unsigned int)>
   18498:	4620      	mov	r0, r4
   1849a:	bd10      	pop	{r4, pc}

0001849c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1849c:	b538      	push	{r3, r4, r5, lr}
   1849e:	4615      	mov	r5, r2
   184a0:	461c      	mov	r4, r3
   184a2:	f000 fb15 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   184a6:	b120      	cbz	r0, 184b2 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
   184a8:	2308      	movs	r3, #8
   184aa:	60e3      	str	r3, [r4, #12]
   184ac:	2306      	movs	r3, #6
   184ae:	6025      	str	r5, [r4, #0]
   184b0:	7123      	strb	r3, [r4, #4]
   184b2:	bd38      	pop	{r3, r4, r5, pc}

000184b4 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   184b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   184b8:	4605      	mov	r5, r0
   184ba:	460c      	mov	r4, r1
   184bc:	4616      	mov	r6, r2
   184be:	461f      	mov	r7, r3
   184c0:	f000 fb06 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   184c4:	b948      	cbnz	r0, 184da <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   184c6:	2f03      	cmp	r7, #3
   184c8:	d807      	bhi.n	184da <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
   184ca:	6823      	ldr	r3, [r4, #0]
   184cc:	4632      	mov	r2, r6
   184ce:	4629      	mov	r1, r5
   184d0:	4620      	mov	r0, r4
   184d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   184d6:	695b      	ldr	r3, [r3, #20]
   184d8:	4718      	bx	r3
   184da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000184de <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   184de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   184e2:	9e06      	ldr	r6, [sp, #24]
   184e4:	4698      	mov	r8, r3
   184e6:	9b08      	ldr	r3, [sp, #32]
   184e8:	4607      	mov	r7, r0
   184ea:	429e      	cmp	r6, r3
   184ec:	4615      	mov	r5, r2
   184ee:	9c09      	ldr	r4, [sp, #36]	; 0x24
   184f0:	d103      	bne.n	184fa <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   184f2:	9907      	ldr	r1, [sp, #28]
   184f4:	f000 faec 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   184f8:	b958      	cbnz	r0, 18512 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   184fa:	4641      	mov	r1, r8
   184fc:	4638      	mov	r0, r7
   184fe:	f000 fae7 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   18502:	b118      	cbz	r0, 1850c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   18504:	2301      	movs	r3, #1
   18506:	6026      	str	r6, [r4, #0]
   18508:	7125      	strb	r5, [r4, #4]
   1850a:	71a3      	strb	r3, [r4, #6]
   1850c:	2000      	movs	r0, #0
   1850e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18512:	7165      	strb	r5, [r4, #5]
   18514:	e7fa      	b.n	1850c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
   18516:	Address 0x0000000000018516 is out of bounds.


00018518 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD1Ev():
   18518:	b510      	push	{r4, lr}
   1851a:	4604      	mov	r4, r0
   1851c:	4b02      	ldr	r3, [pc, #8]	; (18528 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1851e:	6003      	str	r3, [r0, #0]
   18520:	f7ff ffa8 	bl	18474 <__cxxabiv1::__class_type_info::~__class_type_info()>
   18524:	4620      	mov	r0, r4
   18526:	bd10      	pop	{r4, pc}
   18528:	00020fc4 	.word	0x00020fc4

0001852c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1852c:	b510      	push	{r4, lr}
   1852e:	4604      	mov	r4, r0
   18530:	f7ff fff2 	bl	18518 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   18534:	4620      	mov	r0, r4
   18536:	210c      	movs	r1, #12
   18538:	f000 f871 	bl	1861e <operator delete(void*, unsigned int)>
   1853c:	4620      	mov	r0, r4
   1853e:	bd10      	pop	{r4, pc}

00018540 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   18540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18544:	9e06      	ldr	r6, [sp, #24]
   18546:	4680      	mov	r8, r0
   18548:	4296      	cmp	r6, r2
   1854a:	460f      	mov	r7, r1
   1854c:	4614      	mov	r4, r2
   1854e:	461d      	mov	r5, r3
   18550:	d103      	bne.n	1855a <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
   18552:	4619      	mov	r1, r3
   18554:	f000 fabc 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   18558:	b958      	cbnz	r0, 18572 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
   1855a:	f8d8 0008 	ldr.w	r0, [r8, #8]
   1855e:	4622      	mov	r2, r4
   18560:	6803      	ldr	r3, [r0, #0]
   18562:	9606      	str	r6, [sp, #24]
   18564:	6a1e      	ldr	r6, [r3, #32]
   18566:	4639      	mov	r1, r7
   18568:	462b      	mov	r3, r5
   1856a:	46b4      	mov	ip, r6
   1856c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18570:	4760      	bx	ip
   18572:	2006      	movs	r0, #6
   18574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00018578 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   18578:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1857c:	460e      	mov	r6, r1
   1857e:	4619      	mov	r1, r3
   18580:	4683      	mov	fp, r0
   18582:	4617      	mov	r7, r2
   18584:	4699      	mov	r9, r3
   18586:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   18588:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   1858c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   18590:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   18592:	f000 fa9d 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   18596:	b190      	cbz	r0, 185be <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x46>
   18598:	2e00      	cmp	r6, #0
   1859a:	602c      	str	r4, [r5, #0]
   1859c:	712f      	strb	r7, [r5, #4]
   1859e:	db09      	blt.n	185b4 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x3c>
   185a0:	4434      	add	r4, r6
   185a2:	45a0      	cmp	r8, r4
   185a4:	bf0c      	ite	eq
   185a6:	2406      	moveq	r4, #6
   185a8:	2401      	movne	r4, #1
   185aa:	71ac      	strb	r4, [r5, #6]
   185ac:	2000      	movs	r0, #0
   185ae:	b001      	add	sp, #4
   185b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185b4:	3602      	adds	r6, #2
   185b6:	d1f9      	bne.n	185ac <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   185b8:	2301      	movs	r3, #1
   185ba:	71ab      	strb	r3, [r5, #6]
   185bc:	e7f6      	b.n	185ac <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>
   185be:	4544      	cmp	r4, r8
   185c0:	d104      	bne.n	185cc <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   185c2:	4651      	mov	r1, sl
   185c4:	4658      	mov	r0, fp
   185c6:	f000 fa83 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   185ca:	b988      	cbnz	r0, 185f0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x78>
   185cc:	f8db 0008 	ldr.w	r0, [fp, #8]
   185d0:	463a      	mov	r2, r7
   185d2:	6803      	ldr	r3, [r0, #0]
   185d4:	950d      	str	r5, [sp, #52]	; 0x34
   185d6:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
   185da:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   185de:	940a      	str	r4, [sp, #40]	; 0x28
   185e0:	69dc      	ldr	r4, [r3, #28]
   185e2:	4631      	mov	r1, r6
   185e4:	464b      	mov	r3, r9
   185e6:	46a4      	mov	ip, r4
   185e8:	b001      	add	sp, #4
   185ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185ee:	4760      	bx	ip
   185f0:	716f      	strb	r7, [r5, #5]
   185f2:	e7db      	b.n	185ac <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x34>

000185f4 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   185f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   185f8:	4604      	mov	r4, r0
   185fa:	460d      	mov	r5, r1
   185fc:	4616      	mov	r6, r2
   185fe:	461f      	mov	r7, r3
   18600:	f7ff ff4c 	bl	1849c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   18604:	b948      	cbnz	r0, 1861a <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
   18606:	68a0      	ldr	r0, [r4, #8]
   18608:	4632      	mov	r2, r6
   1860a:	6803      	ldr	r3, [r0, #0]
   1860c:	4629      	mov	r1, r5
   1860e:	699c      	ldr	r4, [r3, #24]
   18610:	463b      	mov	r3, r7
   18612:	46a4      	mov	ip, r4
   18614:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18618:	4760      	bx	ip
   1861a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001861e <operator delete(void*, unsigned int)>:
_ZdlPvj():
   1861e:	f7fe bdf9 	b.w	17214 <operator delete(void*)>

00018622 <__cxa_guard_acquire>:
__cxa_guard_acquire():
   18622:	6803      	ldr	r3, [r0, #0]
   18624:	07db      	lsls	r3, r3, #31
   18626:	d406      	bmi.n	18636 <__cxa_guard_acquire+0x14>
   18628:	7843      	ldrb	r3, [r0, #1]
   1862a:	b103      	cbz	r3, 1862e <__cxa_guard_acquire+0xc>
   1862c:	deff      	udf	#255	; 0xff
   1862e:	2301      	movs	r3, #1
   18630:	7043      	strb	r3, [r0, #1]
   18632:	4618      	mov	r0, r3
   18634:	4770      	bx	lr
   18636:	2000      	movs	r0, #0
   18638:	4770      	bx	lr

0001863a <__cxa_guard_release>:
__cxa_guard_release():
   1863a:	2301      	movs	r3, #1
   1863c:	6003      	str	r3, [r0, #0]
   1863e:	4770      	bx	lr

00018640 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   18640:	b508      	push	{r3, lr}
   18642:	f000 fa67 	bl	18b14 <std::terminate()>
   18646:	Address 0x0000000000018646 is out of bounds.


00018648 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD2Ev():
   18648:	b510      	push	{r4, lr}
   1864a:	4604      	mov	r4, r0
   1864c:	4b02      	ldr	r3, [pc, #8]	; (18658 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1864e:	6003      	str	r3, [r0, #0]
   18650:	f7ff ff10 	bl	18474 <__cxxabiv1::__class_type_info::~__class_type_info()>
   18654:	4620      	mov	r0, r4
   18656:	bd10      	pop	{r4, pc}
   18658:	00021024 	.word	0x00021024

0001865c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1865c:	b510      	push	{r4, lr}
   1865e:	4604      	mov	r4, r0
   18660:	f7ff fff2 	bl	18648 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   18664:	4620      	mov	r0, r4
   18666:	2118      	movs	r1, #24
   18668:	f7ff ffd9 	bl	1861e <operator delete(void*, unsigned int)>
   1866c:	4620      	mov	r0, r4
   1866e:	bd10      	pop	{r4, pc}

00018670 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   18670:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18674:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   18678:	4604      	mov	r4, r0
   1867a:	454a      	cmp	r2, r9
   1867c:	460f      	mov	r7, r1
   1867e:	4616      	mov	r6, r2
   18680:	4698      	mov	r8, r3
   18682:	d103      	bne.n	1868c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1c>
   18684:	4619      	mov	r1, r3
   18686:	f000 fa23 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   1868a:	bb38      	cbnz	r0, 186dc <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1868c:	68e5      	ldr	r5, [r4, #12]
   1868e:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   18692:	e001      	b.n	18698 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
   18694:	3d01      	subs	r5, #1
   18696:	3c08      	subs	r4, #8
   18698:	b315      	cbz	r5, 186e0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
   1869a:	68e3      	ldr	r3, [r4, #12]
   1869c:	079a      	lsls	r2, r3, #30
   1869e:	d5f9      	bpl.n	18694 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   186a0:	f013 0a01 	ands.w	sl, r3, #1
   186a4:	ea4f 2223 	mov.w	r2, r3, asr #8
   186a8:	d003      	beq.n	186b2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x42>
   186aa:	1cfb      	adds	r3, r7, #3
   186ac:	d0f2      	beq.n	18694 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   186ae:	6833      	ldr	r3, [r6, #0]
   186b0:	589a      	ldr	r2, [r3, r2]
   186b2:	68a0      	ldr	r0, [r4, #8]
   186b4:	4432      	add	r2, r6
   186b6:	6803      	ldr	r3, [r0, #0]
   186b8:	f8cd 9000 	str.w	r9, [sp]
   186bc:	f8d3 b020 	ldr.w	fp, [r3, #32]
   186c0:	4639      	mov	r1, r7
   186c2:	4643      	mov	r3, r8
   186c4:	47d8      	blx	fp
   186c6:	2803      	cmp	r0, #3
   186c8:	dde4      	ble.n	18694 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   186ca:	f1ba 0f00 	cmp.w	sl, #0
   186ce:	d002      	beq.n	186d6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   186d0:	f040 0001 	orr.w	r0, r0, #1
   186d4:	b2c0      	uxtb	r0, r0
   186d6:	b003      	add	sp, #12
   186d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186dc:	2006      	movs	r0, #6
   186de:	e7fa      	b.n	186d6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>
   186e0:	2001      	movs	r0, #1
   186e2:	e7f8      	b.n	186d6 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x66>

000186e4 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   186e4:	b4f0      	push	{r4, r5, r6, r7}
   186e6:	1e0e      	subs	r6, r1, #0
   186e8:	9c04      	ldr	r4, [sp, #16]
   186ea:	db06      	blt.n	186fa <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x16>
   186ec:	1990      	adds	r0, r2, r6
   186ee:	4284      	cmp	r4, r0
   186f0:	bf14      	ite	ne
   186f2:	2001      	movne	r0, #1
   186f4:	2006      	moveq	r0, #6
   186f6:	bcf0      	pop	{r4, r5, r6, r7}
   186f8:	4770      	bx	lr
   186fa:	3602      	adds	r6, #2
   186fc:	d005      	beq.n	1870a <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
   186fe:	6805      	ldr	r5, [r0, #0]
   18700:	9404      	str	r4, [sp, #16]
   18702:	6a2c      	ldr	r4, [r5, #32]
   18704:	46a4      	mov	ip, r4
   18706:	bcf0      	pop	{r4, r5, r6, r7}
   18708:	4760      	bx	ip
   1870a:	2001      	movs	r0, #1
   1870c:	e7f3      	b.n	186f6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x12>

0001870e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1870e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18712:	b091      	sub	sp, #68	; 0x44
   18714:	9c1d      	ldr	r4, [sp, #116]	; 0x74
   18716:	9308      	str	r3, [sp, #32]
   18718:	68a3      	ldr	r3, [r4, #8]
   1871a:	4688      	mov	r8, r1
   1871c:	06d9      	lsls	r1, r3, #27
   1871e:	bf48      	it	mi
   18720:	6883      	ldrmi	r3, [r0, #8]
   18722:	9207      	str	r2, [sp, #28]
   18724:	bf48      	it	mi
   18726:	60a3      	strmi	r3, [r4, #8]
   18728:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1872a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1872c:	4681      	mov	r9, r0
   1872e:	4293      	cmp	r3, r2
   18730:	d105      	bne.n	1873e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   18732:	991b      	ldr	r1, [sp, #108]	; 0x6c
   18734:	f000 f9cc 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   18738:	2800      	cmp	r0, #0
   1873a:	f040 8119 	bne.w	18970 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x262>
   1873e:	9908      	ldr	r1, [sp, #32]
   18740:	4648      	mov	r0, r9
   18742:	f000 f9c5 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   18746:	4682      	mov	sl, r0
   18748:	2800      	cmp	r0, #0
   1874a:	d16e      	bne.n	1882a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x11c>
   1874c:	2600      	movs	r6, #0
   1874e:	f1b8 0f00 	cmp.w	r8, #0
   18752:	bfa8      	it	ge
   18754:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
   18756:	46b3      	mov	fp, r6
   18758:	bfa4      	itt	ge
   1875a:	eba3 0308 	subge.w	r3, r3, r8
   1875e:	9309      	strge	r3, [sp, #36]	; 0x24
   18760:	f04f 0301 	mov.w	r3, #1
   18764:	930a      	str	r3, [sp, #40]	; 0x28
   18766:	9b07      	ldr	r3, [sp, #28]
   18768:	bfb8      	it	lt
   1876a:	f8cd a024 	strlt.w	sl, [sp, #36]	; 0x24
   1876e:	f043 0301 	orr.w	r3, r3, #1
   18772:	9606      	str	r6, [sp, #24]
   18774:	930b      	str	r3, [sp, #44]	; 0x2c
   18776:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1877a:	9304      	str	r3, [sp, #16]
   1877c:	eb09 03c3 	add.w	r3, r9, r3, lsl #3
   18780:	9305      	str	r3, [sp, #20]
   18782:	9b04      	ldr	r3, [sp, #16]
   18784:	2b00      	cmp	r3, #0
   18786:	f000 80e9 	beq.w	1895c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24e>
   1878a:	9b05      	ldr	r3, [sp, #20]
   1878c:	68a5      	ldr	r5, [r4, #8]
   1878e:	68db      	ldr	r3, [r3, #12]
   18790:	950f      	str	r5, [sp, #60]	; 0x3c
   18792:	07da      	lsls	r2, r3, #31
   18794:	bf48      	it	mi
   18796:	981a      	ldrmi	r0, [sp, #104]	; 0x68
   18798:	ea4f 2123 	mov.w	r1, r3, asr #8
   1879c:	bf48      	it	mi
   1879e:	6800      	ldrmi	r0, [r0, #0]
   187a0:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
   187a4:	bf48      	it	mi
   187a6:	5841      	ldrmi	r1, [r0, r1]
   187a8:	981a      	ldr	r0, [sp, #104]	; 0x68
   187aa:	f88d b038 	strb.w	fp, [sp, #56]	; 0x38
   187ae:	4401      	add	r1, r0
   187b0:	9809      	ldr	r0, [sp, #36]	; 0x24
   187b2:	f88d b039 	strb.w	fp, [sp, #57]	; 0x39
   187b6:	f88d b03a 	strb.w	fp, [sp, #58]	; 0x3a
   187ba:	bf4c      	ite	mi
   187bc:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
   187be:	9a07      	ldrpl	r2, [sp, #28]
   187c0:	b138      	cbz	r0, 187d2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xc4>
   187c2:	4288      	cmp	r0, r1
   187c4:	bf2c      	ite	cs
   187c6:	2000      	movcs	r0, #0
   187c8:	2001      	movcc	r0, #1
   187ca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   187cc:	42b8      	cmp	r0, r7
   187ce:	f000 80ba 	beq.w	18946 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x238>
   187d2:	079b      	lsls	r3, r3, #30
   187d4:	d407      	bmi.n	187e6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd8>
   187d6:	f118 0f02 	cmn.w	r8, #2
   187da:	d102      	bne.n	187e2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd4>
   187dc:	07af      	lsls	r7, r5, #30
   187de:	f000 80b4 	beq.w	1894a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   187e2:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   187e6:	9b05      	ldr	r3, [sp, #20]
   187e8:	ad0d      	add	r5, sp, #52	; 0x34
   187ea:	6898      	ldr	r0, [r3, #8]
   187ec:	6803      	ldr	r3, [r0, #0]
   187ee:	9503      	str	r5, [sp, #12]
   187f0:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   187f2:	9502      	str	r5, [sp, #8]
   187f4:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   187f6:	e88d 0022 	stmia.w	sp, {r1, r5}
   187fa:	4641      	mov	r1, r8
   187fc:	69dd      	ldr	r5, [r3, #28]
   187fe:	9b08      	ldr	r3, [sp, #32]
   18800:	47a8      	blx	r5
   18802:	7961      	ldrb	r1, [r4, #5]
   18804:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
   18808:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
   1880c:	4311      	orrs	r1, r2
   1880e:	2d06      	cmp	r5, #6
   18810:	4603      	mov	r3, r0
   18812:	7161      	strb	r1, [r4, #5]
   18814:	d001      	beq.n	1881a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x10c>
   18816:	2d02      	cmp	r5, #2
   18818:	d122      	bne.n	18860 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x152>
   1881a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1881c:	71a5      	strb	r5, [r4, #6]
   1881e:	6023      	str	r3, [r4, #0]
   18820:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   18824:	7123      	strb	r3, [r4, #4]
   18826:	4682      	mov	sl, r0
   18828:	e078      	b.n	1891c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   1882a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1882c:	f1b8 0f00 	cmp.w	r8, #0
   18830:	6023      	str	r3, [r4, #0]
   18832:	f89d 301c 	ldrb.w	r3, [sp, #28]
   18836:	7123      	strb	r3, [r4, #4]
   18838:	db0c      	blt.n	18854 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
   1883a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1883c:	4498      	add	r8, r3
   1883e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   18840:	4543      	cmp	r3, r8
   18842:	bf0c      	ite	eq
   18844:	f04f 0806 	moveq.w	r8, #6
   18848:	f04f 0801 	movne.w	r8, #1
   1884c:	f884 8006 	strb.w	r8, [r4, #6]
   18850:	2600      	movs	r6, #0
   18852:	e064      	b.n	1891e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   18854:	f118 0f02 	cmn.w	r8, #2
   18858:	d1fa      	bne.n	18850 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   1885a:	2301      	movs	r3, #1
   1885c:	71a3      	strb	r3, [r4, #6]
   1885e:	e7f7      	b.n	18850 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   18860:	6822      	ldr	r2, [r4, #0]
   18862:	b986      	cbnz	r6, 18886 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   18864:	b97a      	cbnz	r2, 18886 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x178>
   18866:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   18868:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
   1886c:	6022      	str	r2, [r4, #0]
   1886e:	7125      	strb	r5, [r4, #4]
   18870:	b122      	cbz	r2, 1887c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   18872:	b119      	cbz	r1, 1887c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   18874:	f8d9 2008 	ldr.w	r2, [r9, #8]
   18878:	07d5      	lsls	r5, r2, #31
   1887a:	d5d4      	bpl.n	18826 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x118>
   1887c:	7962      	ldrb	r2, [r4, #5]
   1887e:	2a04      	cmp	r2, #4
   18880:	d164      	bne.n	1894c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23e>
   18882:	469a      	mov	sl, r3
   18884:	e04a      	b.n	1891c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   18886:	b15a      	cbz	r2, 188a0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x192>
   18888:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1888a:	429a      	cmp	r2, r3
   1888c:	d106      	bne.n	1889c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
   1888e:	7923      	ldrb	r3, [r4, #4]
   18890:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
   18894:	4313      	orrs	r3, r2
   18896:	7123      	strb	r3, [r4, #4]
   18898:	4633      	mov	r3, r6
   1889a:	e7ef      	b.n	1887c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1889c:	b92b      	cbnz	r3, 188aa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   1889e:	b920      	cbnz	r0, 188aa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19c>
   188a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   188a2:	2b00      	cmp	r3, #0
   188a4:	d0f8      	beq.n	18898 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   188a6:	2e00      	cmp	r6, #0
   188a8:	d0f6      	beq.n	18898 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18a>
   188aa:	2903      	cmp	r1, #3
   188ac:	79a7      	ldrb	r7, [r4, #6]
   188ae:	d904      	bls.n	188ba <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ac>
   188b0:	07c8      	lsls	r0, r1, #31
   188b2:	d561      	bpl.n	18978 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   188b4:	68a3      	ldr	r3, [r4, #8]
   188b6:	0799      	lsls	r1, r3, #30
   188b8:	d55e      	bpl.n	18978 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   188ba:	b97f      	cbnz	r7, 188dc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ce>
   188bc:	2d03      	cmp	r5, #3
   188be:	dd05      	ble.n	188cc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   188c0:	07eb      	lsls	r3, r5, #31
   188c2:	d560      	bpl.n	18986 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
   188c4:	f8d9 3008 	ldr.w	r3, [r9, #8]
   188c8:	079f      	lsls	r7, r3, #30
   188ca:	d52c      	bpl.n	18926 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   188cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   188ce:	4641      	mov	r1, r8
   188d0:	9300      	str	r3, [sp, #0]
   188d2:	9808      	ldr	r0, [sp, #32]
   188d4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   188d6:	f7ff ff05 	bl	186e4 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   188da:	4607      	mov	r7, r0
   188dc:	b945      	cbnz	r5, 188f0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   188de:	2f03      	cmp	r7, #3
   188e0:	dd54      	ble.n	1898c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   188e2:	07fd      	lsls	r5, r7, #31
   188e4:	d503      	bpl.n	188ee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   188e6:	f8d9 3008 	ldr.w	r3, [r9, #8]
   188ea:	0798      	lsls	r0, r3, #30
   188ec:	d44e      	bmi.n	1898c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27e>
   188ee:	2501      	movs	r5, #1
   188f0:	ea85 0307 	eor.w	r3, r5, r7
   188f4:	b2db      	uxtb	r3, r3
   188f6:	2b03      	cmp	r3, #3
   188f8:	d917      	bls.n	1892a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
   188fa:	2d03      	cmp	r5, #3
   188fc:	bfc5      	ittet	gt
   188fe:	462f      	movgt	r7, r5
   18900:	9b0d      	ldrgt	r3, [sp, #52]	; 0x34
   18902:	4633      	movle	r3, r6
   18904:	6023      	strgt	r3, [r4, #0]
   18906:	bfc8      	it	gt
   18908:	f89d 3038 	ldrbgt.w	r3, [sp, #56]	; 0x38
   1890c:	71a7      	strb	r7, [r4, #6]
   1890e:	bfc4      	itt	gt
   18910:	7123      	strbgt	r3, [r4, #4]
   18912:	2300      	movgt	r3, #0
   18914:	07b9      	lsls	r1, r7, #30
   18916:	d401      	bmi.n	1891c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   18918:	07fa      	lsls	r2, r7, #31
   1891a:	d4af      	bmi.n	1887c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   1891c:	4656      	mov	r6, sl
   1891e:	4630      	mov	r0, r6
   18920:	b011      	add	sp, #68	; 0x44
   18922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18926:	2701      	movs	r7, #1
   18928:	e7e2      	b.n	188f0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   1892a:	403d      	ands	r5, r7
   1892c:	b2ed      	uxtb	r5, r5
   1892e:	2d03      	cmp	r5, #3
   18930:	f8c4 b000 	str.w	fp, [r4]
   18934:	d904      	bls.n	18940 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x232>
   18936:	2302      	movs	r3, #2
   18938:	f04f 0a01 	mov.w	sl, #1
   1893c:	71a3      	strb	r3, [r4, #6]
   1893e:	e7ed      	b.n	1891c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20e>
   18940:	2301      	movs	r3, #1
   18942:	71a3      	strb	r3, [r4, #6]
   18944:	e79a      	b.n	1887c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16e>
   18946:	2301      	movs	r3, #1
   18948:	9306      	str	r3, [sp, #24]
   1894a:	4633      	mov	r3, r6
   1894c:	9a04      	ldr	r2, [sp, #16]
   1894e:	461e      	mov	r6, r3
   18950:	3a01      	subs	r2, #1
   18952:	9204      	str	r2, [sp, #16]
   18954:	9a05      	ldr	r2, [sp, #20]
   18956:	3a08      	subs	r2, #8
   18958:	9205      	str	r2, [sp, #20]
   1895a:	e712      	b.n	18782 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
   1895c:	9b06      	ldr	r3, [sp, #24]
   1895e:	2b00      	cmp	r3, #0
   18960:	d0dd      	beq.n	1891e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   18962:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   18964:	9306      	str	r3, [sp, #24]
   18966:	2b00      	cmp	r3, #0
   18968:	d0d9      	beq.n	1891e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x210>
   1896a:	9b04      	ldr	r3, [sp, #16]
   1896c:	930a      	str	r3, [sp, #40]	; 0x28
   1896e:	e702      	b.n	18776 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
   18970:	f89d 301c 	ldrb.w	r3, [sp, #28]
   18974:	7163      	strb	r3, [r4, #5]
   18976:	e76b      	b.n	18850 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x142>
   18978:	2f00      	cmp	r7, #0
   1897a:	bf08      	it	eq
   1897c:	2701      	moveq	r7, #1
   1897e:	2d00      	cmp	r5, #0
   18980:	bf08      	it	eq
   18982:	2501      	moveq	r5, #1
   18984:	e7b4      	b.n	188f0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>
   18986:	2d00      	cmp	r5, #0
   18988:	d1cd      	bne.n	18926 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1898a:	2701      	movs	r7, #1
   1898c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   1898e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   18990:	9300      	str	r3, [sp, #0]
   18992:	4641      	mov	r1, r8
   18994:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   18996:	9808      	ldr	r0, [sp, #32]
   18998:	f7ff fea4 	bl	186e4 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1899c:	4605      	mov	r5, r0
   1899e:	e7a7      	b.n	188f0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e2>

000189a0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   189a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189a4:	b089      	sub	sp, #36	; 0x24
   189a6:	4607      	mov	r7, r0
   189a8:	9102      	str	r1, [sp, #8]
   189aa:	4692      	mov	sl, r2
   189ac:	461c      	mov	r4, r3
   189ae:	f7ff fd75 	bl	1849c <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   189b2:	4605      	mov	r5, r0
   189b4:	2800      	cmp	r0, #0
   189b6:	d155      	bne.n	18a64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   189b8:	f04f 0b00 	mov.w	fp, #0
   189bc:	f8d4 8008 	ldr.w	r8, [r4, #8]
   189c0:	f8d7 900c 	ldr.w	r9, [r7, #12]
   189c4:	f018 0f10 	tst.w	r8, #16
   189c8:	bf18      	it	ne
   189ca:	f8d7 8008 	ldrne.w	r8, [r7, #8]
   189ce:	eb07 06c9 	add.w	r6, r7, r9, lsl #3
   189d2:	f008 0301 	and.w	r3, r8, #1
   189d6:	9303      	str	r3, [sp, #12]
   189d8:	f1b9 0f00 	cmp.w	r9, #0
   189dc:	d06b      	beq.n	18ab6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   189de:	68f2      	ldr	r2, [r6, #12]
   189e0:	f8cd b010 	str.w	fp, [sp, #16]
   189e4:	f002 0301 	and.w	r3, r2, #1
   189e8:	9300      	str	r3, [sp, #0]
   189ea:	f012 0302 	ands.w	r3, r2, #2
   189ee:	f88d b014 	strb.w	fp, [sp, #20]
   189f2:	f8cd 8018 	str.w	r8, [sp, #24]
   189f6:	f8cd b01c 	str.w	fp, [sp, #28]
   189fa:	9301      	str	r3, [sp, #4]
   189fc:	d102      	bne.n	18a04 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x64>
   189fe:	9b03      	ldr	r3, [sp, #12]
   18a00:	2b00      	cmp	r3, #0
   18a02:	d04a      	beq.n	18a9a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   18a04:	f1ba 0f00 	cmp.w	sl, #0
   18a08:	d030      	beq.n	18a6c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xcc>
   18a0a:	9b00      	ldr	r3, [sp, #0]
   18a0c:	1212      	asrs	r2, r2, #8
   18a0e:	b113      	cbz	r3, 18a16 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
   18a10:	f8da 3000 	ldr.w	r3, [sl]
   18a14:	589a      	ldr	r2, [r3, r2]
   18a16:	4452      	add	r2, sl
   18a18:	68b0      	ldr	r0, [r6, #8]
   18a1a:	9902      	ldr	r1, [sp, #8]
   18a1c:	6803      	ldr	r3, [r0, #0]
   18a1e:	699d      	ldr	r5, [r3, #24]
   18a20:	ab04      	add	r3, sp, #16
   18a22:	47a8      	blx	r5
   18a24:	4605      	mov	r5, r0
   18a26:	2800      	cmp	r0, #0
   18a28:	d037      	beq.n	18a9a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   18a2a:	9b07      	ldr	r3, [sp, #28]
   18a2c:	2b08      	cmp	r3, #8
   18a2e:	d103      	bne.n	18a38 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   18a30:	9b00      	ldr	r3, [sp, #0]
   18a32:	b10b      	cbz	r3, 18a38 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   18a34:	68b3      	ldr	r3, [r6, #8]
   18a36:	9307      	str	r3, [sp, #28]
   18a38:	f89d 3014 	ldrb.w	r3, [sp, #20]
   18a3c:	2b03      	cmp	r3, #3
   18a3e:	dd02      	ble.n	18a46 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   18a40:	9a01      	ldr	r2, [sp, #4]
   18a42:	2a00      	cmp	r2, #0
   18a44:	d03c      	beq.n	18ac0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   18a46:	68e1      	ldr	r1, [r4, #12]
   18a48:	b9c1      	cbnz	r1, 18a7c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
   18a4a:	ab04      	add	r3, sp, #16
   18a4c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   18a4e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   18a52:	7923      	ldrb	r3, [r4, #4]
   18a54:	2b03      	cmp	r3, #3
   18a56:	dd05      	ble.n	18a64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   18a58:	079a      	lsls	r2, r3, #30
   18a5a:	d509      	bpl.n	18a70 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd0>
   18a5c:	68bb      	ldr	r3, [r7, #8]
   18a5e:	f013 0f01 	tst.w	r3, #1
   18a62:	d11a      	bne.n	18a9a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfa>
   18a64:	4628      	mov	r0, r5
   18a66:	b009      	add	sp, #36	; 0x24
   18a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a6c:	4652      	mov	r2, sl
   18a6e:	e7d3      	b.n	18a18 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x78>
   18a70:	07db      	lsls	r3, r3, #31
   18a72:	d5f7      	bpl.n	18a64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   18a74:	68bb      	ldr	r3, [r7, #8]
   18a76:	f013 0f02 	tst.w	r3, #2
   18a7a:	e7f2      	b.n	18a62 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc2>
   18a7c:	6823      	ldr	r3, [r4, #0]
   18a7e:	9a04      	ldr	r2, [sp, #16]
   18a80:	4293      	cmp	r3, r2
   18a82:	d004      	beq.n	18a8e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xee>
   18a84:	2300      	movs	r3, #0
   18a86:	6023      	str	r3, [r4, #0]
   18a88:	2302      	movs	r3, #2
   18a8a:	7123      	strb	r3, [r4, #4]
   18a8c:	e7ea      	b.n	18a64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   18a8e:	b143      	cbz	r3, 18aa2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x102>
   18a90:	7923      	ldrb	r3, [r4, #4]
   18a92:	f89d 2014 	ldrb.w	r2, [sp, #20]
   18a96:	4313      	orrs	r3, r2
   18a98:	7123      	strb	r3, [r4, #4]
   18a9a:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   18a9e:	3e08      	subs	r6, #8
   18aa0:	e79a      	b.n	189d8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x38>
   18aa2:	9807      	ldr	r0, [sp, #28]
   18aa4:	2808      	cmp	r0, #8
   18aa6:	d0ef      	beq.n	18a88 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   18aa8:	2908      	cmp	r1, #8
   18aaa:	d0ed      	beq.n	18a88 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   18aac:	f000 f810 	bl	18ad0 <std::type_info::operator==(std::type_info const&) const>
   18ab0:	2800      	cmp	r0, #0
   18ab2:	d1ed      	bne.n	18a90 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf0>
   18ab4:	e7e8      	b.n	18a88 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe8>
   18ab6:	7925      	ldrb	r5, [r4, #4]
   18ab8:	3500      	adds	r5, #0
   18aba:	bf18      	it	ne
   18abc:	2501      	movne	r5, #1
   18abe:	e7d1      	b.n	18a64 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   18ac0:	f023 0302 	bic.w	r3, r3, #2
   18ac4:	f88d 3014 	strb.w	r3, [sp, #20]
   18ac8:	e7bd      	b.n	18a46 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>

00018aca <std::type_info::~type_info()>:
_ZNSt9type_infoD2Ev():
   18aca:	4770      	bx	lr

00018acc <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   18acc:	2000      	movs	r0, #0
   18ace:	4770      	bx	lr

00018ad0 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   18ad0:	4281      	cmp	r1, r0
   18ad2:	b508      	push	{r3, lr}
   18ad4:	d00e      	beq.n	18af4 <std::type_info::operator==(std::type_info const&) const+0x24>
   18ad6:	6840      	ldr	r0, [r0, #4]
   18ad8:	7803      	ldrb	r3, [r0, #0]
   18ada:	2b2a      	cmp	r3, #42	; 0x2a
   18adc:	d00c      	beq.n	18af8 <std::type_info::operator==(std::type_info const&) const+0x28>
   18ade:	6849      	ldr	r1, [r1, #4]
   18ae0:	780b      	ldrb	r3, [r1, #0]
   18ae2:	2b2a      	cmp	r3, #42	; 0x2a
   18ae4:	bf08      	it	eq
   18ae6:	3101      	addeq	r1, #1
   18ae8:	f002 fdcd 	bl	1b686 <strcmp>
   18aec:	fab0 f080 	clz	r0, r0
   18af0:	0940      	lsrs	r0, r0, #5
   18af2:	bd08      	pop	{r3, pc}
   18af4:	2001      	movs	r0, #1
   18af6:	bd08      	pop	{r3, pc}
   18af8:	2000      	movs	r0, #0
   18afa:	bd08      	pop	{r3, pc}

00018afc <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   18afc:	b508      	push	{r3, lr}
   18afe:	4780      	blx	r0
   18b00:	f000 fe48 	bl	19794 <abort>

00018b04 <std::get_terminate()>:
_ZSt13get_terminatev():
   18b04:	4b02      	ldr	r3, [pc, #8]	; (18b10 <std::get_terminate()+0xc>)
   18b06:	6818      	ldr	r0, [r3, #0]
   18b08:	f3bf 8f5b 	dmb	ish
   18b0c:	4770      	bx	lr
   18b0e:	bf00      	nop
   18b10:	2007c0dc 	.word	0x2007c0dc

00018b14 <std::terminate()>:
_ZSt9terminatev():
   18b14:	b508      	push	{r3, lr}
   18b16:	f7ff fff5 	bl	18b04 <std::get_terminate()>
   18b1a:	f7ff ffef 	bl	18afc <__cxxabiv1::__terminate(void (*)())>
   18b1e:	Address 0x0000000000018b1e is out of bounds.


00018b20 <__aeabi_llsl>:
__aeabi_llsl():
   18b20:	4091      	lsls	r1, r2
   18b22:	1c03      	adds	r3, r0, #0
   18b24:	4090      	lsls	r0, r2
   18b26:	469c      	mov	ip, r3
   18b28:	3a20      	subs	r2, #32
   18b2a:	4093      	lsls	r3, r2
   18b2c:	4319      	orrs	r1, r3
   18b2e:	4252      	negs	r2, r2
   18b30:	4663      	mov	r3, ip
   18b32:	40d3      	lsrs	r3, r2
   18b34:	4319      	orrs	r1, r3
   18b36:	4770      	bx	lr

00018b38 <__aeabi_drsub>:
__aeabi_drsub():
   18b38:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   18b3c:	e002      	b.n	18b44 <__adddf3>
   18b3e:	bf00      	nop

00018b40 <__aeabi_dsub>:
__subdf3():
   18b40:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00018b44 <__adddf3>:
__aeabi_dadd():
   18b44:	b530      	push	{r4, r5, lr}
   18b46:	ea4f 0441 	mov.w	r4, r1, lsl #1
   18b4a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   18b4e:	ea94 0f05 	teq	r4, r5
   18b52:	bf08      	it	eq
   18b54:	ea90 0f02 	teqeq	r0, r2
   18b58:	bf1f      	itttt	ne
   18b5a:	ea54 0c00 	orrsne.w	ip, r4, r0
   18b5e:	ea55 0c02 	orrsne.w	ip, r5, r2
   18b62:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   18b66:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   18b6a:	f000 80e2 	beq.w	18d32 <__adddf3+0x1ee>
   18b6e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   18b72:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   18b76:	bfb8      	it	lt
   18b78:	426d      	neglt	r5, r5
   18b7a:	dd0c      	ble.n	18b96 <__adddf3+0x52>
   18b7c:	442c      	add	r4, r5
   18b7e:	ea80 0202 	eor.w	r2, r0, r2
   18b82:	ea81 0303 	eor.w	r3, r1, r3
   18b86:	ea82 0000 	eor.w	r0, r2, r0
   18b8a:	ea83 0101 	eor.w	r1, r3, r1
   18b8e:	ea80 0202 	eor.w	r2, r0, r2
   18b92:	ea81 0303 	eor.w	r3, r1, r3
   18b96:	2d36      	cmp	r5, #54	; 0x36
   18b98:	bf88      	it	hi
   18b9a:	bd30      	pophi	{r4, r5, pc}
   18b9c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   18ba0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   18ba4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   18ba8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   18bac:	d002      	beq.n	18bb4 <__adddf3+0x70>
   18bae:	4240      	negs	r0, r0
   18bb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   18bb4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   18bb8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   18bbc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   18bc0:	d002      	beq.n	18bc8 <__adddf3+0x84>
   18bc2:	4252      	negs	r2, r2
   18bc4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   18bc8:	ea94 0f05 	teq	r4, r5
   18bcc:	f000 80a7 	beq.w	18d1e <__adddf3+0x1da>
   18bd0:	f1a4 0401 	sub.w	r4, r4, #1
   18bd4:	f1d5 0e20 	rsbs	lr, r5, #32
   18bd8:	db0d      	blt.n	18bf6 <__adddf3+0xb2>
   18bda:	fa02 fc0e 	lsl.w	ip, r2, lr
   18bde:	fa22 f205 	lsr.w	r2, r2, r5
   18be2:	1880      	adds	r0, r0, r2
   18be4:	f141 0100 	adc.w	r1, r1, #0
   18be8:	fa03 f20e 	lsl.w	r2, r3, lr
   18bec:	1880      	adds	r0, r0, r2
   18bee:	fa43 f305 	asr.w	r3, r3, r5
   18bf2:	4159      	adcs	r1, r3
   18bf4:	e00e      	b.n	18c14 <__adddf3+0xd0>
   18bf6:	f1a5 0520 	sub.w	r5, r5, #32
   18bfa:	f10e 0e20 	add.w	lr, lr, #32
   18bfe:	2a01      	cmp	r2, #1
   18c00:	fa03 fc0e 	lsl.w	ip, r3, lr
   18c04:	bf28      	it	cs
   18c06:	f04c 0c02 	orrcs.w	ip, ip, #2
   18c0a:	fa43 f305 	asr.w	r3, r3, r5
   18c0e:	18c0      	adds	r0, r0, r3
   18c10:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   18c14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18c18:	d507      	bpl.n	18c2a <__adddf3+0xe6>
   18c1a:	f04f 0e00 	mov.w	lr, #0
   18c1e:	f1dc 0c00 	rsbs	ip, ip, #0
   18c22:	eb7e 0000 	sbcs.w	r0, lr, r0
   18c26:	eb6e 0101 	sbc.w	r1, lr, r1
   18c2a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   18c2e:	d31b      	bcc.n	18c68 <__adddf3+0x124>
   18c30:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   18c34:	d30c      	bcc.n	18c50 <__adddf3+0x10c>
   18c36:	0849      	lsrs	r1, r1, #1
   18c38:	ea5f 0030 	movs.w	r0, r0, rrx
   18c3c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   18c40:	f104 0401 	add.w	r4, r4, #1
   18c44:	ea4f 5244 	mov.w	r2, r4, lsl #21
   18c48:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   18c4c:	f080 809a 	bcs.w	18d84 <__adddf3+0x240>
   18c50:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   18c54:	bf08      	it	eq
   18c56:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   18c5a:	f150 0000 	adcs.w	r0, r0, #0
   18c5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   18c62:	ea41 0105 	orr.w	r1, r1, r5
   18c66:	bd30      	pop	{r4, r5, pc}
   18c68:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   18c6c:	4140      	adcs	r0, r0
   18c6e:	eb41 0101 	adc.w	r1, r1, r1
   18c72:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   18c76:	f1a4 0401 	sub.w	r4, r4, #1
   18c7a:	d1e9      	bne.n	18c50 <__adddf3+0x10c>
   18c7c:	f091 0f00 	teq	r1, #0
   18c80:	bf04      	itt	eq
   18c82:	4601      	moveq	r1, r0
   18c84:	2000      	moveq	r0, #0
   18c86:	fab1 f381 	clz	r3, r1
   18c8a:	bf08      	it	eq
   18c8c:	3320      	addeq	r3, #32
   18c8e:	f1a3 030b 	sub.w	r3, r3, #11
   18c92:	f1b3 0220 	subs.w	r2, r3, #32
   18c96:	da0c      	bge.n	18cb2 <__adddf3+0x16e>
   18c98:	320c      	adds	r2, #12
   18c9a:	dd08      	ble.n	18cae <__adddf3+0x16a>
   18c9c:	f102 0c14 	add.w	ip, r2, #20
   18ca0:	f1c2 020c 	rsb	r2, r2, #12
   18ca4:	fa01 f00c 	lsl.w	r0, r1, ip
   18ca8:	fa21 f102 	lsr.w	r1, r1, r2
   18cac:	e00c      	b.n	18cc8 <__adddf3+0x184>
   18cae:	f102 0214 	add.w	r2, r2, #20
   18cb2:	bfd8      	it	le
   18cb4:	f1c2 0c20 	rsble	ip, r2, #32
   18cb8:	fa01 f102 	lsl.w	r1, r1, r2
   18cbc:	fa20 fc0c 	lsr.w	ip, r0, ip
   18cc0:	bfdc      	itt	le
   18cc2:	ea41 010c 	orrle.w	r1, r1, ip
   18cc6:	4090      	lslle	r0, r2
   18cc8:	1ae4      	subs	r4, r4, r3
   18cca:	bfa2      	ittt	ge
   18ccc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   18cd0:	4329      	orrge	r1, r5
   18cd2:	bd30      	popge	{r4, r5, pc}
   18cd4:	ea6f 0404 	mvn.w	r4, r4
   18cd8:	3c1f      	subs	r4, #31
   18cda:	da1c      	bge.n	18d16 <__adddf3+0x1d2>
   18cdc:	340c      	adds	r4, #12
   18cde:	dc0e      	bgt.n	18cfe <__adddf3+0x1ba>
   18ce0:	f104 0414 	add.w	r4, r4, #20
   18ce4:	f1c4 0220 	rsb	r2, r4, #32
   18ce8:	fa20 f004 	lsr.w	r0, r0, r4
   18cec:	fa01 f302 	lsl.w	r3, r1, r2
   18cf0:	ea40 0003 	orr.w	r0, r0, r3
   18cf4:	fa21 f304 	lsr.w	r3, r1, r4
   18cf8:	ea45 0103 	orr.w	r1, r5, r3
   18cfc:	bd30      	pop	{r4, r5, pc}
   18cfe:	f1c4 040c 	rsb	r4, r4, #12
   18d02:	f1c4 0220 	rsb	r2, r4, #32
   18d06:	fa20 f002 	lsr.w	r0, r0, r2
   18d0a:	fa01 f304 	lsl.w	r3, r1, r4
   18d0e:	ea40 0003 	orr.w	r0, r0, r3
   18d12:	4629      	mov	r1, r5
   18d14:	bd30      	pop	{r4, r5, pc}
   18d16:	fa21 f004 	lsr.w	r0, r1, r4
   18d1a:	4629      	mov	r1, r5
   18d1c:	bd30      	pop	{r4, r5, pc}
   18d1e:	f094 0f00 	teq	r4, #0
   18d22:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   18d26:	bf06      	itte	eq
   18d28:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   18d2c:	3401      	addeq	r4, #1
   18d2e:	3d01      	subne	r5, #1
   18d30:	e74e      	b.n	18bd0 <__adddf3+0x8c>
   18d32:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   18d36:	bf18      	it	ne
   18d38:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   18d3c:	d029      	beq.n	18d92 <__adddf3+0x24e>
   18d3e:	ea94 0f05 	teq	r4, r5
   18d42:	bf08      	it	eq
   18d44:	ea90 0f02 	teqeq	r0, r2
   18d48:	d005      	beq.n	18d56 <__adddf3+0x212>
   18d4a:	ea54 0c00 	orrs.w	ip, r4, r0
   18d4e:	bf04      	itt	eq
   18d50:	4619      	moveq	r1, r3
   18d52:	4610      	moveq	r0, r2
   18d54:	bd30      	pop	{r4, r5, pc}
   18d56:	ea91 0f03 	teq	r1, r3
   18d5a:	bf1e      	ittt	ne
   18d5c:	2100      	movne	r1, #0
   18d5e:	2000      	movne	r0, #0
   18d60:	bd30      	popne	{r4, r5, pc}
   18d62:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   18d66:	d105      	bne.n	18d74 <__adddf3+0x230>
   18d68:	0040      	lsls	r0, r0, #1
   18d6a:	4149      	adcs	r1, r1
   18d6c:	bf28      	it	cs
   18d6e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   18d72:	bd30      	pop	{r4, r5, pc}
   18d74:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   18d78:	bf3c      	itt	cc
   18d7a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   18d7e:	bd30      	popcc	{r4, r5, pc}
   18d80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18d84:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   18d88:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   18d8c:	f04f 0000 	mov.w	r0, #0
   18d90:	bd30      	pop	{r4, r5, pc}
   18d92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   18d96:	bf1a      	itte	ne
   18d98:	4619      	movne	r1, r3
   18d9a:	4610      	movne	r0, r2
   18d9c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   18da0:	bf1c      	itt	ne
   18da2:	460b      	movne	r3, r1
   18da4:	4602      	movne	r2, r0
   18da6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   18daa:	bf06      	itte	eq
   18dac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   18db0:	ea91 0f03 	teqeq	r1, r3
   18db4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   18db8:	bd30      	pop	{r4, r5, pc}
   18dba:	bf00      	nop

00018dbc <__aeabi_ui2d>:
__floatunsidf():
   18dbc:	f090 0f00 	teq	r0, #0
   18dc0:	bf04      	itt	eq
   18dc2:	2100      	moveq	r1, #0
   18dc4:	4770      	bxeq	lr
   18dc6:	b530      	push	{r4, r5, lr}
   18dc8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   18dcc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   18dd0:	f04f 0500 	mov.w	r5, #0
   18dd4:	f04f 0100 	mov.w	r1, #0
   18dd8:	e750      	b.n	18c7c <__adddf3+0x138>
   18dda:	bf00      	nop

00018ddc <__aeabi_i2d>:
__aeabi_i2d():
   18ddc:	f090 0f00 	teq	r0, #0
   18de0:	bf04      	itt	eq
   18de2:	2100      	moveq	r1, #0
   18de4:	4770      	bxeq	lr
   18de6:	b530      	push	{r4, r5, lr}
   18de8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   18dec:	f104 0432 	add.w	r4, r4, #50	; 0x32
   18df0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   18df4:	bf48      	it	mi
   18df6:	4240      	negmi	r0, r0
   18df8:	f04f 0100 	mov.w	r1, #0
   18dfc:	e73e      	b.n	18c7c <__adddf3+0x138>
   18dfe:	bf00      	nop

00018e00 <__aeabi_f2d>:
__aeabi_f2d():
   18e00:	0042      	lsls	r2, r0, #1
   18e02:	ea4f 01e2 	mov.w	r1, r2, asr #3
   18e06:	ea4f 0131 	mov.w	r1, r1, rrx
   18e0a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   18e0e:	bf1f      	itttt	ne
   18e10:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   18e14:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   18e18:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   18e1c:	4770      	bxne	lr
   18e1e:	f092 0f00 	teq	r2, #0
   18e22:	bf14      	ite	ne
   18e24:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   18e28:	4770      	bxeq	lr
   18e2a:	b530      	push	{r4, r5, lr}
   18e2c:	f44f 7460 	mov.w	r4, #896	; 0x380
   18e30:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   18e34:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   18e38:	e720      	b.n	18c7c <__adddf3+0x138>
   18e3a:	bf00      	nop

00018e3c <__aeabi_ul2d>:
__floatundidf():
   18e3c:	ea50 0201 	orrs.w	r2, r0, r1
   18e40:	bf08      	it	eq
   18e42:	4770      	bxeq	lr
   18e44:	b530      	push	{r4, r5, lr}
   18e46:	f04f 0500 	mov.w	r5, #0
   18e4a:	e00a      	b.n	18e62 <__aeabi_l2d+0x16>

00018e4c <__aeabi_l2d>:
__aeabi_l2d():
   18e4c:	ea50 0201 	orrs.w	r2, r0, r1
   18e50:	bf08      	it	eq
   18e52:	4770      	bxeq	lr
   18e54:	b530      	push	{r4, r5, lr}
   18e56:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   18e5a:	d502      	bpl.n	18e62 <__aeabi_l2d+0x16>
   18e5c:	4240      	negs	r0, r0
   18e5e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   18e62:	f44f 6480 	mov.w	r4, #1024	; 0x400
   18e66:	f104 0432 	add.w	r4, r4, #50	; 0x32
   18e6a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   18e6e:	f43f aedc 	beq.w	18c2a <__adddf3+0xe6>
   18e72:	f04f 0203 	mov.w	r2, #3
   18e76:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   18e7a:	bf18      	it	ne
   18e7c:	3203      	addne	r2, #3
   18e7e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   18e82:	bf18      	it	ne
   18e84:	3203      	addne	r2, #3
   18e86:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   18e8a:	f1c2 0320 	rsb	r3, r2, #32
   18e8e:	fa00 fc03 	lsl.w	ip, r0, r3
   18e92:	fa20 f002 	lsr.w	r0, r0, r2
   18e96:	fa01 fe03 	lsl.w	lr, r1, r3
   18e9a:	ea40 000e 	orr.w	r0, r0, lr
   18e9e:	fa21 f102 	lsr.w	r1, r1, r2
   18ea2:	4414      	add	r4, r2
   18ea4:	e6c1      	b.n	18c2a <__adddf3+0xe6>
   18ea6:	bf00      	nop

00018ea8 <__aeabi_d2uiz>:
__aeabi_d2uiz():
   18ea8:	004a      	lsls	r2, r1, #1
   18eaa:	d211      	bcs.n	18ed0 <__aeabi_d2uiz+0x28>
   18eac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   18eb0:	d211      	bcs.n	18ed6 <__aeabi_d2uiz+0x2e>
   18eb2:	d50d      	bpl.n	18ed0 <__aeabi_d2uiz+0x28>
   18eb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   18eb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   18ebc:	d40e      	bmi.n	18edc <__aeabi_d2uiz+0x34>
   18ebe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   18ec2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   18ec6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   18eca:	fa23 f002 	lsr.w	r0, r3, r2
   18ece:	4770      	bx	lr
   18ed0:	f04f 0000 	mov.w	r0, #0
   18ed4:	4770      	bx	lr
   18ed6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   18eda:	d102      	bne.n	18ee2 <__aeabi_d2uiz+0x3a>
   18edc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   18ee0:	4770      	bx	lr
   18ee2:	f04f 0000 	mov.w	r0, #0
   18ee6:	4770      	bx	lr

00018ee8 <__aeabi_d2f>:
__truncdfsf2():
   18ee8:	ea4f 0241 	mov.w	r2, r1, lsl #1
   18eec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   18ef0:	bf24      	itt	cs
   18ef2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   18ef6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   18efa:	d90d      	bls.n	18f18 <__aeabi_d2f+0x30>
   18efc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   18f00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   18f04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   18f08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   18f0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   18f10:	bf08      	it	eq
   18f12:	f020 0001 	biceq.w	r0, r0, #1
   18f16:	4770      	bx	lr
   18f18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   18f1c:	d121      	bne.n	18f62 <__aeabi_d2f+0x7a>
   18f1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   18f22:	bfbc      	itt	lt
   18f24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   18f28:	4770      	bxlt	lr
   18f2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   18f2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
   18f32:	f1c2 0218 	rsb	r2, r2, #24
   18f36:	f1c2 0c20 	rsb	ip, r2, #32
   18f3a:	fa10 f30c 	lsls.w	r3, r0, ip
   18f3e:	fa20 f002 	lsr.w	r0, r0, r2
   18f42:	bf18      	it	ne
   18f44:	f040 0001 	orrne.w	r0, r0, #1
   18f48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   18f4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   18f50:	fa03 fc0c 	lsl.w	ip, r3, ip
   18f54:	ea40 000c 	orr.w	r0, r0, ip
   18f58:	fa23 f302 	lsr.w	r3, r3, r2
   18f5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
   18f60:	e7cc      	b.n	18efc <__aeabi_d2f+0x14>
   18f62:	ea7f 5362 	mvns.w	r3, r2, asr #21
   18f66:	d107      	bne.n	18f78 <__aeabi_d2f+0x90>
   18f68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   18f6c:	bf1e      	ittt	ne
   18f6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   18f72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   18f76:	4770      	bxne	lr
   18f78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   18f7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   18f80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   18f84:	4770      	bx	lr
   18f86:	bf00      	nop

00018f88 <__aeabi_frsub>:
__aeabi_frsub():
   18f88:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   18f8c:	e002      	b.n	18f94 <__addsf3>
   18f8e:	bf00      	nop

00018f90 <__aeabi_fsub>:
__aeabi_fsub():
   18f90:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00018f94 <__addsf3>:
__addsf3():
   18f94:	0042      	lsls	r2, r0, #1
   18f96:	bf1f      	itttt	ne
   18f98:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   18f9c:	ea92 0f03 	teqne	r2, r3
   18fa0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   18fa4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   18fa8:	d06a      	beq.n	19080 <__addsf3+0xec>
   18faa:	ea4f 6212 	mov.w	r2, r2, lsr #24
   18fae:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   18fb2:	bfc1      	itttt	gt
   18fb4:	18d2      	addgt	r2, r2, r3
   18fb6:	4041      	eorgt	r1, r0
   18fb8:	4048      	eorgt	r0, r1
   18fba:	4041      	eorgt	r1, r0
   18fbc:	bfb8      	it	lt
   18fbe:	425b      	neglt	r3, r3
   18fc0:	2b19      	cmp	r3, #25
   18fc2:	bf88      	it	hi
   18fc4:	4770      	bxhi	lr
   18fc6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   18fca:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   18fce:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   18fd2:	bf18      	it	ne
   18fd4:	4240      	negne	r0, r0
   18fd6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   18fda:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   18fde:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   18fe2:	bf18      	it	ne
   18fe4:	4249      	negne	r1, r1
   18fe6:	ea92 0f03 	teq	r2, r3
   18fea:	d03f      	beq.n	1906c <__addsf3+0xd8>
   18fec:	f1a2 0201 	sub.w	r2, r2, #1
   18ff0:	fa41 fc03 	asr.w	ip, r1, r3
   18ff4:	eb10 000c 	adds.w	r0, r0, ip
   18ff8:	f1c3 0320 	rsb	r3, r3, #32
   18ffc:	fa01 f103 	lsl.w	r1, r1, r3
   19000:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   19004:	d502      	bpl.n	1900c <__addsf3+0x78>
   19006:	4249      	negs	r1, r1
   19008:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1900c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   19010:	d313      	bcc.n	1903a <__addsf3+0xa6>
   19012:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   19016:	d306      	bcc.n	19026 <__addsf3+0x92>
   19018:	0840      	lsrs	r0, r0, #1
   1901a:	ea4f 0131 	mov.w	r1, r1, rrx
   1901e:	f102 0201 	add.w	r2, r2, #1
   19022:	2afe      	cmp	r2, #254	; 0xfe
   19024:	d251      	bcs.n	190ca <__addsf3+0x136>
   19026:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1902a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1902e:	bf08      	it	eq
   19030:	f020 0001 	biceq.w	r0, r0, #1
   19034:	ea40 0003 	orr.w	r0, r0, r3
   19038:	4770      	bx	lr
   1903a:	0049      	lsls	r1, r1, #1
   1903c:	eb40 0000 	adc.w	r0, r0, r0
   19040:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   19044:	f1a2 0201 	sub.w	r2, r2, #1
   19048:	d1ed      	bne.n	19026 <__addsf3+0x92>
   1904a:	fab0 fc80 	clz	ip, r0
   1904e:	f1ac 0c08 	sub.w	ip, ip, #8
   19052:	ebb2 020c 	subs.w	r2, r2, ip
   19056:	fa00 f00c 	lsl.w	r0, r0, ip
   1905a:	bfaa      	itet	ge
   1905c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   19060:	4252      	neglt	r2, r2
   19062:	4318      	orrge	r0, r3
   19064:	bfbc      	itt	lt
   19066:	40d0      	lsrlt	r0, r2
   19068:	4318      	orrlt	r0, r3
   1906a:	4770      	bx	lr
   1906c:	f092 0f00 	teq	r2, #0
   19070:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   19074:	bf06      	itte	eq
   19076:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1907a:	3201      	addeq	r2, #1
   1907c:	3b01      	subne	r3, #1
   1907e:	e7b5      	b.n	18fec <__addsf3+0x58>
   19080:	ea4f 0341 	mov.w	r3, r1, lsl #1
   19084:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   19088:	bf18      	it	ne
   1908a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1908e:	d021      	beq.n	190d4 <__addsf3+0x140>
   19090:	ea92 0f03 	teq	r2, r3
   19094:	d004      	beq.n	190a0 <__addsf3+0x10c>
   19096:	f092 0f00 	teq	r2, #0
   1909a:	bf08      	it	eq
   1909c:	4608      	moveq	r0, r1
   1909e:	4770      	bx	lr
   190a0:	ea90 0f01 	teq	r0, r1
   190a4:	bf1c      	itt	ne
   190a6:	2000      	movne	r0, #0
   190a8:	4770      	bxne	lr
   190aa:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   190ae:	d104      	bne.n	190ba <__addsf3+0x126>
   190b0:	0040      	lsls	r0, r0, #1
   190b2:	bf28      	it	cs
   190b4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   190b8:	4770      	bx	lr
   190ba:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   190be:	bf3c      	itt	cc
   190c0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   190c4:	4770      	bxcc	lr
   190c6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   190ca:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   190ce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   190d2:	4770      	bx	lr
   190d4:	ea7f 6222 	mvns.w	r2, r2, asr #24
   190d8:	bf16      	itet	ne
   190da:	4608      	movne	r0, r1
   190dc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   190e0:	4601      	movne	r1, r0
   190e2:	0242      	lsls	r2, r0, #9
   190e4:	bf06      	itte	eq
   190e6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   190ea:	ea90 0f01 	teqeq	r0, r1
   190ee:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   190f2:	4770      	bx	lr

000190f4 <__aeabi_ui2f>:
__floatunsisf():
   190f4:	f04f 0300 	mov.w	r3, #0
   190f8:	e004      	b.n	19104 <__aeabi_i2f+0x8>
   190fa:	bf00      	nop

000190fc <__aeabi_i2f>:
__floatsisf():
   190fc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   19100:	bf48      	it	mi
   19102:	4240      	negmi	r0, r0
   19104:	ea5f 0c00 	movs.w	ip, r0
   19108:	bf08      	it	eq
   1910a:	4770      	bxeq	lr
   1910c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   19110:	4601      	mov	r1, r0
   19112:	f04f 0000 	mov.w	r0, #0
   19116:	e01c      	b.n	19152 <__aeabi_l2f+0x2a>

00019118 <__aeabi_ul2f>:
__aeabi_ul2f():
   19118:	ea50 0201 	orrs.w	r2, r0, r1
   1911c:	bf08      	it	eq
   1911e:	4770      	bxeq	lr
   19120:	f04f 0300 	mov.w	r3, #0
   19124:	e00a      	b.n	1913c <__aeabi_l2f+0x14>
   19126:	bf00      	nop

00019128 <__aeabi_l2f>:
__aeabi_l2f():
   19128:	ea50 0201 	orrs.w	r2, r0, r1
   1912c:	bf08      	it	eq
   1912e:	4770      	bxeq	lr
   19130:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   19134:	d502      	bpl.n	1913c <__aeabi_l2f+0x14>
   19136:	4240      	negs	r0, r0
   19138:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1913c:	ea5f 0c01 	movs.w	ip, r1
   19140:	bf02      	ittt	eq
   19142:	4684      	moveq	ip, r0
   19144:	4601      	moveq	r1, r0
   19146:	2000      	moveq	r0, #0
   19148:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1914c:	bf08      	it	eq
   1914e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   19152:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   19156:	fabc f28c 	clz	r2, ip
   1915a:	3a08      	subs	r2, #8
   1915c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   19160:	db10      	blt.n	19184 <__aeabi_l2f+0x5c>
   19162:	fa01 fc02 	lsl.w	ip, r1, r2
   19166:	4463      	add	r3, ip
   19168:	fa00 fc02 	lsl.w	ip, r0, r2
   1916c:	f1c2 0220 	rsb	r2, r2, #32
   19170:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   19174:	fa20 f202 	lsr.w	r2, r0, r2
   19178:	eb43 0002 	adc.w	r0, r3, r2
   1917c:	bf08      	it	eq
   1917e:	f020 0001 	biceq.w	r0, r0, #1
   19182:	4770      	bx	lr
   19184:	f102 0220 	add.w	r2, r2, #32
   19188:	fa01 fc02 	lsl.w	ip, r1, r2
   1918c:	f1c2 0220 	rsb	r2, r2, #32
   19190:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   19194:	fa21 f202 	lsr.w	r2, r1, r2
   19198:	eb43 0002 	adc.w	r0, r3, r2
   1919c:	bf08      	it	eq
   1919e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   191a2:	4770      	bx	lr

000191a4 <__aeabi_fmul>:
__aeabi_fmul():
   191a4:	f04f 0cff 	mov.w	ip, #255	; 0xff
   191a8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   191ac:	bf1e      	ittt	ne
   191ae:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   191b2:	ea92 0f0c 	teqne	r2, ip
   191b6:	ea93 0f0c 	teqne	r3, ip
   191ba:	d06f      	beq.n	1929c <__aeabi_fmul+0xf8>
   191bc:	441a      	add	r2, r3
   191be:	ea80 0c01 	eor.w	ip, r0, r1
   191c2:	0240      	lsls	r0, r0, #9
   191c4:	bf18      	it	ne
   191c6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   191ca:	d01e      	beq.n	1920a <__aeabi_fmul+0x66>
   191cc:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   191d0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   191d4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   191d8:	fba0 3101 	umull	r3, r1, r0, r1
   191dc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   191e0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   191e4:	bf3e      	ittt	cc
   191e6:	0049      	lslcc	r1, r1, #1
   191e8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   191ec:	005b      	lslcc	r3, r3, #1
   191ee:	ea40 0001 	orr.w	r0, r0, r1
   191f2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   191f6:	2afd      	cmp	r2, #253	; 0xfd
   191f8:	d81d      	bhi.n	19236 <__aeabi_fmul+0x92>
   191fa:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   191fe:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   19202:	bf08      	it	eq
   19204:	f020 0001 	biceq.w	r0, r0, #1
   19208:	4770      	bx	lr
   1920a:	f090 0f00 	teq	r0, #0
   1920e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   19212:	bf08      	it	eq
   19214:	0249      	lsleq	r1, r1, #9
   19216:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1921a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1921e:	3a7f      	subs	r2, #127	; 0x7f
   19220:	bfc2      	ittt	gt
   19222:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   19226:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1922a:	4770      	bxgt	lr
   1922c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   19230:	f04f 0300 	mov.w	r3, #0
   19234:	3a01      	subs	r2, #1
   19236:	dc5d      	bgt.n	192f4 <__aeabi_fmul+0x150>
   19238:	f112 0f19 	cmn.w	r2, #25
   1923c:	bfdc      	itt	le
   1923e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   19242:	4770      	bxle	lr
   19244:	f1c2 0200 	rsb	r2, r2, #0
   19248:	0041      	lsls	r1, r0, #1
   1924a:	fa21 f102 	lsr.w	r1, r1, r2
   1924e:	f1c2 0220 	rsb	r2, r2, #32
   19252:	fa00 fc02 	lsl.w	ip, r0, r2
   19256:	ea5f 0031 	movs.w	r0, r1, rrx
   1925a:	f140 0000 	adc.w	r0, r0, #0
   1925e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   19262:	bf08      	it	eq
   19264:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   19268:	4770      	bx	lr
   1926a:	f092 0f00 	teq	r2, #0
   1926e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   19272:	bf02      	ittt	eq
   19274:	0040      	lsleq	r0, r0, #1
   19276:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1927a:	3a01      	subeq	r2, #1
   1927c:	d0f9      	beq.n	19272 <__aeabi_fmul+0xce>
   1927e:	ea40 000c 	orr.w	r0, r0, ip
   19282:	f093 0f00 	teq	r3, #0
   19286:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1928a:	bf02      	ittt	eq
   1928c:	0049      	lsleq	r1, r1, #1
   1928e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   19292:	3b01      	subeq	r3, #1
   19294:	d0f9      	beq.n	1928a <__aeabi_fmul+0xe6>
   19296:	ea41 010c 	orr.w	r1, r1, ip
   1929a:	e78f      	b.n	191bc <__aeabi_fmul+0x18>
   1929c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   192a0:	ea92 0f0c 	teq	r2, ip
   192a4:	bf18      	it	ne
   192a6:	ea93 0f0c 	teqne	r3, ip
   192aa:	d00a      	beq.n	192c2 <__aeabi_fmul+0x11e>
   192ac:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   192b0:	bf18      	it	ne
   192b2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   192b6:	d1d8      	bne.n	1926a <__aeabi_fmul+0xc6>
   192b8:	ea80 0001 	eor.w	r0, r0, r1
   192bc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   192c0:	4770      	bx	lr
   192c2:	f090 0f00 	teq	r0, #0
   192c6:	bf17      	itett	ne
   192c8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   192cc:	4608      	moveq	r0, r1
   192ce:	f091 0f00 	teqne	r1, #0
   192d2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   192d6:	d014      	beq.n	19302 <__aeabi_fmul+0x15e>
   192d8:	ea92 0f0c 	teq	r2, ip
   192dc:	d101      	bne.n	192e2 <__aeabi_fmul+0x13e>
   192de:	0242      	lsls	r2, r0, #9
   192e0:	d10f      	bne.n	19302 <__aeabi_fmul+0x15e>
   192e2:	ea93 0f0c 	teq	r3, ip
   192e6:	d103      	bne.n	192f0 <__aeabi_fmul+0x14c>
   192e8:	024b      	lsls	r3, r1, #9
   192ea:	bf18      	it	ne
   192ec:	4608      	movne	r0, r1
   192ee:	d108      	bne.n	19302 <__aeabi_fmul+0x15e>
   192f0:	ea80 0001 	eor.w	r0, r0, r1
   192f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   192f8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   192fc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   19300:	4770      	bx	lr
   19302:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   19306:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1930a:	4770      	bx	lr

0001930c <__aeabi_fdiv>:
__aeabi_fdiv():
   1930c:	f04f 0cff 	mov.w	ip, #255	; 0xff
   19310:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   19314:	bf1e      	ittt	ne
   19316:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1931a:	ea92 0f0c 	teqne	r2, ip
   1931e:	ea93 0f0c 	teqne	r3, ip
   19322:	d069      	beq.n	193f8 <__aeabi_fdiv+0xec>
   19324:	eba2 0203 	sub.w	r2, r2, r3
   19328:	ea80 0c01 	eor.w	ip, r0, r1
   1932c:	0249      	lsls	r1, r1, #9
   1932e:	ea4f 2040 	mov.w	r0, r0, lsl #9
   19332:	d037      	beq.n	193a4 <__aeabi_fdiv+0x98>
   19334:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   19338:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1933c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   19340:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   19344:	428b      	cmp	r3, r1
   19346:	bf38      	it	cc
   19348:	005b      	lslcc	r3, r3, #1
   1934a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1934e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   19352:	428b      	cmp	r3, r1
   19354:	bf24      	itt	cs
   19356:	1a5b      	subcs	r3, r3, r1
   19358:	ea40 000c 	orrcs.w	r0, r0, ip
   1935c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   19360:	bf24      	itt	cs
   19362:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   19366:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1936a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1936e:	bf24      	itt	cs
   19370:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   19374:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   19378:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1937c:	bf24      	itt	cs
   1937e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   19382:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   19386:	011b      	lsls	r3, r3, #4
   19388:	bf18      	it	ne
   1938a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1938e:	d1e0      	bne.n	19352 <__aeabi_fdiv+0x46>
   19390:	2afd      	cmp	r2, #253	; 0xfd
   19392:	f63f af50 	bhi.w	19236 <__aeabi_fmul+0x92>
   19396:	428b      	cmp	r3, r1
   19398:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1939c:	bf08      	it	eq
   1939e:	f020 0001 	biceq.w	r0, r0, #1
   193a2:	4770      	bx	lr
   193a4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   193a8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   193ac:	327f      	adds	r2, #127	; 0x7f
   193ae:	bfc2      	ittt	gt
   193b0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   193b4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   193b8:	4770      	bxgt	lr
   193ba:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   193be:	f04f 0300 	mov.w	r3, #0
   193c2:	3a01      	subs	r2, #1
   193c4:	e737      	b.n	19236 <__aeabi_fmul+0x92>
   193c6:	f092 0f00 	teq	r2, #0
   193ca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   193ce:	bf02      	ittt	eq
   193d0:	0040      	lsleq	r0, r0, #1
   193d2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   193d6:	3a01      	subeq	r2, #1
   193d8:	d0f9      	beq.n	193ce <__aeabi_fdiv+0xc2>
   193da:	ea40 000c 	orr.w	r0, r0, ip
   193de:	f093 0f00 	teq	r3, #0
   193e2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   193e6:	bf02      	ittt	eq
   193e8:	0049      	lsleq	r1, r1, #1
   193ea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   193ee:	3b01      	subeq	r3, #1
   193f0:	d0f9      	beq.n	193e6 <__aeabi_fdiv+0xda>
   193f2:	ea41 010c 	orr.w	r1, r1, ip
   193f6:	e795      	b.n	19324 <__aeabi_fdiv+0x18>
   193f8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   193fc:	ea92 0f0c 	teq	r2, ip
   19400:	d108      	bne.n	19414 <__aeabi_fdiv+0x108>
   19402:	0242      	lsls	r2, r0, #9
   19404:	f47f af7d 	bne.w	19302 <__aeabi_fmul+0x15e>
   19408:	ea93 0f0c 	teq	r3, ip
   1940c:	f47f af70 	bne.w	192f0 <__aeabi_fmul+0x14c>
   19410:	4608      	mov	r0, r1
   19412:	e776      	b.n	19302 <__aeabi_fmul+0x15e>
   19414:	ea93 0f0c 	teq	r3, ip
   19418:	d104      	bne.n	19424 <__aeabi_fdiv+0x118>
   1941a:	024b      	lsls	r3, r1, #9
   1941c:	f43f af4c 	beq.w	192b8 <__aeabi_fmul+0x114>
   19420:	4608      	mov	r0, r1
   19422:	e76e      	b.n	19302 <__aeabi_fmul+0x15e>
   19424:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   19428:	bf18      	it	ne
   1942a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1942e:	d1ca      	bne.n	193c6 <__aeabi_fdiv+0xba>
   19430:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   19434:	f47f af5c 	bne.w	192f0 <__aeabi_fmul+0x14c>
   19438:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1943c:	f47f af3c 	bne.w	192b8 <__aeabi_fmul+0x114>
   19440:	e75f      	b.n	19302 <__aeabi_fmul+0x15e>
   19442:	bf00      	nop

00019444 <__aeabi_f2uiz>:
__fixunssfsi():
   19444:	0042      	lsls	r2, r0, #1
   19446:	d20e      	bcs.n	19466 <__aeabi_f2uiz+0x22>
   19448:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1944c:	d30b      	bcc.n	19466 <__aeabi_f2uiz+0x22>
   1944e:	f04f 039e 	mov.w	r3, #158	; 0x9e
   19452:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   19456:	d409      	bmi.n	1946c <__aeabi_f2uiz+0x28>
   19458:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1945c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   19460:	fa23 f002 	lsr.w	r0, r3, r2
   19464:	4770      	bx	lr
   19466:	f04f 0000 	mov.w	r0, #0
   1946a:	4770      	bx	lr
   1946c:	f112 0f61 	cmn.w	r2, #97	; 0x61
   19470:	d101      	bne.n	19476 <__aeabi_f2uiz+0x32>
   19472:	0242      	lsls	r2, r0, #9
   19474:	d102      	bne.n	1947c <__aeabi_f2uiz+0x38>
   19476:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1947a:	4770      	bx	lr
   1947c:	f04f 0000 	mov.w	r0, #0
   19480:	4770      	bx	lr
   19482:	bf00      	nop

00019484 <__aeabi_uldivmod>:
__aeabi_uldivmod():
   19484:	b953      	cbnz	r3, 1949c <__aeabi_uldivmod+0x18>
   19486:	b94a      	cbnz	r2, 1949c <__aeabi_uldivmod+0x18>
   19488:	2900      	cmp	r1, #0
   1948a:	bf08      	it	eq
   1948c:	2800      	cmpeq	r0, #0
   1948e:	bf1c      	itt	ne
   19490:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   19494:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   19498:	f000 b97a 	b.w	19790 <__aeabi_idiv0>
   1949c:	f1ad 0c08 	sub.w	ip, sp, #8
   194a0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   194a4:	f000 f806 	bl	194b4 <__udivmoddi4>
   194a8:	f8dd e004 	ldr.w	lr, [sp, #4]
   194ac:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   194b0:	b004      	add	sp, #16
   194b2:	4770      	bx	lr

000194b4 <__udivmoddi4>:
__udivmoddi4():
   194b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   194b8:	468c      	mov	ip, r1
   194ba:	460e      	mov	r6, r1
   194bc:	4604      	mov	r4, r0
   194be:	9d08      	ldr	r5, [sp, #32]
   194c0:	2b00      	cmp	r3, #0
   194c2:	d150      	bne.n	19566 <__udivmoddi4+0xb2>
   194c4:	428a      	cmp	r2, r1
   194c6:	4617      	mov	r7, r2
   194c8:	d96c      	bls.n	195a4 <__udivmoddi4+0xf0>
   194ca:	fab2 fe82 	clz	lr, r2
   194ce:	f1be 0f00 	cmp.w	lr, #0
   194d2:	d00b      	beq.n	194ec <__udivmoddi4+0x38>
   194d4:	f1ce 0c20 	rsb	ip, lr, #32
   194d8:	fa01 f60e 	lsl.w	r6, r1, lr
   194dc:	fa20 fc0c 	lsr.w	ip, r0, ip
   194e0:	fa02 f70e 	lsl.w	r7, r2, lr
   194e4:	ea4c 0c06 	orr.w	ip, ip, r6
   194e8:	fa00 f40e 	lsl.w	r4, r0, lr
   194ec:	0c3a      	lsrs	r2, r7, #16
   194ee:	fbbc f9f2 	udiv	r9, ip, r2
   194f2:	b2bb      	uxth	r3, r7
   194f4:	fb02 cc19 	mls	ip, r2, r9, ip
   194f8:	fb09 fa03 	mul.w	sl, r9, r3
   194fc:	ea4f 4814 	mov.w	r8, r4, lsr #16
   19500:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   19504:	45b2      	cmp	sl, r6
   19506:	d90a      	bls.n	1951e <__udivmoddi4+0x6a>
   19508:	19f6      	adds	r6, r6, r7
   1950a:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
   1950e:	f080 8125 	bcs.w	1975c <__udivmoddi4+0x2a8>
   19512:	45b2      	cmp	sl, r6
   19514:	f240 8122 	bls.w	1975c <__udivmoddi4+0x2a8>
   19518:	f1a9 0902 	sub.w	r9, r9, #2
   1951c:	443e      	add	r6, r7
   1951e:	eba6 060a 	sub.w	r6, r6, sl
   19522:	fbb6 f0f2 	udiv	r0, r6, r2
   19526:	fb02 6610 	mls	r6, r2, r0, r6
   1952a:	fb00 f303 	mul.w	r3, r0, r3
   1952e:	b2a4      	uxth	r4, r4
   19530:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   19534:	42a3      	cmp	r3, r4
   19536:	d909      	bls.n	1954c <__udivmoddi4+0x98>
   19538:	19e4      	adds	r4, r4, r7
   1953a:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
   1953e:	f080 810b 	bcs.w	19758 <__udivmoddi4+0x2a4>
   19542:	42a3      	cmp	r3, r4
   19544:	f240 8108 	bls.w	19758 <__udivmoddi4+0x2a4>
   19548:	3802      	subs	r0, #2
   1954a:	443c      	add	r4, r7
   1954c:	2100      	movs	r1, #0
   1954e:	1ae4      	subs	r4, r4, r3
   19550:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   19554:	2d00      	cmp	r5, #0
   19556:	d062      	beq.n	1961e <__udivmoddi4+0x16a>
   19558:	2300      	movs	r3, #0
   1955a:	fa24 f40e 	lsr.w	r4, r4, lr
   1955e:	602c      	str	r4, [r5, #0]
   19560:	606b      	str	r3, [r5, #4]
   19562:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19566:	428b      	cmp	r3, r1
   19568:	d907      	bls.n	1957a <__udivmoddi4+0xc6>
   1956a:	2d00      	cmp	r5, #0
   1956c:	d055      	beq.n	1961a <__udivmoddi4+0x166>
   1956e:	2100      	movs	r1, #0
   19570:	e885 0041 	stmia.w	r5, {r0, r6}
   19574:	4608      	mov	r0, r1
   19576:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1957a:	fab3 f183 	clz	r1, r3
   1957e:	2900      	cmp	r1, #0
   19580:	f040 808f 	bne.w	196a2 <__udivmoddi4+0x1ee>
   19584:	42b3      	cmp	r3, r6
   19586:	d302      	bcc.n	1958e <__udivmoddi4+0xda>
   19588:	4282      	cmp	r2, r0
   1958a:	f200 80fc 	bhi.w	19786 <__udivmoddi4+0x2d2>
   1958e:	1a84      	subs	r4, r0, r2
   19590:	eb66 0603 	sbc.w	r6, r6, r3
   19594:	2001      	movs	r0, #1
   19596:	46b4      	mov	ip, r6
   19598:	2d00      	cmp	r5, #0
   1959a:	d040      	beq.n	1961e <__udivmoddi4+0x16a>
   1959c:	e885 1010 	stmia.w	r5, {r4, ip}
   195a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   195a4:	b912      	cbnz	r2, 195ac <__udivmoddi4+0xf8>
   195a6:	2701      	movs	r7, #1
   195a8:	fbb7 f7f2 	udiv	r7, r7, r2
   195ac:	fab7 fe87 	clz	lr, r7
   195b0:	f1be 0f00 	cmp.w	lr, #0
   195b4:	d135      	bne.n	19622 <__udivmoddi4+0x16e>
   195b6:	2101      	movs	r1, #1
   195b8:	1bf6      	subs	r6, r6, r7
   195ba:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   195be:	fa1f f887 	uxth.w	r8, r7
   195c2:	fbb6 f2fc 	udiv	r2, r6, ip
   195c6:	fb0c 6612 	mls	r6, ip, r2, r6
   195ca:	fb08 f002 	mul.w	r0, r8, r2
   195ce:	0c23      	lsrs	r3, r4, #16
   195d0:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   195d4:	42b0      	cmp	r0, r6
   195d6:	d907      	bls.n	195e8 <__udivmoddi4+0x134>
   195d8:	19f6      	adds	r6, r6, r7
   195da:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
   195de:	d202      	bcs.n	195e6 <__udivmoddi4+0x132>
   195e0:	42b0      	cmp	r0, r6
   195e2:	f200 80d2 	bhi.w	1978a <__udivmoddi4+0x2d6>
   195e6:	461a      	mov	r2, r3
   195e8:	1a36      	subs	r6, r6, r0
   195ea:	fbb6 f0fc 	udiv	r0, r6, ip
   195ee:	fb0c 6610 	mls	r6, ip, r0, r6
   195f2:	fb08 f800 	mul.w	r8, r8, r0
   195f6:	b2a3      	uxth	r3, r4
   195f8:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   195fc:	45a0      	cmp	r8, r4
   195fe:	d907      	bls.n	19610 <__udivmoddi4+0x15c>
   19600:	19e4      	adds	r4, r4, r7
   19602:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   19606:	d202      	bcs.n	1960e <__udivmoddi4+0x15a>
   19608:	45a0      	cmp	r8, r4
   1960a:	f200 80b9 	bhi.w	19780 <__udivmoddi4+0x2cc>
   1960e:	4618      	mov	r0, r3
   19610:	eba4 0408 	sub.w	r4, r4, r8
   19614:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   19618:	e79c      	b.n	19554 <__udivmoddi4+0xa0>
   1961a:	4629      	mov	r1, r5
   1961c:	4628      	mov	r0, r5
   1961e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19622:	fa07 f70e 	lsl.w	r7, r7, lr
   19626:	f1ce 0320 	rsb	r3, lr, #32
   1962a:	fa26 f203 	lsr.w	r2, r6, r3
   1962e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   19632:	fbb2 f1fc 	udiv	r1, r2, ip
   19636:	fa1f f887 	uxth.w	r8, r7
   1963a:	fb0c 2211 	mls	r2, ip, r1, r2
   1963e:	fa06 f60e 	lsl.w	r6, r6, lr
   19642:	fa20 f303 	lsr.w	r3, r0, r3
   19646:	fb01 f908 	mul.w	r9, r1, r8
   1964a:	4333      	orrs	r3, r6
   1964c:	0c1e      	lsrs	r6, r3, #16
   1964e:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   19652:	45b1      	cmp	r9, r6
   19654:	fa00 f40e 	lsl.w	r4, r0, lr
   19658:	d909      	bls.n	1966e <__udivmoddi4+0x1ba>
   1965a:	19f6      	adds	r6, r6, r7
   1965c:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   19660:	f080 808c 	bcs.w	1977c <__udivmoddi4+0x2c8>
   19664:	45b1      	cmp	r9, r6
   19666:	f240 8089 	bls.w	1977c <__udivmoddi4+0x2c8>
   1966a:	3902      	subs	r1, #2
   1966c:	443e      	add	r6, r7
   1966e:	eba6 0609 	sub.w	r6, r6, r9
   19672:	fbb6 f0fc 	udiv	r0, r6, ip
   19676:	fb0c 6210 	mls	r2, ip, r0, r6
   1967a:	fb00 f908 	mul.w	r9, r0, r8
   1967e:	b29e      	uxth	r6, r3
   19680:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   19684:	45b1      	cmp	r9, r6
   19686:	d907      	bls.n	19698 <__udivmoddi4+0x1e4>
   19688:	19f6      	adds	r6, r6, r7
   1968a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   1968e:	d271      	bcs.n	19774 <__udivmoddi4+0x2c0>
   19690:	45b1      	cmp	r9, r6
   19692:	d96f      	bls.n	19774 <__udivmoddi4+0x2c0>
   19694:	3802      	subs	r0, #2
   19696:	443e      	add	r6, r7
   19698:	eba6 0609 	sub.w	r6, r6, r9
   1969c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   196a0:	e78f      	b.n	195c2 <__udivmoddi4+0x10e>
   196a2:	f1c1 0720 	rsb	r7, r1, #32
   196a6:	fa22 f807 	lsr.w	r8, r2, r7
   196aa:	408b      	lsls	r3, r1
   196ac:	ea48 0303 	orr.w	r3, r8, r3
   196b0:	fa26 f407 	lsr.w	r4, r6, r7
   196b4:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   196b8:	fbb4 f9fe 	udiv	r9, r4, lr
   196bc:	fa1f fc83 	uxth.w	ip, r3
   196c0:	fb0e 4419 	mls	r4, lr, r9, r4
   196c4:	408e      	lsls	r6, r1
   196c6:	fa20 f807 	lsr.w	r8, r0, r7
   196ca:	fb09 fa0c 	mul.w	sl, r9, ip
   196ce:	ea48 0806 	orr.w	r8, r8, r6
   196d2:	ea4f 4618 	mov.w	r6, r8, lsr #16
   196d6:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   196da:	45a2      	cmp	sl, r4
   196dc:	fa02 f201 	lsl.w	r2, r2, r1
   196e0:	fa00 f601 	lsl.w	r6, r0, r1
   196e4:	d908      	bls.n	196f8 <__udivmoddi4+0x244>
   196e6:	18e4      	adds	r4, r4, r3
   196e8:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   196ec:	d244      	bcs.n	19778 <__udivmoddi4+0x2c4>
   196ee:	45a2      	cmp	sl, r4
   196f0:	d942      	bls.n	19778 <__udivmoddi4+0x2c4>
   196f2:	f1a9 0902 	sub.w	r9, r9, #2
   196f6:	441c      	add	r4, r3
   196f8:	eba4 040a 	sub.w	r4, r4, sl
   196fc:	fbb4 f0fe 	udiv	r0, r4, lr
   19700:	fb0e 4410 	mls	r4, lr, r0, r4
   19704:	fb00 fc0c 	mul.w	ip, r0, ip
   19708:	fa1f f888 	uxth.w	r8, r8
   1970c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   19710:	45a4      	cmp	ip, r4
   19712:	d907      	bls.n	19724 <__udivmoddi4+0x270>
   19714:	18e4      	adds	r4, r4, r3
   19716:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   1971a:	d229      	bcs.n	19770 <__udivmoddi4+0x2bc>
   1971c:	45a4      	cmp	ip, r4
   1971e:	d927      	bls.n	19770 <__udivmoddi4+0x2bc>
   19720:	3802      	subs	r0, #2
   19722:	441c      	add	r4, r3
   19724:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   19728:	fba0 8902 	umull	r8, r9, r0, r2
   1972c:	eba4 0c0c 	sub.w	ip, r4, ip
   19730:	45cc      	cmp	ip, r9
   19732:	46c2      	mov	sl, r8
   19734:	46ce      	mov	lr, r9
   19736:	d315      	bcc.n	19764 <__udivmoddi4+0x2b0>
   19738:	d012      	beq.n	19760 <__udivmoddi4+0x2ac>
   1973a:	b155      	cbz	r5, 19752 <__udivmoddi4+0x29e>
   1973c:	ebb6 030a 	subs.w	r3, r6, sl
   19740:	eb6c 060e 	sbc.w	r6, ip, lr
   19744:	fa06 f707 	lsl.w	r7, r6, r7
   19748:	40cb      	lsrs	r3, r1
   1974a:	431f      	orrs	r7, r3
   1974c:	40ce      	lsrs	r6, r1
   1974e:	602f      	str	r7, [r5, #0]
   19750:	606e      	str	r6, [r5, #4]
   19752:	2100      	movs	r1, #0
   19754:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19758:	4610      	mov	r0, r2
   1975a:	e6f7      	b.n	1954c <__udivmoddi4+0x98>
   1975c:	4689      	mov	r9, r1
   1975e:	e6de      	b.n	1951e <__udivmoddi4+0x6a>
   19760:	4546      	cmp	r6, r8
   19762:	d2ea      	bcs.n	1973a <__udivmoddi4+0x286>
   19764:	ebb8 0a02 	subs.w	sl, r8, r2
   19768:	eb69 0e03 	sbc.w	lr, r9, r3
   1976c:	3801      	subs	r0, #1
   1976e:	e7e4      	b.n	1973a <__udivmoddi4+0x286>
   19770:	4670      	mov	r0, lr
   19772:	e7d7      	b.n	19724 <__udivmoddi4+0x270>
   19774:	4618      	mov	r0, r3
   19776:	e78f      	b.n	19698 <__udivmoddi4+0x1e4>
   19778:	4681      	mov	r9, r0
   1977a:	e7bd      	b.n	196f8 <__udivmoddi4+0x244>
   1977c:	4611      	mov	r1, r2
   1977e:	e776      	b.n	1966e <__udivmoddi4+0x1ba>
   19780:	3802      	subs	r0, #2
   19782:	443c      	add	r4, r7
   19784:	e744      	b.n	19610 <__udivmoddi4+0x15c>
   19786:	4608      	mov	r0, r1
   19788:	e706      	b.n	19598 <__udivmoddi4+0xe4>
   1978a:	3a02      	subs	r2, #2
   1978c:	443e      	add	r6, r7
   1978e:	e72b      	b.n	195e8 <__udivmoddi4+0x134>

00019790 <__aeabi_idiv0>:
__aeabi_idiv0():
   19790:	4770      	bx	lr
   19792:	bf00      	nop

00019794 <abort>:
abort():
   19794:	b508      	push	{r3, lr}
   19796:	2006      	movs	r0, #6
   19798:	f001 fec6 	bl	1b528 <raise>
   1979c:	2001      	movs	r0, #1
   1979e:	f7fd fe0f 	bl	173c0 <_exit>

000197a2 <atoi>:
atoi():
   197a2:	220a      	movs	r2, #10
   197a4:	2100      	movs	r1, #0
   197a6:	f002 be6d 	b.w	1c484 <strtol>
   197aa:	Address 0x00000000000197aa is out of bounds.


000197ac <__errno>:
__errno():
   197ac:	4b01      	ldr	r3, [pc, #4]	; (197b4 <__errno+0x8>)
   197ae:	6818      	ldr	r0, [r3, #0]
   197b0:	4770      	bx	lr
   197b2:	bf00      	nop
   197b4:	2007c0e0 	.word	0x2007c0e0

000197b8 <__sflush_r>:
__sflush_r():
   197b8:	898a      	ldrh	r2, [r1, #12]
   197ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   197be:	4605      	mov	r5, r0
   197c0:	0710      	lsls	r0, r2, #28
   197c2:	460c      	mov	r4, r1
   197c4:	d45a      	bmi.n	1987c <__sflush_r+0xc4>
   197c6:	684b      	ldr	r3, [r1, #4]
   197c8:	2b00      	cmp	r3, #0
   197ca:	dc05      	bgt.n	197d8 <__sflush_r+0x20>
   197cc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   197ce:	2b00      	cmp	r3, #0
   197d0:	dc02      	bgt.n	197d8 <__sflush_r+0x20>
   197d2:	2000      	movs	r0, #0
   197d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   197d8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   197da:	2e00      	cmp	r6, #0
   197dc:	d0f9      	beq.n	197d2 <__sflush_r+0x1a>
   197de:	2300      	movs	r3, #0
   197e0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   197e4:	682f      	ldr	r7, [r5, #0]
   197e6:	602b      	str	r3, [r5, #0]
   197e8:	d033      	beq.n	19852 <__sflush_r+0x9a>
   197ea:	6d60      	ldr	r0, [r4, #84]	; 0x54
   197ec:	89a3      	ldrh	r3, [r4, #12]
   197ee:	075a      	lsls	r2, r3, #29
   197f0:	d505      	bpl.n	197fe <__sflush_r+0x46>
   197f2:	6863      	ldr	r3, [r4, #4]
   197f4:	1ac0      	subs	r0, r0, r3
   197f6:	6b63      	ldr	r3, [r4, #52]	; 0x34
   197f8:	b10b      	cbz	r3, 197fe <__sflush_r+0x46>
   197fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
   197fc:	1ac0      	subs	r0, r0, r3
   197fe:	2300      	movs	r3, #0
   19800:	4602      	mov	r2, r0
   19802:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   19804:	6a21      	ldr	r1, [r4, #32]
   19806:	4628      	mov	r0, r5
   19808:	47b0      	blx	r6
   1980a:	1c43      	adds	r3, r0, #1
   1980c:	89a3      	ldrh	r3, [r4, #12]
   1980e:	d106      	bne.n	1981e <__sflush_r+0x66>
   19810:	6829      	ldr	r1, [r5, #0]
   19812:	291d      	cmp	r1, #29
   19814:	d84b      	bhi.n	198ae <__sflush_r+0xf6>
   19816:	4a2b      	ldr	r2, [pc, #172]	; (198c4 <__sflush_r+0x10c>)
   19818:	40ca      	lsrs	r2, r1
   1981a:	07d6      	lsls	r6, r2, #31
   1981c:	d547      	bpl.n	198ae <__sflush_r+0xf6>
   1981e:	2200      	movs	r2, #0
   19820:	6062      	str	r2, [r4, #4]
   19822:	6922      	ldr	r2, [r4, #16]
   19824:	04d9      	lsls	r1, r3, #19
   19826:	6022      	str	r2, [r4, #0]
   19828:	d504      	bpl.n	19834 <__sflush_r+0x7c>
   1982a:	1c42      	adds	r2, r0, #1
   1982c:	d101      	bne.n	19832 <__sflush_r+0x7a>
   1982e:	682b      	ldr	r3, [r5, #0]
   19830:	b903      	cbnz	r3, 19834 <__sflush_r+0x7c>
   19832:	6560      	str	r0, [r4, #84]	; 0x54
   19834:	6b61      	ldr	r1, [r4, #52]	; 0x34
   19836:	602f      	str	r7, [r5, #0]
   19838:	2900      	cmp	r1, #0
   1983a:	d0ca      	beq.n	197d2 <__sflush_r+0x1a>
   1983c:	f104 0344 	add.w	r3, r4, #68	; 0x44
   19840:	4299      	cmp	r1, r3
   19842:	d002      	beq.n	1984a <__sflush_r+0x92>
   19844:	4628      	mov	r0, r5
   19846:	f000 fcdb 	bl	1a200 <_free_r>
   1984a:	2000      	movs	r0, #0
   1984c:	6360      	str	r0, [r4, #52]	; 0x34
   1984e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19852:	6a21      	ldr	r1, [r4, #32]
   19854:	2301      	movs	r3, #1
   19856:	4628      	mov	r0, r5
   19858:	47b0      	blx	r6
   1985a:	1c41      	adds	r1, r0, #1
   1985c:	d1c6      	bne.n	197ec <__sflush_r+0x34>
   1985e:	682b      	ldr	r3, [r5, #0]
   19860:	2b00      	cmp	r3, #0
   19862:	d0c3      	beq.n	197ec <__sflush_r+0x34>
   19864:	2b1d      	cmp	r3, #29
   19866:	d001      	beq.n	1986c <__sflush_r+0xb4>
   19868:	2b16      	cmp	r3, #22
   1986a:	d101      	bne.n	19870 <__sflush_r+0xb8>
   1986c:	602f      	str	r7, [r5, #0]
   1986e:	e7b0      	b.n	197d2 <__sflush_r+0x1a>
   19870:	89a3      	ldrh	r3, [r4, #12]
   19872:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   19876:	81a3      	strh	r3, [r4, #12]
   19878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1987c:	690f      	ldr	r7, [r1, #16]
   1987e:	2f00      	cmp	r7, #0
   19880:	d0a7      	beq.n	197d2 <__sflush_r+0x1a>
   19882:	0793      	lsls	r3, r2, #30
   19884:	bf18      	it	ne
   19886:	2300      	movne	r3, #0
   19888:	680e      	ldr	r6, [r1, #0]
   1988a:	bf08      	it	eq
   1988c:	694b      	ldreq	r3, [r1, #20]
   1988e:	eba6 0807 	sub.w	r8, r6, r7
   19892:	600f      	str	r7, [r1, #0]
   19894:	608b      	str	r3, [r1, #8]
   19896:	f1b8 0f00 	cmp.w	r8, #0
   1989a:	dd9a      	ble.n	197d2 <__sflush_r+0x1a>
   1989c:	4643      	mov	r3, r8
   1989e:	463a      	mov	r2, r7
   198a0:	6a21      	ldr	r1, [r4, #32]
   198a2:	4628      	mov	r0, r5
   198a4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   198a6:	47b0      	blx	r6
   198a8:	2800      	cmp	r0, #0
   198aa:	dc07      	bgt.n	198bc <__sflush_r+0x104>
   198ac:	89a3      	ldrh	r3, [r4, #12]
   198ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   198b2:	81a3      	strh	r3, [r4, #12]
   198b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   198b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   198bc:	4407      	add	r7, r0
   198be:	eba8 0800 	sub.w	r8, r8, r0
   198c2:	e7e8      	b.n	19896 <__sflush_r+0xde>
   198c4:	20400001 	.word	0x20400001

000198c8 <_fflush_r>:
_fflush_r():
   198c8:	b538      	push	{r3, r4, r5, lr}
   198ca:	690b      	ldr	r3, [r1, #16]
   198cc:	4605      	mov	r5, r0
   198ce:	460c      	mov	r4, r1
   198d0:	b1db      	cbz	r3, 1990a <_fflush_r+0x42>
   198d2:	b118      	cbz	r0, 198dc <_fflush_r+0x14>
   198d4:	6983      	ldr	r3, [r0, #24]
   198d6:	b90b      	cbnz	r3, 198dc <_fflush_r+0x14>
   198d8:	f000 f872 	bl	199c0 <__sinit>
   198dc:	4b0c      	ldr	r3, [pc, #48]	; (19910 <_fflush_r+0x48>)
   198de:	429c      	cmp	r4, r3
   198e0:	d109      	bne.n	198f6 <_fflush_r+0x2e>
   198e2:	686c      	ldr	r4, [r5, #4]
   198e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   198e8:	b17b      	cbz	r3, 1990a <_fflush_r+0x42>
   198ea:	4621      	mov	r1, r4
   198ec:	4628      	mov	r0, r5
   198ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   198f2:	f7ff bf61 	b.w	197b8 <__sflush_r>
   198f6:	4b07      	ldr	r3, [pc, #28]	; (19914 <_fflush_r+0x4c>)
   198f8:	429c      	cmp	r4, r3
   198fa:	d101      	bne.n	19900 <_fflush_r+0x38>
   198fc:	68ac      	ldr	r4, [r5, #8]
   198fe:	e7f1      	b.n	198e4 <_fflush_r+0x1c>
   19900:	4b05      	ldr	r3, [pc, #20]	; (19918 <_fflush_r+0x50>)
   19902:	429c      	cmp	r4, r3
   19904:	bf08      	it	eq
   19906:	68ec      	ldreq	r4, [r5, #12]
   19908:	e7ec      	b.n	198e4 <_fflush_r+0x1c>
   1990a:	2000      	movs	r0, #0
   1990c:	bd38      	pop	{r3, r4, r5, pc}
   1990e:	bf00      	nop
   19910:	00021080 	.word	0x00021080
   19914:	000210a0 	.word	0x000210a0
   19918:	00021060 	.word	0x00021060

0001991c <fflush>:
fflush():
   1991c:	4601      	mov	r1, r0
   1991e:	b920      	cbnz	r0, 1992a <fflush+0xe>
   19920:	4b04      	ldr	r3, [pc, #16]	; (19934 <fflush+0x18>)
   19922:	4905      	ldr	r1, [pc, #20]	; (19938 <fflush+0x1c>)
   19924:	6818      	ldr	r0, [r3, #0]
   19926:	f000 b8d3 	b.w	19ad0 <_fwalk_reent>
   1992a:	4b04      	ldr	r3, [pc, #16]	; (1993c <fflush+0x20>)
   1992c:	6818      	ldr	r0, [r3, #0]
   1992e:	f7ff bfcb 	b.w	198c8 <_fflush_r>
   19932:	bf00      	nop
   19934:	000210c0 	.word	0x000210c0
   19938:	000198c9 	.word	0x000198c9
   1993c:	2007c0e0 	.word	0x2007c0e0

00019940 <_cleanup_r>:
_cleanup_r():
   19940:	4901      	ldr	r1, [pc, #4]	; (19948 <_cleanup_r+0x8>)
   19942:	f000 b8c5 	b.w	19ad0 <_fwalk_reent>
   19946:	bf00      	nop
   19948:	000198c9 	.word	0x000198c9

0001994c <std.isra.0>:
std.isra.0():
   1994c:	2300      	movs	r3, #0
   1994e:	b510      	push	{r4, lr}
   19950:	4604      	mov	r4, r0
   19952:	6003      	str	r3, [r0, #0]
   19954:	6043      	str	r3, [r0, #4]
   19956:	6083      	str	r3, [r0, #8]
   19958:	8181      	strh	r1, [r0, #12]
   1995a:	6643      	str	r3, [r0, #100]	; 0x64
   1995c:	81c2      	strh	r2, [r0, #14]
   1995e:	6103      	str	r3, [r0, #16]
   19960:	6143      	str	r3, [r0, #20]
   19962:	6183      	str	r3, [r0, #24]
   19964:	4619      	mov	r1, r3
   19966:	2208      	movs	r2, #8
   19968:	305c      	adds	r0, #92	; 0x5c
   1996a:	f000 f9cd 	bl	19d08 <memset>
   1996e:	4b05      	ldr	r3, [pc, #20]	; (19984 <std.isra.0+0x38>)
   19970:	6224      	str	r4, [r4, #32]
   19972:	6263      	str	r3, [r4, #36]	; 0x24
   19974:	4b04      	ldr	r3, [pc, #16]	; (19988 <std.isra.0+0x3c>)
   19976:	62a3      	str	r3, [r4, #40]	; 0x28
   19978:	4b04      	ldr	r3, [pc, #16]	; (1998c <std.isra.0+0x40>)
   1997a:	62e3      	str	r3, [r4, #44]	; 0x2c
   1997c:	4b04      	ldr	r3, [pc, #16]	; (19990 <std.isra.0+0x44>)
   1997e:	6323      	str	r3, [r4, #48]	; 0x30
   19980:	bd10      	pop	{r4, pc}
   19982:	bf00      	nop
   19984:	0001b5fd 	.word	0x0001b5fd
   19988:	0001b623 	.word	0x0001b623
   1998c:	0001b65b 	.word	0x0001b65b
   19990:	0001b67f 	.word	0x0001b67f

00019994 <__sfmoreglue>:
__sfmoreglue():
   19994:	b570      	push	{r4, r5, r6, lr}
   19996:	2568      	movs	r5, #104	; 0x68
   19998:	1e4a      	subs	r2, r1, #1
   1999a:	4355      	muls	r5, r2
   1999c:	460e      	mov	r6, r1
   1999e:	f105 0174 	add.w	r1, r5, #116	; 0x74
   199a2:	f000 fcab 	bl	1a2fc <_malloc_r>
   199a6:	4604      	mov	r4, r0
   199a8:	b140      	cbz	r0, 199bc <__sfmoreglue+0x28>
   199aa:	2100      	movs	r1, #0
   199ac:	e880 0042 	stmia.w	r0, {r1, r6}
   199b0:	300c      	adds	r0, #12
   199b2:	60a0      	str	r0, [r4, #8]
   199b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
   199b8:	f000 f9a6 	bl	19d08 <memset>
   199bc:	4620      	mov	r0, r4
   199be:	bd70      	pop	{r4, r5, r6, pc}

000199c0 <__sinit>:
__sinit():
   199c0:	6983      	ldr	r3, [r0, #24]
   199c2:	b510      	push	{r4, lr}
   199c4:	4604      	mov	r4, r0
   199c6:	bb33      	cbnz	r3, 19a16 <__sinit+0x56>
   199c8:	6483      	str	r3, [r0, #72]	; 0x48
   199ca:	64c3      	str	r3, [r0, #76]	; 0x4c
   199cc:	6503      	str	r3, [r0, #80]	; 0x50
   199ce:	4b12      	ldr	r3, [pc, #72]	; (19a18 <__sinit+0x58>)
   199d0:	4a12      	ldr	r2, [pc, #72]	; (19a1c <__sinit+0x5c>)
   199d2:	681b      	ldr	r3, [r3, #0]
   199d4:	6282      	str	r2, [r0, #40]	; 0x28
   199d6:	4298      	cmp	r0, r3
   199d8:	bf04      	itt	eq
   199da:	2301      	moveq	r3, #1
   199dc:	6183      	streq	r3, [r0, #24]
   199de:	f000 f81f 	bl	19a20 <__sfp>
   199e2:	6060      	str	r0, [r4, #4]
   199e4:	4620      	mov	r0, r4
   199e6:	f000 f81b 	bl	19a20 <__sfp>
   199ea:	60a0      	str	r0, [r4, #8]
   199ec:	4620      	mov	r0, r4
   199ee:	f000 f817 	bl	19a20 <__sfp>
   199f2:	2200      	movs	r2, #0
   199f4:	60e0      	str	r0, [r4, #12]
   199f6:	2104      	movs	r1, #4
   199f8:	6860      	ldr	r0, [r4, #4]
   199fa:	f7ff ffa7 	bl	1994c <std.isra.0>
   199fe:	2201      	movs	r2, #1
   19a00:	2109      	movs	r1, #9
   19a02:	68a0      	ldr	r0, [r4, #8]
   19a04:	f7ff ffa2 	bl	1994c <std.isra.0>
   19a08:	2202      	movs	r2, #2
   19a0a:	2112      	movs	r1, #18
   19a0c:	68e0      	ldr	r0, [r4, #12]
   19a0e:	f7ff ff9d 	bl	1994c <std.isra.0>
   19a12:	2301      	movs	r3, #1
   19a14:	61a3      	str	r3, [r4, #24]
   19a16:	bd10      	pop	{r4, pc}
   19a18:	000210c0 	.word	0x000210c0
   19a1c:	00019941 	.word	0x00019941

00019a20 <__sfp>:
__sfp():
   19a20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   19a22:	4b1c      	ldr	r3, [pc, #112]	; (19a94 <__sfp+0x74>)
   19a24:	4607      	mov	r7, r0
   19a26:	681e      	ldr	r6, [r3, #0]
   19a28:	69b3      	ldr	r3, [r6, #24]
   19a2a:	b913      	cbnz	r3, 19a32 <__sfp+0x12>
   19a2c:	4630      	mov	r0, r6
   19a2e:	f7ff ffc7 	bl	199c0 <__sinit>
   19a32:	3648      	adds	r6, #72	; 0x48
   19a34:	68b4      	ldr	r4, [r6, #8]
   19a36:	6873      	ldr	r3, [r6, #4]
   19a38:	3b01      	subs	r3, #1
   19a3a:	d503      	bpl.n	19a44 <__sfp+0x24>
   19a3c:	6833      	ldr	r3, [r6, #0]
   19a3e:	b133      	cbz	r3, 19a4e <__sfp+0x2e>
   19a40:	6836      	ldr	r6, [r6, #0]
   19a42:	e7f7      	b.n	19a34 <__sfp+0x14>
   19a44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   19a48:	b16d      	cbz	r5, 19a66 <__sfp+0x46>
   19a4a:	3468      	adds	r4, #104	; 0x68
   19a4c:	e7f4      	b.n	19a38 <__sfp+0x18>
   19a4e:	2104      	movs	r1, #4
   19a50:	4638      	mov	r0, r7
   19a52:	f7ff ff9f 	bl	19994 <__sfmoreglue>
   19a56:	6030      	str	r0, [r6, #0]
   19a58:	2800      	cmp	r0, #0
   19a5a:	d1f1      	bne.n	19a40 <__sfp+0x20>
   19a5c:	230c      	movs	r3, #12
   19a5e:	4604      	mov	r4, r0
   19a60:	603b      	str	r3, [r7, #0]
   19a62:	4620      	mov	r0, r4
   19a64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19a66:	f64f 73ff 	movw	r3, #65535	; 0xffff
   19a6a:	81e3      	strh	r3, [r4, #14]
   19a6c:	2301      	movs	r3, #1
   19a6e:	6665      	str	r5, [r4, #100]	; 0x64
   19a70:	81a3      	strh	r3, [r4, #12]
   19a72:	6025      	str	r5, [r4, #0]
   19a74:	60a5      	str	r5, [r4, #8]
   19a76:	6065      	str	r5, [r4, #4]
   19a78:	6125      	str	r5, [r4, #16]
   19a7a:	6165      	str	r5, [r4, #20]
   19a7c:	61a5      	str	r5, [r4, #24]
   19a7e:	2208      	movs	r2, #8
   19a80:	4629      	mov	r1, r5
   19a82:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   19a86:	f000 f93f 	bl	19d08 <memset>
   19a8a:	6365      	str	r5, [r4, #52]	; 0x34
   19a8c:	63a5      	str	r5, [r4, #56]	; 0x38
   19a8e:	64a5      	str	r5, [r4, #72]	; 0x48
   19a90:	64e5      	str	r5, [r4, #76]	; 0x4c
   19a92:	e7e6      	b.n	19a62 <__sfp+0x42>
   19a94:	000210c0 	.word	0x000210c0

00019a98 <_fwalk>:
_fwalk():
   19a98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19a9c:	4688      	mov	r8, r1
   19a9e:	2600      	movs	r6, #0
   19aa0:	f100 0448 	add.w	r4, r0, #72	; 0x48
   19aa4:	b914      	cbnz	r4, 19aac <_fwalk+0x14>
   19aa6:	4630      	mov	r0, r6
   19aa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19aac:	68a5      	ldr	r5, [r4, #8]
   19aae:	6867      	ldr	r7, [r4, #4]
   19ab0:	3f01      	subs	r7, #1
   19ab2:	d501      	bpl.n	19ab8 <_fwalk+0x20>
   19ab4:	6824      	ldr	r4, [r4, #0]
   19ab6:	e7f5      	b.n	19aa4 <_fwalk+0xc>
   19ab8:	89ab      	ldrh	r3, [r5, #12]
   19aba:	2b01      	cmp	r3, #1
   19abc:	d906      	bls.n	19acc <_fwalk+0x34>
   19abe:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   19ac2:	3301      	adds	r3, #1
   19ac4:	d002      	beq.n	19acc <_fwalk+0x34>
   19ac6:	4628      	mov	r0, r5
   19ac8:	47c0      	blx	r8
   19aca:	4306      	orrs	r6, r0
   19acc:	3568      	adds	r5, #104	; 0x68
   19ace:	e7ef      	b.n	19ab0 <_fwalk+0x18>

00019ad0 <_fwalk_reent>:
_fwalk_reent():
   19ad0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   19ad4:	4680      	mov	r8, r0
   19ad6:	4689      	mov	r9, r1
   19ad8:	2600      	movs	r6, #0
   19ada:	f100 0448 	add.w	r4, r0, #72	; 0x48
   19ade:	b914      	cbnz	r4, 19ae6 <_fwalk_reent+0x16>
   19ae0:	4630      	mov	r0, r6
   19ae2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   19ae6:	68a5      	ldr	r5, [r4, #8]
   19ae8:	6867      	ldr	r7, [r4, #4]
   19aea:	3f01      	subs	r7, #1
   19aec:	d501      	bpl.n	19af2 <_fwalk_reent+0x22>
   19aee:	6824      	ldr	r4, [r4, #0]
   19af0:	e7f5      	b.n	19ade <_fwalk_reent+0xe>
   19af2:	89ab      	ldrh	r3, [r5, #12]
   19af4:	2b01      	cmp	r3, #1
   19af6:	d907      	bls.n	19b08 <_fwalk_reent+0x38>
   19af8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   19afc:	3301      	adds	r3, #1
   19afe:	d003      	beq.n	19b08 <_fwalk_reent+0x38>
   19b00:	4629      	mov	r1, r5
   19b02:	4640      	mov	r0, r8
   19b04:	47c8      	blx	r9
   19b06:	4306      	orrs	r6, r0
   19b08:	3568      	adds	r5, #104	; 0x68
   19b0a:	e7ee      	b.n	19aea <_fwalk_reent+0x1a>

00019b0c <__libc_init_array>:
__libc_init_array():
   19b0c:	b570      	push	{r4, r5, r6, lr}
   19b0e:	2500      	movs	r5, #0
   19b10:	4e0c      	ldr	r6, [pc, #48]	; (19b44 <__libc_init_array+0x38>)
   19b12:	4c0d      	ldr	r4, [pc, #52]	; (19b48 <__libc_init_array+0x3c>)
   19b14:	1ba4      	subs	r4, r4, r6
   19b16:	10a4      	asrs	r4, r4, #2
   19b18:	42a5      	cmp	r5, r4
   19b1a:	d109      	bne.n	19b30 <__libc_init_array+0x24>
   19b1c:	f7fd fc5a 	bl	173d4 <_init>
   19b20:	2500      	movs	r5, #0
   19b22:	4e0a      	ldr	r6, [pc, #40]	; (19b4c <__libc_init_array+0x40>)
   19b24:	4c0a      	ldr	r4, [pc, #40]	; (19b50 <__libc_init_array+0x44>)
   19b26:	1ba4      	subs	r4, r4, r6
   19b28:	10a4      	asrs	r4, r4, #2
   19b2a:	42a5      	cmp	r5, r4
   19b2c:	d105      	bne.n	19b3a <__libc_init_array+0x2e>
   19b2e:	bd70      	pop	{r4, r5, r6, pc}
   19b30:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   19b34:	4798      	blx	r3
   19b36:	3501      	adds	r5, #1
   19b38:	e7ee      	b.n	19b18 <__libc_init_array+0xc>
   19b3a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   19b3e:	4798      	blx	r3
   19b40:	3501      	adds	r5, #1
   19b42:	e7f2      	b.n	19b2a <__libc_init_array+0x1e>
   19b44:	000214a0 	.word	0x000214a0
   19b48:	000214a0 	.word	0x000214a0
   19b4c:	000214a0 	.word	0x000214a0
   19b50:	000214a4 	.word	0x000214a4

00019b54 <__locale_ctype_ptr_l>:
__locale_ctype_ptr_l():
   19b54:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
   19b58:	4770      	bx	lr
   19b5a:	Address 0x0000000000019b5a is out of bounds.


00019b5c <__locale_ctype_ptr>:
__locale_ctype_ptr():
   19b5c:	4b04      	ldr	r3, [pc, #16]	; (19b70 <__locale_ctype_ptr+0x14>)
   19b5e:	4a05      	ldr	r2, [pc, #20]	; (19b74 <__locale_ctype_ptr+0x18>)
   19b60:	681b      	ldr	r3, [r3, #0]
   19b62:	6a1b      	ldr	r3, [r3, #32]
   19b64:	2b00      	cmp	r3, #0
   19b66:	bf08      	it	eq
   19b68:	4613      	moveq	r3, r2
   19b6a:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
   19b6e:	4770      	bx	lr
   19b70:	2007c0e0 	.word	0x2007c0e0
   19b74:	2007c144 	.word	0x2007c144

00019b78 <__swhatbuf_r>:
__swhatbuf_r():
   19b78:	b570      	push	{r4, r5, r6, lr}
   19b7a:	460e      	mov	r6, r1
   19b7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   19b80:	b090      	sub	sp, #64	; 0x40
   19b82:	2900      	cmp	r1, #0
   19b84:	4614      	mov	r4, r2
   19b86:	461d      	mov	r5, r3
   19b88:	da07      	bge.n	19b9a <__swhatbuf_r+0x22>
   19b8a:	2300      	movs	r3, #0
   19b8c:	602b      	str	r3, [r5, #0]
   19b8e:	89b3      	ldrh	r3, [r6, #12]
   19b90:	061a      	lsls	r2, r3, #24
   19b92:	d410      	bmi.n	19bb6 <__swhatbuf_r+0x3e>
   19b94:	f44f 6380 	mov.w	r3, #1024	; 0x400
   19b98:	e00e      	b.n	19bb8 <__swhatbuf_r+0x40>
   19b9a:	aa01      	add	r2, sp, #4
   19b9c:	f003 fe6c 	bl	1d878 <_fstat_r>
   19ba0:	2800      	cmp	r0, #0
   19ba2:	dbf2      	blt.n	19b8a <__swhatbuf_r+0x12>
   19ba4:	9a02      	ldr	r2, [sp, #8]
   19ba6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   19baa:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
   19bae:	425a      	negs	r2, r3
   19bb0:	415a      	adcs	r2, r3
   19bb2:	602a      	str	r2, [r5, #0]
   19bb4:	e7ee      	b.n	19b94 <__swhatbuf_r+0x1c>
   19bb6:	2340      	movs	r3, #64	; 0x40
   19bb8:	2000      	movs	r0, #0
   19bba:	6023      	str	r3, [r4, #0]
   19bbc:	b010      	add	sp, #64	; 0x40
   19bbe:	bd70      	pop	{r4, r5, r6, pc}

00019bc0 <__smakebuf_r>:
__smakebuf_r():
   19bc0:	898b      	ldrh	r3, [r1, #12]
   19bc2:	b573      	push	{r0, r1, r4, r5, r6, lr}
   19bc4:	079d      	lsls	r5, r3, #30
   19bc6:	4606      	mov	r6, r0
   19bc8:	460c      	mov	r4, r1
   19bca:	d507      	bpl.n	19bdc <__smakebuf_r+0x1c>
   19bcc:	f104 0347 	add.w	r3, r4, #71	; 0x47
   19bd0:	6023      	str	r3, [r4, #0]
   19bd2:	6123      	str	r3, [r4, #16]
   19bd4:	2301      	movs	r3, #1
   19bd6:	6163      	str	r3, [r4, #20]
   19bd8:	b002      	add	sp, #8
   19bda:	bd70      	pop	{r4, r5, r6, pc}
   19bdc:	ab01      	add	r3, sp, #4
   19bde:	466a      	mov	r2, sp
   19be0:	f7ff ffca 	bl	19b78 <__swhatbuf_r>
   19be4:	9900      	ldr	r1, [sp, #0]
   19be6:	4605      	mov	r5, r0
   19be8:	4630      	mov	r0, r6
   19bea:	f000 fb87 	bl	1a2fc <_malloc_r>
   19bee:	b948      	cbnz	r0, 19c04 <__smakebuf_r+0x44>
   19bf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   19bf4:	059a      	lsls	r2, r3, #22
   19bf6:	d4ef      	bmi.n	19bd8 <__smakebuf_r+0x18>
   19bf8:	f023 0303 	bic.w	r3, r3, #3
   19bfc:	f043 0302 	orr.w	r3, r3, #2
   19c00:	81a3      	strh	r3, [r4, #12]
   19c02:	e7e3      	b.n	19bcc <__smakebuf_r+0xc>
   19c04:	4b0d      	ldr	r3, [pc, #52]	; (19c3c <__smakebuf_r+0x7c>)
   19c06:	62b3      	str	r3, [r6, #40]	; 0x28
   19c08:	89a3      	ldrh	r3, [r4, #12]
   19c0a:	6020      	str	r0, [r4, #0]
   19c0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   19c10:	81a3      	strh	r3, [r4, #12]
   19c12:	9b00      	ldr	r3, [sp, #0]
   19c14:	6120      	str	r0, [r4, #16]
   19c16:	6163      	str	r3, [r4, #20]
   19c18:	9b01      	ldr	r3, [sp, #4]
   19c1a:	b15b      	cbz	r3, 19c34 <__smakebuf_r+0x74>
   19c1c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   19c20:	4630      	mov	r0, r6
   19c22:	f004 f9b7 	bl	1df94 <_isatty_r>
   19c26:	b128      	cbz	r0, 19c34 <__smakebuf_r+0x74>
   19c28:	89a3      	ldrh	r3, [r4, #12]
   19c2a:	f023 0303 	bic.w	r3, r3, #3
   19c2e:	f043 0301 	orr.w	r3, r3, #1
   19c32:	81a3      	strh	r3, [r4, #12]
   19c34:	89a3      	ldrh	r3, [r4, #12]
   19c36:	431d      	orrs	r5, r3
   19c38:	81a5      	strh	r5, [r4, #12]
   19c3a:	e7cd      	b.n	19bd8 <__smakebuf_r+0x18>
   19c3c:	00019941 	.word	0x00019941

00019c40 <malloc>:
malloc():
   19c40:	4b02      	ldr	r3, [pc, #8]	; (19c4c <malloc+0xc>)
   19c42:	4601      	mov	r1, r0
   19c44:	6818      	ldr	r0, [r3, #0]
   19c46:	f000 bb59 	b.w	1a2fc <_malloc_r>
   19c4a:	bf00      	nop
   19c4c:	2007c0e0 	.word	0x2007c0e0

00019c50 <free>:
free():
   19c50:	4b02      	ldr	r3, [pc, #8]	; (19c5c <free+0xc>)
   19c52:	4601      	mov	r1, r0
   19c54:	6818      	ldr	r0, [r3, #0]
   19c56:	f000 bad3 	b.w	1a200 <_free_r>
   19c5a:	bf00      	nop
   19c5c:	2007c0e0 	.word	0x2007c0e0

00019c60 <__ascii_mbtowc>:
__ascii_mbtowc():
   19c60:	b082      	sub	sp, #8
   19c62:	b901      	cbnz	r1, 19c66 <__ascii_mbtowc+0x6>
   19c64:	a901      	add	r1, sp, #4
   19c66:	b142      	cbz	r2, 19c7a <__ascii_mbtowc+0x1a>
   19c68:	b14b      	cbz	r3, 19c7e <__ascii_mbtowc+0x1e>
   19c6a:	7813      	ldrb	r3, [r2, #0]
   19c6c:	600b      	str	r3, [r1, #0]
   19c6e:	7812      	ldrb	r2, [r2, #0]
   19c70:	1c10      	adds	r0, r2, #0
   19c72:	bf18      	it	ne
   19c74:	2001      	movne	r0, #1
   19c76:	b002      	add	sp, #8
   19c78:	4770      	bx	lr
   19c7a:	4610      	mov	r0, r2
   19c7c:	e7fb      	b.n	19c76 <__ascii_mbtowc+0x16>
   19c7e:	f06f 0001 	mvn.w	r0, #1
   19c82:	e7f8      	b.n	19c76 <__ascii_mbtowc+0x16>

00019c84 <memchr>:
memchr():
   19c84:	b510      	push	{r4, lr}
   19c86:	b2c9      	uxtb	r1, r1
   19c88:	4402      	add	r2, r0
   19c8a:	4290      	cmp	r0, r2
   19c8c:	4603      	mov	r3, r0
   19c8e:	d101      	bne.n	19c94 <memchr+0x10>
   19c90:	2000      	movs	r0, #0
   19c92:	bd10      	pop	{r4, pc}
   19c94:	781c      	ldrb	r4, [r3, #0]
   19c96:	3001      	adds	r0, #1
   19c98:	428c      	cmp	r4, r1
   19c9a:	d1f6      	bne.n	19c8a <memchr+0x6>
   19c9c:	4618      	mov	r0, r3
   19c9e:	bd10      	pop	{r4, pc}

00019ca0 <memcmp>:
memcmp():
   19ca0:	b510      	push	{r4, lr}
   19ca2:	3901      	subs	r1, #1
   19ca4:	4402      	add	r2, r0
   19ca6:	4290      	cmp	r0, r2
   19ca8:	d101      	bne.n	19cae <memcmp+0xe>
   19caa:	2000      	movs	r0, #0
   19cac:	bd10      	pop	{r4, pc}
   19cae:	f810 3b01 	ldrb.w	r3, [r0], #1
   19cb2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   19cb6:	42a3      	cmp	r3, r4
   19cb8:	d0f5      	beq.n	19ca6 <memcmp+0x6>
   19cba:	1b18      	subs	r0, r3, r4
   19cbc:	bd10      	pop	{r4, pc}

00019cbe <memcpy>:
memcpy():
   19cbe:	b510      	push	{r4, lr}
   19cc0:	1e43      	subs	r3, r0, #1
   19cc2:	440a      	add	r2, r1
   19cc4:	4291      	cmp	r1, r2
   19cc6:	d100      	bne.n	19cca <memcpy+0xc>
   19cc8:	bd10      	pop	{r4, pc}
   19cca:	f811 4b01 	ldrb.w	r4, [r1], #1
   19cce:	f803 4f01 	strb.w	r4, [r3, #1]!
   19cd2:	e7f7      	b.n	19cc4 <memcpy+0x6>

00019cd4 <memmove>:
memmove():
   19cd4:	4288      	cmp	r0, r1
   19cd6:	b510      	push	{r4, lr}
   19cd8:	eb01 0302 	add.w	r3, r1, r2
   19cdc:	d803      	bhi.n	19ce6 <memmove+0x12>
   19cde:	1e42      	subs	r2, r0, #1
   19ce0:	4299      	cmp	r1, r3
   19ce2:	d10c      	bne.n	19cfe <memmove+0x2a>
   19ce4:	bd10      	pop	{r4, pc}
   19ce6:	4298      	cmp	r0, r3
   19ce8:	d2f9      	bcs.n	19cde <memmove+0xa>
   19cea:	1881      	adds	r1, r0, r2
   19cec:	1ad2      	subs	r2, r2, r3
   19cee:	42d3      	cmn	r3, r2
   19cf0:	d100      	bne.n	19cf4 <memmove+0x20>
   19cf2:	bd10      	pop	{r4, pc}
   19cf4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   19cf8:	f801 4d01 	strb.w	r4, [r1, #-1]!
   19cfc:	e7f7      	b.n	19cee <memmove+0x1a>
   19cfe:	f811 4b01 	ldrb.w	r4, [r1], #1
   19d02:	f802 4f01 	strb.w	r4, [r2, #1]!
   19d06:	e7eb      	b.n	19ce0 <memmove+0xc>

00019d08 <memset>:
memset():
   19d08:	4603      	mov	r3, r0
   19d0a:	4402      	add	r2, r0
   19d0c:	4293      	cmp	r3, r2
   19d0e:	d100      	bne.n	19d12 <memset+0xa>
   19d10:	4770      	bx	lr
   19d12:	f803 1b01 	strb.w	r1, [r3], #1
   19d16:	e7f9      	b.n	19d0c <memset+0x4>

00019d18 <validate_structure>:
validate_structure():
   19d18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19d1a:	6801      	ldr	r1, [r0, #0]
   19d1c:	4604      	mov	r4, r0
   19d1e:	293b      	cmp	r1, #59	; 0x3b
   19d20:	d911      	bls.n	19d46 <validate_structure+0x2e>
   19d22:	223c      	movs	r2, #60	; 0x3c
   19d24:	4668      	mov	r0, sp
   19d26:	f002 ff33 	bl	1cb90 <div>
   19d2a:	9a01      	ldr	r2, [sp, #4]
   19d2c:	6863      	ldr	r3, [r4, #4]
   19d2e:	9900      	ldr	r1, [sp, #0]
   19d30:	2a00      	cmp	r2, #0
   19d32:	440b      	add	r3, r1
   19d34:	6063      	str	r3, [r4, #4]
   19d36:	bfbb      	ittet	lt
   19d38:	323c      	addlt	r2, #60	; 0x3c
   19d3a:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   19d3e:	6022      	strge	r2, [r4, #0]
   19d40:	6022      	strlt	r2, [r4, #0]
   19d42:	bfb8      	it	lt
   19d44:	6063      	strlt	r3, [r4, #4]
   19d46:	6861      	ldr	r1, [r4, #4]
   19d48:	293b      	cmp	r1, #59	; 0x3b
   19d4a:	d911      	bls.n	19d70 <validate_structure+0x58>
   19d4c:	223c      	movs	r2, #60	; 0x3c
   19d4e:	4668      	mov	r0, sp
   19d50:	f002 ff1e 	bl	1cb90 <div>
   19d54:	9a01      	ldr	r2, [sp, #4]
   19d56:	68a3      	ldr	r3, [r4, #8]
   19d58:	9900      	ldr	r1, [sp, #0]
   19d5a:	2a00      	cmp	r2, #0
   19d5c:	440b      	add	r3, r1
   19d5e:	60a3      	str	r3, [r4, #8]
   19d60:	bfbb      	ittet	lt
   19d62:	323c      	addlt	r2, #60	; 0x3c
   19d64:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   19d68:	6062      	strge	r2, [r4, #4]
   19d6a:	6062      	strlt	r2, [r4, #4]
   19d6c:	bfb8      	it	lt
   19d6e:	60a3      	strlt	r3, [r4, #8]
   19d70:	68a1      	ldr	r1, [r4, #8]
   19d72:	2917      	cmp	r1, #23
   19d74:	d911      	bls.n	19d9a <validate_structure+0x82>
   19d76:	2218      	movs	r2, #24
   19d78:	4668      	mov	r0, sp
   19d7a:	f002 ff09 	bl	1cb90 <div>
   19d7e:	9a01      	ldr	r2, [sp, #4]
   19d80:	68e3      	ldr	r3, [r4, #12]
   19d82:	9900      	ldr	r1, [sp, #0]
   19d84:	2a00      	cmp	r2, #0
   19d86:	440b      	add	r3, r1
   19d88:	60e3      	str	r3, [r4, #12]
   19d8a:	bfbb      	ittet	lt
   19d8c:	3218      	addlt	r2, #24
   19d8e:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   19d92:	60a2      	strge	r2, [r4, #8]
   19d94:	60a2      	strlt	r2, [r4, #8]
   19d96:	bfb8      	it	lt
   19d98:	60e3      	strlt	r3, [r4, #12]
   19d9a:	6921      	ldr	r1, [r4, #16]
   19d9c:	290b      	cmp	r1, #11
   19d9e:	d911      	bls.n	19dc4 <validate_structure+0xac>
   19da0:	220c      	movs	r2, #12
   19da2:	4668      	mov	r0, sp
   19da4:	f002 fef4 	bl	1cb90 <div>
   19da8:	9a01      	ldr	r2, [sp, #4]
   19daa:	6963      	ldr	r3, [r4, #20]
   19dac:	9900      	ldr	r1, [sp, #0]
   19dae:	2a00      	cmp	r2, #0
   19db0:	440b      	add	r3, r1
   19db2:	6163      	str	r3, [r4, #20]
   19db4:	bfbb      	ittet	lt
   19db6:	320c      	addlt	r2, #12
   19db8:	f103 33ff 	addlt.w	r3, r3, #4294967295	; 0xffffffff
   19dbc:	6122      	strge	r2, [r4, #16]
   19dbe:	6122      	strlt	r2, [r4, #16]
   19dc0:	bfb8      	it	lt
   19dc2:	6163      	strlt	r3, [r4, #20]
   19dc4:	6963      	ldr	r3, [r4, #20]
   19dc6:	0799      	lsls	r1, r3, #30
   19dc8:	d143      	bne.n	19e52 <validate_structure+0x13a>
   19dca:	2164      	movs	r1, #100	; 0x64
   19dcc:	fb93 f2f1 	sdiv	r2, r3, r1
   19dd0:	fb01 3212 	mls	r2, r1, r2, r3
   19dd4:	2a00      	cmp	r2, #0
   19dd6:	d13e      	bne.n	19e56 <validate_structure+0x13e>
   19dd8:	f44f 71c8 	mov.w	r1, #400	; 0x190
   19ddc:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   19de0:	fb93 f2f1 	sdiv	r2, r3, r1
   19de4:	fb01 3312 	mls	r3, r1, r2, r3
   19de8:	2b00      	cmp	r3, #0
   19dea:	bf14      	ite	ne
   19dec:	231c      	movne	r3, #28
   19dee:	231d      	moveq	r3, #29
   19df0:	68e2      	ldr	r2, [r4, #12]
   19df2:	2a00      	cmp	r2, #0
   19df4:	dd31      	ble.n	19e5a <validate_structure+0x142>
   19df6:	2602      	movs	r6, #2
   19df8:	f04f 0e00 	mov.w	lr, #0
   19dfc:	2064      	movs	r0, #100	; 0x64
   19dfe:	f44f 75c8 	mov.w	r5, #400	; 0x190
   19e02:	4f34      	ldr	r7, [pc, #208]	; (19ed4 <validate_structure+0x1bc>)
   19e04:	6921      	ldr	r1, [r4, #16]
   19e06:	68e2      	ldr	r2, [r4, #12]
   19e08:	2901      	cmp	r1, #1
   19e0a:	d05d      	beq.n	19ec8 <validate_structure+0x1b0>
   19e0c:	f857 c021 	ldr.w	ip, [r7, r1, lsl #2]
   19e10:	4562      	cmp	r2, ip
   19e12:	dd2c      	ble.n	19e6e <validate_structure+0x156>
   19e14:	3101      	adds	r1, #1
   19e16:	eba2 020c 	sub.w	r2, r2, ip
   19e1a:	290c      	cmp	r1, #12
   19e1c:	60e2      	str	r2, [r4, #12]
   19e1e:	6121      	str	r1, [r4, #16]
   19e20:	d1f0      	bne.n	19e04 <validate_structure+0xec>
   19e22:	6963      	ldr	r3, [r4, #20]
   19e24:	f8c4 e010 	str.w	lr, [r4, #16]
   19e28:	1c5a      	adds	r2, r3, #1
   19e2a:	0791      	lsls	r1, r2, #30
   19e2c:	6162      	str	r2, [r4, #20]
   19e2e:	d147      	bne.n	19ec0 <validate_structure+0x1a8>
   19e30:	fb92 f1f0 	sdiv	r1, r2, r0
   19e34:	fb00 2211 	mls	r2, r0, r1, r2
   19e38:	2a00      	cmp	r2, #0
   19e3a:	d143      	bne.n	19ec4 <validate_structure+0x1ac>
   19e3c:	f203 736d 	addw	r3, r3, #1901	; 0x76d
   19e40:	fb93 f2f5 	sdiv	r2, r3, r5
   19e44:	fb05 3312 	mls	r3, r5, r2, r3
   19e48:	2b00      	cmp	r3, #0
   19e4a:	bf14      	ite	ne
   19e4c:	231c      	movne	r3, #28
   19e4e:	231d      	moveq	r3, #29
   19e50:	e7d8      	b.n	19e04 <validate_structure+0xec>
   19e52:	231c      	movs	r3, #28
   19e54:	e7cc      	b.n	19df0 <validate_structure+0xd8>
   19e56:	231d      	movs	r3, #29
   19e58:	e7ca      	b.n	19df0 <validate_structure+0xd8>
   19e5a:	260b      	movs	r6, #11
   19e5c:	2064      	movs	r0, #100	; 0x64
   19e5e:	f44f 75c8 	mov.w	r5, #400	; 0x190
   19e62:	4f1c      	ldr	r7, [pc, #112]	; (19ed4 <validate_structure+0x1bc>)
   19e64:	f8d4 e00c 	ldr.w	lr, [r4, #12]
   19e68:	f1be 0f00 	cmp.w	lr, #0
   19e6c:	dd01      	ble.n	19e72 <validate_structure+0x15a>
   19e6e:	b003      	add	sp, #12
   19e70:	bdf0      	pop	{r4, r5, r6, r7, pc}
   19e72:	6921      	ldr	r1, [r4, #16]
   19e74:	3901      	subs	r1, #1
   19e76:	6121      	str	r1, [r4, #16]
   19e78:	3101      	adds	r1, #1
   19e7a:	d114      	bne.n	19ea6 <validate_structure+0x18e>
   19e7c:	6963      	ldr	r3, [r4, #20]
   19e7e:	6126      	str	r6, [r4, #16]
   19e80:	1e59      	subs	r1, r3, #1
   19e82:	078a      	lsls	r2, r1, #30
   19e84:	6161      	str	r1, [r4, #20]
   19e86:	d117      	bne.n	19eb8 <validate_structure+0x1a0>
   19e88:	fb91 f2f0 	sdiv	r2, r1, r0
   19e8c:	fb00 1112 	mls	r1, r0, r2, r1
   19e90:	b9a1      	cbnz	r1, 19ebc <validate_structure+0x1a4>
   19e92:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   19e96:	fb93 f2f5 	sdiv	r2, r3, r5
   19e9a:	fb05 3312 	mls	r3, r5, r2, r3
   19e9e:	2b00      	cmp	r3, #0
   19ea0:	bf14      	ite	ne
   19ea2:	231c      	movne	r3, #28
   19ea4:	231d      	moveq	r3, #29
   19ea6:	6922      	ldr	r2, [r4, #16]
   19ea8:	2a01      	cmp	r2, #1
   19eaa:	bf0c      	ite	eq
   19eac:	461a      	moveq	r2, r3
   19eae:	f857 2022 	ldrne.w	r2, [r7, r2, lsl #2]
   19eb2:	4472      	add	r2, lr
   19eb4:	60e2      	str	r2, [r4, #12]
   19eb6:	e7d5      	b.n	19e64 <validate_structure+0x14c>
   19eb8:	231c      	movs	r3, #28
   19eba:	e7f4      	b.n	19ea6 <validate_structure+0x18e>
   19ebc:	231d      	movs	r3, #29
   19ebe:	e7f2      	b.n	19ea6 <validate_structure+0x18e>
   19ec0:	231c      	movs	r3, #28
   19ec2:	e79f      	b.n	19e04 <validate_structure+0xec>
   19ec4:	231d      	movs	r3, #29
   19ec6:	e79d      	b.n	19e04 <validate_structure+0xec>
   19ec8:	4293      	cmp	r3, r2
   19eca:	dad0      	bge.n	19e6e <validate_structure+0x156>
   19ecc:	1ad2      	subs	r2, r2, r3
   19ece:	60e2      	str	r2, [r4, #12]
   19ed0:	6126      	str	r6, [r4, #16]
   19ed2:	e797      	b.n	19e04 <validate_structure+0xec>
   19ed4:	000210cc 	.word	0x000210cc

00019ed8 <mktime>:
mktime():
   19ed8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   19edc:	4681      	mov	r9, r0
   19ede:	f004 f855 	bl	1df8c <__gettzinfo>
   19ee2:	253c      	movs	r5, #60	; 0x3c
   19ee4:	4680      	mov	r8, r0
   19ee6:	4648      	mov	r0, r9
   19ee8:	f7ff ff16 	bl	19d18 <validate_structure>
   19eec:	e899 0081 	ldmia.w	r9, {r0, r7}
   19ef0:	fb05 0707 	mla	r7, r5, r7, r0
   19ef4:	f44f 6561 	mov.w	r5, #3600	; 0xe10
   19ef8:	f8d9 3010 	ldr.w	r3, [r9, #16]
   19efc:	4ab1      	ldr	r2, [pc, #708]	; (1a1c4 <mktime+0x2ec>)
   19efe:	f8d9 400c 	ldr.w	r4, [r9, #12]
   19f02:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   19f06:	f8d9 0008 	ldr.w	r0, [r9, #8]
   19f0a:	3c01      	subs	r4, #1
   19f0c:	2b01      	cmp	r3, #1
   19f0e:	fb05 7000 	mla	r0, r5, r0, r7
   19f12:	4414      	add	r4, r2
   19f14:	f8d9 3014 	ldr.w	r3, [r9, #20]
   19f18:	dd11      	ble.n	19f3e <mktime+0x66>
   19f1a:	0799      	lsls	r1, r3, #30
   19f1c:	d10f      	bne.n	19f3e <mktime+0x66>
   19f1e:	2164      	movs	r1, #100	; 0x64
   19f20:	fb93 f2f1 	sdiv	r2, r3, r1
   19f24:	fb01 3212 	mls	r2, r1, r2, r3
   19f28:	b942      	cbnz	r2, 19f3c <mktime+0x64>
   19f2a:	f44f 71c8 	mov.w	r1, #400	; 0x190
   19f2e:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   19f32:	fb95 f2f1 	sdiv	r2, r5, r1
   19f36:	fb01 5212 	mls	r2, r1, r2, r5
   19f3a:	b902      	cbnz	r2, 19f3e <mktime+0x66>
   19f3c:	3401      	adds	r4, #1
   19f3e:	f644 6120 	movw	r1, #20000	; 0x4e20
   19f42:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   19f46:	3210      	adds	r2, #16
   19f48:	428a      	cmp	r2, r1
   19f4a:	f8c9 401c 	str.w	r4, [r9, #28]
   19f4e:	f200 812d 	bhi.w	1a1ac <mktime+0x2d4>
   19f52:	2b46      	cmp	r3, #70	; 0x46
   19f54:	dd70      	ble.n	1a038 <mktime+0x160>
   19f56:	2546      	movs	r5, #70	; 0x46
   19f58:	f240 176d 	movw	r7, #365	; 0x16d
   19f5c:	2164      	movs	r1, #100	; 0x64
   19f5e:	f44f 76c8 	mov.w	r6, #400	; 0x190
   19f62:	07aa      	lsls	r2, r5, #30
   19f64:	d162      	bne.n	1a02c <mktime+0x154>
   19f66:	fb95 f2f1 	sdiv	r2, r5, r1
   19f6a:	fb01 5212 	mls	r2, r1, r2, r5
   19f6e:	2a00      	cmp	r2, #0
   19f70:	d15f      	bne.n	1a032 <mktime+0x15a>
   19f72:	f205 7e6c 	addw	lr, r5, #1900	; 0x76c
   19f76:	fb9e f2f6 	sdiv	r2, lr, r6
   19f7a:	fb06 e212 	mls	r2, r6, r2, lr
   19f7e:	2a00      	cmp	r2, #0
   19f80:	bf14      	ite	ne
   19f82:	463a      	movne	r2, r7
   19f84:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   19f88:	3501      	adds	r5, #1
   19f8a:	42ab      	cmp	r3, r5
   19f8c:	4414      	add	r4, r2
   19f8e:	d1e8      	bne.n	19f62 <mktime+0x8a>
   19f90:	4f8d      	ldr	r7, [pc, #564]	; (1a1c8 <mktime+0x2f0>)
   19f92:	fb07 0704 	mla	r7, r7, r4, r0
   19f96:	f002 fb47 	bl	1c628 <__tz_lock>
   19f9a:	f002 fb47 	bl	1c62c <_tzset_unlocked>
   19f9e:	4b8b      	ldr	r3, [pc, #556]	; (1a1cc <mktime+0x2f4>)
   19fa0:	681e      	ldr	r6, [r3, #0]
   19fa2:	2e00      	cmp	r6, #0
   19fa4:	f000 810a 	beq.w	1a1bc <mktime+0x2e4>
   19fa8:	f8d9 3020 	ldr.w	r3, [r9, #32]
   19fac:	f8d9 0014 	ldr.w	r0, [r9, #20]
   19fb0:	2b01      	cmp	r3, #1
   19fb2:	bfa8      	it	ge
   19fb4:	2301      	movge	r3, #1
   19fb6:	469a      	mov	sl, r3
   19fb8:	f8d8 3004 	ldr.w	r3, [r8, #4]
   19fbc:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   19fc0:	4298      	cmp	r0, r3
   19fc2:	d17c      	bne.n	1a0be <mktime+0x1e6>
   19fc4:	f8d8 2038 	ldr.w	r2, [r8, #56]	; 0x38
   19fc8:	f8d8 3020 	ldr.w	r3, [r8, #32]
   19fcc:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
   19fd0:	f8d8 101c 	ldr.w	r1, [r8, #28]
   19fd4:	1ad6      	subs	r6, r2, r3
   19fd6:	42b7      	cmp	r7, r6
   19fd8:	eba1 0100 	sub.w	r1, r1, r0
   19fdc:	da76      	bge.n	1a0cc <mktime+0x1f4>
   19fde:	f8d8 2000 	ldr.w	r2, [r8]
   19fe2:	2a00      	cmp	r2, #0
   19fe4:	d076      	beq.n	1a0d4 <mktime+0x1fc>
   19fe6:	428f      	cmp	r7, r1
   19fe8:	f2c0 80e3 	blt.w	1a1b2 <mktime+0x2da>
   19fec:	42b7      	cmp	r7, r6
   19fee:	bfac      	ite	ge
   19ff0:	2600      	movge	r6, #0
   19ff2:	2601      	movlt	r6, #1
   19ff4:	f1ba 0f00 	cmp.w	sl, #0
   19ff8:	da72      	bge.n	1a0e0 <mktime+0x208>
   19ffa:	2e01      	cmp	r6, #1
   19ffc:	f040 80de 	bne.w	1a1bc <mktime+0x2e4>
   1a000:	2601      	movs	r6, #1
   1a002:	f8d8 503c 	ldr.w	r5, [r8, #60]	; 0x3c
   1a006:	443d      	add	r5, r7
   1a008:	f002 fb0f 	bl	1c62a <__tz_unlock>
   1a00c:	2307      	movs	r3, #7
   1a00e:	3404      	adds	r4, #4
   1a010:	fb94 f3f3 	sdiv	r3, r4, r3
   1a014:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1a018:	1ae4      	subs	r4, r4, r3
   1a01a:	bf48      	it	mi
   1a01c:	3407      	addmi	r4, #7
   1a01e:	f8c9 6020 	str.w	r6, [r9, #32]
   1a022:	f8c9 4018 	str.w	r4, [r9, #24]
   1a026:	4628      	mov	r0, r5
   1a028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a02c:	f240 126d 	movw	r2, #365	; 0x16d
   1a030:	e7aa      	b.n	19f88 <mktime+0xb0>
   1a032:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1a036:	e7a7      	b.n	19f88 <mktime+0xb0>
   1a038:	d01e      	beq.n	1a078 <mktime+0x1a0>
   1a03a:	2245      	movs	r2, #69	; 0x45
   1a03c:	f240 176d 	movw	r7, #365	; 0x16d
   1a040:	2564      	movs	r5, #100	; 0x64
   1a042:	f44f 76c8 	mov.w	r6, #400	; 0x190
   1a046:	429a      	cmp	r2, r3
   1a048:	dc18      	bgt.n	1a07c <mktime+0x1a4>
   1a04a:	079d      	lsls	r5, r3, #30
   1a04c:	d131      	bne.n	1a0b2 <mktime+0x1da>
   1a04e:	2164      	movs	r1, #100	; 0x64
   1a050:	fb93 f2f1 	sdiv	r2, r3, r1
   1a054:	fb01 3212 	mls	r2, r1, r2, r3
   1a058:	bb72      	cbnz	r2, 1a0b8 <mktime+0x1e0>
   1a05a:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1a05e:	f203 756c 	addw	r5, r3, #1900	; 0x76c
   1a062:	fb95 f2f1 	sdiv	r2, r5, r1
   1a066:	fb01 5212 	mls	r2, r1, r2, r5
   1a06a:	2a00      	cmp	r2, #0
   1a06c:	f240 126d 	movw	r2, #365	; 0x16d
   1a070:	bf08      	it	eq
   1a072:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1a076:	1aa4      	subs	r4, r4, r2
   1a078:	461d      	mov	r5, r3
   1a07a:	e789      	b.n	19f90 <mktime+0xb8>
   1a07c:	0791      	lsls	r1, r2, #30
   1a07e:	d112      	bne.n	1a0a6 <mktime+0x1ce>
   1a080:	fb92 f1f5 	sdiv	r1, r2, r5
   1a084:	fb05 2111 	mls	r1, r5, r1, r2
   1a088:	b981      	cbnz	r1, 1a0ac <mktime+0x1d4>
   1a08a:	f202 7e6c 	addw	lr, r2, #1900	; 0x76c
   1a08e:	fb9e f1f6 	sdiv	r1, lr, r6
   1a092:	fb06 e111 	mls	r1, r6, r1, lr
   1a096:	2900      	cmp	r1, #0
   1a098:	bf14      	ite	ne
   1a09a:	4639      	movne	r1, r7
   1a09c:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1a0a0:	1a64      	subs	r4, r4, r1
   1a0a2:	3a01      	subs	r2, #1
   1a0a4:	e7cf      	b.n	1a046 <mktime+0x16e>
   1a0a6:	f240 116d 	movw	r1, #365	; 0x16d
   1a0aa:	e7f9      	b.n	1a0a0 <mktime+0x1c8>
   1a0ac:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1a0b0:	e7f6      	b.n	1a0a0 <mktime+0x1c8>
   1a0b2:	f240 126d 	movw	r2, #365	; 0x16d
   1a0b6:	e7de      	b.n	1a076 <mktime+0x19e>
   1a0b8:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1a0bc:	e7db      	b.n	1a076 <mktime+0x19e>
   1a0be:	f002 fa0b 	bl	1c4d8 <__tzcalc_limits>
   1a0c2:	2800      	cmp	r0, #0
   1a0c4:	f47f af7e 	bne.w	19fc4 <mktime+0xec>
   1a0c8:	4656      	mov	r6, sl
   1a0ca:	e796      	b.n	19ffa <mktime+0x122>
   1a0cc:	1a12      	subs	r2, r2, r0
   1a0ce:	4297      	cmp	r7, r2
   1a0d0:	dbfa      	blt.n	1a0c8 <mktime+0x1f0>
   1a0d2:	e784      	b.n	19fde <mktime+0x106>
   1a0d4:	428f      	cmp	r7, r1
   1a0d6:	db89      	blt.n	19fec <mktime+0x114>
   1a0d8:	f1ba 0f00 	cmp.w	sl, #0
   1a0dc:	db90      	blt.n	1a000 <mktime+0x128>
   1a0de:	2601      	movs	r6, #1
   1a0e0:	ea8a 0a06 	eor.w	sl, sl, r6
   1a0e4:	f1ba 0f01 	cmp.w	sl, #1
   1a0e8:	d187      	bne.n	19ffa <mktime+0x122>
   1a0ea:	1a1b      	subs	r3, r3, r0
   1a0ec:	b906      	cbnz	r6, 1a0f0 <mktime+0x218>
   1a0ee:	425b      	negs	r3, r3
   1a0f0:	f8d9 2000 	ldr.w	r2, [r9]
   1a0f4:	4648      	mov	r0, r9
   1a0f6:	441a      	add	r2, r3
   1a0f8:	f8c9 2000 	str.w	r2, [r9]
   1a0fc:	441f      	add	r7, r3
   1a0fe:	f8d9 a00c 	ldr.w	sl, [r9, #12]
   1a102:	f7ff fe09 	bl	19d18 <validate_structure>
   1a106:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1a10a:	ebb3 030a 	subs.w	r3, r3, sl
   1a10e:	f43f af74 	beq.w	19ffa <mktime+0x122>
   1a112:	2b01      	cmp	r3, #1
   1a114:	dc21      	bgt.n	1a15a <mktime+0x282>
   1a116:	1c98      	adds	r0, r3, #2
   1a118:	bfd8      	it	le
   1a11a:	2301      	movle	r3, #1
   1a11c:	f8d9 201c 	ldr.w	r2, [r9, #28]
   1a120:	441c      	add	r4, r3
   1a122:	189b      	adds	r3, r3, r2
   1a124:	d522      	bpl.n	1a16c <mktime+0x294>
   1a126:	1e6a      	subs	r2, r5, #1
   1a128:	0791      	lsls	r1, r2, #30
   1a12a:	d119      	bne.n	1a160 <mktime+0x288>
   1a12c:	2164      	movs	r1, #100	; 0x64
   1a12e:	fb92 f3f1 	sdiv	r3, r2, r1
   1a132:	fb01 2313 	mls	r3, r1, r3, r2
   1a136:	b9b3      	cbnz	r3, 1a166 <mktime+0x28e>
   1a138:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1a13c:	f205 756b 	addw	r5, r5, #1899	; 0x76b
   1a140:	fb95 f3f2 	sdiv	r3, r5, r2
   1a144:	fb02 5513 	mls	r5, r2, r3, r5
   1a148:	2d00      	cmp	r5, #0
   1a14a:	f240 136d 	movw	r3, #365	; 0x16d
   1a14e:	bf18      	it	ne
   1a150:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1a154:	f8c9 301c 	str.w	r3, [r9, #28]
   1a158:	e74f      	b.n	19ffa <mktime+0x122>
   1a15a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1a15e:	e7dd      	b.n	1a11c <mktime+0x244>
   1a160:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1a164:	e7f6      	b.n	1a154 <mktime+0x27c>
   1a166:	f240 136d 	movw	r3, #365	; 0x16d
   1a16a:	e7f3      	b.n	1a154 <mktime+0x27c>
   1a16c:	07aa      	lsls	r2, r5, #30
   1a16e:	d117      	bne.n	1a1a0 <mktime+0x2c8>
   1a170:	2164      	movs	r1, #100	; 0x64
   1a172:	fb95 f2f1 	sdiv	r2, r5, r1
   1a176:	fb01 5212 	mls	r2, r1, r2, r5
   1a17a:	b9a2      	cbnz	r2, 1a1a6 <mktime+0x2ce>
   1a17c:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1a180:	f205 756c 	addw	r5, r5, #1900	; 0x76c
   1a184:	fb95 f2f1 	sdiv	r2, r5, r1
   1a188:	fb01 5512 	mls	r5, r1, r2, r5
   1a18c:	2d00      	cmp	r5, #0
   1a18e:	f240 126d 	movw	r2, #365	; 0x16d
   1a192:	bf08      	it	eq
   1a194:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1a198:	429a      	cmp	r2, r3
   1a19a:	bfd8      	it	le
   1a19c:	1a9b      	suble	r3, r3, r2
   1a19e:	e7d9      	b.n	1a154 <mktime+0x27c>
   1a1a0:	f240 126d 	movw	r2, #365	; 0x16d
   1a1a4:	e7f8      	b.n	1a198 <mktime+0x2c0>
   1a1a6:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1a1aa:	e7f5      	b.n	1a198 <mktime+0x2c0>
   1a1ac:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1a1b0:	e739      	b.n	1a026 <mktime+0x14e>
   1a1b2:	f1ba 0f00 	cmp.w	sl, #0
   1a1b6:	f04f 0600 	mov.w	r6, #0
   1a1ba:	da91      	bge.n	1a0e0 <mktime+0x208>
   1a1bc:	f8d8 5020 	ldr.w	r5, [r8, #32]
   1a1c0:	443d      	add	r5, r7
   1a1c2:	e721      	b.n	1a008 <mktime+0x130>
   1a1c4:	000210fc 	.word	0x000210fc
   1a1c8:	00015180 	.word	0x00015180
   1a1cc:	2007c8bc 	.word	0x2007c8bc

0001a1d0 <mallinfo>:
mallinfo():
   1a1d0:	b510      	push	{r4, lr}
   1a1d2:	4604      	mov	r4, r0
   1a1d4:	4b02      	ldr	r3, [pc, #8]	; (1a1e0 <mallinfo+0x10>)
   1a1d6:	6819      	ldr	r1, [r3, #0]
   1a1d8:	f000 f85e 	bl	1a298 <_mallinfo_r>
   1a1dc:	4620      	mov	r0, r4
   1a1de:	bd10      	pop	{r4, pc}
   1a1e0:	2007c0e0 	.word	0x2007c0e0

0001a1e4 <_calloc_r>:
_calloc_r():
   1a1e4:	b538      	push	{r3, r4, r5, lr}
   1a1e6:	fb02 f401 	mul.w	r4, r2, r1
   1a1ea:	4621      	mov	r1, r4
   1a1ec:	f000 f886 	bl	1a2fc <_malloc_r>
   1a1f0:	4605      	mov	r5, r0
   1a1f2:	b118      	cbz	r0, 1a1fc <_calloc_r+0x18>
   1a1f4:	4622      	mov	r2, r4
   1a1f6:	2100      	movs	r1, #0
   1a1f8:	f7ff fd86 	bl	19d08 <memset>
   1a1fc:	4628      	mov	r0, r5
   1a1fe:	bd38      	pop	{r3, r4, r5, pc}

0001a200 <_free_r>:
_free_r():
   1a200:	b538      	push	{r3, r4, r5, lr}
   1a202:	4605      	mov	r5, r0
   1a204:	2900      	cmp	r1, #0
   1a206:	d043      	beq.n	1a290 <_free_r+0x90>
   1a208:	f851 3c04 	ldr.w	r3, [r1, #-4]
   1a20c:	1f0c      	subs	r4, r1, #4
   1a20e:	2b00      	cmp	r3, #0
   1a210:	bfb8      	it	lt
   1a212:	18e4      	addlt	r4, r4, r3
   1a214:	f7fc ffc2 	bl	1719c <__malloc_lock>
   1a218:	4a1e      	ldr	r2, [pc, #120]	; (1a294 <_free_r+0x94>)
   1a21a:	6813      	ldr	r3, [r2, #0]
   1a21c:	4610      	mov	r0, r2
   1a21e:	b933      	cbnz	r3, 1a22e <_free_r+0x2e>
   1a220:	6063      	str	r3, [r4, #4]
   1a222:	6014      	str	r4, [r2, #0]
   1a224:	4628      	mov	r0, r5
   1a226:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a22a:	f7fc bfb9 	b.w	171a0 <__malloc_unlock>
   1a22e:	42a3      	cmp	r3, r4
   1a230:	d90b      	bls.n	1a24a <_free_r+0x4a>
   1a232:	6821      	ldr	r1, [r4, #0]
   1a234:	1862      	adds	r2, r4, r1
   1a236:	4293      	cmp	r3, r2
   1a238:	bf01      	itttt	eq
   1a23a:	681a      	ldreq	r2, [r3, #0]
   1a23c:	685b      	ldreq	r3, [r3, #4]
   1a23e:	1852      	addeq	r2, r2, r1
   1a240:	6022      	streq	r2, [r4, #0]
   1a242:	6063      	str	r3, [r4, #4]
   1a244:	6004      	str	r4, [r0, #0]
   1a246:	e7ed      	b.n	1a224 <_free_r+0x24>
   1a248:	4613      	mov	r3, r2
   1a24a:	685a      	ldr	r2, [r3, #4]
   1a24c:	b10a      	cbz	r2, 1a252 <_free_r+0x52>
   1a24e:	42a2      	cmp	r2, r4
   1a250:	d9fa      	bls.n	1a248 <_free_r+0x48>
   1a252:	6819      	ldr	r1, [r3, #0]
   1a254:	1858      	adds	r0, r3, r1
   1a256:	42a0      	cmp	r0, r4
   1a258:	d10b      	bne.n	1a272 <_free_r+0x72>
   1a25a:	6820      	ldr	r0, [r4, #0]
   1a25c:	4401      	add	r1, r0
   1a25e:	1858      	adds	r0, r3, r1
   1a260:	4282      	cmp	r2, r0
   1a262:	6019      	str	r1, [r3, #0]
   1a264:	d1de      	bne.n	1a224 <_free_r+0x24>
   1a266:	6810      	ldr	r0, [r2, #0]
   1a268:	6852      	ldr	r2, [r2, #4]
   1a26a:	4401      	add	r1, r0
   1a26c:	6019      	str	r1, [r3, #0]
   1a26e:	605a      	str	r2, [r3, #4]
   1a270:	e7d8      	b.n	1a224 <_free_r+0x24>
   1a272:	d902      	bls.n	1a27a <_free_r+0x7a>
   1a274:	230c      	movs	r3, #12
   1a276:	602b      	str	r3, [r5, #0]
   1a278:	e7d4      	b.n	1a224 <_free_r+0x24>
   1a27a:	6820      	ldr	r0, [r4, #0]
   1a27c:	1821      	adds	r1, r4, r0
   1a27e:	428a      	cmp	r2, r1
   1a280:	bf01      	itttt	eq
   1a282:	6811      	ldreq	r1, [r2, #0]
   1a284:	6852      	ldreq	r2, [r2, #4]
   1a286:	1809      	addeq	r1, r1, r0
   1a288:	6021      	streq	r1, [r4, #0]
   1a28a:	6062      	str	r2, [r4, #4]
   1a28c:	605c      	str	r4, [r3, #4]
   1a28e:	e7c9      	b.n	1a224 <_free_r+0x24>
   1a290:	bd38      	pop	{r3, r4, r5, pc}
   1a292:	bf00      	nop
   1a294:	2007c898 	.word	0x2007c898

0001a298 <_mallinfo_r>:
_mallinfo_r():
   1a298:	b570      	push	{r4, r5, r6, lr}
   1a29a:	4c15      	ldr	r4, [pc, #84]	; (1a2f0 <_mallinfo_r+0x58>)
   1a29c:	4606      	mov	r6, r0
   1a29e:	4608      	mov	r0, r1
   1a2a0:	460d      	mov	r5, r1
   1a2a2:	f7fc ff7b 	bl	1719c <__malloc_lock>
   1a2a6:	6820      	ldr	r0, [r4, #0]
   1a2a8:	b138      	cbz	r0, 1a2ba <_mallinfo_r+0x22>
   1a2aa:	2100      	movs	r1, #0
   1a2ac:	4628      	mov	r0, r5
   1a2ae:	f001 f839 	bl	1b324 <_sbrk_r>
   1a2b2:	1c43      	adds	r3, r0, #1
   1a2b4:	bf1c      	itt	ne
   1a2b6:	6823      	ldrne	r3, [r4, #0]
   1a2b8:	1ac0      	subne	r0, r0, r3
   1a2ba:	4b0e      	ldr	r3, [pc, #56]	; (1a2f4 <_mallinfo_r+0x5c>)
   1a2bc:	681a      	ldr	r2, [r3, #0]
   1a2be:	2300      	movs	r3, #0
   1a2c0:	b992      	cbnz	r2, 1a2e8 <_mallinfo_r+0x50>
   1a2c2:	4c0d      	ldr	r4, [pc, #52]	; (1a2f8 <_mallinfo_r+0x60>)
   1a2c4:	6020      	str	r0, [r4, #0]
   1a2c6:	1ac0      	subs	r0, r0, r3
   1a2c8:	61e0      	str	r0, [r4, #28]
   1a2ca:	4628      	mov	r0, r5
   1a2cc:	4635      	mov	r5, r6
   1a2ce:	6223      	str	r3, [r4, #32]
   1a2d0:	f7fc ff66 	bl	171a0 <__malloc_unlock>
   1a2d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1a2d6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1a2d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1a2da:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1a2dc:	e894 0003 	ldmia.w	r4, {r0, r1}
   1a2e0:	e885 0003 	stmia.w	r5, {r0, r1}
   1a2e4:	4630      	mov	r0, r6
   1a2e6:	bd70      	pop	{r4, r5, r6, pc}
   1a2e8:	6811      	ldr	r1, [r2, #0]
   1a2ea:	6852      	ldr	r2, [r2, #4]
   1a2ec:	440b      	add	r3, r1
   1a2ee:	e7e7      	b.n	1a2c0 <_mallinfo_r+0x28>
   1a2f0:	2007c89c 	.word	0x2007c89c
   1a2f4:	2007c898 	.word	0x2007c898
   1a2f8:	2007c870 	.word	0x2007c870

0001a2fc <_malloc_r>:
_malloc_r():
   1a2fc:	b570      	push	{r4, r5, r6, lr}
   1a2fe:	1ccd      	adds	r5, r1, #3
   1a300:	f025 0503 	bic.w	r5, r5, #3
   1a304:	3508      	adds	r5, #8
   1a306:	2d0c      	cmp	r5, #12
   1a308:	bf38      	it	cc
   1a30a:	250c      	movcc	r5, #12
   1a30c:	2d00      	cmp	r5, #0
   1a30e:	4606      	mov	r6, r0
   1a310:	db01      	blt.n	1a316 <_malloc_r+0x1a>
   1a312:	42a9      	cmp	r1, r5
   1a314:	d903      	bls.n	1a31e <_malloc_r+0x22>
   1a316:	230c      	movs	r3, #12
   1a318:	6033      	str	r3, [r6, #0]
   1a31a:	2000      	movs	r0, #0
   1a31c:	bd70      	pop	{r4, r5, r6, pc}
   1a31e:	f7fc ff3d 	bl	1719c <__malloc_lock>
   1a322:	4a23      	ldr	r2, [pc, #140]	; (1a3b0 <_malloc_r+0xb4>)
   1a324:	6814      	ldr	r4, [r2, #0]
   1a326:	4621      	mov	r1, r4
   1a328:	b991      	cbnz	r1, 1a350 <_malloc_r+0x54>
   1a32a:	4c22      	ldr	r4, [pc, #136]	; (1a3b4 <_malloc_r+0xb8>)
   1a32c:	6823      	ldr	r3, [r4, #0]
   1a32e:	b91b      	cbnz	r3, 1a338 <_malloc_r+0x3c>
   1a330:	4630      	mov	r0, r6
   1a332:	f000 fff7 	bl	1b324 <_sbrk_r>
   1a336:	6020      	str	r0, [r4, #0]
   1a338:	4629      	mov	r1, r5
   1a33a:	4630      	mov	r0, r6
   1a33c:	f000 fff2 	bl	1b324 <_sbrk_r>
   1a340:	1c43      	adds	r3, r0, #1
   1a342:	d126      	bne.n	1a392 <_malloc_r+0x96>
   1a344:	230c      	movs	r3, #12
   1a346:	4630      	mov	r0, r6
   1a348:	6033      	str	r3, [r6, #0]
   1a34a:	f7fc ff29 	bl	171a0 <__malloc_unlock>
   1a34e:	e7e4      	b.n	1a31a <_malloc_r+0x1e>
   1a350:	680b      	ldr	r3, [r1, #0]
   1a352:	1b5b      	subs	r3, r3, r5
   1a354:	d41a      	bmi.n	1a38c <_malloc_r+0x90>
   1a356:	2b0b      	cmp	r3, #11
   1a358:	d90f      	bls.n	1a37a <_malloc_r+0x7e>
   1a35a:	600b      	str	r3, [r1, #0]
   1a35c:	18cc      	adds	r4, r1, r3
   1a35e:	50cd      	str	r5, [r1, r3]
   1a360:	4630      	mov	r0, r6
   1a362:	f7fc ff1d 	bl	171a0 <__malloc_unlock>
   1a366:	f104 000b 	add.w	r0, r4, #11
   1a36a:	1d23      	adds	r3, r4, #4
   1a36c:	f020 0007 	bic.w	r0, r0, #7
   1a370:	1ac3      	subs	r3, r0, r3
   1a372:	d01b      	beq.n	1a3ac <_malloc_r+0xb0>
   1a374:	425a      	negs	r2, r3
   1a376:	50e2      	str	r2, [r4, r3]
   1a378:	bd70      	pop	{r4, r5, r6, pc}
   1a37a:	428c      	cmp	r4, r1
   1a37c:	bf0b      	itete	eq
   1a37e:	6863      	ldreq	r3, [r4, #4]
   1a380:	684b      	ldrne	r3, [r1, #4]
   1a382:	6013      	streq	r3, [r2, #0]
   1a384:	6063      	strne	r3, [r4, #4]
   1a386:	bf18      	it	ne
   1a388:	460c      	movne	r4, r1
   1a38a:	e7e9      	b.n	1a360 <_malloc_r+0x64>
   1a38c:	460c      	mov	r4, r1
   1a38e:	6849      	ldr	r1, [r1, #4]
   1a390:	e7ca      	b.n	1a328 <_malloc_r+0x2c>
   1a392:	1cc4      	adds	r4, r0, #3
   1a394:	f024 0403 	bic.w	r4, r4, #3
   1a398:	42a0      	cmp	r0, r4
   1a39a:	d005      	beq.n	1a3a8 <_malloc_r+0xac>
   1a39c:	1a21      	subs	r1, r4, r0
   1a39e:	4630      	mov	r0, r6
   1a3a0:	f000 ffc0 	bl	1b324 <_sbrk_r>
   1a3a4:	3001      	adds	r0, #1
   1a3a6:	d0cd      	beq.n	1a344 <_malloc_r+0x48>
   1a3a8:	6025      	str	r5, [r4, #0]
   1a3aa:	e7d9      	b.n	1a360 <_malloc_r+0x64>
   1a3ac:	bd70      	pop	{r4, r5, r6, pc}
   1a3ae:	bf00      	nop
   1a3b0:	2007c898 	.word	0x2007c898
   1a3b4:	2007c89c 	.word	0x2007c89c

0001a3b8 <__cvt>:
__cvt():
   1a3b8:	2b00      	cmp	r3, #0
   1a3ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1a3be:	461e      	mov	r6, r3
   1a3c0:	bfbb      	ittet	lt
   1a3c2:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
   1a3c6:	461e      	movlt	r6, r3
   1a3c8:	2300      	movge	r3, #0
   1a3ca:	232d      	movlt	r3, #45	; 0x2d
   1a3cc:	b088      	sub	sp, #32
   1a3ce:	9f14      	ldr	r7, [sp, #80]	; 0x50
   1a3d0:	9912      	ldr	r1, [sp, #72]	; 0x48
   1a3d2:	f027 0720 	bic.w	r7, r7, #32
   1a3d6:	2f46      	cmp	r7, #70	; 0x46
   1a3d8:	4614      	mov	r4, r2
   1a3da:	9d10      	ldr	r5, [sp, #64]	; 0x40
   1a3dc:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   1a3e0:	700b      	strb	r3, [r1, #0]
   1a3e2:	d004      	beq.n	1a3ee <__cvt+0x36>
   1a3e4:	2f45      	cmp	r7, #69	; 0x45
   1a3e6:	d100      	bne.n	1a3ea <__cvt+0x32>
   1a3e8:	3501      	adds	r5, #1
   1a3ea:	2302      	movs	r3, #2
   1a3ec:	e000      	b.n	1a3f0 <__cvt+0x38>
   1a3ee:	2303      	movs	r3, #3
   1a3f0:	aa07      	add	r2, sp, #28
   1a3f2:	9204      	str	r2, [sp, #16]
   1a3f4:	aa06      	add	r2, sp, #24
   1a3f6:	9203      	str	r2, [sp, #12]
   1a3f8:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
   1a3fc:	4622      	mov	r2, r4
   1a3fe:	4633      	mov	r3, r6
   1a400:	f002 fc66 	bl	1ccd0 <_dtoa_r>
   1a404:	2f47      	cmp	r7, #71	; 0x47
   1a406:	4680      	mov	r8, r0
   1a408:	d102      	bne.n	1a410 <__cvt+0x58>
   1a40a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1a40c:	07db      	lsls	r3, r3, #31
   1a40e:	d526      	bpl.n	1a45e <__cvt+0xa6>
   1a410:	2f46      	cmp	r7, #70	; 0x46
   1a412:	eb08 0905 	add.w	r9, r8, r5
   1a416:	d111      	bne.n	1a43c <__cvt+0x84>
   1a418:	f898 3000 	ldrb.w	r3, [r8]
   1a41c:	2b30      	cmp	r3, #48	; 0x30
   1a41e:	d10a      	bne.n	1a436 <__cvt+0x7e>
   1a420:	2200      	movs	r2, #0
   1a422:	2300      	movs	r3, #0
   1a424:	4620      	mov	r0, r4
   1a426:	4631      	mov	r1, r6
   1a428:	f005 fd0c 	bl	1fe44 <__aeabi_dcmpeq>
   1a42c:	b918      	cbnz	r0, 1a436 <__cvt+0x7e>
   1a42e:	f1c5 0501 	rsb	r5, r5, #1
   1a432:	f8ca 5000 	str.w	r5, [sl]
   1a436:	f8da 3000 	ldr.w	r3, [sl]
   1a43a:	4499      	add	r9, r3
   1a43c:	2200      	movs	r2, #0
   1a43e:	2300      	movs	r3, #0
   1a440:	4620      	mov	r0, r4
   1a442:	4631      	mov	r1, r6
   1a444:	f005 fcfe 	bl	1fe44 <__aeabi_dcmpeq>
   1a448:	b938      	cbnz	r0, 1a45a <__cvt+0xa2>
   1a44a:	2230      	movs	r2, #48	; 0x30
   1a44c:	9b07      	ldr	r3, [sp, #28]
   1a44e:	4599      	cmp	r9, r3
   1a450:	d905      	bls.n	1a45e <__cvt+0xa6>
   1a452:	1c59      	adds	r1, r3, #1
   1a454:	9107      	str	r1, [sp, #28]
   1a456:	701a      	strb	r2, [r3, #0]
   1a458:	e7f8      	b.n	1a44c <__cvt+0x94>
   1a45a:	f8cd 901c 	str.w	r9, [sp, #28]
   1a45e:	4640      	mov	r0, r8
   1a460:	9b07      	ldr	r3, [sp, #28]
   1a462:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1a464:	eba3 0308 	sub.w	r3, r3, r8
   1a468:	6013      	str	r3, [r2, #0]
   1a46a:	b008      	add	sp, #32
   1a46c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001a470 <__exponent>:
__exponent():
   1a470:	4603      	mov	r3, r0
   1a472:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1a474:	2900      	cmp	r1, #0
   1a476:	f803 2b02 	strb.w	r2, [r3], #2
   1a47a:	bfb6      	itet	lt
   1a47c:	222d      	movlt	r2, #45	; 0x2d
   1a47e:	222b      	movge	r2, #43	; 0x2b
   1a480:	4249      	neglt	r1, r1
   1a482:	2909      	cmp	r1, #9
   1a484:	7042      	strb	r2, [r0, #1]
   1a486:	dd21      	ble.n	1a4cc <__exponent+0x5c>
   1a488:	f10d 0207 	add.w	r2, sp, #7
   1a48c:	4617      	mov	r7, r2
   1a48e:	260a      	movs	r6, #10
   1a490:	fb91 f5f6 	sdiv	r5, r1, r6
   1a494:	fb06 1115 	mls	r1, r6, r5, r1
   1a498:	2d09      	cmp	r5, #9
   1a49a:	f101 0130 	add.w	r1, r1, #48	; 0x30
   1a49e:	f802 1c01 	strb.w	r1, [r2, #-1]
   1a4a2:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
   1a4a6:	4629      	mov	r1, r5
   1a4a8:	dc09      	bgt.n	1a4be <__exponent+0x4e>
   1a4aa:	3130      	adds	r1, #48	; 0x30
   1a4ac:	3a02      	subs	r2, #2
   1a4ae:	f804 1c01 	strb.w	r1, [r4, #-1]
   1a4b2:	42ba      	cmp	r2, r7
   1a4b4:	461c      	mov	r4, r3
   1a4b6:	d304      	bcc.n	1a4c2 <__exponent+0x52>
   1a4b8:	1a20      	subs	r0, r4, r0
   1a4ba:	b003      	add	sp, #12
   1a4bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1a4be:	4622      	mov	r2, r4
   1a4c0:	e7e6      	b.n	1a490 <__exponent+0x20>
   1a4c2:	f812 1b01 	ldrb.w	r1, [r2], #1
   1a4c6:	f803 1b01 	strb.w	r1, [r3], #1
   1a4ca:	e7f2      	b.n	1a4b2 <__exponent+0x42>
   1a4cc:	2230      	movs	r2, #48	; 0x30
   1a4ce:	461c      	mov	r4, r3
   1a4d0:	4411      	add	r1, r2
   1a4d2:	f804 2b02 	strb.w	r2, [r4], #2
   1a4d6:	7059      	strb	r1, [r3, #1]
   1a4d8:	e7ee      	b.n	1a4b8 <__exponent+0x48>
   1a4da:	Address 0x000000000001a4da is out of bounds.


0001a4dc <_printf_float>:
_printf_float():
   1a4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4e0:	b091      	sub	sp, #68	; 0x44
   1a4e2:	460c      	mov	r4, r1
   1a4e4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
   1a4e6:	4693      	mov	fp, r2
   1a4e8:	461e      	mov	r6, r3
   1a4ea:	4605      	mov	r5, r0
   1a4ec:	f003 fd64 	bl	1dfb8 <_localeconv_r>
   1a4f0:	6803      	ldr	r3, [r0, #0]
   1a4f2:	4618      	mov	r0, r3
   1a4f4:	9309      	str	r3, [sp, #36]	; 0x24
   1a4f6:	f001 f8d8 	bl	1b6aa <strlen>
   1a4fa:	2300      	movs	r3, #0
   1a4fc:	930e      	str	r3, [sp, #56]	; 0x38
   1a4fe:	683b      	ldr	r3, [r7, #0]
   1a500:	900a      	str	r0, [sp, #40]	; 0x28
   1a502:	3307      	adds	r3, #7
   1a504:	f023 0307 	bic.w	r3, r3, #7
   1a508:	f103 0208 	add.w	r2, r3, #8
   1a50c:	f894 8018 	ldrb.w	r8, [r4, #24]
   1a510:	f8d4 a000 	ldr.w	sl, [r4]
   1a514:	603a      	str	r2, [r7, #0]
   1a516:	e9d3 2300 	ldrd	r2, r3, [r3]
   1a51a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
   1a51e:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
   1a522:	6ca7      	ldr	r7, [r4, #72]	; 0x48
   1a524:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   1a528:	930b      	str	r3, [sp, #44]	; 0x2c
   1a52a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a52e:	4ba6      	ldr	r3, [pc, #664]	; (1a7c8 <_printf_float+0x2ec>)
   1a530:	4638      	mov	r0, r7
   1a532:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1a534:	f005 fcb8 	bl	1fea8 <__aeabi_dcmpun>
   1a538:	2800      	cmp	r0, #0
   1a53a:	f040 81f7 	bne.w	1a92c <_printf_float+0x450>
   1a53e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1a542:	4ba1      	ldr	r3, [pc, #644]	; (1a7c8 <_printf_float+0x2ec>)
   1a544:	4638      	mov	r0, r7
   1a546:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1a548:	f005 fc90 	bl	1fe6c <__aeabi_dcmple>
   1a54c:	2800      	cmp	r0, #0
   1a54e:	f040 81ed 	bne.w	1a92c <_printf_float+0x450>
   1a552:	2200      	movs	r2, #0
   1a554:	2300      	movs	r3, #0
   1a556:	4638      	mov	r0, r7
   1a558:	4649      	mov	r1, r9
   1a55a:	f005 fc7d 	bl	1fe58 <__aeabi_dcmplt>
   1a55e:	b110      	cbz	r0, 1a566 <_printf_float+0x8a>
   1a560:	232d      	movs	r3, #45	; 0x2d
   1a562:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1a566:	4b99      	ldr	r3, [pc, #612]	; (1a7cc <_printf_float+0x2f0>)
   1a568:	4f99      	ldr	r7, [pc, #612]	; (1a7d0 <_printf_float+0x2f4>)
   1a56a:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1a56e:	bf98      	it	ls
   1a570:	461f      	movls	r7, r3
   1a572:	2303      	movs	r3, #3
   1a574:	f04f 0900 	mov.w	r9, #0
   1a578:	6123      	str	r3, [r4, #16]
   1a57a:	f02a 0304 	bic.w	r3, sl, #4
   1a57e:	6023      	str	r3, [r4, #0]
   1a580:	9600      	str	r6, [sp, #0]
   1a582:	465b      	mov	r3, fp
   1a584:	aa0f      	add	r2, sp, #60	; 0x3c
   1a586:	4621      	mov	r1, r4
   1a588:	4628      	mov	r0, r5
   1a58a:	f000 f9df 	bl	1a94c <_printf_common>
   1a58e:	3001      	adds	r0, #1
   1a590:	f040 809a 	bne.w	1a6c8 <_printf_float+0x1ec>
   1a594:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1a598:	b011      	add	sp, #68	; 0x44
   1a59a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a59e:	6862      	ldr	r2, [r4, #4]
   1a5a0:	a80e      	add	r0, sp, #56	; 0x38
   1a5a2:	1c53      	adds	r3, r2, #1
   1a5a4:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
   1a5a8:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
   1a5ac:	d141      	bne.n	1a632 <_printf_float+0x156>
   1a5ae:	2206      	movs	r2, #6
   1a5b0:	6062      	str	r2, [r4, #4]
   1a5b2:	2100      	movs	r1, #0
   1a5b4:	6023      	str	r3, [r4, #0]
   1a5b6:	9301      	str	r3, [sp, #4]
   1a5b8:	6863      	ldr	r3, [r4, #4]
   1a5ba:	f10d 0233 	add.w	r2, sp, #51	; 0x33
   1a5be:	9005      	str	r0, [sp, #20]
   1a5c0:	9202      	str	r2, [sp, #8]
   1a5c2:	9300      	str	r3, [sp, #0]
   1a5c4:	463a      	mov	r2, r7
   1a5c6:	464b      	mov	r3, r9
   1a5c8:	9106      	str	r1, [sp, #24]
   1a5ca:	f8cd 8010 	str.w	r8, [sp, #16]
   1a5ce:	f8cd e00c 	str.w	lr, [sp, #12]
   1a5d2:	4628      	mov	r0, r5
   1a5d4:	f7ff fef0 	bl	1a3b8 <__cvt>
   1a5d8:	f008 03df 	and.w	r3, r8, #223	; 0xdf
   1a5dc:	2b47      	cmp	r3, #71	; 0x47
   1a5de:	4607      	mov	r7, r0
   1a5e0:	d109      	bne.n	1a5f6 <_printf_float+0x11a>
   1a5e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a5e4:	1cd8      	adds	r0, r3, #3
   1a5e6:	db02      	blt.n	1a5ee <_printf_float+0x112>
   1a5e8:	6862      	ldr	r2, [r4, #4]
   1a5ea:	4293      	cmp	r3, r2
   1a5ec:	dd59      	ble.n	1a6a2 <_printf_float+0x1c6>
   1a5ee:	f1a8 0802 	sub.w	r8, r8, #2
   1a5f2:	fa5f f888 	uxtb.w	r8, r8
   1a5f6:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1a5fa:	990d      	ldr	r1, [sp, #52]	; 0x34
   1a5fc:	d836      	bhi.n	1a66c <_printf_float+0x190>
   1a5fe:	3901      	subs	r1, #1
   1a600:	4642      	mov	r2, r8
   1a602:	f104 0050 	add.w	r0, r4, #80	; 0x50
   1a606:	910d      	str	r1, [sp, #52]	; 0x34
   1a608:	f7ff ff32 	bl	1a470 <__exponent>
   1a60c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1a60e:	4681      	mov	r9, r0
   1a610:	1883      	adds	r3, r0, r2
   1a612:	2a01      	cmp	r2, #1
   1a614:	6123      	str	r3, [r4, #16]
   1a616:	dc02      	bgt.n	1a61e <_printf_float+0x142>
   1a618:	6822      	ldr	r2, [r4, #0]
   1a61a:	07d1      	lsls	r1, r2, #31
   1a61c:	d501      	bpl.n	1a622 <_printf_float+0x146>
   1a61e:	3301      	adds	r3, #1
   1a620:	6123      	str	r3, [r4, #16]
   1a622:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
   1a626:	2b00      	cmp	r3, #0
   1a628:	d0aa      	beq.n	1a580 <_printf_float+0xa4>
   1a62a:	232d      	movs	r3, #45	; 0x2d
   1a62c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1a630:	e7a6      	b.n	1a580 <_printf_float+0xa4>
   1a632:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   1a636:	d002      	beq.n	1a63e <_printf_float+0x162>
   1a638:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   1a63c:	d1b9      	bne.n	1a5b2 <_printf_float+0xd6>
   1a63e:	b19a      	cbz	r2, 1a668 <_printf_float+0x18c>
   1a640:	2100      	movs	r1, #0
   1a642:	9106      	str	r1, [sp, #24]
   1a644:	f10d 0133 	add.w	r1, sp, #51	; 0x33
   1a648:	e88d 000c 	stmia.w	sp, {r2, r3}
   1a64c:	6023      	str	r3, [r4, #0]
   1a64e:	9005      	str	r0, [sp, #20]
   1a650:	463a      	mov	r2, r7
   1a652:	f8cd 8010 	str.w	r8, [sp, #16]
   1a656:	f8cd e00c 	str.w	lr, [sp, #12]
   1a65a:	9102      	str	r1, [sp, #8]
   1a65c:	464b      	mov	r3, r9
   1a65e:	4628      	mov	r0, r5
   1a660:	f7ff feaa 	bl	1a3b8 <__cvt>
   1a664:	4607      	mov	r7, r0
   1a666:	e7bc      	b.n	1a5e2 <_printf_float+0x106>
   1a668:	2201      	movs	r2, #1
   1a66a:	e7a1      	b.n	1a5b0 <_printf_float+0xd4>
   1a66c:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   1a670:	d119      	bne.n	1a6a6 <_printf_float+0x1ca>
   1a672:	2900      	cmp	r1, #0
   1a674:	6863      	ldr	r3, [r4, #4]
   1a676:	dd0c      	ble.n	1a692 <_printf_float+0x1b6>
   1a678:	6121      	str	r1, [r4, #16]
   1a67a:	b913      	cbnz	r3, 1a682 <_printf_float+0x1a6>
   1a67c:	6822      	ldr	r2, [r4, #0]
   1a67e:	07d2      	lsls	r2, r2, #31
   1a680:	d502      	bpl.n	1a688 <_printf_float+0x1ac>
   1a682:	3301      	adds	r3, #1
   1a684:	440b      	add	r3, r1
   1a686:	6123      	str	r3, [r4, #16]
   1a688:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a68a:	f04f 0900 	mov.w	r9, #0
   1a68e:	65a3      	str	r3, [r4, #88]	; 0x58
   1a690:	e7c7      	b.n	1a622 <_printf_float+0x146>
   1a692:	b913      	cbnz	r3, 1a69a <_printf_float+0x1be>
   1a694:	6822      	ldr	r2, [r4, #0]
   1a696:	07d0      	lsls	r0, r2, #31
   1a698:	d501      	bpl.n	1a69e <_printf_float+0x1c2>
   1a69a:	3302      	adds	r3, #2
   1a69c:	e7f3      	b.n	1a686 <_printf_float+0x1aa>
   1a69e:	2301      	movs	r3, #1
   1a6a0:	e7f1      	b.n	1a686 <_printf_float+0x1aa>
   1a6a2:	f04f 0867 	mov.w	r8, #103	; 0x67
   1a6a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a6a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1a6aa:	4293      	cmp	r3, r2
   1a6ac:	db05      	blt.n	1a6ba <_printf_float+0x1de>
   1a6ae:	6822      	ldr	r2, [r4, #0]
   1a6b0:	6123      	str	r3, [r4, #16]
   1a6b2:	07d1      	lsls	r1, r2, #31
   1a6b4:	d5e8      	bpl.n	1a688 <_printf_float+0x1ac>
   1a6b6:	3301      	adds	r3, #1
   1a6b8:	e7e5      	b.n	1a686 <_printf_float+0x1aa>
   1a6ba:	2b00      	cmp	r3, #0
   1a6bc:	bfcc      	ite	gt
   1a6be:	2301      	movgt	r3, #1
   1a6c0:	f1c3 0302 	rsble	r3, r3, #2
   1a6c4:	4413      	add	r3, r2
   1a6c6:	e7de      	b.n	1a686 <_printf_float+0x1aa>
   1a6c8:	6823      	ldr	r3, [r4, #0]
   1a6ca:	055a      	lsls	r2, r3, #21
   1a6cc:	d407      	bmi.n	1a6de <_printf_float+0x202>
   1a6ce:	6923      	ldr	r3, [r4, #16]
   1a6d0:	463a      	mov	r2, r7
   1a6d2:	4659      	mov	r1, fp
   1a6d4:	4628      	mov	r0, r5
   1a6d6:	47b0      	blx	r6
   1a6d8:	3001      	adds	r0, #1
   1a6da:	d12a      	bne.n	1a732 <_printf_float+0x256>
   1a6dc:	e75a      	b.n	1a594 <_printf_float+0xb8>
   1a6de:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   1a6e2:	f240 80dc 	bls.w	1a89e <_printf_float+0x3c2>
   1a6e6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1a6ea:	2200      	movs	r2, #0
   1a6ec:	2300      	movs	r3, #0
   1a6ee:	f005 fba9 	bl	1fe44 <__aeabi_dcmpeq>
   1a6f2:	2800      	cmp	r0, #0
   1a6f4:	d039      	beq.n	1a76a <_printf_float+0x28e>
   1a6f6:	2301      	movs	r3, #1
   1a6f8:	4a36      	ldr	r2, [pc, #216]	; (1a7d4 <_printf_float+0x2f8>)
   1a6fa:	4659      	mov	r1, fp
   1a6fc:	4628      	mov	r0, r5
   1a6fe:	47b0      	blx	r6
   1a700:	3001      	adds	r0, #1
   1a702:	f43f af47 	beq.w	1a594 <_printf_float+0xb8>
   1a706:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a708:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1a70a:	429a      	cmp	r2, r3
   1a70c:	db02      	blt.n	1a714 <_printf_float+0x238>
   1a70e:	6823      	ldr	r3, [r4, #0]
   1a710:	07d8      	lsls	r0, r3, #31
   1a712:	d50e      	bpl.n	1a732 <_printf_float+0x256>
   1a714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a716:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1a718:	4659      	mov	r1, fp
   1a71a:	4628      	mov	r0, r5
   1a71c:	47b0      	blx	r6
   1a71e:	3001      	adds	r0, #1
   1a720:	f43f af38 	beq.w	1a594 <_printf_float+0xb8>
   1a724:	2700      	movs	r7, #0
   1a726:	f104 081a 	add.w	r8, r4, #26
   1a72a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a72c:	3b01      	subs	r3, #1
   1a72e:	429f      	cmp	r7, r3
   1a730:	db11      	blt.n	1a756 <_printf_float+0x27a>
   1a732:	6823      	ldr	r3, [r4, #0]
   1a734:	079f      	lsls	r7, r3, #30
   1a736:	d508      	bpl.n	1a74a <_printf_float+0x26e>
   1a738:	2700      	movs	r7, #0
   1a73a:	f104 0819 	add.w	r8, r4, #25
   1a73e:	68e3      	ldr	r3, [r4, #12]
   1a740:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1a742:	1a9b      	subs	r3, r3, r2
   1a744:	429f      	cmp	r7, r3
   1a746:	f2c0 80e7 	blt.w	1a918 <_printf_float+0x43c>
   1a74a:	68e0      	ldr	r0, [r4, #12]
   1a74c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1a74e:	4298      	cmp	r0, r3
   1a750:	bfb8      	it	lt
   1a752:	4618      	movlt	r0, r3
   1a754:	e720      	b.n	1a598 <_printf_float+0xbc>
   1a756:	2301      	movs	r3, #1
   1a758:	4642      	mov	r2, r8
   1a75a:	4659      	mov	r1, fp
   1a75c:	4628      	mov	r0, r5
   1a75e:	47b0      	blx	r6
   1a760:	3001      	adds	r0, #1
   1a762:	f43f af17 	beq.w	1a594 <_printf_float+0xb8>
   1a766:	3701      	adds	r7, #1
   1a768:	e7df      	b.n	1a72a <_printf_float+0x24e>
   1a76a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a76c:	2b00      	cmp	r3, #0
   1a76e:	dc33      	bgt.n	1a7d8 <_printf_float+0x2fc>
   1a770:	2301      	movs	r3, #1
   1a772:	4a18      	ldr	r2, [pc, #96]	; (1a7d4 <_printf_float+0x2f8>)
   1a774:	4659      	mov	r1, fp
   1a776:	4628      	mov	r0, r5
   1a778:	47b0      	blx	r6
   1a77a:	3001      	adds	r0, #1
   1a77c:	f43f af0a 	beq.w	1a594 <_printf_float+0xb8>
   1a780:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a782:	b923      	cbnz	r3, 1a78e <_printf_float+0x2b2>
   1a784:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a786:	b913      	cbnz	r3, 1a78e <_printf_float+0x2b2>
   1a788:	6823      	ldr	r3, [r4, #0]
   1a78a:	07d9      	lsls	r1, r3, #31
   1a78c:	d5d1      	bpl.n	1a732 <_printf_float+0x256>
   1a78e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a790:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1a792:	4659      	mov	r1, fp
   1a794:	4628      	mov	r0, r5
   1a796:	47b0      	blx	r6
   1a798:	3001      	adds	r0, #1
   1a79a:	f43f aefb 	beq.w	1a594 <_printf_float+0xb8>
   1a79e:	f04f 0800 	mov.w	r8, #0
   1a7a2:	f104 091a 	add.w	r9, r4, #26
   1a7a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a7a8:	425b      	negs	r3, r3
   1a7aa:	4598      	cmp	r8, r3
   1a7ac:	db01      	blt.n	1a7b2 <_printf_float+0x2d6>
   1a7ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a7b0:	e78e      	b.n	1a6d0 <_printf_float+0x1f4>
   1a7b2:	2301      	movs	r3, #1
   1a7b4:	464a      	mov	r2, r9
   1a7b6:	4659      	mov	r1, fp
   1a7b8:	4628      	mov	r0, r5
   1a7ba:	47b0      	blx	r6
   1a7bc:	3001      	adds	r0, #1
   1a7be:	f43f aee9 	beq.w	1a594 <_printf_float+0xb8>
   1a7c2:	f108 0801 	add.w	r8, r8, #1
   1a7c6:	e7ee      	b.n	1a7a6 <_printf_float+0x2ca>
   1a7c8:	7fefffff 	.word	0x7fefffff
   1a7cc:	0002118c 	.word	0x0002118c
   1a7d0:	00021190 	.word	0x00021190
   1a7d4:	00020f03 	.word	0x00020f03
   1a7d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1a7da:	6da3      	ldr	r3, [r4, #88]	; 0x58
   1a7dc:	429a      	cmp	r2, r3
   1a7de:	bfa8      	it	ge
   1a7e0:	461a      	movge	r2, r3
   1a7e2:	2a00      	cmp	r2, #0
   1a7e4:	4690      	mov	r8, r2
   1a7e6:	dc36      	bgt.n	1a856 <_printf_float+0x37a>
   1a7e8:	f04f 0a00 	mov.w	sl, #0
   1a7ec:	f104 031a 	add.w	r3, r4, #26
   1a7f0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1a7f4:	930b      	str	r3, [sp, #44]	; 0x2c
   1a7f6:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
   1a7fa:	eba9 0308 	sub.w	r3, r9, r8
   1a7fe:	459a      	cmp	sl, r3
   1a800:	db31      	blt.n	1a866 <_printf_float+0x38a>
   1a802:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a804:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1a806:	429a      	cmp	r2, r3
   1a808:	db38      	blt.n	1a87c <_printf_float+0x3a0>
   1a80a:	6823      	ldr	r3, [r4, #0]
   1a80c:	07da      	lsls	r2, r3, #31
   1a80e:	d435      	bmi.n	1a87c <_printf_float+0x3a0>
   1a810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a812:	990d      	ldr	r1, [sp, #52]	; 0x34
   1a814:	eba3 0209 	sub.w	r2, r3, r9
   1a818:	eba3 0801 	sub.w	r8, r3, r1
   1a81c:	4590      	cmp	r8, r2
   1a81e:	bfa8      	it	ge
   1a820:	4690      	movge	r8, r2
   1a822:	f1b8 0f00 	cmp.w	r8, #0
   1a826:	dc31      	bgt.n	1a88c <_printf_float+0x3b0>
   1a828:	2700      	movs	r7, #0
   1a82a:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
   1a82e:	f104 091a 	add.w	r9, r4, #26
   1a832:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1a834:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a836:	1a9b      	subs	r3, r3, r2
   1a838:	eba3 0308 	sub.w	r3, r3, r8
   1a83c:	429f      	cmp	r7, r3
   1a83e:	f6bf af78 	bge.w	1a732 <_printf_float+0x256>
   1a842:	2301      	movs	r3, #1
   1a844:	464a      	mov	r2, r9
   1a846:	4659      	mov	r1, fp
   1a848:	4628      	mov	r0, r5
   1a84a:	47b0      	blx	r6
   1a84c:	3001      	adds	r0, #1
   1a84e:	f43f aea1 	beq.w	1a594 <_printf_float+0xb8>
   1a852:	3701      	adds	r7, #1
   1a854:	e7ed      	b.n	1a832 <_printf_float+0x356>
   1a856:	4613      	mov	r3, r2
   1a858:	4659      	mov	r1, fp
   1a85a:	463a      	mov	r2, r7
   1a85c:	4628      	mov	r0, r5
   1a85e:	47b0      	blx	r6
   1a860:	3001      	adds	r0, #1
   1a862:	d1c1      	bne.n	1a7e8 <_printf_float+0x30c>
   1a864:	e696      	b.n	1a594 <_printf_float+0xb8>
   1a866:	2301      	movs	r3, #1
   1a868:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1a86a:	4659      	mov	r1, fp
   1a86c:	4628      	mov	r0, r5
   1a86e:	47b0      	blx	r6
   1a870:	3001      	adds	r0, #1
   1a872:	f43f ae8f 	beq.w	1a594 <_printf_float+0xb8>
   1a876:	f10a 0a01 	add.w	sl, sl, #1
   1a87a:	e7bc      	b.n	1a7f6 <_printf_float+0x31a>
   1a87c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a87e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1a880:	4659      	mov	r1, fp
   1a882:	4628      	mov	r0, r5
   1a884:	47b0      	blx	r6
   1a886:	3001      	adds	r0, #1
   1a888:	d1c2      	bne.n	1a810 <_printf_float+0x334>
   1a88a:	e683      	b.n	1a594 <_printf_float+0xb8>
   1a88c:	4643      	mov	r3, r8
   1a88e:	eb07 0209 	add.w	r2, r7, r9
   1a892:	4659      	mov	r1, fp
   1a894:	4628      	mov	r0, r5
   1a896:	47b0      	blx	r6
   1a898:	3001      	adds	r0, #1
   1a89a:	d1c5      	bne.n	1a828 <_printf_float+0x34c>
   1a89c:	e67a      	b.n	1a594 <_printf_float+0xb8>
   1a89e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1a8a0:	2a01      	cmp	r2, #1
   1a8a2:	dc01      	bgt.n	1a8a8 <_printf_float+0x3cc>
   1a8a4:	07db      	lsls	r3, r3, #31
   1a8a6:	d534      	bpl.n	1a912 <_printf_float+0x436>
   1a8a8:	2301      	movs	r3, #1
   1a8aa:	463a      	mov	r2, r7
   1a8ac:	4659      	mov	r1, fp
   1a8ae:	4628      	mov	r0, r5
   1a8b0:	47b0      	blx	r6
   1a8b2:	3001      	adds	r0, #1
   1a8b4:	f43f ae6e 	beq.w	1a594 <_printf_float+0xb8>
   1a8b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a8ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1a8bc:	4659      	mov	r1, fp
   1a8be:	4628      	mov	r0, r5
   1a8c0:	47b0      	blx	r6
   1a8c2:	3001      	adds	r0, #1
   1a8c4:	f43f ae66 	beq.w	1a594 <_printf_float+0xb8>
   1a8c8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   1a8cc:	2200      	movs	r2, #0
   1a8ce:	2300      	movs	r3, #0
   1a8d0:	f005 fab8 	bl	1fe44 <__aeabi_dcmpeq>
   1a8d4:	b150      	cbz	r0, 1a8ec <_printf_float+0x410>
   1a8d6:	2700      	movs	r7, #0
   1a8d8:	f104 081a 	add.w	r8, r4, #26
   1a8dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a8de:	3b01      	subs	r3, #1
   1a8e0:	429f      	cmp	r7, r3
   1a8e2:	db0c      	blt.n	1a8fe <_printf_float+0x422>
   1a8e4:	464b      	mov	r3, r9
   1a8e6:	f104 0250 	add.w	r2, r4, #80	; 0x50
   1a8ea:	e6f2      	b.n	1a6d2 <_printf_float+0x1f6>
   1a8ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1a8ee:	1c7a      	adds	r2, r7, #1
   1a8f0:	3b01      	subs	r3, #1
   1a8f2:	4659      	mov	r1, fp
   1a8f4:	4628      	mov	r0, r5
   1a8f6:	47b0      	blx	r6
   1a8f8:	3001      	adds	r0, #1
   1a8fa:	d1f3      	bne.n	1a8e4 <_printf_float+0x408>
   1a8fc:	e64a      	b.n	1a594 <_printf_float+0xb8>
   1a8fe:	2301      	movs	r3, #1
   1a900:	4642      	mov	r2, r8
   1a902:	4659      	mov	r1, fp
   1a904:	4628      	mov	r0, r5
   1a906:	47b0      	blx	r6
   1a908:	3001      	adds	r0, #1
   1a90a:	f43f ae43 	beq.w	1a594 <_printf_float+0xb8>
   1a90e:	3701      	adds	r7, #1
   1a910:	e7e4      	b.n	1a8dc <_printf_float+0x400>
   1a912:	2301      	movs	r3, #1
   1a914:	463a      	mov	r2, r7
   1a916:	e7ec      	b.n	1a8f2 <_printf_float+0x416>
   1a918:	2301      	movs	r3, #1
   1a91a:	4642      	mov	r2, r8
   1a91c:	4659      	mov	r1, fp
   1a91e:	4628      	mov	r0, r5
   1a920:	47b0      	blx	r6
   1a922:	3001      	adds	r0, #1
   1a924:	f43f ae36 	beq.w	1a594 <_printf_float+0xb8>
   1a928:	3701      	adds	r7, #1
   1a92a:	e708      	b.n	1a73e <_printf_float+0x262>
   1a92c:	463a      	mov	r2, r7
   1a92e:	464b      	mov	r3, r9
   1a930:	4638      	mov	r0, r7
   1a932:	4649      	mov	r1, r9
   1a934:	f005 fab8 	bl	1fea8 <__aeabi_dcmpun>
   1a938:	2800      	cmp	r0, #0
   1a93a:	f43f ae30 	beq.w	1a59e <_printf_float+0xc2>
   1a93e:	4b01      	ldr	r3, [pc, #4]	; (1a944 <_printf_float+0x468>)
   1a940:	4f01      	ldr	r7, [pc, #4]	; (1a948 <_printf_float+0x46c>)
   1a942:	e612      	b.n	1a56a <_printf_float+0x8e>
   1a944:	00021194 	.word	0x00021194
   1a948:	00021198 	.word	0x00021198

0001a94c <_printf_common>:
_printf_common():
   1a94c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1a950:	4691      	mov	r9, r2
   1a952:	461f      	mov	r7, r3
   1a954:	688a      	ldr	r2, [r1, #8]
   1a956:	690b      	ldr	r3, [r1, #16]
   1a958:	4606      	mov	r6, r0
   1a95a:	4293      	cmp	r3, r2
   1a95c:	bfb8      	it	lt
   1a95e:	4613      	movlt	r3, r2
   1a960:	f8c9 3000 	str.w	r3, [r9]
   1a964:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   1a968:	460c      	mov	r4, r1
   1a96a:	f8dd 8020 	ldr.w	r8, [sp, #32]
   1a96e:	b112      	cbz	r2, 1a976 <_printf_common+0x2a>
   1a970:	3301      	adds	r3, #1
   1a972:	f8c9 3000 	str.w	r3, [r9]
   1a976:	6823      	ldr	r3, [r4, #0]
   1a978:	0699      	lsls	r1, r3, #26
   1a97a:	bf42      	ittt	mi
   1a97c:	f8d9 3000 	ldrmi.w	r3, [r9]
   1a980:	3302      	addmi	r3, #2
   1a982:	f8c9 3000 	strmi.w	r3, [r9]
   1a986:	6825      	ldr	r5, [r4, #0]
   1a988:	f015 0506 	ands.w	r5, r5, #6
   1a98c:	d107      	bne.n	1a99e <_printf_common+0x52>
   1a98e:	f104 0a19 	add.w	sl, r4, #25
   1a992:	68e3      	ldr	r3, [r4, #12]
   1a994:	f8d9 2000 	ldr.w	r2, [r9]
   1a998:	1a9b      	subs	r3, r3, r2
   1a99a:	429d      	cmp	r5, r3
   1a99c:	db2a      	blt.n	1a9f4 <_printf_common+0xa8>
   1a99e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   1a9a2:	6822      	ldr	r2, [r4, #0]
   1a9a4:	3300      	adds	r3, #0
   1a9a6:	bf18      	it	ne
   1a9a8:	2301      	movne	r3, #1
   1a9aa:	0692      	lsls	r2, r2, #26
   1a9ac:	d42f      	bmi.n	1aa0e <_printf_common+0xc2>
   1a9ae:	f104 0243 	add.w	r2, r4, #67	; 0x43
   1a9b2:	4639      	mov	r1, r7
   1a9b4:	4630      	mov	r0, r6
   1a9b6:	47c0      	blx	r8
   1a9b8:	3001      	adds	r0, #1
   1a9ba:	d022      	beq.n	1aa02 <_printf_common+0xb6>
   1a9bc:	6823      	ldr	r3, [r4, #0]
   1a9be:	68e5      	ldr	r5, [r4, #12]
   1a9c0:	f003 0306 	and.w	r3, r3, #6
   1a9c4:	2b04      	cmp	r3, #4
   1a9c6:	bf18      	it	ne
   1a9c8:	2500      	movne	r5, #0
   1a9ca:	f8d9 2000 	ldr.w	r2, [r9]
   1a9ce:	f04f 0900 	mov.w	r9, #0
   1a9d2:	bf08      	it	eq
   1a9d4:	1aad      	subeq	r5, r5, r2
   1a9d6:	68a3      	ldr	r3, [r4, #8]
   1a9d8:	6922      	ldr	r2, [r4, #16]
   1a9da:	bf08      	it	eq
   1a9dc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   1a9e0:	4293      	cmp	r3, r2
   1a9e2:	bfc4      	itt	gt
   1a9e4:	1a9b      	subgt	r3, r3, r2
   1a9e6:	18ed      	addgt	r5, r5, r3
   1a9e8:	341a      	adds	r4, #26
   1a9ea:	454d      	cmp	r5, r9
   1a9ec:	d11b      	bne.n	1aa26 <_printf_common+0xda>
   1a9ee:	2000      	movs	r0, #0
   1a9f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1a9f4:	2301      	movs	r3, #1
   1a9f6:	4652      	mov	r2, sl
   1a9f8:	4639      	mov	r1, r7
   1a9fa:	4630      	mov	r0, r6
   1a9fc:	47c0      	blx	r8
   1a9fe:	3001      	adds	r0, #1
   1aa00:	d103      	bne.n	1aa0a <_printf_common+0xbe>
   1aa02:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1aa06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1aa0a:	3501      	adds	r5, #1
   1aa0c:	e7c1      	b.n	1a992 <_printf_common+0x46>
   1aa0e:	2030      	movs	r0, #48	; 0x30
   1aa10:	18e1      	adds	r1, r4, r3
   1aa12:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   1aa16:	1c5a      	adds	r2, r3, #1
   1aa18:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   1aa1c:	4422      	add	r2, r4
   1aa1e:	3302      	adds	r3, #2
   1aa20:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   1aa24:	e7c3      	b.n	1a9ae <_printf_common+0x62>
   1aa26:	2301      	movs	r3, #1
   1aa28:	4622      	mov	r2, r4
   1aa2a:	4639      	mov	r1, r7
   1aa2c:	4630      	mov	r0, r6
   1aa2e:	47c0      	blx	r8
   1aa30:	3001      	adds	r0, #1
   1aa32:	d0e6      	beq.n	1aa02 <_printf_common+0xb6>
   1aa34:	f109 0901 	add.w	r9, r9, #1
   1aa38:	e7d7      	b.n	1a9ea <_printf_common+0x9e>
   1aa3a:	Address 0x000000000001aa3a is out of bounds.


0001aa3c <_printf_i>:
_printf_i():
   1aa3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1aa40:	4617      	mov	r7, r2
   1aa42:	7e0a      	ldrb	r2, [r1, #24]
   1aa44:	b085      	sub	sp, #20
   1aa46:	2a6e      	cmp	r2, #110	; 0x6e
   1aa48:	4698      	mov	r8, r3
   1aa4a:	4606      	mov	r6, r0
   1aa4c:	460c      	mov	r4, r1
   1aa4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1aa50:	f101 0e43 	add.w	lr, r1, #67	; 0x43
   1aa54:	f000 80bc 	beq.w	1abd0 <_printf_i+0x194>
   1aa58:	d81a      	bhi.n	1aa90 <_printf_i+0x54>
   1aa5a:	2a63      	cmp	r2, #99	; 0x63
   1aa5c:	d02e      	beq.n	1aabc <_printf_i+0x80>
   1aa5e:	d80a      	bhi.n	1aa76 <_printf_i+0x3a>
   1aa60:	2a00      	cmp	r2, #0
   1aa62:	f000 80c8 	beq.w	1abf6 <_printf_i+0x1ba>
   1aa66:	2a58      	cmp	r2, #88	; 0x58
   1aa68:	f000 808a 	beq.w	1ab80 <_printf_i+0x144>
   1aa6c:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1aa70:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   1aa74:	e02a      	b.n	1aacc <_printf_i+0x90>
   1aa76:	2a64      	cmp	r2, #100	; 0x64
   1aa78:	d001      	beq.n	1aa7e <_printf_i+0x42>
   1aa7a:	2a69      	cmp	r2, #105	; 0x69
   1aa7c:	d1f6      	bne.n	1aa6c <_printf_i+0x30>
   1aa7e:	6821      	ldr	r1, [r4, #0]
   1aa80:	681a      	ldr	r2, [r3, #0]
   1aa82:	f011 0f80 	tst.w	r1, #128	; 0x80
   1aa86:	d023      	beq.n	1aad0 <_printf_i+0x94>
   1aa88:	1d11      	adds	r1, r2, #4
   1aa8a:	6019      	str	r1, [r3, #0]
   1aa8c:	6813      	ldr	r3, [r2, #0]
   1aa8e:	e027      	b.n	1aae0 <_printf_i+0xa4>
   1aa90:	2a73      	cmp	r2, #115	; 0x73
   1aa92:	f000 80b4 	beq.w	1abfe <_printf_i+0x1c2>
   1aa96:	d808      	bhi.n	1aaaa <_printf_i+0x6e>
   1aa98:	2a6f      	cmp	r2, #111	; 0x6f
   1aa9a:	d02a      	beq.n	1aaf2 <_printf_i+0xb6>
   1aa9c:	2a70      	cmp	r2, #112	; 0x70
   1aa9e:	d1e5      	bne.n	1aa6c <_printf_i+0x30>
   1aaa0:	680a      	ldr	r2, [r1, #0]
   1aaa2:	f042 0220 	orr.w	r2, r2, #32
   1aaa6:	600a      	str	r2, [r1, #0]
   1aaa8:	e003      	b.n	1aab2 <_printf_i+0x76>
   1aaaa:	2a75      	cmp	r2, #117	; 0x75
   1aaac:	d021      	beq.n	1aaf2 <_printf_i+0xb6>
   1aaae:	2a78      	cmp	r2, #120	; 0x78
   1aab0:	d1dc      	bne.n	1aa6c <_printf_i+0x30>
   1aab2:	2278      	movs	r2, #120	; 0x78
   1aab4:	496f      	ldr	r1, [pc, #444]	; (1ac74 <_printf_i+0x238>)
   1aab6:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   1aaba:	e064      	b.n	1ab86 <_printf_i+0x14a>
   1aabc:	681a      	ldr	r2, [r3, #0]
   1aabe:	f101 0542 	add.w	r5, r1, #66	; 0x42
   1aac2:	1d11      	adds	r1, r2, #4
   1aac4:	6019      	str	r1, [r3, #0]
   1aac6:	6813      	ldr	r3, [r2, #0]
   1aac8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1aacc:	2301      	movs	r3, #1
   1aace:	e0a3      	b.n	1ac18 <_printf_i+0x1dc>
   1aad0:	f011 0f40 	tst.w	r1, #64	; 0x40
   1aad4:	f102 0104 	add.w	r1, r2, #4
   1aad8:	6019      	str	r1, [r3, #0]
   1aada:	d0d7      	beq.n	1aa8c <_printf_i+0x50>
   1aadc:	f9b2 3000 	ldrsh.w	r3, [r2]
   1aae0:	2b00      	cmp	r3, #0
   1aae2:	da03      	bge.n	1aaec <_printf_i+0xb0>
   1aae4:	222d      	movs	r2, #45	; 0x2d
   1aae6:	425b      	negs	r3, r3
   1aae8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   1aaec:	4962      	ldr	r1, [pc, #392]	; (1ac78 <_printf_i+0x23c>)
   1aaee:	220a      	movs	r2, #10
   1aaf0:	e017      	b.n	1ab22 <_printf_i+0xe6>
   1aaf2:	6820      	ldr	r0, [r4, #0]
   1aaf4:	6819      	ldr	r1, [r3, #0]
   1aaf6:	f010 0f80 	tst.w	r0, #128	; 0x80
   1aafa:	d003      	beq.n	1ab04 <_printf_i+0xc8>
   1aafc:	1d08      	adds	r0, r1, #4
   1aafe:	6018      	str	r0, [r3, #0]
   1ab00:	680b      	ldr	r3, [r1, #0]
   1ab02:	e006      	b.n	1ab12 <_printf_i+0xd6>
   1ab04:	f010 0f40 	tst.w	r0, #64	; 0x40
   1ab08:	f101 0004 	add.w	r0, r1, #4
   1ab0c:	6018      	str	r0, [r3, #0]
   1ab0e:	d0f7      	beq.n	1ab00 <_printf_i+0xc4>
   1ab10:	880b      	ldrh	r3, [r1, #0]
   1ab12:	2a6f      	cmp	r2, #111	; 0x6f
   1ab14:	bf14      	ite	ne
   1ab16:	220a      	movne	r2, #10
   1ab18:	2208      	moveq	r2, #8
   1ab1a:	4957      	ldr	r1, [pc, #348]	; (1ac78 <_printf_i+0x23c>)
   1ab1c:	2000      	movs	r0, #0
   1ab1e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   1ab22:	6865      	ldr	r5, [r4, #4]
   1ab24:	2d00      	cmp	r5, #0
   1ab26:	60a5      	str	r5, [r4, #8]
   1ab28:	f2c0 809c 	blt.w	1ac64 <_printf_i+0x228>
   1ab2c:	6820      	ldr	r0, [r4, #0]
   1ab2e:	f020 0004 	bic.w	r0, r0, #4
   1ab32:	6020      	str	r0, [r4, #0]
   1ab34:	2b00      	cmp	r3, #0
   1ab36:	d13f      	bne.n	1abb8 <_printf_i+0x17c>
   1ab38:	2d00      	cmp	r5, #0
   1ab3a:	f040 8095 	bne.w	1ac68 <_printf_i+0x22c>
   1ab3e:	4675      	mov	r5, lr
   1ab40:	2a08      	cmp	r2, #8
   1ab42:	d10b      	bne.n	1ab5c <_printf_i+0x120>
   1ab44:	6823      	ldr	r3, [r4, #0]
   1ab46:	07da      	lsls	r2, r3, #31
   1ab48:	d508      	bpl.n	1ab5c <_printf_i+0x120>
   1ab4a:	6923      	ldr	r3, [r4, #16]
   1ab4c:	6862      	ldr	r2, [r4, #4]
   1ab4e:	429a      	cmp	r2, r3
   1ab50:	bfde      	ittt	le
   1ab52:	2330      	movle	r3, #48	; 0x30
   1ab54:	f805 3c01 	strble.w	r3, [r5, #-1]
   1ab58:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
   1ab5c:	ebae 0305 	sub.w	r3, lr, r5
   1ab60:	6123      	str	r3, [r4, #16]
   1ab62:	f8cd 8000 	str.w	r8, [sp]
   1ab66:	463b      	mov	r3, r7
   1ab68:	aa03      	add	r2, sp, #12
   1ab6a:	4621      	mov	r1, r4
   1ab6c:	4630      	mov	r0, r6
   1ab6e:	f7ff feed 	bl	1a94c <_printf_common>
   1ab72:	3001      	adds	r0, #1
   1ab74:	d155      	bne.n	1ac22 <_printf_i+0x1e6>
   1ab76:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ab7a:	b005      	add	sp, #20
   1ab7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1ab80:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
   1ab84:	493c      	ldr	r1, [pc, #240]	; (1ac78 <_printf_i+0x23c>)
   1ab86:	6822      	ldr	r2, [r4, #0]
   1ab88:	6818      	ldr	r0, [r3, #0]
   1ab8a:	f012 0f80 	tst.w	r2, #128	; 0x80
   1ab8e:	f100 0504 	add.w	r5, r0, #4
   1ab92:	601d      	str	r5, [r3, #0]
   1ab94:	d001      	beq.n	1ab9a <_printf_i+0x15e>
   1ab96:	6803      	ldr	r3, [r0, #0]
   1ab98:	e002      	b.n	1aba0 <_printf_i+0x164>
   1ab9a:	0655      	lsls	r5, r2, #25
   1ab9c:	d5fb      	bpl.n	1ab96 <_printf_i+0x15a>
   1ab9e:	8803      	ldrh	r3, [r0, #0]
   1aba0:	07d0      	lsls	r0, r2, #31
   1aba2:	bf44      	itt	mi
   1aba4:	f042 0220 	orrmi.w	r2, r2, #32
   1aba8:	6022      	strmi	r2, [r4, #0]
   1abaa:	b91b      	cbnz	r3, 1abb4 <_printf_i+0x178>
   1abac:	6822      	ldr	r2, [r4, #0]
   1abae:	f022 0220 	bic.w	r2, r2, #32
   1abb2:	6022      	str	r2, [r4, #0]
   1abb4:	2210      	movs	r2, #16
   1abb6:	e7b1      	b.n	1ab1c <_printf_i+0xe0>
   1abb8:	4675      	mov	r5, lr
   1abba:	fbb3 f0f2 	udiv	r0, r3, r2
   1abbe:	fb02 3310 	mls	r3, r2, r0, r3
   1abc2:	5ccb      	ldrb	r3, [r1, r3]
   1abc4:	f805 3d01 	strb.w	r3, [r5, #-1]!
   1abc8:	4603      	mov	r3, r0
   1abca:	2800      	cmp	r0, #0
   1abcc:	d1f5      	bne.n	1abba <_printf_i+0x17e>
   1abce:	e7b7      	b.n	1ab40 <_printf_i+0x104>
   1abd0:	6808      	ldr	r0, [r1, #0]
   1abd2:	681a      	ldr	r2, [r3, #0]
   1abd4:	f010 0f80 	tst.w	r0, #128	; 0x80
   1abd8:	6949      	ldr	r1, [r1, #20]
   1abda:	d004      	beq.n	1abe6 <_printf_i+0x1aa>
   1abdc:	1d10      	adds	r0, r2, #4
   1abde:	6018      	str	r0, [r3, #0]
   1abe0:	6813      	ldr	r3, [r2, #0]
   1abe2:	6019      	str	r1, [r3, #0]
   1abe4:	e007      	b.n	1abf6 <_printf_i+0x1ba>
   1abe6:	f010 0f40 	tst.w	r0, #64	; 0x40
   1abea:	f102 0004 	add.w	r0, r2, #4
   1abee:	6018      	str	r0, [r3, #0]
   1abf0:	6813      	ldr	r3, [r2, #0]
   1abf2:	d0f6      	beq.n	1abe2 <_printf_i+0x1a6>
   1abf4:	8019      	strh	r1, [r3, #0]
   1abf6:	2300      	movs	r3, #0
   1abf8:	4675      	mov	r5, lr
   1abfa:	6123      	str	r3, [r4, #16]
   1abfc:	e7b1      	b.n	1ab62 <_printf_i+0x126>
   1abfe:	681a      	ldr	r2, [r3, #0]
   1ac00:	1d11      	adds	r1, r2, #4
   1ac02:	6019      	str	r1, [r3, #0]
   1ac04:	6815      	ldr	r5, [r2, #0]
   1ac06:	2100      	movs	r1, #0
   1ac08:	6862      	ldr	r2, [r4, #4]
   1ac0a:	4628      	mov	r0, r5
   1ac0c:	f7ff f83a 	bl	19c84 <memchr>
   1ac10:	b108      	cbz	r0, 1ac16 <_printf_i+0x1da>
   1ac12:	1b40      	subs	r0, r0, r5
   1ac14:	6060      	str	r0, [r4, #4]
   1ac16:	6863      	ldr	r3, [r4, #4]
   1ac18:	6123      	str	r3, [r4, #16]
   1ac1a:	2300      	movs	r3, #0
   1ac1c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   1ac20:	e79f      	b.n	1ab62 <_printf_i+0x126>
   1ac22:	6923      	ldr	r3, [r4, #16]
   1ac24:	462a      	mov	r2, r5
   1ac26:	4639      	mov	r1, r7
   1ac28:	4630      	mov	r0, r6
   1ac2a:	47c0      	blx	r8
   1ac2c:	3001      	adds	r0, #1
   1ac2e:	d0a2      	beq.n	1ab76 <_printf_i+0x13a>
   1ac30:	6823      	ldr	r3, [r4, #0]
   1ac32:	079b      	lsls	r3, r3, #30
   1ac34:	d507      	bpl.n	1ac46 <_printf_i+0x20a>
   1ac36:	2500      	movs	r5, #0
   1ac38:	f104 0919 	add.w	r9, r4, #25
   1ac3c:	68e3      	ldr	r3, [r4, #12]
   1ac3e:	9a03      	ldr	r2, [sp, #12]
   1ac40:	1a9b      	subs	r3, r3, r2
   1ac42:	429d      	cmp	r5, r3
   1ac44:	db05      	blt.n	1ac52 <_printf_i+0x216>
   1ac46:	68e0      	ldr	r0, [r4, #12]
   1ac48:	9b03      	ldr	r3, [sp, #12]
   1ac4a:	4298      	cmp	r0, r3
   1ac4c:	bfb8      	it	lt
   1ac4e:	4618      	movlt	r0, r3
   1ac50:	e793      	b.n	1ab7a <_printf_i+0x13e>
   1ac52:	2301      	movs	r3, #1
   1ac54:	464a      	mov	r2, r9
   1ac56:	4639      	mov	r1, r7
   1ac58:	4630      	mov	r0, r6
   1ac5a:	47c0      	blx	r8
   1ac5c:	3001      	adds	r0, #1
   1ac5e:	d08a      	beq.n	1ab76 <_printf_i+0x13a>
   1ac60:	3501      	adds	r5, #1
   1ac62:	e7eb      	b.n	1ac3c <_printf_i+0x200>
   1ac64:	2b00      	cmp	r3, #0
   1ac66:	d1a7      	bne.n	1abb8 <_printf_i+0x17c>
   1ac68:	780b      	ldrb	r3, [r1, #0]
   1ac6a:	f104 0542 	add.w	r5, r4, #66	; 0x42
   1ac6e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   1ac72:	e765      	b.n	1ab40 <_printf_i+0x104>
   1ac74:	000211ad 	.word	0x000211ad
   1ac78:	0002119c 	.word	0x0002119c

0001ac7c <_scanf_float>:
_scanf_float():
   1ac7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac80:	469a      	mov	sl, r3
   1ac82:	688b      	ldr	r3, [r1, #8]
   1ac84:	4616      	mov	r6, r2
   1ac86:	1e5a      	subs	r2, r3, #1
   1ac88:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1ac8c:	bf88      	it	hi
   1ac8e:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
   1ac92:	b087      	sub	sp, #28
   1ac94:	bf85      	ittet	hi
   1ac96:	189b      	addhi	r3, r3, r2
   1ac98:	9301      	strhi	r3, [sp, #4]
   1ac9a:	2300      	movls	r3, #0
   1ac9c:	f240 135d 	movwhi	r3, #349	; 0x15d
   1aca0:	4688      	mov	r8, r1
   1aca2:	f04f 0b00 	mov.w	fp, #0
   1aca6:	bf8c      	ite	hi
   1aca8:	608b      	strhi	r3, [r1, #8]
   1acaa:	9301      	strls	r3, [sp, #4]
   1acac:	680b      	ldr	r3, [r1, #0]
   1acae:	4607      	mov	r7, r0
   1acb0:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   1acb4:	f848 3b1c 	str.w	r3, [r8], #28
   1acb8:	460c      	mov	r4, r1
   1acba:	4645      	mov	r5, r8
   1acbc:	465a      	mov	r2, fp
   1acbe:	46d9      	mov	r9, fp
   1acc0:	f8cd b010 	str.w	fp, [sp, #16]
   1acc4:	f8cd b00c 	str.w	fp, [sp, #12]
   1acc8:	f8cd b008 	str.w	fp, [sp, #8]
   1accc:	68a1      	ldr	r1, [r4, #8]
   1acce:	b181      	cbz	r1, 1acf2 <_scanf_float+0x76>
   1acd0:	6833      	ldr	r3, [r6, #0]
   1acd2:	781b      	ldrb	r3, [r3, #0]
   1acd4:	2b49      	cmp	r3, #73	; 0x49
   1acd6:	d071      	beq.n	1adbc <_scanf_float+0x140>
   1acd8:	d84d      	bhi.n	1ad76 <_scanf_float+0xfa>
   1acda:	2b39      	cmp	r3, #57	; 0x39
   1acdc:	d840      	bhi.n	1ad60 <_scanf_float+0xe4>
   1acde:	2b31      	cmp	r3, #49	; 0x31
   1ace0:	f080 8088 	bcs.w	1adf4 <_scanf_float+0x178>
   1ace4:	2b2d      	cmp	r3, #45	; 0x2d
   1ace6:	f000 8090 	beq.w	1ae0a <_scanf_float+0x18e>
   1acea:	d815      	bhi.n	1ad18 <_scanf_float+0x9c>
   1acec:	2b2b      	cmp	r3, #43	; 0x2b
   1acee:	f000 808c 	beq.w	1ae0a <_scanf_float+0x18e>
   1acf2:	f1b9 0f00 	cmp.w	r9, #0
   1acf6:	d003      	beq.n	1ad00 <_scanf_float+0x84>
   1acf8:	6823      	ldr	r3, [r4, #0]
   1acfa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   1acfe:	6023      	str	r3, [r4, #0]
   1ad00:	3a01      	subs	r2, #1
   1ad02:	2a01      	cmp	r2, #1
   1ad04:	f200 80ea 	bhi.w	1aedc <_scanf_float+0x260>
   1ad08:	4545      	cmp	r5, r8
   1ad0a:	f200 80dc 	bhi.w	1aec6 <_scanf_float+0x24a>
   1ad0e:	2601      	movs	r6, #1
   1ad10:	4630      	mov	r0, r6
   1ad12:	b007      	add	sp, #28
   1ad14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad18:	2b2e      	cmp	r3, #46	; 0x2e
   1ad1a:	f000 809f 	beq.w	1ae5c <_scanf_float+0x1e0>
   1ad1e:	2b30      	cmp	r3, #48	; 0x30
   1ad20:	d1e7      	bne.n	1acf2 <_scanf_float+0x76>
   1ad22:	6820      	ldr	r0, [r4, #0]
   1ad24:	f410 7f80 	tst.w	r0, #256	; 0x100
   1ad28:	d064      	beq.n	1adf4 <_scanf_float+0x178>
   1ad2a:	9b01      	ldr	r3, [sp, #4]
   1ad2c:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   1ad30:	6020      	str	r0, [r4, #0]
   1ad32:	f109 0901 	add.w	r9, r9, #1
   1ad36:	b11b      	cbz	r3, 1ad40 <_scanf_float+0xc4>
   1ad38:	3b01      	subs	r3, #1
   1ad3a:	3101      	adds	r1, #1
   1ad3c:	9301      	str	r3, [sp, #4]
   1ad3e:	60a1      	str	r1, [r4, #8]
   1ad40:	68a3      	ldr	r3, [r4, #8]
   1ad42:	3b01      	subs	r3, #1
   1ad44:	60a3      	str	r3, [r4, #8]
   1ad46:	6923      	ldr	r3, [r4, #16]
   1ad48:	3301      	adds	r3, #1
   1ad4a:	6123      	str	r3, [r4, #16]
   1ad4c:	6873      	ldr	r3, [r6, #4]
   1ad4e:	3b01      	subs	r3, #1
   1ad50:	2b00      	cmp	r3, #0
   1ad52:	6073      	str	r3, [r6, #4]
   1ad54:	f340 80ac 	ble.w	1aeb0 <_scanf_float+0x234>
   1ad58:	6833      	ldr	r3, [r6, #0]
   1ad5a:	3301      	adds	r3, #1
   1ad5c:	6033      	str	r3, [r6, #0]
   1ad5e:	e7b5      	b.n	1accc <_scanf_float+0x50>
   1ad60:	2b45      	cmp	r3, #69	; 0x45
   1ad62:	f000 8085 	beq.w	1ae70 <_scanf_float+0x1f4>
   1ad66:	2b46      	cmp	r3, #70	; 0x46
   1ad68:	d06a      	beq.n	1ae40 <_scanf_float+0x1c4>
   1ad6a:	2b41      	cmp	r3, #65	; 0x41
   1ad6c:	d1c1      	bne.n	1acf2 <_scanf_float+0x76>
   1ad6e:	2a01      	cmp	r2, #1
   1ad70:	d1bf      	bne.n	1acf2 <_scanf_float+0x76>
   1ad72:	2202      	movs	r2, #2
   1ad74:	e046      	b.n	1ae04 <_scanf_float+0x188>
   1ad76:	2b65      	cmp	r3, #101	; 0x65
   1ad78:	d07a      	beq.n	1ae70 <_scanf_float+0x1f4>
   1ad7a:	d818      	bhi.n	1adae <_scanf_float+0x132>
   1ad7c:	2b54      	cmp	r3, #84	; 0x54
   1ad7e:	d066      	beq.n	1ae4e <_scanf_float+0x1d2>
   1ad80:	d811      	bhi.n	1ada6 <_scanf_float+0x12a>
   1ad82:	2b4e      	cmp	r3, #78	; 0x4e
   1ad84:	d1b5      	bne.n	1acf2 <_scanf_float+0x76>
   1ad86:	2a00      	cmp	r2, #0
   1ad88:	d146      	bne.n	1ae18 <_scanf_float+0x19c>
   1ad8a:	f1b9 0f00 	cmp.w	r9, #0
   1ad8e:	d145      	bne.n	1ae1c <_scanf_float+0x1a0>
   1ad90:	6821      	ldr	r1, [r4, #0]
   1ad92:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1ad96:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1ad9a:	d13f      	bne.n	1ae1c <_scanf_float+0x1a0>
   1ad9c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1ada0:	6021      	str	r1, [r4, #0]
   1ada2:	2201      	movs	r2, #1
   1ada4:	e02e      	b.n	1ae04 <_scanf_float+0x188>
   1ada6:	2b59      	cmp	r3, #89	; 0x59
   1ada8:	d01e      	beq.n	1ade8 <_scanf_float+0x16c>
   1adaa:	2b61      	cmp	r3, #97	; 0x61
   1adac:	e7de      	b.n	1ad6c <_scanf_float+0xf0>
   1adae:	2b6e      	cmp	r3, #110	; 0x6e
   1adb0:	d0e9      	beq.n	1ad86 <_scanf_float+0x10a>
   1adb2:	d815      	bhi.n	1ade0 <_scanf_float+0x164>
   1adb4:	2b66      	cmp	r3, #102	; 0x66
   1adb6:	d043      	beq.n	1ae40 <_scanf_float+0x1c4>
   1adb8:	2b69      	cmp	r3, #105	; 0x69
   1adba:	d19a      	bne.n	1acf2 <_scanf_float+0x76>
   1adbc:	f1bb 0f00 	cmp.w	fp, #0
   1adc0:	d138      	bne.n	1ae34 <_scanf_float+0x1b8>
   1adc2:	f1b9 0f00 	cmp.w	r9, #0
   1adc6:	d197      	bne.n	1acf8 <_scanf_float+0x7c>
   1adc8:	6821      	ldr	r1, [r4, #0]
   1adca:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   1adce:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   1add2:	d195      	bne.n	1ad00 <_scanf_float+0x84>
   1add4:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1add8:	6021      	str	r1, [r4, #0]
   1adda:	f04f 0b01 	mov.w	fp, #1
   1adde:	e011      	b.n	1ae04 <_scanf_float+0x188>
   1ade0:	2b74      	cmp	r3, #116	; 0x74
   1ade2:	d034      	beq.n	1ae4e <_scanf_float+0x1d2>
   1ade4:	2b79      	cmp	r3, #121	; 0x79
   1ade6:	d184      	bne.n	1acf2 <_scanf_float+0x76>
   1ade8:	f1bb 0f07 	cmp.w	fp, #7
   1adec:	d181      	bne.n	1acf2 <_scanf_float+0x76>
   1adee:	f04f 0b08 	mov.w	fp, #8
   1adf2:	e007      	b.n	1ae04 <_scanf_float+0x188>
   1adf4:	eb12 0f0b 	cmn.w	r2, fp
   1adf8:	f47f af7b 	bne.w	1acf2 <_scanf_float+0x76>
   1adfc:	6821      	ldr	r1, [r4, #0]
   1adfe:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   1ae02:	6021      	str	r1, [r4, #0]
   1ae04:	702b      	strb	r3, [r5, #0]
   1ae06:	3501      	adds	r5, #1
   1ae08:	e79a      	b.n	1ad40 <_scanf_float+0xc4>
   1ae0a:	6821      	ldr	r1, [r4, #0]
   1ae0c:	0608      	lsls	r0, r1, #24
   1ae0e:	f57f af70 	bpl.w	1acf2 <_scanf_float+0x76>
   1ae12:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   1ae16:	e7f4      	b.n	1ae02 <_scanf_float+0x186>
   1ae18:	2a02      	cmp	r2, #2
   1ae1a:	d047      	beq.n	1aeac <_scanf_float+0x230>
   1ae1c:	f1bb 0f01 	cmp.w	fp, #1
   1ae20:	d003      	beq.n	1ae2a <_scanf_float+0x1ae>
   1ae22:	f1bb 0f04 	cmp.w	fp, #4
   1ae26:	f47f af64 	bne.w	1acf2 <_scanf_float+0x76>
   1ae2a:	f10b 0b01 	add.w	fp, fp, #1
   1ae2e:	fa5f fb8b 	uxtb.w	fp, fp
   1ae32:	e7e7      	b.n	1ae04 <_scanf_float+0x188>
   1ae34:	f1bb 0f03 	cmp.w	fp, #3
   1ae38:	d0f7      	beq.n	1ae2a <_scanf_float+0x1ae>
   1ae3a:	f1bb 0f05 	cmp.w	fp, #5
   1ae3e:	e7f2      	b.n	1ae26 <_scanf_float+0x1aa>
   1ae40:	f1bb 0f02 	cmp.w	fp, #2
   1ae44:	f47f af55 	bne.w	1acf2 <_scanf_float+0x76>
   1ae48:	f04f 0b03 	mov.w	fp, #3
   1ae4c:	e7da      	b.n	1ae04 <_scanf_float+0x188>
   1ae4e:	f1bb 0f06 	cmp.w	fp, #6
   1ae52:	f47f af4e 	bne.w	1acf2 <_scanf_float+0x76>
   1ae56:	f04f 0b07 	mov.w	fp, #7
   1ae5a:	e7d3      	b.n	1ae04 <_scanf_float+0x188>
   1ae5c:	6821      	ldr	r1, [r4, #0]
   1ae5e:	0588      	lsls	r0, r1, #22
   1ae60:	f57f af47 	bpl.w	1acf2 <_scanf_float+0x76>
   1ae64:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   1ae68:	6021      	str	r1, [r4, #0]
   1ae6a:	f8cd 9008 	str.w	r9, [sp, #8]
   1ae6e:	e7c9      	b.n	1ae04 <_scanf_float+0x188>
   1ae70:	6821      	ldr	r1, [r4, #0]
   1ae72:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   1ae76:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   1ae7a:	d006      	beq.n	1ae8a <_scanf_float+0x20e>
   1ae7c:	0548      	lsls	r0, r1, #21
   1ae7e:	f57f af38 	bpl.w	1acf2 <_scanf_float+0x76>
   1ae82:	f1b9 0f00 	cmp.w	r9, #0
   1ae86:	f43f af3b 	beq.w	1ad00 <_scanf_float+0x84>
   1ae8a:	0588      	lsls	r0, r1, #22
   1ae8c:	bf58      	it	pl
   1ae8e:	9802      	ldrpl	r0, [sp, #8]
   1ae90:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   1ae94:	bf58      	it	pl
   1ae96:	eba9 0000 	subpl.w	r0, r9, r0
   1ae9a:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   1ae9e:	bf5c      	itt	pl
   1aea0:	9003      	strpl	r0, [sp, #12]
   1aea2:	9504      	strpl	r5, [sp, #16]
   1aea4:	6021      	str	r1, [r4, #0]
   1aea6:	f04f 0900 	mov.w	r9, #0
   1aeaa:	e7ab      	b.n	1ae04 <_scanf_float+0x188>
   1aeac:	2203      	movs	r2, #3
   1aeae:	e7a9      	b.n	1ae04 <_scanf_float+0x188>
   1aeb0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1aeb4:	4631      	mov	r1, r6
   1aeb6:	4638      	mov	r0, r7
   1aeb8:	9205      	str	r2, [sp, #20]
   1aeba:	4798      	blx	r3
   1aebc:	9a05      	ldr	r2, [sp, #20]
   1aebe:	2800      	cmp	r0, #0
   1aec0:	f43f af04 	beq.w	1accc <_scanf_float+0x50>
   1aec4:	e715      	b.n	1acf2 <_scanf_float+0x76>
   1aec6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1aeca:	4632      	mov	r2, r6
   1aecc:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1aed0:	4638      	mov	r0, r7
   1aed2:	4798      	blx	r3
   1aed4:	6923      	ldr	r3, [r4, #16]
   1aed6:	3b01      	subs	r3, #1
   1aed8:	6123      	str	r3, [r4, #16]
   1aeda:	e715      	b.n	1ad08 <_scanf_float+0x8c>
   1aedc:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   1aee0:	2b06      	cmp	r3, #6
   1aee2:	d80a      	bhi.n	1aefa <_scanf_float+0x27e>
   1aee4:	f1bb 0f02 	cmp.w	fp, #2
   1aee8:	d92f      	bls.n	1af4a <_scanf_float+0x2ce>
   1aeea:	f1ab 0b03 	sub.w	fp, fp, #3
   1aeee:	fa5f fb8b 	uxtb.w	fp, fp
   1aef2:	eba5 0b0b 	sub.w	fp, r5, fp
   1aef6:	455d      	cmp	r5, fp
   1aef8:	d112      	bne.n	1af20 <_scanf_float+0x2a4>
   1aefa:	6823      	ldr	r3, [r4, #0]
   1aefc:	05da      	lsls	r2, r3, #23
   1aefe:	d545      	bpl.n	1af8c <_scanf_float+0x310>
   1af00:	055b      	lsls	r3, r3, #21
   1af02:	d525      	bpl.n	1af50 <_scanf_float+0x2d4>
   1af04:	4545      	cmp	r5, r8
   1af06:	f67f af02 	bls.w	1ad0e <_scanf_float+0x92>
   1af0a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1af0e:	4632      	mov	r2, r6
   1af10:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1af14:	4638      	mov	r0, r7
   1af16:	4798      	blx	r3
   1af18:	6923      	ldr	r3, [r4, #16]
   1af1a:	3b01      	subs	r3, #1
   1af1c:	6123      	str	r3, [r4, #16]
   1af1e:	e7f1      	b.n	1af04 <_scanf_float+0x288>
   1af20:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1af24:	4632      	mov	r2, r6
   1af26:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1af2a:	4638      	mov	r0, r7
   1af2c:	4798      	blx	r3
   1af2e:	6923      	ldr	r3, [r4, #16]
   1af30:	3b01      	subs	r3, #1
   1af32:	6123      	str	r3, [r4, #16]
   1af34:	e7df      	b.n	1aef6 <_scanf_float+0x27a>
   1af36:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1af3a:	4632      	mov	r2, r6
   1af3c:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
   1af40:	4638      	mov	r0, r7
   1af42:	4798      	blx	r3
   1af44:	6923      	ldr	r3, [r4, #16]
   1af46:	3b01      	subs	r3, #1
   1af48:	6123      	str	r3, [r4, #16]
   1af4a:	4545      	cmp	r5, r8
   1af4c:	d8f3      	bhi.n	1af36 <_scanf_float+0x2ba>
   1af4e:	e6de      	b.n	1ad0e <_scanf_float+0x92>
   1af50:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1af54:	6923      	ldr	r3, [r4, #16]
   1af56:	2965      	cmp	r1, #101	; 0x65
   1af58:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1af5c:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
   1af60:	6123      	str	r3, [r4, #16]
   1af62:	d00d      	beq.n	1af80 <_scanf_float+0x304>
   1af64:	2945      	cmp	r1, #69	; 0x45
   1af66:	d00b      	beq.n	1af80 <_scanf_float+0x304>
   1af68:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1af6c:	4632      	mov	r2, r6
   1af6e:	4638      	mov	r0, r7
   1af70:	4798      	blx	r3
   1af72:	6923      	ldr	r3, [r4, #16]
   1af74:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   1af78:	3b01      	subs	r3, #1
   1af7a:	f1a5 0b02 	sub.w	fp, r5, #2
   1af7e:	6123      	str	r3, [r4, #16]
   1af80:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1af84:	4632      	mov	r2, r6
   1af86:	4638      	mov	r0, r7
   1af88:	4798      	blx	r3
   1af8a:	465d      	mov	r5, fp
   1af8c:	6826      	ldr	r6, [r4, #0]
   1af8e:	f016 0610 	ands.w	r6, r6, #16
   1af92:	d14e      	bne.n	1b032 <_scanf_float+0x3b6>
   1af94:	702e      	strb	r6, [r5, #0]
   1af96:	6823      	ldr	r3, [r4, #0]
   1af98:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   1af9c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1afa0:	d11c      	bne.n	1afdc <_scanf_float+0x360>
   1afa2:	9b02      	ldr	r3, [sp, #8]
   1afa4:	eba9 0303 	sub.w	r3, r9, r3
   1afa8:	425a      	negs	r2, r3
   1afaa:	bb23      	cbnz	r3, 1aff6 <_scanf_float+0x37a>
   1afac:	2200      	movs	r2, #0
   1afae:	4641      	mov	r1, r8
   1afb0:	4638      	mov	r0, r7
   1afb2:	f001 f9c5 	bl	1c340 <_strtod_r>
   1afb6:	6825      	ldr	r5, [r4, #0]
   1afb8:	f8da 3000 	ldr.w	r3, [sl]
   1afbc:	f015 0f02 	tst.w	r5, #2
   1afc0:	f103 0204 	add.w	r2, r3, #4
   1afc4:	4680      	mov	r8, r0
   1afc6:	4689      	mov	r9, r1
   1afc8:	f8ca 2000 	str.w	r2, [sl]
   1afcc:	d01e      	beq.n	1b00c <_scanf_float+0x390>
   1afce:	681b      	ldr	r3, [r3, #0]
   1afd0:	e9c3 8900 	strd	r8, r9, [r3]
   1afd4:	68e3      	ldr	r3, [r4, #12]
   1afd6:	3301      	adds	r3, #1
   1afd8:	60e3      	str	r3, [r4, #12]
   1afda:	e699      	b.n	1ad10 <_scanf_float+0x94>
   1afdc:	9b03      	ldr	r3, [sp, #12]
   1afde:	2b00      	cmp	r3, #0
   1afe0:	d0e4      	beq.n	1afac <_scanf_float+0x330>
   1afe2:	9904      	ldr	r1, [sp, #16]
   1afe4:	230a      	movs	r3, #10
   1afe6:	4632      	mov	r2, r6
   1afe8:	3101      	adds	r1, #1
   1afea:	4638      	mov	r0, r7
   1afec:	f001 fa38 	bl	1c460 <_strtol_r>
   1aff0:	9b03      	ldr	r3, [sp, #12]
   1aff2:	9d04      	ldr	r5, [sp, #16]
   1aff4:	1ac2      	subs	r2, r0, r3
   1aff6:	f204 136f 	addw	r3, r4, #367	; 0x16f
   1affa:	429d      	cmp	r5, r3
   1affc:	bf28      	it	cs
   1affe:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   1b002:	490d      	ldr	r1, [pc, #52]	; (1b038 <_scanf_float+0x3bc>)
   1b004:	4628      	mov	r0, r5
   1b006:	f000 faab 	bl	1b560 <siprintf>
   1b00a:	e7cf      	b.n	1afac <_scanf_float+0x330>
   1b00c:	f015 0504 	ands.w	r5, r5, #4
   1b010:	d1dd      	bne.n	1afce <_scanf_float+0x352>
   1b012:	681f      	ldr	r7, [r3, #0]
   1b014:	4602      	mov	r2, r0
   1b016:	460b      	mov	r3, r1
   1b018:	f004 ff46 	bl	1fea8 <__aeabi_dcmpun>
   1b01c:	b120      	cbz	r0, 1b028 <_scanf_float+0x3ac>
   1b01e:	4628      	mov	r0, r5
   1b020:	f000 fa56 	bl	1b4d0 <nanf>
   1b024:	6038      	str	r0, [r7, #0]
   1b026:	e7d5      	b.n	1afd4 <_scanf_float+0x358>
   1b028:	4640      	mov	r0, r8
   1b02a:	4649      	mov	r1, r9
   1b02c:	f7fd ff5c 	bl	18ee8 <__aeabi_d2f>
   1b030:	e7f8      	b.n	1b024 <_scanf_float+0x3a8>
   1b032:	2600      	movs	r6, #0
   1b034:	e66c      	b.n	1ad10 <_scanf_float+0x94>
   1b036:	bf00      	nop
   1b038:	000211be 	.word	0x000211be

0001b03c <iprintf>:
iprintf():
   1b03c:	b40f      	push	{r0, r1, r2, r3}
   1b03e:	4b0a      	ldr	r3, [pc, #40]	; (1b068 <iprintf+0x2c>)
   1b040:	b513      	push	{r0, r1, r4, lr}
   1b042:	681c      	ldr	r4, [r3, #0]
   1b044:	b124      	cbz	r4, 1b050 <iprintf+0x14>
   1b046:	69a3      	ldr	r3, [r4, #24]
   1b048:	b913      	cbnz	r3, 1b050 <iprintf+0x14>
   1b04a:	4620      	mov	r0, r4
   1b04c:	f7fe fcb8 	bl	199c0 <__sinit>
   1b050:	ab05      	add	r3, sp, #20
   1b052:	9a04      	ldr	r2, [sp, #16]
   1b054:	68a1      	ldr	r1, [r4, #8]
   1b056:	4620      	mov	r0, r4
   1b058:	9301      	str	r3, [sp, #4]
   1b05a:	f003 ff01 	bl	1ee60 <_vfiprintf_r>
   1b05e:	b002      	add	sp, #8
   1b060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1b064:	b004      	add	sp, #16
   1b066:	4770      	bx	lr
   1b068:	2007c0e0 	.word	0x2007c0e0

0001b06c <_puts_r>:
_puts_r():
   1b06c:	b570      	push	{r4, r5, r6, lr}
   1b06e:	460e      	mov	r6, r1
   1b070:	4605      	mov	r5, r0
   1b072:	b118      	cbz	r0, 1b07c <_puts_r+0x10>
   1b074:	6983      	ldr	r3, [r0, #24]
   1b076:	b90b      	cbnz	r3, 1b07c <_puts_r+0x10>
   1b078:	f7fe fca2 	bl	199c0 <__sinit>
   1b07c:	69ab      	ldr	r3, [r5, #24]
   1b07e:	68ac      	ldr	r4, [r5, #8]
   1b080:	b913      	cbnz	r3, 1b088 <_puts_r+0x1c>
   1b082:	4628      	mov	r0, r5
   1b084:	f7fe fc9c 	bl	199c0 <__sinit>
   1b088:	4b23      	ldr	r3, [pc, #140]	; (1b118 <_puts_r+0xac>)
   1b08a:	429c      	cmp	r4, r3
   1b08c:	d117      	bne.n	1b0be <_puts_r+0x52>
   1b08e:	686c      	ldr	r4, [r5, #4]
   1b090:	89a3      	ldrh	r3, [r4, #12]
   1b092:	071b      	lsls	r3, r3, #28
   1b094:	d51d      	bpl.n	1b0d2 <_puts_r+0x66>
   1b096:	6923      	ldr	r3, [r4, #16]
   1b098:	b1db      	cbz	r3, 1b0d2 <_puts_r+0x66>
   1b09a:	3e01      	subs	r6, #1
   1b09c:	68a3      	ldr	r3, [r4, #8]
   1b09e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
   1b0a2:	3b01      	subs	r3, #1
   1b0a4:	60a3      	str	r3, [r4, #8]
   1b0a6:	b9e9      	cbnz	r1, 1b0e4 <_puts_r+0x78>
   1b0a8:	2b00      	cmp	r3, #0
   1b0aa:	da2e      	bge.n	1b10a <_puts_r+0x9e>
   1b0ac:	4622      	mov	r2, r4
   1b0ae:	210a      	movs	r1, #10
   1b0b0:	4628      	mov	r0, r5
   1b0b2:	f001 fc7d 	bl	1c9b0 <__swbuf_r>
   1b0b6:	3001      	adds	r0, #1
   1b0b8:	d011      	beq.n	1b0de <_puts_r+0x72>
   1b0ba:	200a      	movs	r0, #10
   1b0bc:	bd70      	pop	{r4, r5, r6, pc}
   1b0be:	4b17      	ldr	r3, [pc, #92]	; (1b11c <_puts_r+0xb0>)
   1b0c0:	429c      	cmp	r4, r3
   1b0c2:	d101      	bne.n	1b0c8 <_puts_r+0x5c>
   1b0c4:	68ac      	ldr	r4, [r5, #8]
   1b0c6:	e7e3      	b.n	1b090 <_puts_r+0x24>
   1b0c8:	4b15      	ldr	r3, [pc, #84]	; (1b120 <_puts_r+0xb4>)
   1b0ca:	429c      	cmp	r4, r3
   1b0cc:	bf08      	it	eq
   1b0ce:	68ec      	ldreq	r4, [r5, #12]
   1b0d0:	e7de      	b.n	1b090 <_puts_r+0x24>
   1b0d2:	4621      	mov	r1, r4
   1b0d4:	4628      	mov	r0, r5
   1b0d6:	f001 fcdd 	bl	1ca94 <__swsetup_r>
   1b0da:	2800      	cmp	r0, #0
   1b0dc:	d0dd      	beq.n	1b09a <_puts_r+0x2e>
   1b0de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1b0e2:	bd70      	pop	{r4, r5, r6, pc}
   1b0e4:	2b00      	cmp	r3, #0
   1b0e6:	da04      	bge.n	1b0f2 <_puts_r+0x86>
   1b0e8:	69a2      	ldr	r2, [r4, #24]
   1b0ea:	4293      	cmp	r3, r2
   1b0ec:	db06      	blt.n	1b0fc <_puts_r+0x90>
   1b0ee:	290a      	cmp	r1, #10
   1b0f0:	d004      	beq.n	1b0fc <_puts_r+0x90>
   1b0f2:	6823      	ldr	r3, [r4, #0]
   1b0f4:	1c5a      	adds	r2, r3, #1
   1b0f6:	6022      	str	r2, [r4, #0]
   1b0f8:	7019      	strb	r1, [r3, #0]
   1b0fa:	e7cf      	b.n	1b09c <_puts_r+0x30>
   1b0fc:	4622      	mov	r2, r4
   1b0fe:	4628      	mov	r0, r5
   1b100:	f001 fc56 	bl	1c9b0 <__swbuf_r>
   1b104:	3001      	adds	r0, #1
   1b106:	d1c9      	bne.n	1b09c <_puts_r+0x30>
   1b108:	e7e9      	b.n	1b0de <_puts_r+0x72>
   1b10a:	200a      	movs	r0, #10
   1b10c:	6823      	ldr	r3, [r4, #0]
   1b10e:	1c5a      	adds	r2, r3, #1
   1b110:	6022      	str	r2, [r4, #0]
   1b112:	7018      	strb	r0, [r3, #0]
   1b114:	bd70      	pop	{r4, r5, r6, pc}
   1b116:	bf00      	nop
   1b118:	00021080 	.word	0x00021080
   1b11c:	000210a0 	.word	0x000210a0
   1b120:	00021060 	.word	0x00021060

0001b124 <puts>:
puts():
   1b124:	4b02      	ldr	r3, [pc, #8]	; (1b130 <puts+0xc>)
   1b126:	4601      	mov	r1, r0
   1b128:	6818      	ldr	r0, [r3, #0]
   1b12a:	f7ff bf9f 	b.w	1b06c <_puts_r>
   1b12e:	bf00      	nop
   1b130:	2007c0e0 	.word	0x2007c0e0

0001b134 <srand>:
srand():
   1b134:	b538      	push	{r3, r4, r5, lr}
   1b136:	4b12      	ldr	r3, [pc, #72]	; (1b180 <srand+0x4c>)
   1b138:	4605      	mov	r5, r0
   1b13a:	681c      	ldr	r4, [r3, #0]
   1b13c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b13e:	b9d3      	cbnz	r3, 1b176 <srand+0x42>
   1b140:	2018      	movs	r0, #24
   1b142:	f7fe fd7d 	bl	19c40 <malloc>
   1b146:	f243 330e 	movw	r3, #13070	; 0x330e
   1b14a:	63a0      	str	r0, [r4, #56]	; 0x38
   1b14c:	8003      	strh	r3, [r0, #0]
   1b14e:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1b152:	8043      	strh	r3, [r0, #2]
   1b154:	f241 2334 	movw	r3, #4660	; 0x1234
   1b158:	8083      	strh	r3, [r0, #4]
   1b15a:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1b15e:	80c3      	strh	r3, [r0, #6]
   1b160:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1b164:	8103      	strh	r3, [r0, #8]
   1b166:	2305      	movs	r3, #5
   1b168:	8143      	strh	r3, [r0, #10]
   1b16a:	230b      	movs	r3, #11
   1b16c:	2201      	movs	r2, #1
   1b16e:	8183      	strh	r3, [r0, #12]
   1b170:	2300      	movs	r3, #0
   1b172:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1b176:	2200      	movs	r2, #0
   1b178:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b17a:	611d      	str	r5, [r3, #16]
   1b17c:	615a      	str	r2, [r3, #20]
   1b17e:	bd38      	pop	{r3, r4, r5, pc}
   1b180:	2007c0e0 	.word	0x2007c0e0

0001b184 <rand>:
rand():
   1b184:	4b19      	ldr	r3, [pc, #100]	; (1b1ec <rand+0x68>)
   1b186:	b510      	push	{r4, lr}
   1b188:	681c      	ldr	r4, [r3, #0]
   1b18a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b18c:	b9d3      	cbnz	r3, 1b1c4 <rand+0x40>
   1b18e:	2018      	movs	r0, #24
   1b190:	f7fe fd56 	bl	19c40 <malloc>
   1b194:	f243 330e 	movw	r3, #13070	; 0x330e
   1b198:	63a0      	str	r0, [r4, #56]	; 0x38
   1b19a:	8003      	strh	r3, [r0, #0]
   1b19c:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1b1a0:	8043      	strh	r3, [r0, #2]
   1b1a2:	f241 2334 	movw	r3, #4660	; 0x1234
   1b1a6:	8083      	strh	r3, [r0, #4]
   1b1a8:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1b1ac:	80c3      	strh	r3, [r0, #6]
   1b1ae:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1b1b2:	8103      	strh	r3, [r0, #8]
   1b1b4:	2305      	movs	r3, #5
   1b1b6:	8143      	strh	r3, [r0, #10]
   1b1b8:	230b      	movs	r3, #11
   1b1ba:	2201      	movs	r2, #1
   1b1bc:	8183      	strh	r3, [r0, #12]
   1b1be:	2300      	movs	r3, #0
   1b1c0:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1b1c4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1b1c6:	480a      	ldr	r0, [pc, #40]	; (1b1f0 <rand+0x6c>)
   1b1c8:	690a      	ldr	r2, [r1, #16]
   1b1ca:	694b      	ldr	r3, [r1, #20]
   1b1cc:	4350      	muls	r0, r2
   1b1ce:	4c09      	ldr	r4, [pc, #36]	; (1b1f4 <rand+0x70>)
   1b1d0:	fb04 0003 	mla	r0, r4, r3, r0
   1b1d4:	fba2 2304 	umull	r2, r3, r2, r4
   1b1d8:	3201      	adds	r2, #1
   1b1da:	4403      	add	r3, r0
   1b1dc:	f143 0300 	adc.w	r3, r3, #0
   1b1e0:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1b1e4:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1b1e8:	bd10      	pop	{r4, pc}
   1b1ea:	bf00      	nop
   1b1ec:	2007c0e0 	.word	0x2007c0e0
   1b1f0:	5851f42d 	.word	0x5851f42d
   1b1f4:	4c957f2d 	.word	0x4c957f2d

0001b1f8 <lflush>:
lflush():
   1b1f8:	8983      	ldrh	r3, [r0, #12]
   1b1fa:	f003 0309 	and.w	r3, r3, #9
   1b1fe:	2b09      	cmp	r3, #9
   1b200:	d101      	bne.n	1b206 <lflush+0xe>
   1b202:	f7fe bb8b 	b.w	1991c <fflush>
   1b206:	2000      	movs	r0, #0
   1b208:	4770      	bx	lr
   1b20a:	Address 0x000000000001b20a is out of bounds.


0001b20c <__srefill_r>:
__srefill_r():
   1b20c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b20e:	460c      	mov	r4, r1
   1b210:	4605      	mov	r5, r0
   1b212:	b118      	cbz	r0, 1b21c <__srefill_r+0x10>
   1b214:	6983      	ldr	r3, [r0, #24]
   1b216:	b90b      	cbnz	r3, 1b21c <__srefill_r+0x10>
   1b218:	f7fe fbd2 	bl	199c0 <__sinit>
   1b21c:	4b3c      	ldr	r3, [pc, #240]	; (1b310 <__srefill_r+0x104>)
   1b21e:	429c      	cmp	r4, r3
   1b220:	d10a      	bne.n	1b238 <__srefill_r+0x2c>
   1b222:	686c      	ldr	r4, [r5, #4]
   1b224:	2300      	movs	r3, #0
   1b226:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   1b22a:	6063      	str	r3, [r4, #4]
   1b22c:	b293      	uxth	r3, r2
   1b22e:	069e      	lsls	r6, r3, #26
   1b230:	d50c      	bpl.n	1b24c <__srefill_r+0x40>
   1b232:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1b236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b238:	4b36      	ldr	r3, [pc, #216]	; (1b314 <__srefill_r+0x108>)
   1b23a:	429c      	cmp	r4, r3
   1b23c:	d101      	bne.n	1b242 <__srefill_r+0x36>
   1b23e:	68ac      	ldr	r4, [r5, #8]
   1b240:	e7f0      	b.n	1b224 <__srefill_r+0x18>
   1b242:	4b35      	ldr	r3, [pc, #212]	; (1b318 <__srefill_r+0x10c>)
   1b244:	429c      	cmp	r4, r3
   1b246:	bf08      	it	eq
   1b248:	68ec      	ldreq	r4, [r5, #12]
   1b24a:	e7eb      	b.n	1b224 <__srefill_r+0x18>
   1b24c:	0758      	lsls	r0, r3, #29
   1b24e:	d449      	bmi.n	1b2e4 <__srefill_r+0xd8>
   1b250:	06d9      	lsls	r1, r3, #27
   1b252:	d405      	bmi.n	1b260 <__srefill_r+0x54>
   1b254:	2309      	movs	r3, #9
   1b256:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1b25a:	602b      	str	r3, [r5, #0]
   1b25c:	81a2      	strh	r2, [r4, #12]
   1b25e:	e7e8      	b.n	1b232 <__srefill_r+0x26>
   1b260:	071a      	lsls	r2, r3, #28
   1b262:	d50b      	bpl.n	1b27c <__srefill_r+0x70>
   1b264:	4621      	mov	r1, r4
   1b266:	4628      	mov	r0, r5
   1b268:	f7fe fb2e 	bl	198c8 <_fflush_r>
   1b26c:	2800      	cmp	r0, #0
   1b26e:	d1e0      	bne.n	1b232 <__srefill_r+0x26>
   1b270:	89a3      	ldrh	r3, [r4, #12]
   1b272:	60a0      	str	r0, [r4, #8]
   1b274:	f023 0308 	bic.w	r3, r3, #8
   1b278:	81a3      	strh	r3, [r4, #12]
   1b27a:	61a0      	str	r0, [r4, #24]
   1b27c:	89a3      	ldrh	r3, [r4, #12]
   1b27e:	f043 0304 	orr.w	r3, r3, #4
   1b282:	81a3      	strh	r3, [r4, #12]
   1b284:	6923      	ldr	r3, [r4, #16]
   1b286:	b91b      	cbnz	r3, 1b290 <__srefill_r+0x84>
   1b288:	4621      	mov	r1, r4
   1b28a:	4628      	mov	r0, r5
   1b28c:	f7fe fc98 	bl	19bc0 <__smakebuf_r>
   1b290:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   1b294:	b2be      	uxth	r6, r7
   1b296:	07b3      	lsls	r3, r6, #30
   1b298:	d00f      	beq.n	1b2ba <__srefill_r+0xae>
   1b29a:	2301      	movs	r3, #1
   1b29c:	81a3      	strh	r3, [r4, #12]
   1b29e:	4b1f      	ldr	r3, [pc, #124]	; (1b31c <__srefill_r+0x110>)
   1b2a0:	491f      	ldr	r1, [pc, #124]	; (1b320 <__srefill_r+0x114>)
   1b2a2:	6818      	ldr	r0, [r3, #0]
   1b2a4:	f006 0609 	and.w	r6, r6, #9
   1b2a8:	f7fe fbf6 	bl	19a98 <_fwalk>
   1b2ac:	2e09      	cmp	r6, #9
   1b2ae:	81a7      	strh	r7, [r4, #12]
   1b2b0:	d103      	bne.n	1b2ba <__srefill_r+0xae>
   1b2b2:	4621      	mov	r1, r4
   1b2b4:	4628      	mov	r0, r5
   1b2b6:	f7fe fa7f 	bl	197b8 <__sflush_r>
   1b2ba:	6922      	ldr	r2, [r4, #16]
   1b2bc:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1b2be:	6022      	str	r2, [r4, #0]
   1b2c0:	6963      	ldr	r3, [r4, #20]
   1b2c2:	6a21      	ldr	r1, [r4, #32]
   1b2c4:	4628      	mov	r0, r5
   1b2c6:	47b0      	blx	r6
   1b2c8:	2800      	cmp	r0, #0
   1b2ca:	6060      	str	r0, [r4, #4]
   1b2cc:	dc1d      	bgt.n	1b30a <__srefill_r+0xfe>
   1b2ce:	bf18      	it	ne
   1b2d0:	2200      	movne	r2, #0
   1b2d2:	89a3      	ldrh	r3, [r4, #12]
   1b2d4:	bf16      	itet	ne
   1b2d6:	6062      	strne	r2, [r4, #4]
   1b2d8:	f043 0320 	orreq.w	r3, r3, #32
   1b2dc:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1b2e0:	81a3      	strh	r3, [r4, #12]
   1b2e2:	e7a6      	b.n	1b232 <__srefill_r+0x26>
   1b2e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1b2e6:	2900      	cmp	r1, #0
   1b2e8:	d0cc      	beq.n	1b284 <__srefill_r+0x78>
   1b2ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1b2ee:	4299      	cmp	r1, r3
   1b2f0:	d002      	beq.n	1b2f8 <__srefill_r+0xec>
   1b2f2:	4628      	mov	r0, r5
   1b2f4:	f7fe ff84 	bl	1a200 <_free_r>
   1b2f8:	2000      	movs	r0, #0
   1b2fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1b2fc:	6360      	str	r0, [r4, #52]	; 0x34
   1b2fe:	6063      	str	r3, [r4, #4]
   1b300:	2b00      	cmp	r3, #0
   1b302:	d0bf      	beq.n	1b284 <__srefill_r+0x78>
   1b304:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b306:	6023      	str	r3, [r4, #0]
   1b308:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b30a:	2000      	movs	r0, #0
   1b30c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b30e:	bf00      	nop
   1b310:	00021080 	.word	0x00021080
   1b314:	000210a0 	.word	0x000210a0
   1b318:	00021060 	.word	0x00021060
   1b31c:	000210c0 	.word	0x000210c0
   1b320:	0001b1f9 	.word	0x0001b1f9

0001b324 <_sbrk_r>:
_sbrk_r():
   1b324:	b538      	push	{r3, r4, r5, lr}
   1b326:	2300      	movs	r3, #0
   1b328:	4c05      	ldr	r4, [pc, #20]	; (1b340 <_sbrk_r+0x1c>)
   1b32a:	4605      	mov	r5, r0
   1b32c:	4608      	mov	r0, r1
   1b32e:	6023      	str	r3, [r4, #0]
   1b330:	f7fb ff38 	bl	171a4 <_sbrk>
   1b334:	1c43      	adds	r3, r0, #1
   1b336:	d102      	bne.n	1b33e <_sbrk_r+0x1a>
   1b338:	6823      	ldr	r3, [r4, #0]
   1b33a:	b103      	cbz	r3, 1b33e <_sbrk_r+0x1a>
   1b33c:	602b      	str	r3, [r5, #0]
   1b33e:	bd38      	pop	{r3, r4, r5, pc}
   1b340:	2007c8c8 	.word	0x2007c8c8

0001b344 <iscanf>:
scanf():
   1b344:	b40f      	push	{r0, r1, r2, r3}
   1b346:	4b0a      	ldr	r3, [pc, #40]	; (1b370 <iscanf+0x2c>)
   1b348:	b513      	push	{r0, r1, r4, lr}
   1b34a:	681c      	ldr	r4, [r3, #0]
   1b34c:	b124      	cbz	r4, 1b358 <iscanf+0x14>
   1b34e:	69a3      	ldr	r3, [r4, #24]
   1b350:	b913      	cbnz	r3, 1b358 <iscanf+0x14>
   1b352:	4620      	mov	r0, r4
   1b354:	f7fe fb34 	bl	199c0 <__sinit>
   1b358:	ab05      	add	r3, sp, #20
   1b35a:	9a04      	ldr	r2, [sp, #16]
   1b35c:	6861      	ldr	r1, [r4, #4]
   1b35e:	4620      	mov	r0, r4
   1b360:	9301      	str	r3, [sp, #4]
   1b362:	f003 ffe7 	bl	1f334 <_vfiscanf_r>
   1b366:	b002      	add	sp, #8
   1b368:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1b36c:	b004      	add	sp, #16
   1b36e:	4770      	bx	lr
   1b370:	2007c0e0 	.word	0x2007c0e0

0001b374 <setvbuf>:
setvbuf():
   1b374:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1b378:	461d      	mov	r5, r3
   1b37a:	4b51      	ldr	r3, [pc, #324]	; (1b4c0 <setvbuf+0x14c>)
   1b37c:	4604      	mov	r4, r0
   1b37e:	681e      	ldr	r6, [r3, #0]
   1b380:	460f      	mov	r7, r1
   1b382:	4690      	mov	r8, r2
   1b384:	b126      	cbz	r6, 1b390 <setvbuf+0x1c>
   1b386:	69b3      	ldr	r3, [r6, #24]
   1b388:	b913      	cbnz	r3, 1b390 <setvbuf+0x1c>
   1b38a:	4630      	mov	r0, r6
   1b38c:	f7fe fb18 	bl	199c0 <__sinit>
   1b390:	4b4c      	ldr	r3, [pc, #304]	; (1b4c4 <setvbuf+0x150>)
   1b392:	429c      	cmp	r4, r3
   1b394:	d152      	bne.n	1b43c <setvbuf+0xc8>
   1b396:	6874      	ldr	r4, [r6, #4]
   1b398:	f1b8 0f02 	cmp.w	r8, #2
   1b39c:	d006      	beq.n	1b3ac <setvbuf+0x38>
   1b39e:	f1b8 0f01 	cmp.w	r8, #1
   1b3a2:	f200 8089 	bhi.w	1b4b8 <setvbuf+0x144>
   1b3a6:	2d00      	cmp	r5, #0
   1b3a8:	f2c0 8086 	blt.w	1b4b8 <setvbuf+0x144>
   1b3ac:	4621      	mov	r1, r4
   1b3ae:	4630      	mov	r0, r6
   1b3b0:	f7fe fa8a 	bl	198c8 <_fflush_r>
   1b3b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1b3b6:	b141      	cbz	r1, 1b3ca <setvbuf+0x56>
   1b3b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1b3bc:	4299      	cmp	r1, r3
   1b3be:	d002      	beq.n	1b3c6 <setvbuf+0x52>
   1b3c0:	4630      	mov	r0, r6
   1b3c2:	f7fe ff1d 	bl	1a200 <_free_r>
   1b3c6:	2300      	movs	r3, #0
   1b3c8:	6363      	str	r3, [r4, #52]	; 0x34
   1b3ca:	2300      	movs	r3, #0
   1b3cc:	61a3      	str	r3, [r4, #24]
   1b3ce:	6063      	str	r3, [r4, #4]
   1b3d0:	89a3      	ldrh	r3, [r4, #12]
   1b3d2:	061b      	lsls	r3, r3, #24
   1b3d4:	d503      	bpl.n	1b3de <setvbuf+0x6a>
   1b3d6:	6921      	ldr	r1, [r4, #16]
   1b3d8:	4630      	mov	r0, r6
   1b3da:	f7fe ff11 	bl	1a200 <_free_r>
   1b3de:	89a3      	ldrh	r3, [r4, #12]
   1b3e0:	f1b8 0f02 	cmp.w	r8, #2
   1b3e4:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   1b3e8:	f023 0303 	bic.w	r3, r3, #3
   1b3ec:	81a3      	strh	r3, [r4, #12]
   1b3ee:	d05d      	beq.n	1b4ac <setvbuf+0x138>
   1b3f0:	ab01      	add	r3, sp, #4
   1b3f2:	466a      	mov	r2, sp
   1b3f4:	4621      	mov	r1, r4
   1b3f6:	4630      	mov	r0, r6
   1b3f8:	f7fe fbbe 	bl	19b78 <__swhatbuf_r>
   1b3fc:	89a3      	ldrh	r3, [r4, #12]
   1b3fe:	4318      	orrs	r0, r3
   1b400:	81a0      	strh	r0, [r4, #12]
   1b402:	bb2d      	cbnz	r5, 1b450 <setvbuf+0xdc>
   1b404:	9d00      	ldr	r5, [sp, #0]
   1b406:	4628      	mov	r0, r5
   1b408:	f7fe fc1a 	bl	19c40 <malloc>
   1b40c:	4607      	mov	r7, r0
   1b40e:	2800      	cmp	r0, #0
   1b410:	d14e      	bne.n	1b4b0 <setvbuf+0x13c>
   1b412:	f8dd 9000 	ldr.w	r9, [sp]
   1b416:	45a9      	cmp	r9, r5
   1b418:	d13c      	bne.n	1b494 <setvbuf+0x120>
   1b41a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1b41e:	89a3      	ldrh	r3, [r4, #12]
   1b420:	f043 0302 	orr.w	r3, r3, #2
   1b424:	81a3      	strh	r3, [r4, #12]
   1b426:	2300      	movs	r3, #0
   1b428:	60a3      	str	r3, [r4, #8]
   1b42a:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1b42e:	6023      	str	r3, [r4, #0]
   1b430:	6123      	str	r3, [r4, #16]
   1b432:	2301      	movs	r3, #1
   1b434:	6163      	str	r3, [r4, #20]
   1b436:	b003      	add	sp, #12
   1b438:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b43c:	4b22      	ldr	r3, [pc, #136]	; (1b4c8 <setvbuf+0x154>)
   1b43e:	429c      	cmp	r4, r3
   1b440:	d101      	bne.n	1b446 <setvbuf+0xd2>
   1b442:	68b4      	ldr	r4, [r6, #8]
   1b444:	e7a8      	b.n	1b398 <setvbuf+0x24>
   1b446:	4b21      	ldr	r3, [pc, #132]	; (1b4cc <setvbuf+0x158>)
   1b448:	429c      	cmp	r4, r3
   1b44a:	bf08      	it	eq
   1b44c:	68f4      	ldreq	r4, [r6, #12]
   1b44e:	e7a3      	b.n	1b398 <setvbuf+0x24>
   1b450:	2f00      	cmp	r7, #0
   1b452:	d0d8      	beq.n	1b406 <setvbuf+0x92>
   1b454:	69b3      	ldr	r3, [r6, #24]
   1b456:	b913      	cbnz	r3, 1b45e <setvbuf+0xea>
   1b458:	4630      	mov	r0, r6
   1b45a:	f7fe fab1 	bl	199c0 <__sinit>
   1b45e:	f1b8 0f01 	cmp.w	r8, #1
   1b462:	bf08      	it	eq
   1b464:	89a3      	ldrheq	r3, [r4, #12]
   1b466:	6027      	str	r7, [r4, #0]
   1b468:	bf04      	itt	eq
   1b46a:	f043 0301 	orreq.w	r3, r3, #1
   1b46e:	81a3      	strheq	r3, [r4, #12]
   1b470:	89a3      	ldrh	r3, [r4, #12]
   1b472:	6127      	str	r7, [r4, #16]
   1b474:	f013 0008 	ands.w	r0, r3, #8
   1b478:	6165      	str	r5, [r4, #20]
   1b47a:	d01b      	beq.n	1b4b4 <setvbuf+0x140>
   1b47c:	f013 0001 	ands.w	r0, r3, #1
   1b480:	f04f 0300 	mov.w	r3, #0
   1b484:	bf1f      	itttt	ne
   1b486:	426d      	negne	r5, r5
   1b488:	60a3      	strne	r3, [r4, #8]
   1b48a:	61a5      	strne	r5, [r4, #24]
   1b48c:	4618      	movne	r0, r3
   1b48e:	bf08      	it	eq
   1b490:	60a5      	streq	r5, [r4, #8]
   1b492:	e7d0      	b.n	1b436 <setvbuf+0xc2>
   1b494:	4648      	mov	r0, r9
   1b496:	f7fe fbd3 	bl	19c40 <malloc>
   1b49a:	4607      	mov	r7, r0
   1b49c:	2800      	cmp	r0, #0
   1b49e:	d0bc      	beq.n	1b41a <setvbuf+0xa6>
   1b4a0:	89a3      	ldrh	r3, [r4, #12]
   1b4a2:	464d      	mov	r5, r9
   1b4a4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1b4a8:	81a3      	strh	r3, [r4, #12]
   1b4aa:	e7d3      	b.n	1b454 <setvbuf+0xe0>
   1b4ac:	2000      	movs	r0, #0
   1b4ae:	e7b6      	b.n	1b41e <setvbuf+0xaa>
   1b4b0:	46a9      	mov	r9, r5
   1b4b2:	e7f5      	b.n	1b4a0 <setvbuf+0x12c>
   1b4b4:	60a0      	str	r0, [r4, #8]
   1b4b6:	e7be      	b.n	1b436 <setvbuf+0xc2>
   1b4b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1b4bc:	e7bb      	b.n	1b436 <setvbuf+0xc2>
   1b4be:	bf00      	nop
   1b4c0:	2007c0e0 	.word	0x2007c0e0
   1b4c4:	00021080 	.word	0x00021080
   1b4c8:	000210a0 	.word	0x000210a0
   1b4cc:	00021060 	.word	0x00021060

0001b4d0 <nanf>:
nanf():
   1b4d0:	4800      	ldr	r0, [pc, #0]	; (1b4d4 <nanf+0x4>)
   1b4d2:	4770      	bx	lr
   1b4d4:	7fc00000 	.word	0x7fc00000

0001b4d8 <_raise_r>:
_raise_r():
   1b4d8:	291f      	cmp	r1, #31
   1b4da:	b538      	push	{r3, r4, r5, lr}
   1b4dc:	4604      	mov	r4, r0
   1b4de:	460d      	mov	r5, r1
   1b4e0:	d904      	bls.n	1b4ec <_raise_r+0x14>
   1b4e2:	2316      	movs	r3, #22
   1b4e4:	6003      	str	r3, [r0, #0]
   1b4e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1b4ea:	bd38      	pop	{r3, r4, r5, pc}
   1b4ec:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1b4ee:	b112      	cbz	r2, 1b4f6 <_raise_r+0x1e>
   1b4f0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1b4f4:	b94b      	cbnz	r3, 1b50a <_raise_r+0x32>
   1b4f6:	4620      	mov	r0, r4
   1b4f8:	f000 f830 	bl	1b55c <_getpid_r>
   1b4fc:	462a      	mov	r2, r5
   1b4fe:	4601      	mov	r1, r0
   1b500:	4620      	mov	r0, r4
   1b502:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b506:	f000 b817 	b.w	1b538 <_kill_r>
   1b50a:	2b01      	cmp	r3, #1
   1b50c:	d00a      	beq.n	1b524 <_raise_r+0x4c>
   1b50e:	1c59      	adds	r1, r3, #1
   1b510:	d103      	bne.n	1b51a <_raise_r+0x42>
   1b512:	2316      	movs	r3, #22
   1b514:	6003      	str	r3, [r0, #0]
   1b516:	2001      	movs	r0, #1
   1b518:	bd38      	pop	{r3, r4, r5, pc}
   1b51a:	2400      	movs	r4, #0
   1b51c:	4628      	mov	r0, r5
   1b51e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
   1b522:	4798      	blx	r3
   1b524:	2000      	movs	r0, #0
   1b526:	bd38      	pop	{r3, r4, r5, pc}

0001b528 <raise>:
raise():
   1b528:	4b02      	ldr	r3, [pc, #8]	; (1b534 <raise+0xc>)
   1b52a:	4601      	mov	r1, r0
   1b52c:	6818      	ldr	r0, [r3, #0]
   1b52e:	f7ff bfd3 	b.w	1b4d8 <_raise_r>
   1b532:	bf00      	nop
   1b534:	2007c0e0 	.word	0x2007c0e0

0001b538 <_kill_r>:
_kill_r():
   1b538:	b538      	push	{r3, r4, r5, lr}
   1b53a:	2300      	movs	r3, #0
   1b53c:	4c06      	ldr	r4, [pc, #24]	; (1b558 <_kill_r+0x20>)
   1b53e:	4605      	mov	r5, r0
   1b540:	4608      	mov	r0, r1
   1b542:	4611      	mov	r1, r2
   1b544:	6023      	str	r3, [r4, #0]
   1b546:	f7fb ff33 	bl	173b0 <_kill>
   1b54a:	1c43      	adds	r3, r0, #1
   1b54c:	d102      	bne.n	1b554 <_kill_r+0x1c>
   1b54e:	6823      	ldr	r3, [r4, #0]
   1b550:	b103      	cbz	r3, 1b554 <_kill_r+0x1c>
   1b552:	602b      	str	r3, [r5, #0]
   1b554:	bd38      	pop	{r3, r4, r5, pc}
   1b556:	bf00      	nop
   1b558:	2007c8c8 	.word	0x2007c8c8

0001b55c <_getpid_r>:
_getpid_r():
   1b55c:	f7fb bf38 	b.w	173d0 <_getpid>

0001b560 <siprintf>:
siprintf():
   1b560:	b40e      	push	{r1, r2, r3}
   1b562:	f44f 7102 	mov.w	r1, #520	; 0x208
   1b566:	b500      	push	{lr}
   1b568:	b09c      	sub	sp, #112	; 0x70
   1b56a:	f8ad 1014 	strh.w	r1, [sp, #20]
   1b56e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1b572:	9104      	str	r1, [sp, #16]
   1b574:	9107      	str	r1, [sp, #28]
   1b576:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1b57a:	ab1d      	add	r3, sp, #116	; 0x74
   1b57c:	9002      	str	r0, [sp, #8]
   1b57e:	9006      	str	r0, [sp, #24]
   1b580:	4808      	ldr	r0, [pc, #32]	; (1b5a4 <siprintf+0x44>)
   1b582:	f853 2b04 	ldr.w	r2, [r3], #4
   1b586:	f8ad 1016 	strh.w	r1, [sp, #22]
   1b58a:	6800      	ldr	r0, [r0, #0]
   1b58c:	a902      	add	r1, sp, #8
   1b58e:	9301      	str	r3, [sp, #4]
   1b590:	f003 f99c 	bl	1e8cc <_svfiprintf_r>
   1b594:	2200      	movs	r2, #0
   1b596:	9b02      	ldr	r3, [sp, #8]
   1b598:	701a      	strb	r2, [r3, #0]
   1b59a:	b01c      	add	sp, #112	; 0x70
   1b59c:	f85d eb04 	ldr.w	lr, [sp], #4
   1b5a0:	b003      	add	sp, #12
   1b5a2:	4770      	bx	lr
   1b5a4:	2007c0e0 	.word	0x2007c0e0

0001b5a8 <siscanf>:
siscanf():
   1b5a8:	b40e      	push	{r1, r2, r3}
   1b5aa:	f44f 7201 	mov.w	r2, #516	; 0x204
   1b5ae:	b530      	push	{r4, r5, lr}
   1b5b0:	b09c      	sub	sp, #112	; 0x70
   1b5b2:	ac1f      	add	r4, sp, #124	; 0x7c
   1b5b4:	f854 5b04 	ldr.w	r5, [r4], #4
   1b5b8:	f8ad 2014 	strh.w	r2, [sp, #20]
   1b5bc:	9002      	str	r0, [sp, #8]
   1b5be:	9006      	str	r0, [sp, #24]
   1b5c0:	f000 f873 	bl	1b6aa <strlen>
   1b5c4:	4b0b      	ldr	r3, [pc, #44]	; (1b5f4 <siscanf+0x4c>)
   1b5c6:	9003      	str	r0, [sp, #12]
   1b5c8:	930b      	str	r3, [sp, #44]	; 0x2c
   1b5ca:	2300      	movs	r3, #0
   1b5cc:	930f      	str	r3, [sp, #60]	; 0x3c
   1b5ce:	9314      	str	r3, [sp, #80]	; 0x50
   1b5d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1b5d4:	9007      	str	r0, [sp, #28]
   1b5d6:	4808      	ldr	r0, [pc, #32]	; (1b5f8 <siscanf+0x50>)
   1b5d8:	f8ad 3016 	strh.w	r3, [sp, #22]
   1b5dc:	462a      	mov	r2, r5
   1b5de:	4623      	mov	r3, r4
   1b5e0:	a902      	add	r1, sp, #8
   1b5e2:	6800      	ldr	r0, [r0, #0]
   1b5e4:	9401      	str	r4, [sp, #4]
   1b5e6:	f003 fabf 	bl	1eb68 <__ssvfiscanf_r>
   1b5ea:	b01c      	add	sp, #112	; 0x70
   1b5ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1b5f0:	b003      	add	sp, #12
   1b5f2:	4770      	bx	lr
   1b5f4:	0001b61f 	.word	0x0001b61f
   1b5f8:	2007c0e0 	.word	0x2007c0e0

0001b5fc <__sread>:
__sread():
   1b5fc:	b510      	push	{r4, lr}
   1b5fe:	460c      	mov	r4, r1
   1b600:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1b604:	f004 f818 	bl	1f638 <_read_r>
   1b608:	2800      	cmp	r0, #0
   1b60a:	bfab      	itete	ge
   1b60c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   1b60e:	89a3      	ldrhlt	r3, [r4, #12]
   1b610:	181b      	addge	r3, r3, r0
   1b612:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   1b616:	bfac      	ite	ge
   1b618:	6563      	strge	r3, [r4, #84]	; 0x54
   1b61a:	81a3      	strhlt	r3, [r4, #12]
   1b61c:	bd10      	pop	{r4, pc}

0001b61e <__seofread>:
__seofread():
   1b61e:	2000      	movs	r0, #0
   1b620:	4770      	bx	lr

0001b622 <__swrite>:
__swrite():
   1b622:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b626:	461f      	mov	r7, r3
   1b628:	898b      	ldrh	r3, [r1, #12]
   1b62a:	4605      	mov	r5, r0
   1b62c:	05db      	lsls	r3, r3, #23
   1b62e:	460c      	mov	r4, r1
   1b630:	4616      	mov	r6, r2
   1b632:	d505      	bpl.n	1b640 <__swrite+0x1e>
   1b634:	2302      	movs	r3, #2
   1b636:	2200      	movs	r2, #0
   1b638:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1b63c:	f002 fcca 	bl	1dfd4 <_lseek_r>
   1b640:	89a3      	ldrh	r3, [r4, #12]
   1b642:	4632      	mov	r2, r6
   1b644:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1b648:	81a3      	strh	r3, [r4, #12]
   1b64a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1b64e:	463b      	mov	r3, r7
   1b650:	4628      	mov	r0, r5
   1b652:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b656:	f001 ba0b 	b.w	1ca70 <_write_r>

0001b65a <__sseek>:
__sseek():
   1b65a:	b510      	push	{r4, lr}
   1b65c:	460c      	mov	r4, r1
   1b65e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1b662:	f002 fcb7 	bl	1dfd4 <_lseek_r>
   1b666:	1c43      	adds	r3, r0, #1
   1b668:	89a3      	ldrh	r3, [r4, #12]
   1b66a:	bf15      	itete	ne
   1b66c:	6560      	strne	r0, [r4, #84]	; 0x54
   1b66e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1b672:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   1b676:	81a3      	strheq	r3, [r4, #12]
   1b678:	bf18      	it	ne
   1b67a:	81a3      	strhne	r3, [r4, #12]
   1b67c:	bd10      	pop	{r4, pc}

0001b67e <__sclose>:
__sclose():
   1b67e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1b682:	f001 ba75 	b.w	1cb70 <_close_r>

0001b686 <strcmp>:
strcmp():
   1b686:	f810 2b01 	ldrb.w	r2, [r0], #1
   1b68a:	f811 3b01 	ldrb.w	r3, [r1], #1
   1b68e:	2a01      	cmp	r2, #1
   1b690:	bf28      	it	cs
   1b692:	429a      	cmpcs	r2, r3
   1b694:	d0f7      	beq.n	1b686 <strcmp>
   1b696:	1ad0      	subs	r0, r2, r3
   1b698:	4770      	bx	lr

0001b69a <strcpy>:
strcpy():
   1b69a:	4603      	mov	r3, r0
   1b69c:	f811 2b01 	ldrb.w	r2, [r1], #1
   1b6a0:	f803 2b01 	strb.w	r2, [r3], #1
   1b6a4:	2a00      	cmp	r2, #0
   1b6a6:	d1f9      	bne.n	1b69c <strcpy+0x2>
   1b6a8:	4770      	bx	lr

0001b6aa <strlen>:
strlen():
   1b6aa:	4603      	mov	r3, r0
   1b6ac:	f813 2b01 	ldrb.w	r2, [r3], #1
   1b6b0:	2a00      	cmp	r2, #0
   1b6b2:	d1fb      	bne.n	1b6ac <strlen+0x2>
   1b6b4:	1a18      	subs	r0, r3, r0
   1b6b6:	3801      	subs	r0, #1
   1b6b8:	4770      	bx	lr

0001b6ba <strncmp>:
strncmp():
   1b6ba:	b510      	push	{r4, lr}
   1b6bc:	b16a      	cbz	r2, 1b6da <strncmp+0x20>
   1b6be:	3901      	subs	r1, #1
   1b6c0:	1884      	adds	r4, r0, r2
   1b6c2:	f810 3b01 	ldrb.w	r3, [r0], #1
   1b6c6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
   1b6ca:	4293      	cmp	r3, r2
   1b6cc:	d103      	bne.n	1b6d6 <strncmp+0x1c>
   1b6ce:	42a0      	cmp	r0, r4
   1b6d0:	d001      	beq.n	1b6d6 <strncmp+0x1c>
   1b6d2:	2b00      	cmp	r3, #0
   1b6d4:	d1f5      	bne.n	1b6c2 <strncmp+0x8>
   1b6d6:	1a98      	subs	r0, r3, r2
   1b6d8:	bd10      	pop	{r4, pc}
   1b6da:	4610      	mov	r0, r2
   1b6dc:	bd10      	pop	{r4, pc}

0001b6de <strncpy>:
strncpy():
   1b6de:	b570      	push	{r4, r5, r6, lr}
   1b6e0:	4604      	mov	r4, r0
   1b6e2:	b902      	cbnz	r2, 1b6e6 <strncpy+0x8>
   1b6e4:	bd70      	pop	{r4, r5, r6, pc}
   1b6e6:	4623      	mov	r3, r4
   1b6e8:	f811 5b01 	ldrb.w	r5, [r1], #1
   1b6ec:	1e56      	subs	r6, r2, #1
   1b6ee:	f803 5b01 	strb.w	r5, [r3], #1
   1b6f2:	b91d      	cbnz	r5, 1b6fc <strncpy+0x1e>
   1b6f4:	4414      	add	r4, r2
   1b6f6:	42a3      	cmp	r3, r4
   1b6f8:	d103      	bne.n	1b702 <strncpy+0x24>
   1b6fa:	bd70      	pop	{r4, r5, r6, pc}
   1b6fc:	461c      	mov	r4, r3
   1b6fe:	4632      	mov	r2, r6
   1b700:	e7ef      	b.n	1b6e2 <strncpy+0x4>
   1b702:	f803 5b01 	strb.w	r5, [r3], #1
   1b706:	e7f6      	b.n	1b6f6 <strncpy+0x18>

0001b708 <sulp>:
sulp():
   1b708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b70c:	460f      	mov	r7, r1
   1b70e:	4690      	mov	r8, r2
   1b710:	f002 ff32 	bl	1e578 <__ulp>
   1b714:	4604      	mov	r4, r0
   1b716:	460d      	mov	r5, r1
   1b718:	f1b8 0f00 	cmp.w	r8, #0
   1b71c:	d011      	beq.n	1b742 <sulp+0x3a>
   1b71e:	f3c7 530a 	ubfx	r3, r7, #20, #11
   1b722:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1b726:	2b00      	cmp	r3, #0
   1b728:	dd0b      	ble.n	1b742 <sulp+0x3a>
   1b72a:	2400      	movs	r4, #0
   1b72c:	051b      	lsls	r3, r3, #20
   1b72e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   1b732:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   1b736:	4622      	mov	r2, r4
   1b738:	462b      	mov	r3, r5
   1b73a:	f004 f91b 	bl	1f974 <__aeabi_dmul>
   1b73e:	4604      	mov	r4, r0
   1b740:	460d      	mov	r5, r1
   1b742:	4620      	mov	r0, r4
   1b744:	4629      	mov	r1, r5
   1b746:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b74a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
   1b74e:	Address 0x000000000001b74e is out of bounds.


0001b750 <_strtod_l>:
_strtod_l():
   1b750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b754:	4699      	mov	r9, r3
   1b756:	2300      	movs	r3, #0
   1b758:	b09f      	sub	sp, #124	; 0x7c
   1b75a:	4680      	mov	r8, r0
   1b75c:	4648      	mov	r0, r9
   1b75e:	460c      	mov	r4, r1
   1b760:	9215      	str	r2, [sp, #84]	; 0x54
   1b762:	931a      	str	r3, [sp, #104]	; 0x68
   1b764:	f002 fc26 	bl	1dfb4 <__localeconv_l>
   1b768:	4607      	mov	r7, r0
   1b76a:	6800      	ldr	r0, [r0, #0]
   1b76c:	f7ff ff9d 	bl	1b6aa <strlen>
   1b770:	f04f 0a00 	mov.w	sl, #0
   1b774:	4605      	mov	r5, r0
   1b776:	f04f 0b00 	mov.w	fp, #0
   1b77a:	9419      	str	r4, [sp, #100]	; 0x64
   1b77c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b77e:	781a      	ldrb	r2, [r3, #0]
   1b780:	2a0d      	cmp	r2, #13
   1b782:	d833      	bhi.n	1b7ec <_strtod_l+0x9c>
   1b784:	2a09      	cmp	r2, #9
   1b786:	d237      	bcs.n	1b7f8 <_strtod_l+0xa8>
   1b788:	2a00      	cmp	r2, #0
   1b78a:	d03f      	beq.n	1b80c <_strtod_l+0xbc>
   1b78c:	2300      	movs	r3, #0
   1b78e:	9309      	str	r3, [sp, #36]	; 0x24
   1b790:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1b792:	7833      	ldrb	r3, [r6, #0]
   1b794:	2b30      	cmp	r3, #48	; 0x30
   1b796:	f040 8101 	bne.w	1b99c <_strtod_l+0x24c>
   1b79a:	7873      	ldrb	r3, [r6, #1]
   1b79c:	2b58      	cmp	r3, #88	; 0x58
   1b79e:	d001      	beq.n	1b7a4 <_strtod_l+0x54>
   1b7a0:	2b78      	cmp	r3, #120	; 0x78
   1b7a2:	d16b      	bne.n	1b87c <_strtod_l+0x12c>
   1b7a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1b7a6:	f8cd 9008 	str.w	r9, [sp, #8]
   1b7aa:	9301      	str	r3, [sp, #4]
   1b7ac:	ab1a      	add	r3, sp, #104	; 0x68
   1b7ae:	9300      	str	r3, [sp, #0]
   1b7b0:	4aaa      	ldr	r2, [pc, #680]	; (1ba5c <_strtod_l+0x30c>)
   1b7b2:	ab1b      	add	r3, sp, #108	; 0x6c
   1b7b4:	a919      	add	r1, sp, #100	; 0x64
   1b7b6:	4640      	mov	r0, r8
   1b7b8:	f002 f8ba 	bl	1d930 <__gethex>
   1b7bc:	f010 0407 	ands.w	r4, r0, #7
   1b7c0:	4605      	mov	r5, r0
   1b7c2:	d005      	beq.n	1b7d0 <_strtod_l+0x80>
   1b7c4:	2c06      	cmp	r4, #6
   1b7c6:	d12b      	bne.n	1b820 <_strtod_l+0xd0>
   1b7c8:	2300      	movs	r3, #0
   1b7ca:	3601      	adds	r6, #1
   1b7cc:	9619      	str	r6, [sp, #100]	; 0x64
   1b7ce:	9309      	str	r3, [sp, #36]	; 0x24
   1b7d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1b7d2:	2b00      	cmp	r3, #0
   1b7d4:	f040 859d 	bne.w	1c312 <_strtod_l+0xbc2>
   1b7d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1b7da:	b1e3      	cbz	r3, 1b816 <_strtod_l+0xc6>
   1b7dc:	4652      	mov	r2, sl
   1b7de:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
   1b7e2:	4610      	mov	r0, r2
   1b7e4:	4619      	mov	r1, r3
   1b7e6:	b01f      	add	sp, #124	; 0x7c
   1b7e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7ec:	2a2b      	cmp	r2, #43	; 0x2b
   1b7ee:	d006      	beq.n	1b7fe <_strtod_l+0xae>
   1b7f0:	2a2d      	cmp	r2, #45	; 0x2d
   1b7f2:	d013      	beq.n	1b81c <_strtod_l+0xcc>
   1b7f4:	2a20      	cmp	r2, #32
   1b7f6:	d1c9      	bne.n	1b78c <_strtod_l+0x3c>
   1b7f8:	3301      	adds	r3, #1
   1b7fa:	9319      	str	r3, [sp, #100]	; 0x64
   1b7fc:	e7be      	b.n	1b77c <_strtod_l+0x2c>
   1b7fe:	2200      	movs	r2, #0
   1b800:	9209      	str	r2, [sp, #36]	; 0x24
   1b802:	1c5a      	adds	r2, r3, #1
   1b804:	9219      	str	r2, [sp, #100]	; 0x64
   1b806:	785b      	ldrb	r3, [r3, #1]
   1b808:	2b00      	cmp	r3, #0
   1b80a:	d1c1      	bne.n	1b790 <_strtod_l+0x40>
   1b80c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1b80e:	9419      	str	r4, [sp, #100]	; 0x64
   1b810:	2b00      	cmp	r3, #0
   1b812:	f040 857c 	bne.w	1c30e <_strtod_l+0xbbe>
   1b816:	4652      	mov	r2, sl
   1b818:	465b      	mov	r3, fp
   1b81a:	e7e2      	b.n	1b7e2 <_strtod_l+0x92>
   1b81c:	2201      	movs	r2, #1
   1b81e:	e7ef      	b.n	1b800 <_strtod_l+0xb0>
   1b820:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1b822:	b13a      	cbz	r2, 1b834 <_strtod_l+0xe4>
   1b824:	2135      	movs	r1, #53	; 0x35
   1b826:	a81c      	add	r0, sp, #112	; 0x70
   1b828:	f002 ff93 	bl	1e752 <__copybits>
   1b82c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1b82e:	4640      	mov	r0, r8
   1b830:	f002 fc16 	bl	1e060 <_Bfree>
   1b834:	3c01      	subs	r4, #1
   1b836:	2c04      	cmp	r4, #4
   1b838:	d808      	bhi.n	1b84c <_strtod_l+0xfc>
   1b83a:	e8df f004 	tbb	[pc, r4]
   1b83e:	030c      	.short	0x030c
   1b840:	1a17      	.short	0x1a17
   1b842:	0c          	.byte	0x0c
   1b843:	00          	.byte	0x00
   1b844:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1b848:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   1b84c:	0729      	lsls	r1, r5, #28
   1b84e:	d5bf      	bpl.n	1b7d0 <_strtod_l+0x80>
   1b850:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   1b854:	e7bc      	b.n	1b7d0 <_strtod_l+0x80>
   1b856:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1b858:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1b85a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1b85e:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1b862:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1b866:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   1b86a:	e7ef      	b.n	1b84c <_strtod_l+0xfc>
   1b86c:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 1ba68 <_strtod_l+0x318>
   1b870:	e7ec      	b.n	1b84c <_strtod_l+0xfc>
   1b872:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   1b876:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1b87a:	e7e7      	b.n	1b84c <_strtod_l+0xfc>
   1b87c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b87e:	1c5a      	adds	r2, r3, #1
   1b880:	9219      	str	r2, [sp, #100]	; 0x64
   1b882:	785b      	ldrb	r3, [r3, #1]
   1b884:	2b30      	cmp	r3, #48	; 0x30
   1b886:	d0f9      	beq.n	1b87c <_strtod_l+0x12c>
   1b888:	2b00      	cmp	r3, #0
   1b88a:	d0a1      	beq.n	1b7d0 <_strtod_l+0x80>
   1b88c:	2301      	movs	r3, #1
   1b88e:	9308      	str	r3, [sp, #32]
   1b890:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b892:	220a      	movs	r2, #10
   1b894:	930a      	str	r3, [sp, #40]	; 0x28
   1b896:	2300      	movs	r3, #0
   1b898:	9305      	str	r3, [sp, #20]
   1b89a:	9306      	str	r3, [sp, #24]
   1b89c:	9304      	str	r3, [sp, #16]
   1b89e:	9819      	ldr	r0, [sp, #100]	; 0x64
   1b8a0:	7806      	ldrb	r6, [r0, #0]
   1b8a2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   1b8a6:	b2d9      	uxtb	r1, r3
   1b8a8:	2909      	cmp	r1, #9
   1b8aa:	d979      	bls.n	1b9a0 <_strtod_l+0x250>
   1b8ac:	462a      	mov	r2, r5
   1b8ae:	6839      	ldr	r1, [r7, #0]
   1b8b0:	f7ff ff03 	bl	1b6ba <strncmp>
   1b8b4:	2800      	cmp	r0, #0
   1b8b6:	f000 8085 	beq.w	1b9c4 <_strtod_l+0x274>
   1b8ba:	2000      	movs	r0, #0
   1b8bc:	4633      	mov	r3, r6
   1b8be:	4602      	mov	r2, r0
   1b8c0:	4601      	mov	r1, r0
   1b8c2:	9d04      	ldr	r5, [sp, #16]
   1b8c4:	2b65      	cmp	r3, #101	; 0x65
   1b8c6:	d002      	beq.n	1b8ce <_strtod_l+0x17e>
   1b8c8:	2b45      	cmp	r3, #69	; 0x45
   1b8ca:	f040 80ef 	bne.w	1baac <_strtod_l+0x35c>
   1b8ce:	b925      	cbnz	r5, 1b8da <_strtod_l+0x18a>
   1b8d0:	b910      	cbnz	r0, 1b8d8 <_strtod_l+0x188>
   1b8d2:	9b08      	ldr	r3, [sp, #32]
   1b8d4:	2b00      	cmp	r3, #0
   1b8d6:	d099      	beq.n	1b80c <_strtod_l+0xbc>
   1b8d8:	2500      	movs	r5, #0
   1b8da:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1b8dc:	1c63      	adds	r3, r4, #1
   1b8de:	9319      	str	r3, [sp, #100]	; 0x64
   1b8e0:	7863      	ldrb	r3, [r4, #1]
   1b8e2:	2b2b      	cmp	r3, #43	; 0x2b
   1b8e4:	f000 80cf 	beq.w	1ba86 <_strtod_l+0x336>
   1b8e8:	2b2d      	cmp	r3, #45	; 0x2d
   1b8ea:	f000 80d2 	beq.w	1ba92 <_strtod_l+0x342>
   1b8ee:	2600      	movs	r6, #0
   1b8f0:	9607      	str	r6, [sp, #28]
   1b8f2:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
   1b8f6:	2e09      	cmp	r6, #9
   1b8f8:	f200 80d7 	bhi.w	1baaa <_strtod_l+0x35a>
   1b8fc:	2b30      	cmp	r3, #48	; 0x30
   1b8fe:	f000 80ca 	beq.w	1ba96 <_strtod_l+0x346>
   1b902:	f1a3 0631 	sub.w	r6, r3, #49	; 0x31
   1b906:	2e08      	cmp	r6, #8
   1b908:	f200 80d0 	bhi.w	1baac <_strtod_l+0x35c>
   1b90c:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
   1b910:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b912:	f04f 0c0a 	mov.w	ip, #10
   1b916:	461f      	mov	r7, r3
   1b918:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b91a:	1c5e      	adds	r6, r3, #1
   1b91c:	9619      	str	r6, [sp, #100]	; 0x64
   1b91e:	785b      	ldrb	r3, [r3, #1]
   1b920:	f1a3 0930 	sub.w	r9, r3, #48	; 0x30
   1b924:	f1b9 0f09 	cmp.w	r9, #9
   1b928:	f240 80ba 	bls.w	1baa0 <_strtod_l+0x350>
   1b92c:	1bf6      	subs	r6, r6, r7
   1b92e:	2e08      	cmp	r6, #8
   1b930:	f644 691f 	movw	r9, #19999	; 0x4e1f
   1b934:	dc02      	bgt.n	1b93c <_strtod_l+0x1ec>
   1b936:	45f1      	cmp	r9, lr
   1b938:	bfa8      	it	ge
   1b93a:	46f1      	movge	r9, lr
   1b93c:	9e07      	ldr	r6, [sp, #28]
   1b93e:	b10e      	cbz	r6, 1b944 <_strtod_l+0x1f4>
   1b940:	f1c9 0900 	rsb	r9, r9, #0
   1b944:	2d00      	cmp	r5, #0
   1b946:	f040 80d7 	bne.w	1baf8 <_strtod_l+0x3a8>
   1b94a:	2800      	cmp	r0, #0
   1b94c:	f47f af40 	bne.w	1b7d0 <_strtod_l+0x80>
   1b950:	9a08      	ldr	r2, [sp, #32]
   1b952:	2a00      	cmp	r2, #0
   1b954:	f47f af3c 	bne.w	1b7d0 <_strtod_l+0x80>
   1b958:	2900      	cmp	r1, #0
   1b95a:	f47f af57 	bne.w	1b80c <_strtod_l+0xbc>
   1b95e:	2b4e      	cmp	r3, #78	; 0x4e
   1b960:	f000 80ad 	beq.w	1babe <_strtod_l+0x36e>
   1b964:	f300 80a5 	bgt.w	1bab2 <_strtod_l+0x362>
   1b968:	2b49      	cmp	r3, #73	; 0x49
   1b96a:	f47f af4f 	bne.w	1b80c <_strtod_l+0xbc>
   1b96e:	493c      	ldr	r1, [pc, #240]	; (1ba60 <_strtod_l+0x310>)
   1b970:	a819      	add	r0, sp, #100	; 0x64
   1b972:	f002 fa0e 	bl	1dd92 <__match>
   1b976:	2800      	cmp	r0, #0
   1b978:	f43f af48 	beq.w	1b80c <_strtod_l+0xbc>
   1b97c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b97e:	4939      	ldr	r1, [pc, #228]	; (1ba64 <_strtod_l+0x314>)
   1b980:	3b01      	subs	r3, #1
   1b982:	a819      	add	r0, sp, #100	; 0x64
   1b984:	9319      	str	r3, [sp, #100]	; 0x64
   1b986:	f002 fa04 	bl	1dd92 <__match>
   1b98a:	b910      	cbnz	r0, 1b992 <_strtod_l+0x242>
   1b98c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b98e:	3301      	adds	r3, #1
   1b990:	9319      	str	r3, [sp, #100]	; 0x64
   1b992:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 1ba68 <_strtod_l+0x318>
   1b996:	f04f 0a00 	mov.w	sl, #0
   1b99a:	e719      	b.n	1b7d0 <_strtod_l+0x80>
   1b99c:	2300      	movs	r3, #0
   1b99e:	e776      	b.n	1b88e <_strtod_l+0x13e>
   1b9a0:	9904      	ldr	r1, [sp, #16]
   1b9a2:	3001      	adds	r0, #1
   1b9a4:	2908      	cmp	r1, #8
   1b9a6:	bfd5      	itete	le
   1b9a8:	9906      	ldrle	r1, [sp, #24]
   1b9aa:	9905      	ldrgt	r1, [sp, #20]
   1b9ac:	fb02 3301 	mlale	r3, r2, r1, r3
   1b9b0:	fb02 3301 	mlagt	r3, r2, r1, r3
   1b9b4:	bfd4      	ite	le
   1b9b6:	9306      	strle	r3, [sp, #24]
   1b9b8:	9305      	strgt	r3, [sp, #20]
   1b9ba:	9b04      	ldr	r3, [sp, #16]
   1b9bc:	9019      	str	r0, [sp, #100]	; 0x64
   1b9be:	3301      	adds	r3, #1
   1b9c0:	9304      	str	r3, [sp, #16]
   1b9c2:	e76c      	b.n	1b89e <_strtod_l+0x14e>
   1b9c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1b9c6:	195a      	adds	r2, r3, r5
   1b9c8:	9219      	str	r2, [sp, #100]	; 0x64
   1b9ca:	9a04      	ldr	r2, [sp, #16]
   1b9cc:	5d5b      	ldrb	r3, [r3, r5]
   1b9ce:	2a00      	cmp	r2, #0
   1b9d0:	d154      	bne.n	1ba7c <_strtod_l+0x32c>
   1b9d2:	4610      	mov	r0, r2
   1b9d4:	2b30      	cmp	r3, #48	; 0x30
   1b9d6:	d02a      	beq.n	1ba2e <_strtod_l+0x2de>
   1b9d8:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   1b9dc:	2a08      	cmp	r2, #8
   1b9de:	f200 849d 	bhi.w	1c31c <_strtod_l+0xbcc>
   1b9e2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1b9e4:	920a      	str	r2, [sp, #40]	; 0x28
   1b9e6:	4602      	mov	r2, r0
   1b9e8:	2000      	movs	r0, #0
   1b9ea:	4605      	mov	r5, r0
   1b9ec:	3b30      	subs	r3, #48	; 0x30
   1b9ee:	f100 0101 	add.w	r1, r0, #1
   1b9f2:	d011      	beq.n	1ba18 <_strtod_l+0x2c8>
   1b9f4:	440a      	add	r2, r1
   1b9f6:	260a      	movs	r6, #10
   1b9f8:	4629      	mov	r1, r5
   1b9fa:	eb00 0c05 	add.w	ip, r0, r5
   1b9fe:	4561      	cmp	r1, ip
   1ba00:	d11b      	bne.n	1ba3a <_strtod_l+0x2ea>
   1ba02:	4428      	add	r0, r5
   1ba04:	2808      	cmp	r0, #8
   1ba06:	f100 0501 	add.w	r5, r0, #1
   1ba0a:	dc2f      	bgt.n	1ba6c <_strtod_l+0x31c>
   1ba0c:	210a      	movs	r1, #10
   1ba0e:	9806      	ldr	r0, [sp, #24]
   1ba10:	fb01 3300 	mla	r3, r1, r0, r3
   1ba14:	9306      	str	r3, [sp, #24]
   1ba16:	2100      	movs	r1, #0
   1ba18:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ba1a:	1c58      	adds	r0, r3, #1
   1ba1c:	9019      	str	r0, [sp, #100]	; 0x64
   1ba1e:	4608      	mov	r0, r1
   1ba20:	785b      	ldrb	r3, [r3, #1]
   1ba22:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   1ba26:	2909      	cmp	r1, #9
   1ba28:	d9e0      	bls.n	1b9ec <_strtod_l+0x29c>
   1ba2a:	2101      	movs	r1, #1
   1ba2c:	e74a      	b.n	1b8c4 <_strtod_l+0x174>
   1ba2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ba30:	3001      	adds	r0, #1
   1ba32:	1c5a      	adds	r2, r3, #1
   1ba34:	9219      	str	r2, [sp, #100]	; 0x64
   1ba36:	785b      	ldrb	r3, [r3, #1]
   1ba38:	e7cc      	b.n	1b9d4 <_strtod_l+0x284>
   1ba3a:	3101      	adds	r1, #1
   1ba3c:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
   1ba40:	f1be 0f08 	cmp.w	lr, #8
   1ba44:	dc03      	bgt.n	1ba4e <_strtod_l+0x2fe>
   1ba46:	9f06      	ldr	r7, [sp, #24]
   1ba48:	4377      	muls	r7, r6
   1ba4a:	9706      	str	r7, [sp, #24]
   1ba4c:	e7d7      	b.n	1b9fe <_strtod_l+0x2ae>
   1ba4e:	2910      	cmp	r1, #16
   1ba50:	bfde      	ittt	le
   1ba52:	9f05      	ldrle	r7, [sp, #20]
   1ba54:	4377      	mulle	r7, r6
   1ba56:	9705      	strle	r7, [sp, #20]
   1ba58:	e7d1      	b.n	1b9fe <_strtod_l+0x2ae>
   1ba5a:	bf00      	nop
   1ba5c:	000211c4 	.word	0x000211c4
   1ba60:	00021191 	.word	0x00021191
   1ba64:	00021358 	.word	0x00021358
   1ba68:	7ff00000 	.word	0x7ff00000
   1ba6c:	2d10      	cmp	r5, #16
   1ba6e:	bfdf      	itttt	le
   1ba70:	210a      	movle	r1, #10
   1ba72:	9805      	ldrle	r0, [sp, #20]
   1ba74:	fb01 3300 	mlale	r3, r1, r0, r3
   1ba78:	9305      	strle	r3, [sp, #20]
   1ba7a:	e7cc      	b.n	1ba16 <_strtod_l+0x2c6>
   1ba7c:	4602      	mov	r2, r0
   1ba7e:	9d04      	ldr	r5, [sp, #16]
   1ba80:	e7cf      	b.n	1ba22 <_strtod_l+0x2d2>
   1ba82:	2101      	movs	r1, #1
   1ba84:	e724      	b.n	1b8d0 <_strtod_l+0x180>
   1ba86:	2300      	movs	r3, #0
   1ba88:	9307      	str	r3, [sp, #28]
   1ba8a:	1ca3      	adds	r3, r4, #2
   1ba8c:	9319      	str	r3, [sp, #100]	; 0x64
   1ba8e:	78a3      	ldrb	r3, [r4, #2]
   1ba90:	e72f      	b.n	1b8f2 <_strtod_l+0x1a2>
   1ba92:	2301      	movs	r3, #1
   1ba94:	e7f8      	b.n	1ba88 <_strtod_l+0x338>
   1ba96:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ba98:	1c5e      	adds	r6, r3, #1
   1ba9a:	9619      	str	r6, [sp, #100]	; 0x64
   1ba9c:	785b      	ldrb	r3, [r3, #1]
   1ba9e:	e72d      	b.n	1b8fc <_strtod_l+0x1ac>
   1baa0:	fb0c 3e0e 	mla	lr, ip, lr, r3
   1baa4:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
   1baa8:	e736      	b.n	1b918 <_strtod_l+0x1c8>
   1baaa:	9419      	str	r4, [sp, #100]	; 0x64
   1baac:	f04f 0900 	mov.w	r9, #0
   1bab0:	e748      	b.n	1b944 <_strtod_l+0x1f4>
   1bab2:	2b69      	cmp	r3, #105	; 0x69
   1bab4:	f43f af5b 	beq.w	1b96e <_strtod_l+0x21e>
   1bab8:	2b6e      	cmp	r3, #110	; 0x6e
   1baba:	f47f aea7 	bne.w	1b80c <_strtod_l+0xbc>
   1babe:	498c      	ldr	r1, [pc, #560]	; (1bcf0 <_strtod_l+0x5a0>)
   1bac0:	a819      	add	r0, sp, #100	; 0x64
   1bac2:	f002 f966 	bl	1dd92 <__match>
   1bac6:	2800      	cmp	r0, #0
   1bac8:	f43f aea0 	beq.w	1b80c <_strtod_l+0xbc>
   1bacc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1bace:	781b      	ldrb	r3, [r3, #0]
   1bad0:	2b28      	cmp	r3, #40	; 0x28
   1bad2:	d10e      	bne.n	1baf2 <_strtod_l+0x3a2>
   1bad4:	aa1c      	add	r2, sp, #112	; 0x70
   1bad6:	4987      	ldr	r1, [pc, #540]	; (1bcf4 <_strtod_l+0x5a4>)
   1bad8:	a819      	add	r0, sp, #100	; 0x64
   1bada:	f002 f96d 	bl	1ddb8 <__hexnan>
   1bade:	2805      	cmp	r0, #5
   1bae0:	d107      	bne.n	1baf2 <_strtod_l+0x3a2>
   1bae2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1bae4:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1bae8:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   1baec:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   1baf0:	e66e      	b.n	1b7d0 <_strtod_l+0x80>
   1baf2:	f8df b210 	ldr.w	fp, [pc, #528]	; 1bd04 <_strtod_l+0x5b4>
   1baf6:	e74e      	b.n	1b996 <_strtod_l+0x246>
   1baf8:	9b04      	ldr	r3, [sp, #16]
   1bafa:	462c      	mov	r4, r5
   1bafc:	2b00      	cmp	r3, #0
   1bafe:	bf08      	it	eq
   1bb00:	462b      	moveq	r3, r5
   1bb02:	2d10      	cmp	r5, #16
   1bb04:	bfa8      	it	ge
   1bb06:	2410      	movge	r4, #16
   1bb08:	9806      	ldr	r0, [sp, #24]
   1bb0a:	eba9 0902 	sub.w	r9, r9, r2
   1bb0e:	9304      	str	r3, [sp, #16]
   1bb10:	f7fd f954 	bl	18dbc <__aeabi_ui2d>
   1bb14:	2c09      	cmp	r4, #9
   1bb16:	4682      	mov	sl, r0
   1bb18:	468b      	mov	fp, r1
   1bb1a:	dd13      	ble.n	1bb44 <_strtod_l+0x3f4>
   1bb1c:	4b76      	ldr	r3, [pc, #472]	; (1bcf8 <_strtod_l+0x5a8>)
   1bb1e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   1bb22:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   1bb26:	f003 ff25 	bl	1f974 <__aeabi_dmul>
   1bb2a:	4606      	mov	r6, r0
   1bb2c:	9805      	ldr	r0, [sp, #20]
   1bb2e:	460f      	mov	r7, r1
   1bb30:	f7fd f944 	bl	18dbc <__aeabi_ui2d>
   1bb34:	4602      	mov	r2, r0
   1bb36:	460b      	mov	r3, r1
   1bb38:	4630      	mov	r0, r6
   1bb3a:	4639      	mov	r1, r7
   1bb3c:	f7fd f802 	bl	18b44 <__adddf3>
   1bb40:	4682      	mov	sl, r0
   1bb42:	468b      	mov	fp, r1
   1bb44:	2d0f      	cmp	r5, #15
   1bb46:	dc36      	bgt.n	1bbb6 <_strtod_l+0x466>
   1bb48:	f1b9 0f00 	cmp.w	r9, #0
   1bb4c:	f43f ae40 	beq.w	1b7d0 <_strtod_l+0x80>
   1bb50:	dd24      	ble.n	1bb9c <_strtod_l+0x44c>
   1bb52:	f1b9 0f16 	cmp.w	r9, #22
   1bb56:	dc0b      	bgt.n	1bb70 <_strtod_l+0x420>
   1bb58:	4652      	mov	r2, sl
   1bb5a:	465b      	mov	r3, fp
   1bb5c:	4d66      	ldr	r5, [pc, #408]	; (1bcf8 <_strtod_l+0x5a8>)
   1bb5e:	eb05 09c9 	add.w	r9, r5, r9, lsl #3
   1bb62:	e9d9 0100 	ldrd	r0, r1, [r9]
   1bb66:	f003 ff05 	bl	1f974 <__aeabi_dmul>
   1bb6a:	4682      	mov	sl, r0
   1bb6c:	468b      	mov	fp, r1
   1bb6e:	e62f      	b.n	1b7d0 <_strtod_l+0x80>
   1bb70:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   1bb74:	4599      	cmp	r9, r3
   1bb76:	dc1e      	bgt.n	1bbb6 <_strtod_l+0x466>
   1bb78:	4c5f      	ldr	r4, [pc, #380]	; (1bcf8 <_strtod_l+0x5a8>)
   1bb7a:	f1c5 050f 	rsb	r5, r5, #15
   1bb7e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
   1bb82:	eba9 0505 	sub.w	r5, r9, r5
   1bb86:	4652      	mov	r2, sl
   1bb88:	e9d1 0100 	ldrd	r0, r1, [r1]
   1bb8c:	465b      	mov	r3, fp
   1bb8e:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1bb92:	f003 feef 	bl	1f974 <__aeabi_dmul>
   1bb96:	e9d4 2300 	ldrd	r2, r3, [r4]
   1bb9a:	e7e4      	b.n	1bb66 <_strtod_l+0x416>
   1bb9c:	f119 0f16 	cmn.w	r9, #22
   1bba0:	db09      	blt.n	1bbb6 <_strtod_l+0x466>
   1bba2:	4d55      	ldr	r5, [pc, #340]	; (1bcf8 <_strtod_l+0x5a8>)
   1bba4:	4650      	mov	r0, sl
   1bba6:	eba5 09c9 	sub.w	r9, r5, r9, lsl #3
   1bbaa:	e9d9 2300 	ldrd	r2, r3, [r9]
   1bbae:	4659      	mov	r1, fp
   1bbb0:	f004 f80a 	bl	1fbc8 <__aeabi_ddiv>
   1bbb4:	e7d9      	b.n	1bb6a <_strtod_l+0x41a>
   1bbb6:	1b2c      	subs	r4, r5, r4
   1bbb8:	444c      	add	r4, r9
   1bbba:	2c00      	cmp	r4, #0
   1bbbc:	dd73      	ble.n	1bca6 <_strtod_l+0x556>
   1bbbe:	f014 030f 	ands.w	r3, r4, #15
   1bbc2:	d00a      	beq.n	1bbda <_strtod_l+0x48a>
   1bbc4:	494c      	ldr	r1, [pc, #304]	; (1bcf8 <_strtod_l+0x5a8>)
   1bbc6:	4652      	mov	r2, sl
   1bbc8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   1bbcc:	e9d1 0100 	ldrd	r0, r1, [r1]
   1bbd0:	465b      	mov	r3, fp
   1bbd2:	f003 fecf 	bl	1f974 <__aeabi_dmul>
   1bbd6:	4682      	mov	sl, r0
   1bbd8:	468b      	mov	fp, r1
   1bbda:	f034 040f 	bics.w	r4, r4, #15
   1bbde:	d054      	beq.n	1bc8a <_strtod_l+0x53a>
   1bbe0:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
   1bbe4:	dd27      	ble.n	1bc36 <_strtod_l+0x4e6>
   1bbe6:	f04f 0900 	mov.w	r9, #0
   1bbea:	f8cd 9010 	str.w	r9, [sp, #16]
   1bbee:	f8cd 901c 	str.w	r9, [sp, #28]
   1bbf2:	f8cd 9018 	str.w	r9, [sp, #24]
   1bbf6:	2322      	movs	r3, #34	; 0x22
   1bbf8:	f04f 0a00 	mov.w	sl, #0
   1bbfc:	f8df b108 	ldr.w	fp, [pc, #264]	; 1bd08 <_strtod_l+0x5b8>
   1bc00:	f8c8 3000 	str.w	r3, [r8]
   1bc04:	9b07      	ldr	r3, [sp, #28]
   1bc06:	2b00      	cmp	r3, #0
   1bc08:	f43f ade2 	beq.w	1b7d0 <_strtod_l+0x80>
   1bc0c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1bc0e:	4640      	mov	r0, r8
   1bc10:	f002 fa26 	bl	1e060 <_Bfree>
   1bc14:	9906      	ldr	r1, [sp, #24]
   1bc16:	4640      	mov	r0, r8
   1bc18:	f002 fa22 	bl	1e060 <_Bfree>
   1bc1c:	9904      	ldr	r1, [sp, #16]
   1bc1e:	4640      	mov	r0, r8
   1bc20:	f002 fa1e 	bl	1e060 <_Bfree>
   1bc24:	9907      	ldr	r1, [sp, #28]
   1bc26:	4640      	mov	r0, r8
   1bc28:	f002 fa1a 	bl	1e060 <_Bfree>
   1bc2c:	4649      	mov	r1, r9
   1bc2e:	4640      	mov	r0, r8
   1bc30:	f002 fa16 	bl	1e060 <_Bfree>
   1bc34:	e5cc      	b.n	1b7d0 <_strtod_l+0x80>
   1bc36:	2300      	movs	r3, #0
   1bc38:	4650      	mov	r0, sl
   1bc3a:	4659      	mov	r1, fp
   1bc3c:	461f      	mov	r7, r3
   1bc3e:	4e2f      	ldr	r6, [pc, #188]	; (1bcfc <_strtod_l+0x5ac>)
   1bc40:	1124      	asrs	r4, r4, #4
   1bc42:	2c01      	cmp	r4, #1
   1bc44:	dc24      	bgt.n	1bc90 <_strtod_l+0x540>
   1bc46:	b10b      	cbz	r3, 1bc4c <_strtod_l+0x4fc>
   1bc48:	4682      	mov	sl, r0
   1bc4a:	468b      	mov	fp, r1
   1bc4c:	4b2b      	ldr	r3, [pc, #172]	; (1bcfc <_strtod_l+0x5ac>)
   1bc4e:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1bc52:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
   1bc56:	4652      	mov	r2, sl
   1bc58:	e9d7 0100 	ldrd	r0, r1, [r7]
   1bc5c:	465b      	mov	r3, fp
   1bc5e:	f003 fe89 	bl	1f974 <__aeabi_dmul>
   1bc62:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1bc66:	468b      	mov	fp, r1
   1bc68:	460a      	mov	r2, r1
   1bc6a:	0d1b      	lsrs	r3, r3, #20
   1bc6c:	4924      	ldr	r1, [pc, #144]	; (1bd00 <_strtod_l+0x5b0>)
   1bc6e:	051b      	lsls	r3, r3, #20
   1bc70:	428b      	cmp	r3, r1
   1bc72:	4682      	mov	sl, r0
   1bc74:	d8b7      	bhi.n	1bbe6 <_strtod_l+0x496>
   1bc76:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   1bc7a:	428b      	cmp	r3, r1
   1bc7c:	bf86      	itte	hi
   1bc7e:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
   1bc82:	f8df b088 	ldrhi.w	fp, [pc, #136]	; 1bd0c <_strtod_l+0x5bc>
   1bc86:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
   1bc8a:	2300      	movs	r3, #0
   1bc8c:	9305      	str	r3, [sp, #20]
   1bc8e:	e070      	b.n	1bd72 <_strtod_l+0x622>
   1bc90:	07e2      	lsls	r2, r4, #31
   1bc92:	d504      	bpl.n	1bc9e <_strtod_l+0x54e>
   1bc94:	e9d6 2300 	ldrd	r2, r3, [r6]
   1bc98:	f003 fe6c 	bl	1f974 <__aeabi_dmul>
   1bc9c:	2301      	movs	r3, #1
   1bc9e:	3701      	adds	r7, #1
   1bca0:	1064      	asrs	r4, r4, #1
   1bca2:	3608      	adds	r6, #8
   1bca4:	e7cd      	b.n	1bc42 <_strtod_l+0x4f2>
   1bca6:	d0f0      	beq.n	1bc8a <_strtod_l+0x53a>
   1bca8:	4264      	negs	r4, r4
   1bcaa:	f014 020f 	ands.w	r2, r4, #15
   1bcae:	d00a      	beq.n	1bcc6 <_strtod_l+0x576>
   1bcb0:	4b11      	ldr	r3, [pc, #68]	; (1bcf8 <_strtod_l+0x5a8>)
   1bcb2:	4650      	mov	r0, sl
   1bcb4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1bcb8:	4659      	mov	r1, fp
   1bcba:	e9d3 2300 	ldrd	r2, r3, [r3]
   1bcbe:	f003 ff83 	bl	1fbc8 <__aeabi_ddiv>
   1bcc2:	4682      	mov	sl, r0
   1bcc4:	468b      	mov	fp, r1
   1bcc6:	1124      	asrs	r4, r4, #4
   1bcc8:	d0df      	beq.n	1bc8a <_strtod_l+0x53a>
   1bcca:	2c1f      	cmp	r4, #31
   1bccc:	dd20      	ble.n	1bd10 <_strtod_l+0x5c0>
   1bcce:	f04f 0900 	mov.w	r9, #0
   1bcd2:	f8cd 9010 	str.w	r9, [sp, #16]
   1bcd6:	f8cd 901c 	str.w	r9, [sp, #28]
   1bcda:	f8cd 9018 	str.w	r9, [sp, #24]
   1bcde:	2322      	movs	r3, #34	; 0x22
   1bce0:	f04f 0a00 	mov.w	sl, #0
   1bce4:	f04f 0b00 	mov.w	fp, #0
   1bce8:	f8c8 3000 	str.w	r3, [r8]
   1bcec:	e78a      	b.n	1bc04 <_strtod_l+0x4b4>
   1bcee:	bf00      	nop
   1bcf0:	00021199 	.word	0x00021199
   1bcf4:	000211d8 	.word	0x000211d8
   1bcf8:	00021390 	.word	0x00021390
   1bcfc:	00021368 	.word	0x00021368
   1bd00:	7ca00000 	.word	0x7ca00000
   1bd04:	fff80000 	.word	0xfff80000
   1bd08:	7ff00000 	.word	0x7ff00000
   1bd0c:	7fefffff 	.word	0x7fefffff
   1bd10:	f014 0310 	ands.w	r3, r4, #16
   1bd14:	bf18      	it	ne
   1bd16:	236a      	movne	r3, #106	; 0x6a
   1bd18:	4650      	mov	r0, sl
   1bd1a:	9305      	str	r3, [sp, #20]
   1bd1c:	4659      	mov	r1, fp
   1bd1e:	2300      	movs	r3, #0
   1bd20:	4e9f      	ldr	r6, [pc, #636]	; (1bfa0 <_strtod_l+0x850>)
   1bd22:	2c00      	cmp	r4, #0
   1bd24:	f300 8109 	bgt.w	1bf3a <_strtod_l+0x7ea>
   1bd28:	b10b      	cbz	r3, 1bd2e <_strtod_l+0x5de>
   1bd2a:	4682      	mov	sl, r0
   1bd2c:	468b      	mov	fp, r1
   1bd2e:	9b05      	ldr	r3, [sp, #20]
   1bd30:	b1bb      	cbz	r3, 1bd62 <_strtod_l+0x612>
   1bd32:	f3cb 530a 	ubfx	r3, fp, #20, #11
   1bd36:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1bd3a:	2b00      	cmp	r3, #0
   1bd3c:	4659      	mov	r1, fp
   1bd3e:	dd10      	ble.n	1bd62 <_strtod_l+0x612>
   1bd40:	2b1f      	cmp	r3, #31
   1bd42:	f340 8104 	ble.w	1bf4e <_strtod_l+0x7fe>
   1bd46:	2b34      	cmp	r3, #52	; 0x34
   1bd48:	bfd8      	it	le
   1bd4a:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
   1bd4e:	f04f 0a00 	mov.w	sl, #0
   1bd52:	bfcf      	iteee	gt
   1bd54:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
   1bd58:	3b20      	suble	r3, #32
   1bd5a:	fa02 f303 	lslle.w	r3, r2, r3
   1bd5e:	ea03 0b01 	andle.w	fp, r3, r1
   1bd62:	2200      	movs	r2, #0
   1bd64:	2300      	movs	r3, #0
   1bd66:	4650      	mov	r0, sl
   1bd68:	4659      	mov	r1, fp
   1bd6a:	f004 f86b 	bl	1fe44 <__aeabi_dcmpeq>
   1bd6e:	2800      	cmp	r0, #0
   1bd70:	d1ad      	bne.n	1bcce <_strtod_l+0x57e>
   1bd72:	9b06      	ldr	r3, [sp, #24]
   1bd74:	9a04      	ldr	r2, [sp, #16]
   1bd76:	9300      	str	r3, [sp, #0]
   1bd78:	990a      	ldr	r1, [sp, #40]	; 0x28
   1bd7a:	462b      	mov	r3, r5
   1bd7c:	4640      	mov	r0, r8
   1bd7e:	f002 f9c1 	bl	1e104 <__s2b>
   1bd82:	9007      	str	r0, [sp, #28]
   1bd84:	2800      	cmp	r0, #0
   1bd86:	f43f af2e 	beq.w	1bbe6 <_strtod_l+0x496>
   1bd8a:	f1b9 0f00 	cmp.w	r9, #0
   1bd8e:	f1c9 0300 	rsb	r3, r9, #0
   1bd92:	bfa8      	it	ge
   1bd94:	2300      	movge	r3, #0
   1bd96:	930e      	str	r3, [sp, #56]	; 0x38
   1bd98:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
   1bd9c:	f04f 0900 	mov.w	r9, #0
   1bda0:	930f      	str	r3, [sp, #60]	; 0x3c
   1bda2:	f8cd 9010 	str.w	r9, [sp, #16]
   1bda6:	9b07      	ldr	r3, [sp, #28]
   1bda8:	4640      	mov	r0, r8
   1bdaa:	6859      	ldr	r1, [r3, #4]
   1bdac:	f002 f924 	bl	1dff8 <_Balloc>
   1bdb0:	9006      	str	r0, [sp, #24]
   1bdb2:	2800      	cmp	r0, #0
   1bdb4:	f43f af1f 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1bdb8:	9b07      	ldr	r3, [sp, #28]
   1bdba:	300c      	adds	r0, #12
   1bdbc:	691a      	ldr	r2, [r3, #16]
   1bdbe:	f103 010c 	add.w	r1, r3, #12
   1bdc2:	3202      	adds	r2, #2
   1bdc4:	0092      	lsls	r2, r2, #2
   1bdc6:	f7fd ff7a 	bl	19cbe <memcpy>
   1bdca:	ab1c      	add	r3, sp, #112	; 0x70
   1bdcc:	9301      	str	r3, [sp, #4]
   1bdce:	ab1b      	add	r3, sp, #108	; 0x6c
   1bdd0:	9300      	str	r3, [sp, #0]
   1bdd2:	4652      	mov	r2, sl
   1bdd4:	465b      	mov	r3, fp
   1bdd6:	4640      	mov	r0, r8
   1bdd8:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   1bddc:	f002 fc42 	bl	1e664 <__d2b>
   1bde0:	901a      	str	r0, [sp, #104]	; 0x68
   1bde2:	2800      	cmp	r0, #0
   1bde4:	f43f af07 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1bde8:	2101      	movs	r1, #1
   1bdea:	4640      	mov	r0, r8
   1bdec:	f002 fa16 	bl	1e21c <__i2b>
   1bdf0:	9004      	str	r0, [sp, #16]
   1bdf2:	4603      	mov	r3, r0
   1bdf4:	2800      	cmp	r0, #0
   1bdf6:	f43f aefe 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1bdfa:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   1bdfc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
   1bdfe:	2d00      	cmp	r5, #0
   1be00:	bfab      	itete	ge
   1be02:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
   1be04:	9b0f      	ldrlt	r3, [sp, #60]	; 0x3c
   1be06:	195e      	addge	r6, r3, r5
   1be08:	1b5c      	sublt	r4, r3, r5
   1be0a:	9b05      	ldr	r3, [sp, #20]
   1be0c:	bfa8      	it	ge
   1be0e:	9c0f      	ldrge	r4, [sp, #60]	; 0x3c
   1be10:	eba5 0503 	sub.w	r5, r5, r3
   1be14:	4415      	add	r5, r2
   1be16:	4b63      	ldr	r3, [pc, #396]	; (1bfa4 <_strtod_l+0x854>)
   1be18:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
   1be1c:	bfb8      	it	lt
   1be1e:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   1be20:	429d      	cmp	r5, r3
   1be22:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
   1be26:	f280 80a4 	bge.w	1bf72 <_strtod_l+0x822>
   1be2a:	1b5b      	subs	r3, r3, r5
   1be2c:	2b1f      	cmp	r3, #31
   1be2e:	eba2 0203 	sub.w	r2, r2, r3
   1be32:	f04f 0701 	mov.w	r7, #1
   1be36:	f300 8091 	bgt.w	1bf5c <_strtod_l+0x80c>
   1be3a:	2500      	movs	r5, #0
   1be3c:	fa07 f303 	lsl.w	r3, r7, r3
   1be40:	9314      	str	r3, [sp, #80]	; 0x50
   1be42:	18b7      	adds	r7, r6, r2
   1be44:	9b05      	ldr	r3, [sp, #20]
   1be46:	42be      	cmp	r6, r7
   1be48:	4414      	add	r4, r2
   1be4a:	441c      	add	r4, r3
   1be4c:	4633      	mov	r3, r6
   1be4e:	bfa8      	it	ge
   1be50:	463b      	movge	r3, r7
   1be52:	42a3      	cmp	r3, r4
   1be54:	bfa8      	it	ge
   1be56:	4623      	movge	r3, r4
   1be58:	2b00      	cmp	r3, #0
   1be5a:	bfc2      	ittt	gt
   1be5c:	1aff      	subgt	r7, r7, r3
   1be5e:	1ae4      	subgt	r4, r4, r3
   1be60:	1af6      	subgt	r6, r6, r3
   1be62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1be64:	b1bb      	cbz	r3, 1be96 <_strtod_l+0x746>
   1be66:	461a      	mov	r2, r3
   1be68:	9904      	ldr	r1, [sp, #16]
   1be6a:	4640      	mov	r0, r8
   1be6c:	f002 fa6c 	bl	1e348 <__pow5mult>
   1be70:	9004      	str	r0, [sp, #16]
   1be72:	2800      	cmp	r0, #0
   1be74:	f43f aebf 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1be78:	4601      	mov	r1, r0
   1be7a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1be7c:	4640      	mov	r0, r8
   1be7e:	f002 f9d6 	bl	1e22e <__multiply>
   1be82:	9008      	str	r0, [sp, #32]
   1be84:	2800      	cmp	r0, #0
   1be86:	f43f aeb6 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1be8a:	991a      	ldr	r1, [sp, #104]	; 0x68
   1be8c:	4640      	mov	r0, r8
   1be8e:	f002 f8e7 	bl	1e060 <_Bfree>
   1be92:	9b08      	ldr	r3, [sp, #32]
   1be94:	931a      	str	r3, [sp, #104]	; 0x68
   1be96:	2f00      	cmp	r7, #0
   1be98:	dc6f      	bgt.n	1bf7a <_strtod_l+0x82a>
   1be9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1be9c:	2b00      	cmp	r3, #0
   1be9e:	d175      	bne.n	1bf8c <_strtod_l+0x83c>
   1bea0:	2c00      	cmp	r4, #0
   1bea2:	dd08      	ble.n	1beb6 <_strtod_l+0x766>
   1bea4:	4622      	mov	r2, r4
   1bea6:	9906      	ldr	r1, [sp, #24]
   1bea8:	4640      	mov	r0, r8
   1beaa:	f002 fa9b 	bl	1e3e4 <__lshift>
   1beae:	9006      	str	r0, [sp, #24]
   1beb0:	2800      	cmp	r0, #0
   1beb2:	f43f aea0 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1beb6:	2e00      	cmp	r6, #0
   1beb8:	dd08      	ble.n	1becc <_strtod_l+0x77c>
   1beba:	4632      	mov	r2, r6
   1bebc:	9904      	ldr	r1, [sp, #16]
   1bebe:	4640      	mov	r0, r8
   1bec0:	f002 fa90 	bl	1e3e4 <__lshift>
   1bec4:	9004      	str	r0, [sp, #16]
   1bec6:	2800      	cmp	r0, #0
   1bec8:	f43f ae95 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1becc:	9a06      	ldr	r2, [sp, #24]
   1bece:	991a      	ldr	r1, [sp, #104]	; 0x68
   1bed0:	4640      	mov	r0, r8
   1bed2:	f002 faf2 	bl	1e4ba <__mdiff>
   1bed6:	4681      	mov	r9, r0
   1bed8:	2800      	cmp	r0, #0
   1beda:	f43f ae8c 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1bede:	2400      	movs	r4, #0
   1bee0:	68c3      	ldr	r3, [r0, #12]
   1bee2:	9904      	ldr	r1, [sp, #16]
   1bee4:	60c4      	str	r4, [r0, #12]
   1bee6:	9308      	str	r3, [sp, #32]
   1bee8:	f002 facd 	bl	1e486 <__mcmp>
   1beec:	42a0      	cmp	r0, r4
   1beee:	da5b      	bge.n	1bfa8 <_strtod_l+0x858>
   1bef0:	9b08      	ldr	r3, [sp, #32]
   1bef2:	b9f3      	cbnz	r3, 1bf32 <_strtod_l+0x7e2>
   1bef4:	f1ba 0f00 	cmp.w	sl, #0
   1bef8:	d11b      	bne.n	1bf32 <_strtod_l+0x7e2>
   1befa:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1befe:	b9c3      	cbnz	r3, 1bf32 <_strtod_l+0x7e2>
   1bf00:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1bf04:	0d1b      	lsrs	r3, r3, #20
   1bf06:	051b      	lsls	r3, r3, #20
   1bf08:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1bf0c:	d911      	bls.n	1bf32 <_strtod_l+0x7e2>
   1bf0e:	f8d9 3014 	ldr.w	r3, [r9, #20]
   1bf12:	b91b      	cbnz	r3, 1bf1c <_strtod_l+0x7cc>
   1bf14:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1bf18:	2b01      	cmp	r3, #1
   1bf1a:	dd0a      	ble.n	1bf32 <_strtod_l+0x7e2>
   1bf1c:	4649      	mov	r1, r9
   1bf1e:	2201      	movs	r2, #1
   1bf20:	4640      	mov	r0, r8
   1bf22:	f002 fa5f 	bl	1e3e4 <__lshift>
   1bf26:	9904      	ldr	r1, [sp, #16]
   1bf28:	4681      	mov	r9, r0
   1bf2a:	f002 faac 	bl	1e486 <__mcmp>
   1bf2e:	2800      	cmp	r0, #0
   1bf30:	dc6b      	bgt.n	1c00a <_strtod_l+0x8ba>
   1bf32:	9b05      	ldr	r3, [sp, #20]
   1bf34:	2b00      	cmp	r3, #0
   1bf36:	d175      	bne.n	1c024 <_strtod_l+0x8d4>
   1bf38:	e668      	b.n	1bc0c <_strtod_l+0x4bc>
   1bf3a:	07e2      	lsls	r2, r4, #31
   1bf3c:	d504      	bpl.n	1bf48 <_strtod_l+0x7f8>
   1bf3e:	e9d6 2300 	ldrd	r2, r3, [r6]
   1bf42:	f003 fd17 	bl	1f974 <__aeabi_dmul>
   1bf46:	2301      	movs	r3, #1
   1bf48:	1064      	asrs	r4, r4, #1
   1bf4a:	3608      	adds	r6, #8
   1bf4c:	e6e9      	b.n	1bd22 <_strtod_l+0x5d2>
   1bf4e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1bf52:	fa02 f303 	lsl.w	r3, r2, r3
   1bf56:	ea03 0a0a 	and.w	sl, r3, sl
   1bf5a:	e702      	b.n	1bd62 <_strtod_l+0x612>
   1bf5c:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
   1bf60:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
   1bf64:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
   1bf68:	35e2      	adds	r5, #226	; 0xe2
   1bf6a:	fa07 f505 	lsl.w	r5, r7, r5
   1bf6e:	9714      	str	r7, [sp, #80]	; 0x50
   1bf70:	e767      	b.n	1be42 <_strtod_l+0x6f2>
   1bf72:	2301      	movs	r3, #1
   1bf74:	2500      	movs	r5, #0
   1bf76:	9314      	str	r3, [sp, #80]	; 0x50
   1bf78:	e763      	b.n	1be42 <_strtod_l+0x6f2>
   1bf7a:	463a      	mov	r2, r7
   1bf7c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1bf7e:	4640      	mov	r0, r8
   1bf80:	f002 fa30 	bl	1e3e4 <__lshift>
   1bf84:	901a      	str	r0, [sp, #104]	; 0x68
   1bf86:	2800      	cmp	r0, #0
   1bf88:	d187      	bne.n	1be9a <_strtod_l+0x74a>
   1bf8a:	e634      	b.n	1bbf6 <_strtod_l+0x4a6>
   1bf8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1bf8e:	9906      	ldr	r1, [sp, #24]
   1bf90:	4640      	mov	r0, r8
   1bf92:	f002 f9d9 	bl	1e348 <__pow5mult>
   1bf96:	9006      	str	r0, [sp, #24]
   1bf98:	2800      	cmp	r0, #0
   1bf9a:	d181      	bne.n	1bea0 <_strtod_l+0x750>
   1bf9c:	e62b      	b.n	1bbf6 <_strtod_l+0x4a6>
   1bf9e:	bf00      	nop
   1bfa0:	000211f0 	.word	0x000211f0
   1bfa4:	fffffc02 	.word	0xfffffc02
   1bfa8:	f040 8086 	bne.w	1c0b8 <_strtod_l+0x968>
   1bfac:	9a08      	ldr	r2, [sp, #32]
   1bfae:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1bfb2:	b332      	cbz	r2, 1c002 <_strtod_l+0x8b2>
   1bfb4:	4aac      	ldr	r2, [pc, #688]	; (1c268 <_strtod_l+0xb18>)
   1bfb6:	4659      	mov	r1, fp
   1bfb8:	4293      	cmp	r3, r2
   1bfba:	d152      	bne.n	1c062 <_strtod_l+0x912>
   1bfbc:	9b05      	ldr	r3, [sp, #20]
   1bfbe:	4650      	mov	r0, sl
   1bfc0:	b1d3      	cbz	r3, 1bff8 <_strtod_l+0x8a8>
   1bfc2:	4aaa      	ldr	r2, [pc, #680]	; (1c26c <_strtod_l+0xb1c>)
   1bfc4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1bfc8:	400a      	ands	r2, r1
   1bfca:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
   1bfce:	d816      	bhi.n	1bffe <_strtod_l+0x8ae>
   1bfd0:	0d12      	lsrs	r2, r2, #20
   1bfd2:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
   1bfd6:	fa04 f303 	lsl.w	r3, r4, r3
   1bfda:	4283      	cmp	r3, r0
   1bfdc:	d141      	bne.n	1c062 <_strtod_l+0x912>
   1bfde:	4aa4      	ldr	r2, [pc, #656]	; (1c270 <_strtod_l+0xb20>)
   1bfe0:	4291      	cmp	r1, r2
   1bfe2:	d102      	bne.n	1bfea <_strtod_l+0x89a>
   1bfe4:	3301      	adds	r3, #1
   1bfe6:	f43f ae06 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1bfea:	4ba0      	ldr	r3, [pc, #640]	; (1c26c <_strtod_l+0xb1c>)
   1bfec:	f04f 0a00 	mov.w	sl, #0
   1bff0:	400b      	ands	r3, r1
   1bff2:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   1bff6:	e79c      	b.n	1bf32 <_strtod_l+0x7e2>
   1bff8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1bffc:	e7ed      	b.n	1bfda <_strtod_l+0x88a>
   1bffe:	4623      	mov	r3, r4
   1c000:	e7eb      	b.n	1bfda <_strtod_l+0x88a>
   1c002:	bb73      	cbnz	r3, 1c062 <_strtod_l+0x912>
   1c004:	f1ba 0f00 	cmp.w	sl, #0
   1c008:	d12b      	bne.n	1c062 <_strtod_l+0x912>
   1c00a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1c00e:	9a05      	ldr	r2, [sp, #20]
   1c010:	0d1b      	lsrs	r3, r3, #20
   1c012:	051b      	lsls	r3, r3, #20
   1c014:	b1e2      	cbz	r2, 1c050 <_strtod_l+0x900>
   1c016:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1c01a:	dc19      	bgt.n	1c050 <_strtod_l+0x900>
   1c01c:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   1c020:	f77f ae5d 	ble.w	1bcde <_strtod_l+0x58e>
   1c024:	4b93      	ldr	r3, [pc, #588]	; (1c274 <_strtod_l+0xb24>)
   1c026:	4650      	mov	r0, sl
   1c028:	930d      	str	r3, [sp, #52]	; 0x34
   1c02a:	2300      	movs	r3, #0
   1c02c:	930c      	str	r3, [sp, #48]	; 0x30
   1c02e:	4659      	mov	r1, fp
   1c030:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   1c034:	f003 fc9e 	bl	1f974 <__aeabi_dmul>
   1c038:	4682      	mov	sl, r0
   1c03a:	468b      	mov	fp, r1
   1c03c:	2900      	cmp	r1, #0
   1c03e:	f47f ade5 	bne.w	1bc0c <_strtod_l+0x4bc>
   1c042:	2800      	cmp	r0, #0
   1c044:	f47f ade2 	bne.w	1bc0c <_strtod_l+0x4bc>
   1c048:	2322      	movs	r3, #34	; 0x22
   1c04a:	f8c8 3000 	str.w	r3, [r8]
   1c04e:	e5dd      	b.n	1bc0c <_strtod_l+0x4bc>
   1c050:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   1c054:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   1c058:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1c05c:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   1c060:	e767      	b.n	1bf32 <_strtod_l+0x7e2>
   1c062:	b19d      	cbz	r5, 1c08c <_strtod_l+0x93c>
   1c064:	ea15 0f0b 	tst.w	r5, fp
   1c068:	f43f af63 	beq.w	1bf32 <_strtod_l+0x7e2>
   1c06c:	9b08      	ldr	r3, [sp, #32]
   1c06e:	9a05      	ldr	r2, [sp, #20]
   1c070:	4650      	mov	r0, sl
   1c072:	4659      	mov	r1, fp
   1c074:	b173      	cbz	r3, 1c094 <_strtod_l+0x944>
   1c076:	f7ff fb47 	bl	1b708 <sulp>
   1c07a:	4602      	mov	r2, r0
   1c07c:	460b      	mov	r3, r1
   1c07e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c082:	f7fc fd5f 	bl	18b44 <__adddf3>
   1c086:	4682      	mov	sl, r0
   1c088:	468b      	mov	fp, r1
   1c08a:	e752      	b.n	1bf32 <_strtod_l+0x7e2>
   1c08c:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1c08e:	ea13 0f0a 	tst.w	r3, sl
   1c092:	e7e9      	b.n	1c068 <_strtod_l+0x918>
   1c094:	f7ff fb38 	bl	1b708 <sulp>
   1c098:	4602      	mov	r2, r0
   1c09a:	460b      	mov	r3, r1
   1c09c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c0a0:	f7fc fd4e 	bl	18b40 <__aeabi_dsub>
   1c0a4:	2200      	movs	r2, #0
   1c0a6:	2300      	movs	r3, #0
   1c0a8:	4682      	mov	sl, r0
   1c0aa:	468b      	mov	fp, r1
   1c0ac:	f003 feca 	bl	1fe44 <__aeabi_dcmpeq>
   1c0b0:	2800      	cmp	r0, #0
   1c0b2:	f47f ae14 	bne.w	1bcde <_strtod_l+0x58e>
   1c0b6:	e73c      	b.n	1bf32 <_strtod_l+0x7e2>
   1c0b8:	9904      	ldr	r1, [sp, #16]
   1c0ba:	4648      	mov	r0, r9
   1c0bc:	f002 fb21 	bl	1e702 <__ratio>
   1c0c0:	2200      	movs	r2, #0
   1c0c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1c0c6:	4606      	mov	r6, r0
   1c0c8:	460f      	mov	r7, r1
   1c0ca:	f003 fecf 	bl	1fe6c <__aeabi_dcmple>
   1c0ce:	2800      	cmp	r0, #0
   1c0d0:	d070      	beq.n	1c1b4 <_strtod_l+0xa64>
   1c0d2:	9b08      	ldr	r3, [sp, #32]
   1c0d4:	2b00      	cmp	r3, #0
   1c0d6:	d043      	beq.n	1c160 <_strtod_l+0xa10>
   1c0d8:	2600      	movs	r6, #0
   1c0da:	4f67      	ldr	r7, [pc, #412]	; (1c278 <_strtod_l+0xb28>)
   1c0dc:	4d66      	ldr	r5, [pc, #408]	; (1c278 <_strtod_l+0xb28>)
   1c0de:	4b63      	ldr	r3, [pc, #396]	; (1c26c <_strtod_l+0xb1c>)
   1c0e0:	ea0b 0303 	and.w	r3, fp, r3
   1c0e4:	9314      	str	r3, [sp, #80]	; 0x50
   1c0e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1c0e8:	4b64      	ldr	r3, [pc, #400]	; (1c27c <_strtod_l+0xb2c>)
   1c0ea:	429a      	cmp	r2, r3
   1c0ec:	f040 80ce 	bne.w	1c28c <_strtod_l+0xb3c>
   1c0f0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c0f4:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1c0f8:	4650      	mov	r0, sl
   1c0fa:	4659      	mov	r1, fp
   1c0fc:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   1c100:	f002 fa3a 	bl	1e578 <__ulp>
   1c104:	4602      	mov	r2, r0
   1c106:	460b      	mov	r3, r1
   1c108:	4630      	mov	r0, r6
   1c10a:	4639      	mov	r1, r7
   1c10c:	f003 fc32 	bl	1f974 <__aeabi_dmul>
   1c110:	4652      	mov	r2, sl
   1c112:	465b      	mov	r3, fp
   1c114:	f7fc fd16 	bl	18b44 <__adddf3>
   1c118:	4a54      	ldr	r2, [pc, #336]	; (1c26c <_strtod_l+0xb1c>)
   1c11a:	4b59      	ldr	r3, [pc, #356]	; (1c280 <_strtod_l+0xb30>)
   1c11c:	400a      	ands	r2, r1
   1c11e:	429a      	cmp	r2, r3
   1c120:	4682      	mov	sl, r0
   1c122:	d95d      	bls.n	1c1e0 <_strtod_l+0xa90>
   1c124:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1c126:	f103 7354 	add.w	r3, r3, #55574528	; 0x3500000
   1c12a:	429a      	cmp	r2, r3
   1c12c:	d103      	bne.n	1c136 <_strtod_l+0x9e6>
   1c12e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1c130:	3301      	adds	r3, #1
   1c132:	f43f ad60 	beq.w	1bbf6 <_strtod_l+0x4a6>
   1c136:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
   1c13a:	f8df b134 	ldr.w	fp, [pc, #308]	; 1c270 <_strtod_l+0xb20>
   1c13e:	991a      	ldr	r1, [sp, #104]	; 0x68
   1c140:	4640      	mov	r0, r8
   1c142:	f001 ff8d 	bl	1e060 <_Bfree>
   1c146:	9906      	ldr	r1, [sp, #24]
   1c148:	4640      	mov	r0, r8
   1c14a:	f001 ff89 	bl	1e060 <_Bfree>
   1c14e:	9904      	ldr	r1, [sp, #16]
   1c150:	4640      	mov	r0, r8
   1c152:	f001 ff85 	bl	1e060 <_Bfree>
   1c156:	4649      	mov	r1, r9
   1c158:	4640      	mov	r0, r8
   1c15a:	f001 ff81 	bl	1e060 <_Bfree>
   1c15e:	e622      	b.n	1bda6 <_strtod_l+0x656>
   1c160:	f1ba 0f00 	cmp.w	sl, #0
   1c164:	d118      	bne.n	1c198 <_strtod_l+0xa48>
   1c166:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1c16a:	b9e3      	cbnz	r3, 1c1a6 <_strtod_l+0xa56>
   1c16c:	2200      	movs	r2, #0
   1c16e:	4b42      	ldr	r3, [pc, #264]	; (1c278 <_strtod_l+0xb28>)
   1c170:	4630      	mov	r0, r6
   1c172:	4639      	mov	r1, r7
   1c174:	f003 fe70 	bl	1fe58 <__aeabi_dcmplt>
   1c178:	b9c8      	cbnz	r0, 1c1ae <_strtod_l+0xa5e>
   1c17a:	2200      	movs	r2, #0
   1c17c:	4b41      	ldr	r3, [pc, #260]	; (1c284 <_strtod_l+0xb34>)
   1c17e:	4630      	mov	r0, r6
   1c180:	4639      	mov	r1, r7
   1c182:	f003 fbf7 	bl	1f974 <__aeabi_dmul>
   1c186:	4604      	mov	r4, r0
   1c188:	460d      	mov	r5, r1
   1c18a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1c18e:	9416      	str	r4, [sp, #88]	; 0x58
   1c190:	9317      	str	r3, [sp, #92]	; 0x5c
   1c192:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   1c196:	e7a2      	b.n	1c0de <_strtod_l+0x98e>
   1c198:	f1ba 0f01 	cmp.w	sl, #1
   1c19c:	d103      	bne.n	1c1a6 <_strtod_l+0xa56>
   1c19e:	f1bb 0f00 	cmp.w	fp, #0
   1c1a2:	f43f ad9c 	beq.w	1bcde <_strtod_l+0x58e>
   1c1a6:	2600      	movs	r6, #0
   1c1a8:	4f37      	ldr	r7, [pc, #220]	; (1c288 <_strtod_l+0xb38>)
   1c1aa:	2400      	movs	r4, #0
   1c1ac:	e796      	b.n	1c0dc <_strtod_l+0x98c>
   1c1ae:	9c08      	ldr	r4, [sp, #32]
   1c1b0:	4d34      	ldr	r5, [pc, #208]	; (1c284 <_strtod_l+0xb34>)
   1c1b2:	e7ea      	b.n	1c18a <_strtod_l+0xa3a>
   1c1b4:	4b33      	ldr	r3, [pc, #204]	; (1c284 <_strtod_l+0xb34>)
   1c1b6:	2200      	movs	r2, #0
   1c1b8:	4630      	mov	r0, r6
   1c1ba:	4639      	mov	r1, r7
   1c1bc:	f003 fbda 	bl	1f974 <__aeabi_dmul>
   1c1c0:	9b08      	ldr	r3, [sp, #32]
   1c1c2:	4604      	mov	r4, r0
   1c1c4:	460d      	mov	r5, r1
   1c1c6:	b933      	cbnz	r3, 1c1d6 <_strtod_l+0xa86>
   1c1c8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1c1cc:	9010      	str	r0, [sp, #64]	; 0x40
   1c1ce:	9311      	str	r3, [sp, #68]	; 0x44
   1c1d0:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1c1d4:	e783      	b.n	1c0de <_strtod_l+0x98e>
   1c1d6:	4602      	mov	r2, r0
   1c1d8:	460b      	mov	r3, r1
   1c1da:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   1c1de:	e7f7      	b.n	1c1d0 <_strtod_l+0xa80>
   1c1e0:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   1c1e4:	9b05      	ldr	r3, [sp, #20]
   1c1e6:	2b00      	cmp	r3, #0
   1c1e8:	d1a9      	bne.n	1c13e <_strtod_l+0x9ee>
   1c1ea:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1c1ee:	0d1b      	lsrs	r3, r3, #20
   1c1f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1c1f2:	051b      	lsls	r3, r3, #20
   1c1f4:	429a      	cmp	r2, r3
   1c1f6:	465e      	mov	r6, fp
   1c1f8:	d1a1      	bne.n	1c13e <_strtod_l+0x9ee>
   1c1fa:	4629      	mov	r1, r5
   1c1fc:	4620      	mov	r0, r4
   1c1fe:	f003 fe69 	bl	1fed4 <__aeabi_d2iz>
   1c202:	f7fc fdeb 	bl	18ddc <__aeabi_i2d>
   1c206:	460b      	mov	r3, r1
   1c208:	4602      	mov	r2, r0
   1c20a:	4629      	mov	r1, r5
   1c20c:	4620      	mov	r0, r4
   1c20e:	f7fc fc97 	bl	18b40 <__aeabi_dsub>
   1c212:	9b08      	ldr	r3, [sp, #32]
   1c214:	4604      	mov	r4, r0
   1c216:	460d      	mov	r5, r1
   1c218:	b933      	cbnz	r3, 1c228 <_strtod_l+0xad8>
   1c21a:	f1ba 0f00 	cmp.w	sl, #0
   1c21e:	d103      	bne.n	1c228 <_strtod_l+0xad8>
   1c220:	f3cb 0613 	ubfx	r6, fp, #0, #20
   1c224:	2e00      	cmp	r6, #0
   1c226:	d06c      	beq.n	1c302 <_strtod_l+0xbb2>
   1c228:	a30b      	add	r3, pc, #44	; (adr r3, 1c258 <_strtod_l+0xb08>)
   1c22a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c22e:	4620      	mov	r0, r4
   1c230:	4629      	mov	r1, r5
   1c232:	f003 fe11 	bl	1fe58 <__aeabi_dcmplt>
   1c236:	2800      	cmp	r0, #0
   1c238:	f47f ace8 	bne.w	1bc0c <_strtod_l+0x4bc>
   1c23c:	a308      	add	r3, pc, #32	; (adr r3, 1c260 <_strtod_l+0xb10>)
   1c23e:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c242:	4620      	mov	r0, r4
   1c244:	4629      	mov	r1, r5
   1c246:	f003 fe25 	bl	1fe94 <__aeabi_dcmpgt>
   1c24a:	2800      	cmp	r0, #0
   1c24c:	f43f af77 	beq.w	1c13e <_strtod_l+0x9ee>
   1c250:	e4dc      	b.n	1bc0c <_strtod_l+0x4bc>
   1c252:	bf00      	nop
   1c254:	f3af 8000 	nop.w
   1c258:	94a03595 	.word	0x94a03595
   1c25c:	3fdfffff 	.word	0x3fdfffff
   1c260:	35afe535 	.word	0x35afe535
   1c264:	3fe00000 	.word	0x3fe00000
   1c268:	000fffff 	.word	0x000fffff
   1c26c:	7ff00000 	.word	0x7ff00000
   1c270:	7fefffff 	.word	0x7fefffff
   1c274:	39500000 	.word	0x39500000
   1c278:	3ff00000 	.word	0x3ff00000
   1c27c:	7fe00000 	.word	0x7fe00000
   1c280:	7c9fffff 	.word	0x7c9fffff
   1c284:	3fe00000 	.word	0x3fe00000
   1c288:	bff00000 	.word	0xbff00000
   1c28c:	9b05      	ldr	r3, [sp, #20]
   1c28e:	b313      	cbz	r3, 1c2d6 <_strtod_l+0xb86>
   1c290:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1c292:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1c296:	d81e      	bhi.n	1c2d6 <_strtod_l+0xb86>
   1c298:	a325      	add	r3, pc, #148	; (adr r3, 1c330 <_strtod_l+0xbe0>)
   1c29a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c29e:	4620      	mov	r0, r4
   1c2a0:	4629      	mov	r1, r5
   1c2a2:	f003 fde3 	bl	1fe6c <__aeabi_dcmple>
   1c2a6:	b190      	cbz	r0, 1c2ce <_strtod_l+0xb7e>
   1c2a8:	4629      	mov	r1, r5
   1c2aa:	4620      	mov	r0, r4
   1c2ac:	f7fc fdfc 	bl	18ea8 <__aeabi_d2uiz>
   1c2b0:	2800      	cmp	r0, #0
   1c2b2:	bf08      	it	eq
   1c2b4:	2001      	moveq	r0, #1
   1c2b6:	f7fc fd81 	bl	18dbc <__aeabi_ui2d>
   1c2ba:	9b08      	ldr	r3, [sp, #32]
   1c2bc:	4604      	mov	r4, r0
   1c2be:	460d      	mov	r5, r1
   1c2c0:	b9d3      	cbnz	r3, 1c2f8 <_strtod_l+0xba8>
   1c2c2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   1c2c6:	9012      	str	r0, [sp, #72]	; 0x48
   1c2c8:	9313      	str	r3, [sp, #76]	; 0x4c
   1c2ca:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   1c2ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1c2d0:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   1c2d4:	1a9f      	subs	r7, r3, r2
   1c2d6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1c2da:	f002 f94d 	bl	1e578 <__ulp>
   1c2de:	4602      	mov	r2, r0
   1c2e0:	460b      	mov	r3, r1
   1c2e2:	4630      	mov	r0, r6
   1c2e4:	4639      	mov	r1, r7
   1c2e6:	f003 fb45 	bl	1f974 <__aeabi_dmul>
   1c2ea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1c2ee:	f7fc fc29 	bl	18b44 <__adddf3>
   1c2f2:	4682      	mov	sl, r0
   1c2f4:	468b      	mov	fp, r1
   1c2f6:	e775      	b.n	1c1e4 <_strtod_l+0xa94>
   1c2f8:	4602      	mov	r2, r0
   1c2fa:	460b      	mov	r3, r1
   1c2fc:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   1c300:	e7e3      	b.n	1c2ca <_strtod_l+0xb7a>
   1c302:	a30d      	add	r3, pc, #52	; (adr r3, 1c338 <_strtod_l+0xbe8>)
   1c304:	e9d3 2300 	ldrd	r2, r3, [r3]
   1c308:	f003 fda6 	bl	1fe58 <__aeabi_dcmplt>
   1c30c:	e79d      	b.n	1c24a <_strtod_l+0xafa>
   1c30e:	2300      	movs	r3, #0
   1c310:	9309      	str	r3, [sp, #36]	; 0x24
   1c312:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1c314:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1c316:	6013      	str	r3, [r2, #0]
   1c318:	f7ff ba5e 	b.w	1b7d8 <_strtod_l+0x88>
   1c31c:	2b65      	cmp	r3, #101	; 0x65
   1c31e:	f04f 0200 	mov.w	r2, #0
   1c322:	f43f abae 	beq.w	1ba82 <_strtod_l+0x332>
   1c326:	4615      	mov	r5, r2
   1c328:	2101      	movs	r1, #1
   1c32a:	f7ff bacd 	b.w	1b8c8 <_strtod_l+0x178>
   1c32e:	bf00      	nop
   1c330:	ffc00000 	.word	0xffc00000
   1c334:	41dfffff 	.word	0x41dfffff
   1c338:	94a03595 	.word	0x94a03595
   1c33c:	3fcfffff 	.word	0x3fcfffff

0001c340 <_strtod_r>:
_strtod_r():
   1c340:	4b05      	ldr	r3, [pc, #20]	; (1c358 <_strtod_r+0x18>)
   1c342:	b410      	push	{r4}
   1c344:	681b      	ldr	r3, [r3, #0]
   1c346:	4c05      	ldr	r4, [pc, #20]	; (1c35c <_strtod_r+0x1c>)
   1c348:	6a1b      	ldr	r3, [r3, #32]
   1c34a:	2b00      	cmp	r3, #0
   1c34c:	bf08      	it	eq
   1c34e:	4623      	moveq	r3, r4
   1c350:	bc10      	pop	{r4}
   1c352:	f7ff b9fd 	b.w	1b750 <_strtod_l>
   1c356:	bf00      	nop
   1c358:	2007c0e0 	.word	0x2007c0e0
   1c35c:	2007c144 	.word	0x2007c144

0001c360 <_strtol_l.isra.0>:
_strtol_l.isra.0():
   1c360:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c364:	4680      	mov	r8, r0
   1c366:	4689      	mov	r9, r1
   1c368:	4692      	mov	sl, r2
   1c36a:	461f      	mov	r7, r3
   1c36c:	468b      	mov	fp, r1
   1c36e:	465d      	mov	r5, fp
   1c370:	980a      	ldr	r0, [sp, #40]	; 0x28
   1c372:	f815 4b01 	ldrb.w	r4, [r5], #1
   1c376:	f7fd fbed 	bl	19b54 <__locale_ctype_ptr_l>
   1c37a:	4420      	add	r0, r4
   1c37c:	7846      	ldrb	r6, [r0, #1]
   1c37e:	f016 0608 	ands.w	r6, r6, #8
   1c382:	d10b      	bne.n	1c39c <_strtol_l.isra.0+0x3c>
   1c384:	2c2d      	cmp	r4, #45	; 0x2d
   1c386:	d10b      	bne.n	1c3a0 <_strtol_l.isra.0+0x40>
   1c388:	2601      	movs	r6, #1
   1c38a:	782c      	ldrb	r4, [r5, #0]
   1c38c:	f10b 0502 	add.w	r5, fp, #2
   1c390:	b167      	cbz	r7, 1c3ac <_strtol_l.isra.0+0x4c>
   1c392:	2f10      	cmp	r7, #16
   1c394:	d114      	bne.n	1c3c0 <_strtol_l.isra.0+0x60>
   1c396:	2c30      	cmp	r4, #48	; 0x30
   1c398:	d00a      	beq.n	1c3b0 <_strtol_l.isra.0+0x50>
   1c39a:	e011      	b.n	1c3c0 <_strtol_l.isra.0+0x60>
   1c39c:	46ab      	mov	fp, r5
   1c39e:	e7e6      	b.n	1c36e <_strtol_l.isra.0+0xe>
   1c3a0:	2c2b      	cmp	r4, #43	; 0x2b
   1c3a2:	bf04      	itt	eq
   1c3a4:	782c      	ldrbeq	r4, [r5, #0]
   1c3a6:	f10b 0502 	addeq.w	r5, fp, #2
   1c3aa:	e7f1      	b.n	1c390 <_strtol_l.isra.0+0x30>
   1c3ac:	2c30      	cmp	r4, #48	; 0x30
   1c3ae:	d127      	bne.n	1c400 <_strtol_l.isra.0+0xa0>
   1c3b0:	782b      	ldrb	r3, [r5, #0]
   1c3b2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
   1c3b6:	2b58      	cmp	r3, #88	; 0x58
   1c3b8:	d14b      	bne.n	1c452 <_strtol_l.isra.0+0xf2>
   1c3ba:	2710      	movs	r7, #16
   1c3bc:	786c      	ldrb	r4, [r5, #1]
   1c3be:	3502      	adds	r5, #2
   1c3c0:	2e00      	cmp	r6, #0
   1c3c2:	bf0c      	ite	eq
   1c3c4:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
   1c3c8:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
   1c3cc:	2200      	movs	r2, #0
   1c3ce:	fbb1 fef7 	udiv	lr, r1, r7
   1c3d2:	4610      	mov	r0, r2
   1c3d4:	fb07 1c1e 	mls	ip, r7, lr, r1
   1c3d8:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
   1c3dc:	2b09      	cmp	r3, #9
   1c3de:	d811      	bhi.n	1c404 <_strtol_l.isra.0+0xa4>
   1c3e0:	461c      	mov	r4, r3
   1c3e2:	42a7      	cmp	r7, r4
   1c3e4:	dd1d      	ble.n	1c422 <_strtol_l.isra.0+0xc2>
   1c3e6:	1c53      	adds	r3, r2, #1
   1c3e8:	d007      	beq.n	1c3fa <_strtol_l.isra.0+0x9a>
   1c3ea:	4586      	cmp	lr, r0
   1c3ec:	d316      	bcc.n	1c41c <_strtol_l.isra.0+0xbc>
   1c3ee:	d101      	bne.n	1c3f4 <_strtol_l.isra.0+0x94>
   1c3f0:	45a4      	cmp	ip, r4
   1c3f2:	db13      	blt.n	1c41c <_strtol_l.isra.0+0xbc>
   1c3f4:	2201      	movs	r2, #1
   1c3f6:	fb00 4007 	mla	r0, r0, r7, r4
   1c3fa:	f815 4b01 	ldrb.w	r4, [r5], #1
   1c3fe:	e7eb      	b.n	1c3d8 <_strtol_l.isra.0+0x78>
   1c400:	270a      	movs	r7, #10
   1c402:	e7dd      	b.n	1c3c0 <_strtol_l.isra.0+0x60>
   1c404:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
   1c408:	2b19      	cmp	r3, #25
   1c40a:	d801      	bhi.n	1c410 <_strtol_l.isra.0+0xb0>
   1c40c:	3c37      	subs	r4, #55	; 0x37
   1c40e:	e7e8      	b.n	1c3e2 <_strtol_l.isra.0+0x82>
   1c410:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
   1c414:	2b19      	cmp	r3, #25
   1c416:	d804      	bhi.n	1c422 <_strtol_l.isra.0+0xc2>
   1c418:	3c57      	subs	r4, #87	; 0x57
   1c41a:	e7e2      	b.n	1c3e2 <_strtol_l.isra.0+0x82>
   1c41c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1c420:	e7eb      	b.n	1c3fa <_strtol_l.isra.0+0x9a>
   1c422:	1c53      	adds	r3, r2, #1
   1c424:	d108      	bne.n	1c438 <_strtol_l.isra.0+0xd8>
   1c426:	2322      	movs	r3, #34	; 0x22
   1c428:	4608      	mov	r0, r1
   1c42a:	f8c8 3000 	str.w	r3, [r8]
   1c42e:	f1ba 0f00 	cmp.w	sl, #0
   1c432:	d107      	bne.n	1c444 <_strtol_l.isra.0+0xe4>
   1c434:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c438:	b106      	cbz	r6, 1c43c <_strtol_l.isra.0+0xdc>
   1c43a:	4240      	negs	r0, r0
   1c43c:	f1ba 0f00 	cmp.w	sl, #0
   1c440:	d00c      	beq.n	1c45c <_strtol_l.isra.0+0xfc>
   1c442:	b122      	cbz	r2, 1c44e <_strtol_l.isra.0+0xee>
   1c444:	3d01      	subs	r5, #1
   1c446:	f8ca 5000 	str.w	r5, [sl]
   1c44a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c44e:	464d      	mov	r5, r9
   1c450:	e7f9      	b.n	1c446 <_strtol_l.isra.0+0xe6>
   1c452:	2430      	movs	r4, #48	; 0x30
   1c454:	2f00      	cmp	r7, #0
   1c456:	d1b3      	bne.n	1c3c0 <_strtol_l.isra.0+0x60>
   1c458:	2708      	movs	r7, #8
   1c45a:	e7b1      	b.n	1c3c0 <_strtol_l.isra.0+0x60>
   1c45c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c460 <_strtol_r>:
_strtol_r():
   1c460:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1c462:	4c06      	ldr	r4, [pc, #24]	; (1c47c <_strtol_r+0x1c>)
   1c464:	4d06      	ldr	r5, [pc, #24]	; (1c480 <_strtol_r+0x20>)
   1c466:	6824      	ldr	r4, [r4, #0]
   1c468:	6a24      	ldr	r4, [r4, #32]
   1c46a:	2c00      	cmp	r4, #0
   1c46c:	bf08      	it	eq
   1c46e:	462c      	moveq	r4, r5
   1c470:	9400      	str	r4, [sp, #0]
   1c472:	f7ff ff75 	bl	1c360 <_strtol_l.isra.0>
   1c476:	b003      	add	sp, #12
   1c478:	bd30      	pop	{r4, r5, pc}
   1c47a:	bf00      	nop
   1c47c:	2007c0e0 	.word	0x2007c0e0
   1c480:	2007c144 	.word	0x2007c144

0001c484 <strtol>:
strtol():
   1c484:	4b08      	ldr	r3, [pc, #32]	; (1c4a8 <strtol+0x24>)
   1c486:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1c488:	681c      	ldr	r4, [r3, #0]
   1c48a:	4d08      	ldr	r5, [pc, #32]	; (1c4ac <strtol+0x28>)
   1c48c:	6a23      	ldr	r3, [r4, #32]
   1c48e:	2b00      	cmp	r3, #0
   1c490:	bf08      	it	eq
   1c492:	462b      	moveq	r3, r5
   1c494:	9300      	str	r3, [sp, #0]
   1c496:	4613      	mov	r3, r2
   1c498:	460a      	mov	r2, r1
   1c49a:	4601      	mov	r1, r0
   1c49c:	4620      	mov	r0, r4
   1c49e:	f7ff ff5f 	bl	1c360 <_strtol_l.isra.0>
   1c4a2:	b003      	add	sp, #12
   1c4a4:	bd30      	pop	{r4, r5, pc}
   1c4a6:	bf00      	nop
   1c4a8:	2007c0e0 	.word	0x2007c0e0
   1c4ac:	2007c144 	.word	0x2007c144

0001c4b0 <time>:
time():
   1c4b0:	b513      	push	{r0, r1, r4, lr}
   1c4b2:	4b08      	ldr	r3, [pc, #32]	; (1c4d4 <time+0x24>)
   1c4b4:	4604      	mov	r4, r0
   1c4b6:	2200      	movs	r2, #0
   1c4b8:	6818      	ldr	r0, [r3, #0]
   1c4ba:	4669      	mov	r1, sp
   1c4bc:	f001 fd54 	bl	1df68 <_gettimeofday_r>
   1c4c0:	2800      	cmp	r0, #0
   1c4c2:	bfbc      	itt	lt
   1c4c4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1c4c8:	9300      	strlt	r3, [sp, #0]
   1c4ca:	9800      	ldr	r0, [sp, #0]
   1c4cc:	b104      	cbz	r4, 1c4d0 <time+0x20>
   1c4ce:	6020      	str	r0, [r4, #0]
   1c4d0:	b002      	add	sp, #8
   1c4d2:	bd10      	pop	{r4, pc}
   1c4d4:	2007c0e0 	.word	0x2007c0e0

0001c4d8 <__tzcalc_limits>:
__tzcalc_limits():
   1c4d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4dc:	4604      	mov	r4, r0
   1c4de:	f001 fd55 	bl	1df8c <__gettzinfo>
   1c4e2:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1c4e6:	429c      	cmp	r4, r3
   1c4e8:	f340 8098 	ble.w	1c61c <__tzcalc_limits+0x144>
   1c4ec:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1c4f0:	f240 126d 	movw	r2, #365	; 0x16d
   1c4f4:	18e3      	adds	r3, r4, r3
   1c4f6:	109b      	asrs	r3, r3, #2
   1c4f8:	f2a4 75b2 	subw	r5, r4, #1970	; 0x7b2
   1c4fc:	fb02 3505 	mla	r5, r2, r5, r3
   1c500:	f06f 0263 	mvn.w	r2, #99	; 0x63
   1c504:	f2a4 736d 	subw	r3, r4, #1901	; 0x76d
   1c508:	fb93 f3f2 	sdiv	r3, r3, r2
   1c50c:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1c510:	441d      	add	r5, r3
   1c512:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1c516:	18a2      	adds	r2, r4, r2
   1c518:	fb92 f2f3 	sdiv	r2, r2, r3
   1c51c:	fb94 f7f3 	sdiv	r7, r4, r3
   1c520:	4415      	add	r5, r2
   1c522:	2264      	movs	r2, #100	; 0x64
   1c524:	fb03 4717 	mls	r7, r3, r7, r4
   1c528:	fb94 f6f2 	sdiv	r6, r4, r2
   1c52c:	fab7 fe87 	clz	lr, r7
   1c530:	4601      	mov	r1, r0
   1c532:	f06f 4c40 	mvn.w	ip, #3221225472	; 0xc0000000
   1c536:	fb02 4616 	mls	r6, r2, r6, r4
   1c53a:	f100 0338 	add.w	r3, r0, #56	; 0x38
   1c53e:	9301      	str	r3, [sp, #4]
   1c540:	f004 0303 	and.w	r3, r4, #3
   1c544:	6044      	str	r4, [r0, #4]
   1c546:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
   1c54a:	9300      	str	r3, [sp, #0]
   1c54c:	7a0b      	ldrb	r3, [r1, #8]
   1c54e:	2b4a      	cmp	r3, #74	; 0x4a
   1c550:	d123      	bne.n	1c59a <__tzcalc_limits+0xc2>
   1c552:	694c      	ldr	r4, [r1, #20]
   1c554:	9a00      	ldr	r2, [sp, #0]
   1c556:	192b      	adds	r3, r5, r4
   1c558:	b902      	cbnz	r2, 1c55c <__tzcalc_limits+0x84>
   1c55a:	b906      	cbnz	r6, 1c55e <__tzcalc_limits+0x86>
   1c55c:	b9df      	cbnz	r7, 1c596 <__tzcalc_limits+0xbe>
   1c55e:	2c3b      	cmp	r4, #59	; 0x3b
   1c560:	bfd4      	ite	le
   1c562:	2400      	movle	r4, #0
   1c564:	2401      	movgt	r4, #1
   1c566:	441c      	add	r4, r3
   1c568:	3c01      	subs	r4, #1
   1c56a:	4b2d      	ldr	r3, [pc, #180]	; (1c620 <__tzcalc_limits+0x148>)
   1c56c:	698a      	ldr	r2, [r1, #24]
   1c56e:	fb03 2404 	mla	r4, r3, r4, r2
   1c572:	6a0b      	ldr	r3, [r1, #32]
   1c574:	441c      	add	r4, r3
   1c576:	9b01      	ldr	r3, [sp, #4]
   1c578:	f841 4f1c 	str.w	r4, [r1, #28]!
   1c57c:	428b      	cmp	r3, r1
   1c57e:	d1e5      	bne.n	1c54c <__tzcalc_limits+0x74>
   1c580:	69c3      	ldr	r3, [r0, #28]
   1c582:	6b82      	ldr	r2, [r0, #56]	; 0x38
   1c584:	4293      	cmp	r3, r2
   1c586:	bfac      	ite	ge
   1c588:	2300      	movge	r3, #0
   1c58a:	2301      	movlt	r3, #1
   1c58c:	6003      	str	r3, [r0, #0]
   1c58e:	2001      	movs	r0, #1
   1c590:	b003      	add	sp, #12
   1c592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c596:	2400      	movs	r4, #0
   1c598:	e7e5      	b.n	1c566 <__tzcalc_limits+0x8e>
   1c59a:	2b44      	cmp	r3, #68	; 0x44
   1c59c:	d102      	bne.n	1c5a4 <__tzcalc_limits+0xcc>
   1c59e:	694b      	ldr	r3, [r1, #20]
   1c5a0:	18ec      	adds	r4, r5, r3
   1c5a2:	e7e2      	b.n	1c56a <__tzcalc_limits+0x92>
   1c5a4:	9b00      	ldr	r3, [sp, #0]
   1c5a6:	bb7b      	cbnz	r3, 1c608 <__tzcalc_limits+0x130>
   1c5a8:	2e00      	cmp	r6, #0
   1c5aa:	bf0c      	ite	eq
   1c5ac:	46f0      	moveq	r8, lr
   1c5ae:	f04f 0801 	movne.w	r8, #1
   1c5b2:	2230      	movs	r2, #48	; 0x30
   1c5b4:	4b1b      	ldr	r3, [pc, #108]	; (1c624 <__tzcalc_limits+0x14c>)
   1c5b6:	f04f 0901 	mov.w	r9, #1
   1c5ba:	fb02 3808 	mla	r8, r2, r8, r3
   1c5be:	462b      	mov	r3, r5
   1c5c0:	68cc      	ldr	r4, [r1, #12]
   1c5c2:	f1a8 0a04 	sub.w	sl, r8, #4
   1c5c6:	45a1      	cmp	r9, r4
   1c5c8:	db20      	blt.n	1c60c <__tzcalc_limits+0x134>
   1c5ca:	2207      	movs	r2, #7
   1c5cc:	2c01      	cmp	r4, #1
   1c5ce:	bfb8      	it	lt
   1c5d0:	2401      	movlt	r4, #1
   1c5d2:	f103 0b04 	add.w	fp, r3, #4
   1c5d6:	fb9b faf2 	sdiv	sl, fp, r2
   1c5da:	46a1      	mov	r9, r4
   1c5dc:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   1c5e0:	694c      	ldr	r4, [r1, #20]
   1c5e2:	ebab 0a0a 	sub.w	sl, fp, sl
   1c5e6:	ebb4 0a0a 	subs.w	sl, r4, sl
   1c5ea:	690c      	ldr	r4, [r1, #16]
   1c5ec:	44e1      	add	r9, ip
   1c5ee:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
   1c5f2:	bf48      	it	mi
   1c5f4:	4492      	addmi	sl, r2
   1c5f6:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
   1c5fa:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   1c5fe:	4454      	add	r4, sl
   1c600:	4544      	cmp	r4, r8
   1c602:	da09      	bge.n	1c618 <__tzcalc_limits+0x140>
   1c604:	441c      	add	r4, r3
   1c606:	e7b0      	b.n	1c56a <__tzcalc_limits+0x92>
   1c608:	46f0      	mov	r8, lr
   1c60a:	e7d2      	b.n	1c5b2 <__tzcalc_limits+0xda>
   1c60c:	f85a bf04 	ldr.w	fp, [sl, #4]!
   1c610:	f109 0901 	add.w	r9, r9, #1
   1c614:	445b      	add	r3, fp
   1c616:	e7d6      	b.n	1c5c6 <__tzcalc_limits+0xee>
   1c618:	3c07      	subs	r4, #7
   1c61a:	e7f1      	b.n	1c600 <__tzcalc_limits+0x128>
   1c61c:	2000      	movs	r0, #0
   1c61e:	e7b7      	b.n	1c590 <__tzcalc_limits+0xb8>
   1c620:	00015180 	.word	0x00015180
   1c624:	0002112c 	.word	0x0002112c

0001c628 <__tz_lock>:
__tz_lock():
   1c628:	4770      	bx	lr

0001c62a <__tz_unlock>:
__tz_unlock():
   1c62a:	4770      	bx	lr

0001c62c <_tzset_unlocked>:
_tzset_unlocked():
   1c62c:	4b01      	ldr	r3, [pc, #4]	; (1c634 <_tzset_unlocked+0x8>)
   1c62e:	6818      	ldr	r0, [r3, #0]
   1c630:	f000 b802 	b.w	1c638 <_tzset_unlocked_r>
   1c634:	2007c0e0 	.word	0x2007c0e0

0001c638 <_tzset_unlocked_r>:
_tzset_unlocked_r():
   1c638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c63c:	b08d      	sub	sp, #52	; 0x34
   1c63e:	4607      	mov	r7, r0
   1c640:	f001 fca4 	bl	1df8c <__gettzinfo>
   1c644:	49b1      	ldr	r1, [pc, #708]	; (1c90c <_tzset_unlocked_r+0x2d4>)
   1c646:	4605      	mov	r5, r0
   1c648:	4638      	mov	r0, r7
   1c64a:	f001 fc85 	bl	1df58 <_getenv_r>
   1c64e:	4eb0      	ldr	r6, [pc, #704]	; (1c910 <_tzset_unlocked_r+0x2d8>)
   1c650:	4604      	mov	r4, r0
   1c652:	b970      	cbnz	r0, 1c672 <_tzset_unlocked_r+0x3a>
   1c654:	4baf      	ldr	r3, [pc, #700]	; (1c914 <_tzset_unlocked_r+0x2dc>)
   1c656:	4ab0      	ldr	r2, [pc, #704]	; (1c918 <_tzset_unlocked_r+0x2e0>)
   1c658:	6018      	str	r0, [r3, #0]
   1c65a:	4bb0      	ldr	r3, [pc, #704]	; (1c91c <_tzset_unlocked_r+0x2e4>)
   1c65c:	6018      	str	r0, [r3, #0]
   1c65e:	4bb0      	ldr	r3, [pc, #704]	; (1c920 <_tzset_unlocked_r+0x2e8>)
   1c660:	6830      	ldr	r0, [r6, #0]
   1c662:	601a      	str	r2, [r3, #0]
   1c664:	605a      	str	r2, [r3, #4]
   1c666:	f7fd faf3 	bl	19c50 <free>
   1c66a:	6034      	str	r4, [r6, #0]
   1c66c:	b00d      	add	sp, #52	; 0x34
   1c66e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c672:	6831      	ldr	r1, [r6, #0]
   1c674:	2900      	cmp	r1, #0
   1c676:	d160      	bne.n	1c73a <_tzset_unlocked_r+0x102>
   1c678:	6830      	ldr	r0, [r6, #0]
   1c67a:	f7fd fae9 	bl	19c50 <free>
   1c67e:	4620      	mov	r0, r4
   1c680:	f7ff f813 	bl	1b6aa <strlen>
   1c684:	1c41      	adds	r1, r0, #1
   1c686:	4638      	mov	r0, r7
   1c688:	f7fd fe38 	bl	1a2fc <_malloc_r>
   1c68c:	6030      	str	r0, [r6, #0]
   1c68e:	2800      	cmp	r0, #0
   1c690:	d158      	bne.n	1c744 <_tzset_unlocked_r+0x10c>
   1c692:	7823      	ldrb	r3, [r4, #0]
   1c694:	ae0a      	add	r6, sp, #40	; 0x28
   1c696:	2b3a      	cmp	r3, #58	; 0x3a
   1c698:	bf08      	it	eq
   1c69a:	3401      	addeq	r4, #1
   1c69c:	4633      	mov	r3, r6
   1c69e:	4aa1      	ldr	r2, [pc, #644]	; (1c924 <_tzset_unlocked_r+0x2ec>)
   1c6a0:	49a1      	ldr	r1, [pc, #644]	; (1c928 <_tzset_unlocked_r+0x2f0>)
   1c6a2:	4620      	mov	r0, r4
   1c6a4:	f7fe ff80 	bl	1b5a8 <siscanf>
   1c6a8:	2800      	cmp	r0, #0
   1c6aa:	dddf      	ble.n	1c66c <_tzset_unlocked_r+0x34>
   1c6ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c6ae:	18e7      	adds	r7, r4, r3
   1c6b0:	5ce3      	ldrb	r3, [r4, r3]
   1c6b2:	2b2d      	cmp	r3, #45	; 0x2d
   1c6b4:	d14a      	bne.n	1c74c <_tzset_unlocked_r+0x114>
   1c6b6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
   1c6ba:	3701      	adds	r7, #1
   1c6bc:	f04f 0800 	mov.w	r8, #0
   1c6c0:	f10d 0a20 	add.w	sl, sp, #32
   1c6c4:	f10d 0b1e 	add.w	fp, sp, #30
   1c6c8:	9603      	str	r6, [sp, #12]
   1c6ca:	f8cd a008 	str.w	sl, [sp, #8]
   1c6ce:	9601      	str	r6, [sp, #4]
   1c6d0:	f8cd b000 	str.w	fp, [sp]
   1c6d4:	4633      	mov	r3, r6
   1c6d6:	aa07      	add	r2, sp, #28
   1c6d8:	4994      	ldr	r1, [pc, #592]	; (1c92c <_tzset_unlocked_r+0x2f4>)
   1c6da:	4638      	mov	r0, r7
   1c6dc:	f8ad 801e 	strh.w	r8, [sp, #30]
   1c6e0:	f8ad 8020 	strh.w	r8, [sp, #32]
   1c6e4:	f7fe ff60 	bl	1b5a8 <siscanf>
   1c6e8:	4540      	cmp	r0, r8
   1c6ea:	ddbf      	ble.n	1c66c <_tzset_unlocked_r+0x34>
   1c6ec:	213c      	movs	r1, #60	; 0x3c
   1c6ee:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1c6f2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1c6f6:	f8df 9240 	ldr.w	r9, [pc, #576]	; 1c938 <_tzset_unlocked_r+0x300>
   1c6fa:	fb01 2203 	mla	r2, r1, r3, r2
   1c6fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1c702:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1c706:	fb01 2303 	mla	r3, r1, r3, r2
   1c70a:	435c      	muls	r4, r3
   1c70c:	4b85      	ldr	r3, [pc, #532]	; (1c924 <_tzset_unlocked_r+0x2ec>)
   1c70e:	622c      	str	r4, [r5, #32]
   1c710:	4c83      	ldr	r4, [pc, #524]	; (1c920 <_tzset_unlocked_r+0x2e8>)
   1c712:	464a      	mov	r2, r9
   1c714:	6023      	str	r3, [r4, #0]
   1c716:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c718:	4983      	ldr	r1, [pc, #524]	; (1c928 <_tzset_unlocked_r+0x2f0>)
   1c71a:	441f      	add	r7, r3
   1c71c:	4638      	mov	r0, r7
   1c71e:	4633      	mov	r3, r6
   1c720:	f7fe ff42 	bl	1b5a8 <siscanf>
   1c724:	4540      	cmp	r0, r8
   1c726:	dc16      	bgt.n	1c756 <_tzset_unlocked_r+0x11e>
   1c728:	6823      	ldr	r3, [r4, #0]
   1c72a:	6a2a      	ldr	r2, [r5, #32]
   1c72c:	6063      	str	r3, [r4, #4]
   1c72e:	4b79      	ldr	r3, [pc, #484]	; (1c914 <_tzset_unlocked_r+0x2dc>)
   1c730:	601a      	str	r2, [r3, #0]
   1c732:	4b7a      	ldr	r3, [pc, #488]	; (1c91c <_tzset_unlocked_r+0x2e4>)
   1c734:	f8c3 8000 	str.w	r8, [r3]
   1c738:	e798      	b.n	1c66c <_tzset_unlocked_r+0x34>
   1c73a:	f7fe ffa4 	bl	1b686 <strcmp>
   1c73e:	2800      	cmp	r0, #0
   1c740:	d094      	beq.n	1c66c <_tzset_unlocked_r+0x34>
   1c742:	e799      	b.n	1c678 <_tzset_unlocked_r+0x40>
   1c744:	4621      	mov	r1, r4
   1c746:	f7fe ffa8 	bl	1b69a <strcpy>
   1c74a:	e7a2      	b.n	1c692 <_tzset_unlocked_r+0x5a>
   1c74c:	2b2b      	cmp	r3, #43	; 0x2b
   1c74e:	bf08      	it	eq
   1c750:	3701      	addeq	r7, #1
   1c752:	2401      	movs	r4, #1
   1c754:	e7b2      	b.n	1c6bc <_tzset_unlocked_r+0x84>
   1c756:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c758:	f8c4 9004 	str.w	r9, [r4, #4]
   1c75c:	18fc      	adds	r4, r7, r3
   1c75e:	5cfb      	ldrb	r3, [r7, r3]
   1c760:	2b2d      	cmp	r3, #45	; 0x2d
   1c762:	f040 8092 	bne.w	1c88a <_tzset_unlocked_r+0x252>
   1c766:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1c76a:	3401      	adds	r4, #1
   1c76c:	2300      	movs	r3, #0
   1c76e:	9603      	str	r6, [sp, #12]
   1c770:	f8ad 301c 	strh.w	r3, [sp, #28]
   1c774:	f8ad 301e 	strh.w	r3, [sp, #30]
   1c778:	f8ad 3020 	strh.w	r3, [sp, #32]
   1c77c:	930a      	str	r3, [sp, #40]	; 0x28
   1c77e:	f8cd a008 	str.w	sl, [sp, #8]
   1c782:	9601      	str	r6, [sp, #4]
   1c784:	f8cd b000 	str.w	fp, [sp]
   1c788:	4633      	mov	r3, r6
   1c78a:	aa07      	add	r2, sp, #28
   1c78c:	4967      	ldr	r1, [pc, #412]	; (1c92c <_tzset_unlocked_r+0x2f4>)
   1c78e:	4620      	mov	r0, r4
   1c790:	f7fe ff0a 	bl	1b5a8 <siscanf>
   1c794:	2800      	cmp	r0, #0
   1c796:	dc7d      	bgt.n	1c894 <_tzset_unlocked_r+0x25c>
   1c798:	6a2b      	ldr	r3, [r5, #32]
   1c79a:	f5a3 6361 	sub.w	r3, r3, #3600	; 0xe10
   1c79e:	63eb      	str	r3, [r5, #60]	; 0x3c
   1c7a0:	462f      	mov	r7, r5
   1c7a2:	f04f 0900 	mov.w	r9, #0
   1c7a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c7a8:	441c      	add	r4, r3
   1c7aa:	7823      	ldrb	r3, [r4, #0]
   1c7ac:	2b2c      	cmp	r3, #44	; 0x2c
   1c7ae:	bf08      	it	eq
   1c7b0:	3401      	addeq	r4, #1
   1c7b2:	f894 8000 	ldrb.w	r8, [r4]
   1c7b6:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
   1c7ba:	d17b      	bne.n	1c8b4 <_tzset_unlocked_r+0x27c>
   1c7bc:	f10d 0326 	add.w	r3, sp, #38	; 0x26
   1c7c0:	9302      	str	r3, [sp, #8]
   1c7c2:	ab09      	add	r3, sp, #36	; 0x24
   1c7c4:	9300      	str	r3, [sp, #0]
   1c7c6:	9603      	str	r6, [sp, #12]
   1c7c8:	9601      	str	r6, [sp, #4]
   1c7ca:	4633      	mov	r3, r6
   1c7cc:	f10d 0222 	add.w	r2, sp, #34	; 0x22
   1c7d0:	4957      	ldr	r1, [pc, #348]	; (1c930 <_tzset_unlocked_r+0x2f8>)
   1c7d2:	4620      	mov	r0, r4
   1c7d4:	f7fe fee8 	bl	1b5a8 <siscanf>
   1c7d8:	2803      	cmp	r0, #3
   1c7da:	f47f af47 	bne.w	1c66c <_tzset_unlocked_r+0x34>
   1c7de:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
   1c7e2:	1e4b      	subs	r3, r1, #1
   1c7e4:	2b0b      	cmp	r3, #11
   1c7e6:	f63f af41 	bhi.w	1c66c <_tzset_unlocked_r+0x34>
   1c7ea:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   1c7ee:	1e53      	subs	r3, r2, #1
   1c7f0:	2b04      	cmp	r3, #4
   1c7f2:	f63f af3b 	bhi.w	1c66c <_tzset_unlocked_r+0x34>
   1c7f6:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
   1c7fa:	2b06      	cmp	r3, #6
   1c7fc:	f63f af36 	bhi.w	1c66c <_tzset_unlocked_r+0x34>
   1c800:	f887 8008 	strb.w	r8, [r7, #8]
   1c804:	60f9      	str	r1, [r7, #12]
   1c806:	613a      	str	r2, [r7, #16]
   1c808:	617b      	str	r3, [r7, #20]
   1c80a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1c80c:	eb04 0803 	add.w	r8, r4, r3
   1c810:	2302      	movs	r3, #2
   1c812:	f8ad 301c 	strh.w	r3, [sp, #28]
   1c816:	2300      	movs	r3, #0
   1c818:	f8ad 301e 	strh.w	r3, [sp, #30]
   1c81c:	f8ad 3020 	strh.w	r3, [sp, #32]
   1c820:	930a      	str	r3, [sp, #40]	; 0x28
   1c822:	f898 3000 	ldrb.w	r3, [r8]
   1c826:	2b2f      	cmp	r3, #47	; 0x2f
   1c828:	d10b      	bne.n	1c842 <_tzset_unlocked_r+0x20a>
   1c82a:	9603      	str	r6, [sp, #12]
   1c82c:	f8cd a008 	str.w	sl, [sp, #8]
   1c830:	9601      	str	r6, [sp, #4]
   1c832:	f8cd b000 	str.w	fp, [sp]
   1c836:	4633      	mov	r3, r6
   1c838:	aa07      	add	r2, sp, #28
   1c83a:	493e      	ldr	r1, [pc, #248]	; (1c934 <_tzset_unlocked_r+0x2fc>)
   1c83c:	4640      	mov	r0, r8
   1c83e:	f7fe feb3 	bl	1b5a8 <siscanf>
   1c842:	213c      	movs	r1, #60	; 0x3c
   1c844:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1c848:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1c84c:	f109 0901 	add.w	r9, r9, #1
   1c850:	fb01 2203 	mla	r2, r1, r3, r2
   1c854:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1c858:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1c85c:	f1b9 0f02 	cmp.w	r9, #2
   1c860:	fb01 2303 	mla	r3, r1, r3, r2
   1c864:	61bb      	str	r3, [r7, #24]
   1c866:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   1c868:	f107 071c 	add.w	r7, r7, #28
   1c86c:	4444      	add	r4, r8
   1c86e:	d19c      	bne.n	1c7aa <_tzset_unlocked_r+0x172>
   1c870:	6868      	ldr	r0, [r5, #4]
   1c872:	f7ff fe31 	bl	1c4d8 <__tzcalc_limits>
   1c876:	6a2a      	ldr	r2, [r5, #32]
   1c878:	4b26      	ldr	r3, [pc, #152]	; (1c914 <_tzset_unlocked_r+0x2dc>)
   1c87a:	601a      	str	r2, [r3, #0]
   1c87c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1c87e:	1a9b      	subs	r3, r3, r2
   1c880:	bf18      	it	ne
   1c882:	2301      	movne	r3, #1
   1c884:	4a25      	ldr	r2, [pc, #148]	; (1c91c <_tzset_unlocked_r+0x2e4>)
   1c886:	6013      	str	r3, [r2, #0]
   1c888:	e6f0      	b.n	1c66c <_tzset_unlocked_r+0x34>
   1c88a:	2b2b      	cmp	r3, #43	; 0x2b
   1c88c:	bf08      	it	eq
   1c88e:	3401      	addeq	r4, #1
   1c890:	2701      	movs	r7, #1
   1c892:	e76b      	b.n	1c76c <_tzset_unlocked_r+0x134>
   1c894:	213c      	movs	r1, #60	; 0x3c
   1c896:	f8bd 301e 	ldrh.w	r3, [sp, #30]
   1c89a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
   1c89e:	fb01 2203 	mla	r2, r1, r3, r2
   1c8a2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
   1c8a6:	f8bd 301c 	ldrh.w	r3, [sp, #28]
   1c8aa:	fb01 2303 	mla	r3, r1, r3, r2
   1c8ae:	435f      	muls	r7, r3
   1c8b0:	63ef      	str	r7, [r5, #60]	; 0x3c
   1c8b2:	e775      	b.n	1c7a0 <_tzset_unlocked_r+0x168>
   1c8b4:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
   1c8b8:	bf0a      	itet	eq
   1c8ba:	4643      	moveq	r3, r8
   1c8bc:	2344      	movne	r3, #68	; 0x44
   1c8be:	3401      	addeq	r4, #1
   1c8c0:	220a      	movs	r2, #10
   1c8c2:	a90b      	add	r1, sp, #44	; 0x2c
   1c8c4:	4620      	mov	r0, r4
   1c8c6:	9305      	str	r3, [sp, #20]
   1c8c8:	f002 ff86 	bl	1f7d8 <strtoul>
   1c8cc:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   1c8d0:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
   1c8d4:	4544      	cmp	r4, r8
   1c8d6:	9b05      	ldr	r3, [sp, #20]
   1c8d8:	d114      	bne.n	1c904 <_tzset_unlocked_r+0x2cc>
   1c8da:	234d      	movs	r3, #77	; 0x4d
   1c8dc:	f1b9 0f00 	cmp.w	r9, #0
   1c8e0:	d107      	bne.n	1c8f2 <_tzset_unlocked_r+0x2ba>
   1c8e2:	722b      	strb	r3, [r5, #8]
   1c8e4:	2303      	movs	r3, #3
   1c8e6:	60eb      	str	r3, [r5, #12]
   1c8e8:	2302      	movs	r3, #2
   1c8ea:	f8c5 9014 	str.w	r9, [r5, #20]
   1c8ee:	612b      	str	r3, [r5, #16]
   1c8f0:	e78e      	b.n	1c810 <_tzset_unlocked_r+0x1d8>
   1c8f2:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
   1c8f6:	230b      	movs	r3, #11
   1c8f8:	62ab      	str	r3, [r5, #40]	; 0x28
   1c8fa:	2301      	movs	r3, #1
   1c8fc:	62eb      	str	r3, [r5, #44]	; 0x2c
   1c8fe:	2300      	movs	r3, #0
   1c900:	632b      	str	r3, [r5, #48]	; 0x30
   1c902:	e785      	b.n	1c810 <_tzset_unlocked_r+0x1d8>
   1c904:	b280      	uxth	r0, r0
   1c906:	723b      	strb	r3, [r7, #8]
   1c908:	6178      	str	r0, [r7, #20]
   1c90a:	e781      	b.n	1c810 <_tzset_unlocked_r+0x1d8>
   1c90c:	00021218 	.word	0x00021218
   1c910:	2007c8b8 	.word	0x2007c8b8
   1c914:	2007c8c0 	.word	0x2007c8c0
   1c918:	0002121b 	.word	0x0002121b
   1c91c:	2007c8bc 	.word	0x2007c8bc
   1c920:	2007c2b0 	.word	0x2007c2b0
   1c924:	2007c8ab 	.word	0x2007c8ab
   1c928:	0002121f 	.word	0x0002121f
   1c92c:	00021242 	.word	0x00021242
   1c930:	0002122e 	.word	0x0002122e
   1c934:	00021241 	.word	0x00021241
   1c938:	2007c8a0 	.word	0x2007c8a0

0001c93c <_vsniprintf_r>:
_vsniprintf_r():
   1c93c:	b530      	push	{r4, r5, lr}
   1c93e:	1e14      	subs	r4, r2, #0
   1c940:	4605      	mov	r5, r0
   1c942:	b09b      	sub	sp, #108	; 0x6c
   1c944:	4618      	mov	r0, r3
   1c946:	da05      	bge.n	1c954 <_vsniprintf_r+0x18>
   1c948:	238b      	movs	r3, #139	; 0x8b
   1c94a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1c94e:	602b      	str	r3, [r5, #0]
   1c950:	b01b      	add	sp, #108	; 0x6c
   1c952:	bd30      	pop	{r4, r5, pc}
   1c954:	f44f 7302 	mov.w	r3, #520	; 0x208
   1c958:	f8ad 300c 	strh.w	r3, [sp, #12]
   1c95c:	bf0c      	ite	eq
   1c95e:	4623      	moveq	r3, r4
   1c960:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
   1c964:	9302      	str	r3, [sp, #8]
   1c966:	9305      	str	r3, [sp, #20]
   1c968:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1c96c:	9100      	str	r1, [sp, #0]
   1c96e:	9104      	str	r1, [sp, #16]
   1c970:	f8ad 300e 	strh.w	r3, [sp, #14]
   1c974:	4602      	mov	r2, r0
   1c976:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1c978:	4669      	mov	r1, sp
   1c97a:	4628      	mov	r0, r5
   1c97c:	f001 ffa6 	bl	1e8cc <_svfiprintf_r>
   1c980:	1c43      	adds	r3, r0, #1
   1c982:	bfbc      	itt	lt
   1c984:	238b      	movlt	r3, #139	; 0x8b
   1c986:	602b      	strlt	r3, [r5, #0]
   1c988:	2c00      	cmp	r4, #0
   1c98a:	d0e1      	beq.n	1c950 <_vsniprintf_r+0x14>
   1c98c:	2200      	movs	r2, #0
   1c98e:	9b00      	ldr	r3, [sp, #0]
   1c990:	701a      	strb	r2, [r3, #0]
   1c992:	e7dd      	b.n	1c950 <_vsniprintf_r+0x14>

0001c994 <vsniprintf>:
vsniprintf():
   1c994:	b507      	push	{r0, r1, r2, lr}
   1c996:	9300      	str	r3, [sp, #0]
   1c998:	4613      	mov	r3, r2
   1c99a:	460a      	mov	r2, r1
   1c99c:	4601      	mov	r1, r0
   1c99e:	4803      	ldr	r0, [pc, #12]	; (1c9ac <vsniprintf+0x18>)
   1c9a0:	6800      	ldr	r0, [r0, #0]
   1c9a2:	f7ff ffcb 	bl	1c93c <_vsniprintf_r>
   1c9a6:	b003      	add	sp, #12
   1c9a8:	f85d fb04 	ldr.w	pc, [sp], #4
   1c9ac:	2007c0e0 	.word	0x2007c0e0

0001c9b0 <__swbuf_r>:
__swbuf_r():
   1c9b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c9b2:	460e      	mov	r6, r1
   1c9b4:	4614      	mov	r4, r2
   1c9b6:	4605      	mov	r5, r0
   1c9b8:	b118      	cbz	r0, 1c9c2 <__swbuf_r+0x12>
   1c9ba:	6983      	ldr	r3, [r0, #24]
   1c9bc:	b90b      	cbnz	r3, 1c9c2 <__swbuf_r+0x12>
   1c9be:	f7fc ffff 	bl	199c0 <__sinit>
   1c9c2:	4b21      	ldr	r3, [pc, #132]	; (1ca48 <__swbuf_r+0x98>)
   1c9c4:	429c      	cmp	r4, r3
   1c9c6:	d12a      	bne.n	1ca1e <__swbuf_r+0x6e>
   1c9c8:	686c      	ldr	r4, [r5, #4]
   1c9ca:	69a3      	ldr	r3, [r4, #24]
   1c9cc:	60a3      	str	r3, [r4, #8]
   1c9ce:	89a3      	ldrh	r3, [r4, #12]
   1c9d0:	071a      	lsls	r2, r3, #28
   1c9d2:	d52e      	bpl.n	1ca32 <__swbuf_r+0x82>
   1c9d4:	6923      	ldr	r3, [r4, #16]
   1c9d6:	b363      	cbz	r3, 1ca32 <__swbuf_r+0x82>
   1c9d8:	6923      	ldr	r3, [r4, #16]
   1c9da:	6820      	ldr	r0, [r4, #0]
   1c9dc:	b2f6      	uxtb	r6, r6
   1c9de:	1ac0      	subs	r0, r0, r3
   1c9e0:	6963      	ldr	r3, [r4, #20]
   1c9e2:	4637      	mov	r7, r6
   1c9e4:	4298      	cmp	r0, r3
   1c9e6:	db04      	blt.n	1c9f2 <__swbuf_r+0x42>
   1c9e8:	4621      	mov	r1, r4
   1c9ea:	4628      	mov	r0, r5
   1c9ec:	f7fc ff6c 	bl	198c8 <_fflush_r>
   1c9f0:	bb28      	cbnz	r0, 1ca3e <__swbuf_r+0x8e>
   1c9f2:	68a3      	ldr	r3, [r4, #8]
   1c9f4:	3001      	adds	r0, #1
   1c9f6:	3b01      	subs	r3, #1
   1c9f8:	60a3      	str	r3, [r4, #8]
   1c9fa:	6823      	ldr	r3, [r4, #0]
   1c9fc:	1c5a      	adds	r2, r3, #1
   1c9fe:	6022      	str	r2, [r4, #0]
   1ca00:	701e      	strb	r6, [r3, #0]
   1ca02:	6963      	ldr	r3, [r4, #20]
   1ca04:	4298      	cmp	r0, r3
   1ca06:	d004      	beq.n	1ca12 <__swbuf_r+0x62>
   1ca08:	89a3      	ldrh	r3, [r4, #12]
   1ca0a:	07db      	lsls	r3, r3, #31
   1ca0c:	d519      	bpl.n	1ca42 <__swbuf_r+0x92>
   1ca0e:	2e0a      	cmp	r6, #10
   1ca10:	d117      	bne.n	1ca42 <__swbuf_r+0x92>
   1ca12:	4621      	mov	r1, r4
   1ca14:	4628      	mov	r0, r5
   1ca16:	f7fc ff57 	bl	198c8 <_fflush_r>
   1ca1a:	b190      	cbz	r0, 1ca42 <__swbuf_r+0x92>
   1ca1c:	e00f      	b.n	1ca3e <__swbuf_r+0x8e>
   1ca1e:	4b0b      	ldr	r3, [pc, #44]	; (1ca4c <__swbuf_r+0x9c>)
   1ca20:	429c      	cmp	r4, r3
   1ca22:	d101      	bne.n	1ca28 <__swbuf_r+0x78>
   1ca24:	68ac      	ldr	r4, [r5, #8]
   1ca26:	e7d0      	b.n	1c9ca <__swbuf_r+0x1a>
   1ca28:	4b09      	ldr	r3, [pc, #36]	; (1ca50 <__swbuf_r+0xa0>)
   1ca2a:	429c      	cmp	r4, r3
   1ca2c:	bf08      	it	eq
   1ca2e:	68ec      	ldreq	r4, [r5, #12]
   1ca30:	e7cb      	b.n	1c9ca <__swbuf_r+0x1a>
   1ca32:	4621      	mov	r1, r4
   1ca34:	4628      	mov	r0, r5
   1ca36:	f000 f82d 	bl	1ca94 <__swsetup_r>
   1ca3a:	2800      	cmp	r0, #0
   1ca3c:	d0cc      	beq.n	1c9d8 <__swbuf_r+0x28>
   1ca3e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1ca42:	4638      	mov	r0, r7
   1ca44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1ca46:	bf00      	nop
   1ca48:	00021080 	.word	0x00021080
   1ca4c:	000210a0 	.word	0x000210a0
   1ca50:	00021060 	.word	0x00021060

0001ca54 <__ascii_wctomb>:
__ascii_wctomb():
   1ca54:	b149      	cbz	r1, 1ca6a <__ascii_wctomb+0x16>
   1ca56:	2aff      	cmp	r2, #255	; 0xff
   1ca58:	bf8b      	itete	hi
   1ca5a:	238a      	movhi	r3, #138	; 0x8a
   1ca5c:	700a      	strbls	r2, [r1, #0]
   1ca5e:	6003      	strhi	r3, [r0, #0]
   1ca60:	2001      	movls	r0, #1
   1ca62:	bf88      	it	hi
   1ca64:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
   1ca68:	4770      	bx	lr
   1ca6a:	4608      	mov	r0, r1
   1ca6c:	4770      	bx	lr
   1ca6e:	Address 0x000000000001ca6e is out of bounds.


0001ca70 <_write_r>:
_write_r():
   1ca70:	b538      	push	{r3, r4, r5, lr}
   1ca72:	4605      	mov	r5, r0
   1ca74:	4608      	mov	r0, r1
   1ca76:	4611      	mov	r1, r2
   1ca78:	2200      	movs	r2, #0
   1ca7a:	4c05      	ldr	r4, [pc, #20]	; (1ca90 <_write_r+0x20>)
   1ca7c:	6022      	str	r2, [r4, #0]
   1ca7e:	461a      	mov	r2, r3
   1ca80:	f7fa fd42 	bl	17508 <_write>
   1ca84:	1c43      	adds	r3, r0, #1
   1ca86:	d102      	bne.n	1ca8e <_write_r+0x1e>
   1ca88:	6823      	ldr	r3, [r4, #0]
   1ca8a:	b103      	cbz	r3, 1ca8e <_write_r+0x1e>
   1ca8c:	602b      	str	r3, [r5, #0]
   1ca8e:	bd38      	pop	{r3, r4, r5, pc}
   1ca90:	2007c8c8 	.word	0x2007c8c8

0001ca94 <__swsetup_r>:
__swsetup_r():
   1ca94:	4b32      	ldr	r3, [pc, #200]	; (1cb60 <__swsetup_r+0xcc>)
   1ca96:	b570      	push	{r4, r5, r6, lr}
   1ca98:	681d      	ldr	r5, [r3, #0]
   1ca9a:	4606      	mov	r6, r0
   1ca9c:	460c      	mov	r4, r1
   1ca9e:	b125      	cbz	r5, 1caaa <__swsetup_r+0x16>
   1caa0:	69ab      	ldr	r3, [r5, #24]
   1caa2:	b913      	cbnz	r3, 1caaa <__swsetup_r+0x16>
   1caa4:	4628      	mov	r0, r5
   1caa6:	f7fc ff8b 	bl	199c0 <__sinit>
   1caaa:	4b2e      	ldr	r3, [pc, #184]	; (1cb64 <__swsetup_r+0xd0>)
   1caac:	429c      	cmp	r4, r3
   1caae:	d10f      	bne.n	1cad0 <__swsetup_r+0x3c>
   1cab0:	686c      	ldr	r4, [r5, #4]
   1cab2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1cab6:	b29a      	uxth	r2, r3
   1cab8:	0715      	lsls	r5, r2, #28
   1caba:	d42c      	bmi.n	1cb16 <__swsetup_r+0x82>
   1cabc:	06d0      	lsls	r0, r2, #27
   1cabe:	d411      	bmi.n	1cae4 <__swsetup_r+0x50>
   1cac0:	2209      	movs	r2, #9
   1cac2:	6032      	str	r2, [r6, #0]
   1cac4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1cac8:	81a3      	strh	r3, [r4, #12]
   1caca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1cace:	bd70      	pop	{r4, r5, r6, pc}
   1cad0:	4b25      	ldr	r3, [pc, #148]	; (1cb68 <__swsetup_r+0xd4>)
   1cad2:	429c      	cmp	r4, r3
   1cad4:	d101      	bne.n	1cada <__swsetup_r+0x46>
   1cad6:	68ac      	ldr	r4, [r5, #8]
   1cad8:	e7eb      	b.n	1cab2 <__swsetup_r+0x1e>
   1cada:	4b24      	ldr	r3, [pc, #144]	; (1cb6c <__swsetup_r+0xd8>)
   1cadc:	429c      	cmp	r4, r3
   1cade:	bf08      	it	eq
   1cae0:	68ec      	ldreq	r4, [r5, #12]
   1cae2:	e7e6      	b.n	1cab2 <__swsetup_r+0x1e>
   1cae4:	0751      	lsls	r1, r2, #29
   1cae6:	d512      	bpl.n	1cb0e <__swsetup_r+0x7a>
   1cae8:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1caea:	b141      	cbz	r1, 1cafe <__swsetup_r+0x6a>
   1caec:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1caf0:	4299      	cmp	r1, r3
   1caf2:	d002      	beq.n	1cafa <__swsetup_r+0x66>
   1caf4:	4630      	mov	r0, r6
   1caf6:	f7fd fb83 	bl	1a200 <_free_r>
   1cafa:	2300      	movs	r3, #0
   1cafc:	6363      	str	r3, [r4, #52]	; 0x34
   1cafe:	89a3      	ldrh	r3, [r4, #12]
   1cb00:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   1cb04:	81a3      	strh	r3, [r4, #12]
   1cb06:	2300      	movs	r3, #0
   1cb08:	6063      	str	r3, [r4, #4]
   1cb0a:	6923      	ldr	r3, [r4, #16]
   1cb0c:	6023      	str	r3, [r4, #0]
   1cb0e:	89a3      	ldrh	r3, [r4, #12]
   1cb10:	f043 0308 	orr.w	r3, r3, #8
   1cb14:	81a3      	strh	r3, [r4, #12]
   1cb16:	6923      	ldr	r3, [r4, #16]
   1cb18:	b94b      	cbnz	r3, 1cb2e <__swsetup_r+0x9a>
   1cb1a:	89a3      	ldrh	r3, [r4, #12]
   1cb1c:	f403 7320 	and.w	r3, r3, #640	; 0x280
   1cb20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   1cb24:	d003      	beq.n	1cb2e <__swsetup_r+0x9a>
   1cb26:	4621      	mov	r1, r4
   1cb28:	4630      	mov	r0, r6
   1cb2a:	f7fd f849 	bl	19bc0 <__smakebuf_r>
   1cb2e:	89a2      	ldrh	r2, [r4, #12]
   1cb30:	f012 0301 	ands.w	r3, r2, #1
   1cb34:	d00c      	beq.n	1cb50 <__swsetup_r+0xbc>
   1cb36:	2300      	movs	r3, #0
   1cb38:	60a3      	str	r3, [r4, #8]
   1cb3a:	6963      	ldr	r3, [r4, #20]
   1cb3c:	425b      	negs	r3, r3
   1cb3e:	61a3      	str	r3, [r4, #24]
   1cb40:	6923      	ldr	r3, [r4, #16]
   1cb42:	b953      	cbnz	r3, 1cb5a <__swsetup_r+0xc6>
   1cb44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1cb48:	f013 0080 	ands.w	r0, r3, #128	; 0x80
   1cb4c:	d1ba      	bne.n	1cac4 <__swsetup_r+0x30>
   1cb4e:	bd70      	pop	{r4, r5, r6, pc}
   1cb50:	0792      	lsls	r2, r2, #30
   1cb52:	bf58      	it	pl
   1cb54:	6963      	ldrpl	r3, [r4, #20]
   1cb56:	60a3      	str	r3, [r4, #8]
   1cb58:	e7f2      	b.n	1cb40 <__swsetup_r+0xac>
   1cb5a:	2000      	movs	r0, #0
   1cb5c:	e7f7      	b.n	1cb4e <__swsetup_r+0xba>
   1cb5e:	bf00      	nop
   1cb60:	2007c0e0 	.word	0x2007c0e0
   1cb64:	00021080 	.word	0x00021080
   1cb68:	000210a0 	.word	0x000210a0
   1cb6c:	00021060 	.word	0x00021060

0001cb70 <_close_r>:
_close_r():
   1cb70:	b538      	push	{r3, r4, r5, lr}
   1cb72:	2300      	movs	r3, #0
   1cb74:	4c05      	ldr	r4, [pc, #20]	; (1cb8c <_close_r+0x1c>)
   1cb76:	4605      	mov	r5, r0
   1cb78:	4608      	mov	r0, r1
   1cb7a:	6023      	str	r3, [r4, #0]
   1cb7c:	f7fa fd16 	bl	175ac <_close>
   1cb80:	1c43      	adds	r3, r0, #1
   1cb82:	d102      	bne.n	1cb8a <_close_r+0x1a>
   1cb84:	6823      	ldr	r3, [r4, #0]
   1cb86:	b103      	cbz	r3, 1cb8a <_close_r+0x1a>
   1cb88:	602b      	str	r3, [r5, #0]
   1cb8a:	bd38      	pop	{r3, r4, r5, pc}
   1cb8c:	2007c8c8 	.word	0x2007c8c8

0001cb90 <div>:
div():
   1cb90:	b510      	push	{r4, lr}
   1cb92:	fb91 f4f2 	sdiv	r4, r1, r2
   1cb96:	2900      	cmp	r1, #0
   1cb98:	fb02 1314 	mls	r3, r2, r4, r1
   1cb9c:	db06      	blt.n	1cbac <div+0x1c>
   1cb9e:	2b00      	cmp	r3, #0
   1cba0:	da01      	bge.n	1cba6 <div+0x16>
   1cba2:	3401      	adds	r4, #1
   1cba4:	1a9b      	subs	r3, r3, r2
   1cba6:	6004      	str	r4, [r0, #0]
   1cba8:	6043      	str	r3, [r0, #4]
   1cbaa:	bd10      	pop	{r4, pc}
   1cbac:	2b00      	cmp	r3, #0
   1cbae:	bfc4      	itt	gt
   1cbb0:	f104 34ff 	addgt.w	r4, r4, #4294967295	; 0xffffffff
   1cbb4:	189b      	addgt	r3, r3, r2
   1cbb6:	e7f6      	b.n	1cba6 <div+0x16>

0001cbb8 <quorem>:
quorem():
   1cbb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cbbc:	6903      	ldr	r3, [r0, #16]
   1cbbe:	690c      	ldr	r4, [r1, #16]
   1cbc0:	4680      	mov	r8, r0
   1cbc2:	429c      	cmp	r4, r3
   1cbc4:	f300 8082 	bgt.w	1cccc <quorem+0x114>
   1cbc8:	3c01      	subs	r4, #1
   1cbca:	f101 0714 	add.w	r7, r1, #20
   1cbce:	f100 0614 	add.w	r6, r0, #20
   1cbd2:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   1cbd6:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
   1cbda:	3501      	adds	r5, #1
   1cbdc:	fbb0 f5f5 	udiv	r5, r0, r5
   1cbe0:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   1cbe4:	eb06 030e 	add.w	r3, r6, lr
   1cbe8:	eb07 090e 	add.w	r9, r7, lr
   1cbec:	9301      	str	r3, [sp, #4]
   1cbee:	b38d      	cbz	r5, 1cc54 <quorem+0x9c>
   1cbf0:	f04f 0a00 	mov.w	sl, #0
   1cbf4:	4638      	mov	r0, r7
   1cbf6:	46b4      	mov	ip, r6
   1cbf8:	46d3      	mov	fp, sl
   1cbfa:	f850 2b04 	ldr.w	r2, [r0], #4
   1cbfe:	b293      	uxth	r3, r2
   1cc00:	fb05 a303 	mla	r3, r5, r3, sl
   1cc04:	0c12      	lsrs	r2, r2, #16
   1cc06:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1cc0a:	fb05 a202 	mla	r2, r5, r2, sl
   1cc0e:	b29b      	uxth	r3, r3
   1cc10:	ebab 0303 	sub.w	r3, fp, r3
   1cc14:	f8bc b000 	ldrh.w	fp, [ip]
   1cc18:	ea4f 4a12 	mov.w	sl, r2, lsr #16
   1cc1c:	445b      	add	r3, fp
   1cc1e:	fa1f fb82 	uxth.w	fp, r2
   1cc22:	f8dc 2000 	ldr.w	r2, [ip]
   1cc26:	4581      	cmp	r9, r0
   1cc28:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
   1cc2c:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1cc30:	b29b      	uxth	r3, r3
   1cc32:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1cc36:	ea4f 4b22 	mov.w	fp, r2, asr #16
   1cc3a:	f84c 3b04 	str.w	r3, [ip], #4
   1cc3e:	d2dc      	bcs.n	1cbfa <quorem+0x42>
   1cc40:	f856 300e 	ldr.w	r3, [r6, lr]
   1cc44:	b933      	cbnz	r3, 1cc54 <quorem+0x9c>
   1cc46:	9b01      	ldr	r3, [sp, #4]
   1cc48:	3b04      	subs	r3, #4
   1cc4a:	429e      	cmp	r6, r3
   1cc4c:	461a      	mov	r2, r3
   1cc4e:	d331      	bcc.n	1ccb4 <quorem+0xfc>
   1cc50:	f8c8 4010 	str.w	r4, [r8, #16]
   1cc54:	4640      	mov	r0, r8
   1cc56:	f001 fc16 	bl	1e486 <__mcmp>
   1cc5a:	2800      	cmp	r0, #0
   1cc5c:	db26      	blt.n	1ccac <quorem+0xf4>
   1cc5e:	4630      	mov	r0, r6
   1cc60:	f04f 0e00 	mov.w	lr, #0
   1cc64:	3501      	adds	r5, #1
   1cc66:	f857 1b04 	ldr.w	r1, [r7], #4
   1cc6a:	f8d0 c000 	ldr.w	ip, [r0]
   1cc6e:	b28b      	uxth	r3, r1
   1cc70:	ebae 0303 	sub.w	r3, lr, r3
   1cc74:	fa1f f28c 	uxth.w	r2, ip
   1cc78:	4413      	add	r3, r2
   1cc7a:	0c0a      	lsrs	r2, r1, #16
   1cc7c:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
   1cc80:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1cc84:	b29b      	uxth	r3, r3
   1cc86:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   1cc8a:	45b9      	cmp	r9, r7
   1cc8c:	ea4f 4e22 	mov.w	lr, r2, asr #16
   1cc90:	f840 3b04 	str.w	r3, [r0], #4
   1cc94:	d2e7      	bcs.n	1cc66 <quorem+0xae>
   1cc96:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1cc9a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   1cc9e:	b92a      	cbnz	r2, 1ccac <quorem+0xf4>
   1cca0:	3b04      	subs	r3, #4
   1cca2:	429e      	cmp	r6, r3
   1cca4:	461a      	mov	r2, r3
   1cca6:	d30b      	bcc.n	1ccc0 <quorem+0x108>
   1cca8:	f8c8 4010 	str.w	r4, [r8, #16]
   1ccac:	4628      	mov	r0, r5
   1ccae:	b003      	add	sp, #12
   1ccb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccb4:	6812      	ldr	r2, [r2, #0]
   1ccb6:	3b04      	subs	r3, #4
   1ccb8:	2a00      	cmp	r2, #0
   1ccba:	d1c9      	bne.n	1cc50 <quorem+0x98>
   1ccbc:	3c01      	subs	r4, #1
   1ccbe:	e7c4      	b.n	1cc4a <quorem+0x92>
   1ccc0:	6812      	ldr	r2, [r2, #0]
   1ccc2:	3b04      	subs	r3, #4
   1ccc4:	2a00      	cmp	r2, #0
   1ccc6:	d1ef      	bne.n	1cca8 <quorem+0xf0>
   1ccc8:	3c01      	subs	r4, #1
   1ccca:	e7ea      	b.n	1cca2 <quorem+0xea>
   1cccc:	2000      	movs	r0, #0
   1ccce:	e7ee      	b.n	1ccae <quorem+0xf6>

0001ccd0 <_dtoa_r>:
_dtoa_r():
   1ccd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccd4:	6a46      	ldr	r6, [r0, #36]	; 0x24
   1ccd6:	b095      	sub	sp, #84	; 0x54
   1ccd8:	4604      	mov	r4, r0
   1ccda:	9d21      	ldr	r5, [sp, #132]	; 0x84
   1ccdc:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1cce0:	b93e      	cbnz	r6, 1ccf2 <_dtoa_r+0x22>
   1cce2:	2010      	movs	r0, #16
   1cce4:	f7fc ffac 	bl	19c40 <malloc>
   1cce8:	6260      	str	r0, [r4, #36]	; 0x24
   1ccea:	6046      	str	r6, [r0, #4]
   1ccec:	6086      	str	r6, [r0, #8]
   1ccee:	6006      	str	r6, [r0, #0]
   1ccf0:	60c6      	str	r6, [r0, #12]
   1ccf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1ccf4:	6819      	ldr	r1, [r3, #0]
   1ccf6:	b151      	cbz	r1, 1cd0e <_dtoa_r+0x3e>
   1ccf8:	685a      	ldr	r2, [r3, #4]
   1ccfa:	2301      	movs	r3, #1
   1ccfc:	4093      	lsls	r3, r2
   1ccfe:	604a      	str	r2, [r1, #4]
   1cd00:	608b      	str	r3, [r1, #8]
   1cd02:	4620      	mov	r0, r4
   1cd04:	f001 f9ac 	bl	1e060 <_Bfree>
   1cd08:	2200      	movs	r2, #0
   1cd0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1cd0c:	601a      	str	r2, [r3, #0]
   1cd0e:	9b03      	ldr	r3, [sp, #12]
   1cd10:	2b00      	cmp	r3, #0
   1cd12:	bfb7      	itett	lt
   1cd14:	2301      	movlt	r3, #1
   1cd16:	2300      	movge	r3, #0
   1cd18:	602b      	strlt	r3, [r5, #0]
   1cd1a:	9b03      	ldrlt	r3, [sp, #12]
   1cd1c:	bfae      	itee	ge
   1cd1e:	602b      	strge	r3, [r5, #0]
   1cd20:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   1cd24:	9303      	strlt	r3, [sp, #12]
   1cd26:	f8dd 900c 	ldr.w	r9, [sp, #12]
   1cd2a:	4bab      	ldr	r3, [pc, #684]	; (1cfd8 <_dtoa_r+0x308>)
   1cd2c:	ea33 0309 	bics.w	r3, r3, r9
   1cd30:	d11b      	bne.n	1cd6a <_dtoa_r+0x9a>
   1cd32:	f242 730f 	movw	r3, #9999	; 0x270f
   1cd36:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1cd38:	6013      	str	r3, [r2, #0]
   1cd3a:	9b02      	ldr	r3, [sp, #8]
   1cd3c:	b923      	cbnz	r3, 1cd48 <_dtoa_r+0x78>
   1cd3e:	f3c9 0013 	ubfx	r0, r9, #0, #20
   1cd42:	2800      	cmp	r0, #0
   1cd44:	f000 8583 	beq.w	1d84e <_dtoa_r+0xb7e>
   1cd48:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1cd4a:	b953      	cbnz	r3, 1cd62 <_dtoa_r+0x92>
   1cd4c:	4ba3      	ldr	r3, [pc, #652]	; (1cfdc <_dtoa_r+0x30c>)
   1cd4e:	e021      	b.n	1cd94 <_dtoa_r+0xc4>
   1cd50:	4ba3      	ldr	r3, [pc, #652]	; (1cfe0 <_dtoa_r+0x310>)
   1cd52:	9306      	str	r3, [sp, #24]
   1cd54:	3308      	adds	r3, #8
   1cd56:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1cd58:	6013      	str	r3, [r2, #0]
   1cd5a:	9806      	ldr	r0, [sp, #24]
   1cd5c:	b015      	add	sp, #84	; 0x54
   1cd5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd62:	4b9e      	ldr	r3, [pc, #632]	; (1cfdc <_dtoa_r+0x30c>)
   1cd64:	9306      	str	r3, [sp, #24]
   1cd66:	3303      	adds	r3, #3
   1cd68:	e7f5      	b.n	1cd56 <_dtoa_r+0x86>
   1cd6a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1cd6e:	2200      	movs	r2, #0
   1cd70:	2300      	movs	r3, #0
   1cd72:	4630      	mov	r0, r6
   1cd74:	4639      	mov	r1, r7
   1cd76:	f003 f865 	bl	1fe44 <__aeabi_dcmpeq>
   1cd7a:	4680      	mov	r8, r0
   1cd7c:	b160      	cbz	r0, 1cd98 <_dtoa_r+0xc8>
   1cd7e:	2301      	movs	r3, #1
   1cd80:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1cd82:	6013      	str	r3, [r2, #0]
   1cd84:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1cd86:	2b00      	cmp	r3, #0
   1cd88:	f000 855e 	beq.w	1d848 <_dtoa_r+0xb78>
   1cd8c:	4b95      	ldr	r3, [pc, #596]	; (1cfe4 <_dtoa_r+0x314>)
   1cd8e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1cd90:	6013      	str	r3, [r2, #0]
   1cd92:	3b01      	subs	r3, #1
   1cd94:	9306      	str	r3, [sp, #24]
   1cd96:	e7e0      	b.n	1cd5a <_dtoa_r+0x8a>
   1cd98:	ab12      	add	r3, sp, #72	; 0x48
   1cd9a:	9301      	str	r3, [sp, #4]
   1cd9c:	ab13      	add	r3, sp, #76	; 0x4c
   1cd9e:	9300      	str	r3, [sp, #0]
   1cda0:	4632      	mov	r2, r6
   1cda2:	463b      	mov	r3, r7
   1cda4:	4620      	mov	r0, r4
   1cda6:	f001 fc5d 	bl	1e664 <__d2b>
   1cdaa:	f3c9 550a 	ubfx	r5, r9, #20, #11
   1cdae:	4682      	mov	sl, r0
   1cdb0:	2d00      	cmp	r5, #0
   1cdb2:	d07d      	beq.n	1ceb0 <_dtoa_r+0x1e0>
   1cdb4:	4630      	mov	r0, r6
   1cdb6:	f3c7 0313 	ubfx	r3, r7, #0, #20
   1cdba:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   1cdbe:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   1cdc2:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   1cdc6:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   1cdca:	2200      	movs	r2, #0
   1cdcc:	4b86      	ldr	r3, [pc, #536]	; (1cfe8 <_dtoa_r+0x318>)
   1cdce:	f7fb feb7 	bl	18b40 <__aeabi_dsub>
   1cdd2:	a37b      	add	r3, pc, #492	; (adr r3, 1cfc0 <_dtoa_r+0x2f0>)
   1cdd4:	e9d3 2300 	ldrd	r2, r3, [r3]
   1cdd8:	f002 fdcc 	bl	1f974 <__aeabi_dmul>
   1cddc:	a37a      	add	r3, pc, #488	; (adr r3, 1cfc8 <_dtoa_r+0x2f8>)
   1cdde:	e9d3 2300 	ldrd	r2, r3, [r3]
   1cde2:	f7fb feaf 	bl	18b44 <__adddf3>
   1cde6:	4606      	mov	r6, r0
   1cde8:	4628      	mov	r0, r5
   1cdea:	460f      	mov	r7, r1
   1cdec:	f7fb fff6 	bl	18ddc <__aeabi_i2d>
   1cdf0:	a377      	add	r3, pc, #476	; (adr r3, 1cfd0 <_dtoa_r+0x300>)
   1cdf2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1cdf6:	f002 fdbd 	bl	1f974 <__aeabi_dmul>
   1cdfa:	4602      	mov	r2, r0
   1cdfc:	460b      	mov	r3, r1
   1cdfe:	4630      	mov	r0, r6
   1ce00:	4639      	mov	r1, r7
   1ce02:	f7fb fe9f 	bl	18b44 <__adddf3>
   1ce06:	4606      	mov	r6, r0
   1ce08:	460f      	mov	r7, r1
   1ce0a:	f003 f863 	bl	1fed4 <__aeabi_d2iz>
   1ce0e:	2200      	movs	r2, #0
   1ce10:	4683      	mov	fp, r0
   1ce12:	2300      	movs	r3, #0
   1ce14:	4630      	mov	r0, r6
   1ce16:	4639      	mov	r1, r7
   1ce18:	f003 f81e 	bl	1fe58 <__aeabi_dcmplt>
   1ce1c:	b158      	cbz	r0, 1ce36 <_dtoa_r+0x166>
   1ce1e:	4658      	mov	r0, fp
   1ce20:	f7fb ffdc 	bl	18ddc <__aeabi_i2d>
   1ce24:	4602      	mov	r2, r0
   1ce26:	460b      	mov	r3, r1
   1ce28:	4630      	mov	r0, r6
   1ce2a:	4639      	mov	r1, r7
   1ce2c:	f003 f80a 	bl	1fe44 <__aeabi_dcmpeq>
   1ce30:	b908      	cbnz	r0, 1ce36 <_dtoa_r+0x166>
   1ce32:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1ce36:	f1bb 0f16 	cmp.w	fp, #22
   1ce3a:	d858      	bhi.n	1ceee <_dtoa_r+0x21e>
   1ce3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1ce40:	496a      	ldr	r1, [pc, #424]	; (1cfec <_dtoa_r+0x31c>)
   1ce42:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
   1ce46:	e9d1 0100 	ldrd	r0, r1, [r1]
   1ce4a:	f003 f823 	bl	1fe94 <__aeabi_dcmpgt>
   1ce4e:	2800      	cmp	r0, #0
   1ce50:	d04f      	beq.n	1cef2 <_dtoa_r+0x222>
   1ce52:	2300      	movs	r3, #0
   1ce54:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1ce58:	930d      	str	r3, [sp, #52]	; 0x34
   1ce5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1ce5c:	1b5d      	subs	r5, r3, r5
   1ce5e:	1e6b      	subs	r3, r5, #1
   1ce60:	9307      	str	r3, [sp, #28]
   1ce62:	bf43      	ittte	mi
   1ce64:	2300      	movmi	r3, #0
   1ce66:	f1c5 0801 	rsbmi	r8, r5, #1
   1ce6a:	9307      	strmi	r3, [sp, #28]
   1ce6c:	f04f 0800 	movpl.w	r8, #0
   1ce70:	f1bb 0f00 	cmp.w	fp, #0
   1ce74:	db3f      	blt.n	1cef6 <_dtoa_r+0x226>
   1ce76:	9b07      	ldr	r3, [sp, #28]
   1ce78:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
   1ce7c:	445b      	add	r3, fp
   1ce7e:	9307      	str	r3, [sp, #28]
   1ce80:	2300      	movs	r3, #0
   1ce82:	9308      	str	r3, [sp, #32]
   1ce84:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1ce86:	2b09      	cmp	r3, #9
   1ce88:	f200 80b4 	bhi.w	1cff4 <_dtoa_r+0x324>
   1ce8c:	2b05      	cmp	r3, #5
   1ce8e:	bfc4      	itt	gt
   1ce90:	3b04      	subgt	r3, #4
   1ce92:	931e      	strgt	r3, [sp, #120]	; 0x78
   1ce94:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1ce96:	bfc8      	it	gt
   1ce98:	2600      	movgt	r6, #0
   1ce9a:	f1a3 0302 	sub.w	r3, r3, #2
   1ce9e:	bfd8      	it	le
   1cea0:	2601      	movle	r6, #1
   1cea2:	2b03      	cmp	r3, #3
   1cea4:	f200 80b2 	bhi.w	1d00c <_dtoa_r+0x33c>
   1cea8:	e8df f003 	tbb	[pc, r3]
   1ceac:	782d8684 	.word	0x782d8684
   1ceb0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1ceb2:	9d12      	ldr	r5, [sp, #72]	; 0x48
   1ceb4:	441d      	add	r5, r3
   1ceb6:	f205 4332 	addw	r3, r5, #1074	; 0x432
   1ceba:	2b20      	cmp	r3, #32
   1cebc:	dd11      	ble.n	1cee2 <_dtoa_r+0x212>
   1cebe:	9a02      	ldr	r2, [sp, #8]
   1cec0:	f205 4012 	addw	r0, r5, #1042	; 0x412
   1cec4:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   1cec8:	fa22 f000 	lsr.w	r0, r2, r0
   1cecc:	fa09 f303 	lsl.w	r3, r9, r3
   1ced0:	4318      	orrs	r0, r3
   1ced2:	f7fb ff73 	bl	18dbc <__aeabi_ui2d>
   1ced6:	2301      	movs	r3, #1
   1ced8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   1cedc:	3d01      	subs	r5, #1
   1cede:	9310      	str	r3, [sp, #64]	; 0x40
   1cee0:	e773      	b.n	1cdca <_dtoa_r+0xfa>
   1cee2:	f1c3 0020 	rsb	r0, r3, #32
   1cee6:	9b02      	ldr	r3, [sp, #8]
   1cee8:	fa03 f000 	lsl.w	r0, r3, r0
   1ceec:	e7f1      	b.n	1ced2 <_dtoa_r+0x202>
   1ceee:	2301      	movs	r3, #1
   1cef0:	e7b2      	b.n	1ce58 <_dtoa_r+0x188>
   1cef2:	900d      	str	r0, [sp, #52]	; 0x34
   1cef4:	e7b1      	b.n	1ce5a <_dtoa_r+0x18a>
   1cef6:	f1cb 0300 	rsb	r3, fp, #0
   1cefa:	9308      	str	r3, [sp, #32]
   1cefc:	2300      	movs	r3, #0
   1cefe:	eba8 080b 	sub.w	r8, r8, fp
   1cf02:	930c      	str	r3, [sp, #48]	; 0x30
   1cf04:	e7be      	b.n	1ce84 <_dtoa_r+0x1b4>
   1cf06:	2301      	movs	r3, #1
   1cf08:	9309      	str	r3, [sp, #36]	; 0x24
   1cf0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1cf0c:	2b00      	cmp	r3, #0
   1cf0e:	f340 8080 	ble.w	1d012 <_dtoa_r+0x342>
   1cf12:	4699      	mov	r9, r3
   1cf14:	9304      	str	r3, [sp, #16]
   1cf16:	2200      	movs	r2, #0
   1cf18:	2104      	movs	r1, #4
   1cf1a:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1cf1c:	606a      	str	r2, [r5, #4]
   1cf1e:	f101 0214 	add.w	r2, r1, #20
   1cf22:	429a      	cmp	r2, r3
   1cf24:	d97a      	bls.n	1d01c <_dtoa_r+0x34c>
   1cf26:	6869      	ldr	r1, [r5, #4]
   1cf28:	4620      	mov	r0, r4
   1cf2a:	f001 f865 	bl	1dff8 <_Balloc>
   1cf2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1cf30:	6028      	str	r0, [r5, #0]
   1cf32:	681b      	ldr	r3, [r3, #0]
   1cf34:	f1b9 0f0e 	cmp.w	r9, #14
   1cf38:	9306      	str	r3, [sp, #24]
   1cf3a:	f200 80f0 	bhi.w	1d11e <_dtoa_r+0x44e>
   1cf3e:	2e00      	cmp	r6, #0
   1cf40:	f000 80ed 	beq.w	1d11e <_dtoa_r+0x44e>
   1cf44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1cf48:	f1bb 0f00 	cmp.w	fp, #0
   1cf4c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   1cf50:	dd79      	ble.n	1d046 <_dtoa_r+0x376>
   1cf52:	4a26      	ldr	r2, [pc, #152]	; (1cfec <_dtoa_r+0x31c>)
   1cf54:	f00b 030f 	and.w	r3, fp, #15
   1cf58:	ea4f 162b 	mov.w	r6, fp, asr #4
   1cf5c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   1cf60:	06f0      	lsls	r0, r6, #27
   1cf62:	e9d3 2300 	ldrd	r2, r3, [r3]
   1cf66:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1cf6a:	d55c      	bpl.n	1d026 <_dtoa_r+0x356>
   1cf6c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1cf70:	4b1f      	ldr	r3, [pc, #124]	; (1cff0 <_dtoa_r+0x320>)
   1cf72:	2503      	movs	r5, #3
   1cf74:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   1cf78:	f002 fe26 	bl	1fbc8 <__aeabi_ddiv>
   1cf7c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1cf80:	f006 060f 	and.w	r6, r6, #15
   1cf84:	4f1a      	ldr	r7, [pc, #104]	; (1cff0 <_dtoa_r+0x320>)
   1cf86:	2e00      	cmp	r6, #0
   1cf88:	d14f      	bne.n	1d02a <_dtoa_r+0x35a>
   1cf8a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1cf8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1cf92:	f002 fe19 	bl	1fbc8 <__aeabi_ddiv>
   1cf96:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1cf9a:	e06e      	b.n	1d07a <_dtoa_r+0x3aa>
   1cf9c:	2301      	movs	r3, #1
   1cf9e:	9309      	str	r3, [sp, #36]	; 0x24
   1cfa0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1cfa2:	445b      	add	r3, fp
   1cfa4:	f103 0901 	add.w	r9, r3, #1
   1cfa8:	9304      	str	r3, [sp, #16]
   1cfaa:	464b      	mov	r3, r9
   1cfac:	2b01      	cmp	r3, #1
   1cfae:	bfb8      	it	lt
   1cfb0:	2301      	movlt	r3, #1
   1cfb2:	e7b0      	b.n	1cf16 <_dtoa_r+0x246>
   1cfb4:	2300      	movs	r3, #0
   1cfb6:	e7a7      	b.n	1cf08 <_dtoa_r+0x238>
   1cfb8:	2300      	movs	r3, #0
   1cfba:	e7f0      	b.n	1cf9e <_dtoa_r+0x2ce>
   1cfbc:	f3af 8000 	nop.w
   1cfc0:	636f4361 	.word	0x636f4361
   1cfc4:	3fd287a7 	.word	0x3fd287a7
   1cfc8:	8b60c8b3 	.word	0x8b60c8b3
   1cfcc:	3fc68a28 	.word	0x3fc68a28
   1cfd0:	509f79fb 	.word	0x509f79fb
   1cfd4:	3fd34413 	.word	0x3fd34413
   1cfd8:	7ff00000 	.word	0x7ff00000
   1cfdc:	0002135e 	.word	0x0002135e
   1cfe0:	00021355 	.word	0x00021355
   1cfe4:	00020f04 	.word	0x00020f04
   1cfe8:	3ff80000 	.word	0x3ff80000
   1cfec:	00021390 	.word	0x00021390
   1cff0:	00021368 	.word	0x00021368
   1cff4:	2601      	movs	r6, #1
   1cff6:	2300      	movs	r3, #0
   1cff8:	9609      	str	r6, [sp, #36]	; 0x24
   1cffa:	931e      	str	r3, [sp, #120]	; 0x78
   1cffc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1d000:	2200      	movs	r2, #0
   1d002:	9304      	str	r3, [sp, #16]
   1d004:	4699      	mov	r9, r3
   1d006:	2312      	movs	r3, #18
   1d008:	921f      	str	r2, [sp, #124]	; 0x7c
   1d00a:	e784      	b.n	1cf16 <_dtoa_r+0x246>
   1d00c:	2301      	movs	r3, #1
   1d00e:	9309      	str	r3, [sp, #36]	; 0x24
   1d010:	e7f4      	b.n	1cffc <_dtoa_r+0x32c>
   1d012:	2301      	movs	r3, #1
   1d014:	9304      	str	r3, [sp, #16]
   1d016:	4699      	mov	r9, r3
   1d018:	461a      	mov	r2, r3
   1d01a:	e7f5      	b.n	1d008 <_dtoa_r+0x338>
   1d01c:	686a      	ldr	r2, [r5, #4]
   1d01e:	0049      	lsls	r1, r1, #1
   1d020:	3201      	adds	r2, #1
   1d022:	606a      	str	r2, [r5, #4]
   1d024:	e77b      	b.n	1cf1e <_dtoa_r+0x24e>
   1d026:	2502      	movs	r5, #2
   1d028:	e7ac      	b.n	1cf84 <_dtoa_r+0x2b4>
   1d02a:	07f1      	lsls	r1, r6, #31
   1d02c:	d508      	bpl.n	1d040 <_dtoa_r+0x370>
   1d02e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d032:	e9d7 2300 	ldrd	r2, r3, [r7]
   1d036:	f002 fc9d 	bl	1f974 <__aeabi_dmul>
   1d03a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1d03e:	3501      	adds	r5, #1
   1d040:	1076      	asrs	r6, r6, #1
   1d042:	3708      	adds	r7, #8
   1d044:	e79f      	b.n	1cf86 <_dtoa_r+0x2b6>
   1d046:	f000 80a5 	beq.w	1d194 <_dtoa_r+0x4c4>
   1d04a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   1d04e:	f1cb 0600 	rsb	r6, fp, #0
   1d052:	4ba2      	ldr	r3, [pc, #648]	; (1d2dc <_dtoa_r+0x60c>)
   1d054:	f006 020f 	and.w	r2, r6, #15
   1d058:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   1d05c:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d060:	f002 fc88 	bl	1f974 <__aeabi_dmul>
   1d064:	2502      	movs	r5, #2
   1d066:	2300      	movs	r3, #0
   1d068:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d06c:	4f9c      	ldr	r7, [pc, #624]	; (1d2e0 <_dtoa_r+0x610>)
   1d06e:	1136      	asrs	r6, r6, #4
   1d070:	2e00      	cmp	r6, #0
   1d072:	f040 8084 	bne.w	1d17e <_dtoa_r+0x4ae>
   1d076:	2b00      	cmp	r3, #0
   1d078:	d18d      	bne.n	1cf96 <_dtoa_r+0x2c6>
   1d07a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1d07c:	2b00      	cmp	r3, #0
   1d07e:	f000 808b 	beq.w	1d198 <_dtoa_r+0x4c8>
   1d082:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d086:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
   1d08a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d08e:	2200      	movs	r2, #0
   1d090:	4b94      	ldr	r3, [pc, #592]	; (1d2e4 <_dtoa_r+0x614>)
   1d092:	f002 fee1 	bl	1fe58 <__aeabi_dcmplt>
   1d096:	2800      	cmp	r0, #0
   1d098:	d07e      	beq.n	1d198 <_dtoa_r+0x4c8>
   1d09a:	f1b9 0f00 	cmp.w	r9, #0
   1d09e:	d07b      	beq.n	1d198 <_dtoa_r+0x4c8>
   1d0a0:	9b04      	ldr	r3, [sp, #16]
   1d0a2:	2b00      	cmp	r3, #0
   1d0a4:	dd37      	ble.n	1d116 <_dtoa_r+0x446>
   1d0a6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d0aa:	2200      	movs	r2, #0
   1d0ac:	4b8e      	ldr	r3, [pc, #568]	; (1d2e8 <_dtoa_r+0x618>)
   1d0ae:	f002 fc61 	bl	1f974 <__aeabi_dmul>
   1d0b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d0b6:	9e04      	ldr	r6, [sp, #16]
   1d0b8:	f10b 37ff 	add.w	r7, fp, #4294967295	; 0xffffffff
   1d0bc:	3501      	adds	r5, #1
   1d0be:	4628      	mov	r0, r5
   1d0c0:	f7fb fe8c 	bl	18ddc <__aeabi_i2d>
   1d0c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d0c8:	f002 fc54 	bl	1f974 <__aeabi_dmul>
   1d0cc:	4b87      	ldr	r3, [pc, #540]	; (1d2ec <_dtoa_r+0x61c>)
   1d0ce:	2200      	movs	r2, #0
   1d0d0:	f7fb fd38 	bl	18b44 <__adddf3>
   1d0d4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1d0d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1d0da:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
   1d0de:	950b      	str	r5, [sp, #44]	; 0x2c
   1d0e0:	2e00      	cmp	r6, #0
   1d0e2:	d15c      	bne.n	1d19e <_dtoa_r+0x4ce>
   1d0e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d0e8:	2200      	movs	r2, #0
   1d0ea:	4b81      	ldr	r3, [pc, #516]	; (1d2f0 <_dtoa_r+0x620>)
   1d0ec:	f7fb fd28 	bl	18b40 <__aeabi_dsub>
   1d0f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1d0f2:	462b      	mov	r3, r5
   1d0f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d0f8:	f002 fecc 	bl	1fe94 <__aeabi_dcmpgt>
   1d0fc:	2800      	cmp	r0, #0
   1d0fe:	f040 82f7 	bne.w	1d6f0 <_dtoa_r+0xa20>
   1d102:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d106:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1d108:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   1d10c:	f002 fea4 	bl	1fe58 <__aeabi_dcmplt>
   1d110:	2800      	cmp	r0, #0
   1d112:	f040 82eb 	bne.w	1d6ec <_dtoa_r+0xa1c>
   1d116:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   1d11a:	e9cd 2302 	strd	r2, r3, [sp, #8]
   1d11e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1d120:	2b00      	cmp	r3, #0
   1d122:	f2c0 8150 	blt.w	1d3c6 <_dtoa_r+0x6f6>
   1d126:	f1bb 0f0e 	cmp.w	fp, #14
   1d12a:	f300 814c 	bgt.w	1d3c6 <_dtoa_r+0x6f6>
   1d12e:	4b6b      	ldr	r3, [pc, #428]	; (1d2dc <_dtoa_r+0x60c>)
   1d130:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   1d134:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d138:	e9cd 2304 	strd	r2, r3, [sp, #16]
   1d13c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1d13e:	2b00      	cmp	r3, #0
   1d140:	f280 80da 	bge.w	1d2f8 <_dtoa_r+0x628>
   1d144:	f1b9 0f00 	cmp.w	r9, #0
   1d148:	f300 80d6 	bgt.w	1d2f8 <_dtoa_r+0x628>
   1d14c:	f040 82cd 	bne.w	1d6ea <_dtoa_r+0xa1a>
   1d150:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1d154:	2200      	movs	r2, #0
   1d156:	4b66      	ldr	r3, [pc, #408]	; (1d2f0 <_dtoa_r+0x620>)
   1d158:	f002 fc0c 	bl	1f974 <__aeabi_dmul>
   1d15c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d160:	f002 fe8e 	bl	1fe80 <__aeabi_dcmpge>
   1d164:	464e      	mov	r6, r9
   1d166:	464f      	mov	r7, r9
   1d168:	2800      	cmp	r0, #0
   1d16a:	f040 82a4 	bne.w	1d6b6 <_dtoa_r+0x9e6>
   1d16e:	9b06      	ldr	r3, [sp, #24]
   1d170:	9a06      	ldr	r2, [sp, #24]
   1d172:	1c5d      	adds	r5, r3, #1
   1d174:	2331      	movs	r3, #49	; 0x31
   1d176:	f10b 0b01 	add.w	fp, fp, #1
   1d17a:	7013      	strb	r3, [r2, #0]
   1d17c:	e29f      	b.n	1d6be <_dtoa_r+0x9ee>
   1d17e:	07f2      	lsls	r2, r6, #31
   1d180:	d505      	bpl.n	1d18e <_dtoa_r+0x4be>
   1d182:	e9d7 2300 	ldrd	r2, r3, [r7]
   1d186:	f002 fbf5 	bl	1f974 <__aeabi_dmul>
   1d18a:	2301      	movs	r3, #1
   1d18c:	3501      	adds	r5, #1
   1d18e:	1076      	asrs	r6, r6, #1
   1d190:	3708      	adds	r7, #8
   1d192:	e76d      	b.n	1d070 <_dtoa_r+0x3a0>
   1d194:	2502      	movs	r5, #2
   1d196:	e770      	b.n	1d07a <_dtoa_r+0x3aa>
   1d198:	465f      	mov	r7, fp
   1d19a:	464e      	mov	r6, r9
   1d19c:	e78f      	b.n	1d0be <_dtoa_r+0x3ee>
   1d19e:	9a06      	ldr	r2, [sp, #24]
   1d1a0:	4b4e      	ldr	r3, [pc, #312]	; (1d2dc <_dtoa_r+0x60c>)
   1d1a2:	4432      	add	r2, r6
   1d1a4:	9211      	str	r2, [sp, #68]	; 0x44
   1d1a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1d1a8:	1e71      	subs	r1, r6, #1
   1d1aa:	2a00      	cmp	r2, #0
   1d1ac:	d048      	beq.n	1d240 <_dtoa_r+0x570>
   1d1ae:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   1d1b2:	e9d3 2300 	ldrd	r2, r3, [r3]
   1d1b6:	2000      	movs	r0, #0
   1d1b8:	494e      	ldr	r1, [pc, #312]	; (1d2f4 <_dtoa_r+0x624>)
   1d1ba:	f002 fd05 	bl	1fbc8 <__aeabi_ddiv>
   1d1be:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d1c2:	f7fb fcbd 	bl	18b40 <__aeabi_dsub>
   1d1c6:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1d1ca:	9d06      	ldr	r5, [sp, #24]
   1d1cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d1d0:	f002 fe80 	bl	1fed4 <__aeabi_d2iz>
   1d1d4:	4606      	mov	r6, r0
   1d1d6:	f7fb fe01 	bl	18ddc <__aeabi_i2d>
   1d1da:	4602      	mov	r2, r0
   1d1dc:	460b      	mov	r3, r1
   1d1de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d1e2:	f7fb fcad 	bl	18b40 <__aeabi_dsub>
   1d1e6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d1ea:	3630      	adds	r6, #48	; 0x30
   1d1ec:	f805 6b01 	strb.w	r6, [r5], #1
   1d1f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d1f4:	f002 fe30 	bl	1fe58 <__aeabi_dcmplt>
   1d1f8:	2800      	cmp	r0, #0
   1d1fa:	d164      	bne.n	1d2c6 <_dtoa_r+0x5f6>
   1d1fc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   1d200:	2000      	movs	r0, #0
   1d202:	4938      	ldr	r1, [pc, #224]	; (1d2e4 <_dtoa_r+0x614>)
   1d204:	f7fb fc9c 	bl	18b40 <__aeabi_dsub>
   1d208:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d20c:	f002 fe24 	bl	1fe58 <__aeabi_dcmplt>
   1d210:	2800      	cmp	r0, #0
   1d212:	f040 80b9 	bne.w	1d388 <_dtoa_r+0x6b8>
   1d216:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1d218:	429d      	cmp	r5, r3
   1d21a:	f43f af7c 	beq.w	1d116 <_dtoa_r+0x446>
   1d21e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d222:	2200      	movs	r2, #0
   1d224:	4b30      	ldr	r3, [pc, #192]	; (1d2e8 <_dtoa_r+0x618>)
   1d226:	f002 fba5 	bl	1f974 <__aeabi_dmul>
   1d22a:	2200      	movs	r2, #0
   1d22c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1d230:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d234:	4b2c      	ldr	r3, [pc, #176]	; (1d2e8 <_dtoa_r+0x618>)
   1d236:	f002 fb9d 	bl	1f974 <__aeabi_dmul>
   1d23a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d23e:	e7c5      	b.n	1d1cc <_dtoa_r+0x4fc>
   1d240:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   1d244:	e9d1 0100 	ldrd	r0, r1, [r1]
   1d248:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d24c:	f002 fb92 	bl	1f974 <__aeabi_dmul>
   1d250:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   1d254:	9d06      	ldr	r5, [sp, #24]
   1d256:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d25a:	f002 fe3b 	bl	1fed4 <__aeabi_d2iz>
   1d25e:	4606      	mov	r6, r0
   1d260:	f7fb fdbc 	bl	18ddc <__aeabi_i2d>
   1d264:	4602      	mov	r2, r0
   1d266:	460b      	mov	r3, r1
   1d268:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d26c:	f7fb fc68 	bl	18b40 <__aeabi_dsub>
   1d270:	3630      	adds	r6, #48	; 0x30
   1d272:	9b11      	ldr	r3, [sp, #68]	; 0x44
   1d274:	f805 6b01 	strb.w	r6, [r5], #1
   1d278:	42ab      	cmp	r3, r5
   1d27a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d27e:	f04f 0200 	mov.w	r2, #0
   1d282:	d124      	bne.n	1d2ce <_dtoa_r+0x5fe>
   1d284:	4b1b      	ldr	r3, [pc, #108]	; (1d2f4 <_dtoa_r+0x624>)
   1d286:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1d28a:	f7fb fc5b 	bl	18b44 <__adddf3>
   1d28e:	4602      	mov	r2, r0
   1d290:	460b      	mov	r3, r1
   1d292:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d296:	f002 fdfd 	bl	1fe94 <__aeabi_dcmpgt>
   1d29a:	2800      	cmp	r0, #0
   1d29c:	d174      	bne.n	1d388 <_dtoa_r+0x6b8>
   1d29e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   1d2a2:	2000      	movs	r0, #0
   1d2a4:	4913      	ldr	r1, [pc, #76]	; (1d2f4 <_dtoa_r+0x624>)
   1d2a6:	f7fb fc4b 	bl	18b40 <__aeabi_dsub>
   1d2aa:	4602      	mov	r2, r0
   1d2ac:	460b      	mov	r3, r1
   1d2ae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   1d2b2:	f002 fdd1 	bl	1fe58 <__aeabi_dcmplt>
   1d2b6:	2800      	cmp	r0, #0
   1d2b8:	f43f af2d 	beq.w	1d116 <_dtoa_r+0x446>
   1d2bc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1d2c0:	1e6a      	subs	r2, r5, #1
   1d2c2:	2b30      	cmp	r3, #48	; 0x30
   1d2c4:	d001      	beq.n	1d2ca <_dtoa_r+0x5fa>
   1d2c6:	46bb      	mov	fp, r7
   1d2c8:	e04d      	b.n	1d366 <_dtoa_r+0x696>
   1d2ca:	4615      	mov	r5, r2
   1d2cc:	e7f6      	b.n	1d2bc <_dtoa_r+0x5ec>
   1d2ce:	4b06      	ldr	r3, [pc, #24]	; (1d2e8 <_dtoa_r+0x618>)
   1d2d0:	f002 fb50 	bl	1f974 <__aeabi_dmul>
   1d2d4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   1d2d8:	e7bd      	b.n	1d256 <_dtoa_r+0x586>
   1d2da:	bf00      	nop
   1d2dc:	00021390 	.word	0x00021390
   1d2e0:	00021368 	.word	0x00021368
   1d2e4:	3ff00000 	.word	0x3ff00000
   1d2e8:	40240000 	.word	0x40240000
   1d2ec:	401c0000 	.word	0x401c0000
   1d2f0:	40140000 	.word	0x40140000
   1d2f4:	3fe00000 	.word	0x3fe00000
   1d2f8:	9d06      	ldr	r5, [sp, #24]
   1d2fa:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   1d2fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1d302:	4630      	mov	r0, r6
   1d304:	4639      	mov	r1, r7
   1d306:	f002 fc5f 	bl	1fbc8 <__aeabi_ddiv>
   1d30a:	f002 fde3 	bl	1fed4 <__aeabi_d2iz>
   1d30e:	4680      	mov	r8, r0
   1d310:	f7fb fd64 	bl	18ddc <__aeabi_i2d>
   1d314:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   1d318:	f002 fb2c 	bl	1f974 <__aeabi_dmul>
   1d31c:	4602      	mov	r2, r0
   1d31e:	460b      	mov	r3, r1
   1d320:	4630      	mov	r0, r6
   1d322:	4639      	mov	r1, r7
   1d324:	f7fb fc0c 	bl	18b40 <__aeabi_dsub>
   1d328:	f108 0630 	add.w	r6, r8, #48	; 0x30
   1d32c:	f805 6b01 	strb.w	r6, [r5], #1
   1d330:	9e06      	ldr	r6, [sp, #24]
   1d332:	4602      	mov	r2, r0
   1d334:	1bae      	subs	r6, r5, r6
   1d336:	45b1      	cmp	r9, r6
   1d338:	460b      	mov	r3, r1
   1d33a:	d137      	bne.n	1d3ac <_dtoa_r+0x6dc>
   1d33c:	f7fb fc02 	bl	18b44 <__adddf3>
   1d340:	4606      	mov	r6, r0
   1d342:	460f      	mov	r7, r1
   1d344:	4602      	mov	r2, r0
   1d346:	460b      	mov	r3, r1
   1d348:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1d34c:	f002 fd84 	bl	1fe58 <__aeabi_dcmplt>
   1d350:	b9c8      	cbnz	r0, 1d386 <_dtoa_r+0x6b6>
   1d352:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   1d356:	4632      	mov	r2, r6
   1d358:	463b      	mov	r3, r7
   1d35a:	f002 fd73 	bl	1fe44 <__aeabi_dcmpeq>
   1d35e:	b110      	cbz	r0, 1d366 <_dtoa_r+0x696>
   1d360:	f018 0f01 	tst.w	r8, #1
   1d364:	d10f      	bne.n	1d386 <_dtoa_r+0x6b6>
   1d366:	4651      	mov	r1, sl
   1d368:	4620      	mov	r0, r4
   1d36a:	f000 fe79 	bl	1e060 <_Bfree>
   1d36e:	2300      	movs	r3, #0
   1d370:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1d372:	702b      	strb	r3, [r5, #0]
   1d374:	f10b 0301 	add.w	r3, fp, #1
   1d378:	6013      	str	r3, [r2, #0]
   1d37a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1d37c:	2b00      	cmp	r3, #0
   1d37e:	f43f acec 	beq.w	1cd5a <_dtoa_r+0x8a>
   1d382:	601d      	str	r5, [r3, #0]
   1d384:	e4e9      	b.n	1cd5a <_dtoa_r+0x8a>
   1d386:	465f      	mov	r7, fp
   1d388:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   1d38c:	1e6b      	subs	r3, r5, #1
   1d38e:	2a39      	cmp	r2, #57	; 0x39
   1d390:	d106      	bne.n	1d3a0 <_dtoa_r+0x6d0>
   1d392:	9a06      	ldr	r2, [sp, #24]
   1d394:	429a      	cmp	r2, r3
   1d396:	d107      	bne.n	1d3a8 <_dtoa_r+0x6d8>
   1d398:	2330      	movs	r3, #48	; 0x30
   1d39a:	7013      	strb	r3, [r2, #0]
   1d39c:	4613      	mov	r3, r2
   1d39e:	3701      	adds	r7, #1
   1d3a0:	781a      	ldrb	r2, [r3, #0]
   1d3a2:	3201      	adds	r2, #1
   1d3a4:	701a      	strb	r2, [r3, #0]
   1d3a6:	e78e      	b.n	1d2c6 <_dtoa_r+0x5f6>
   1d3a8:	461d      	mov	r5, r3
   1d3aa:	e7ed      	b.n	1d388 <_dtoa_r+0x6b8>
   1d3ac:	2200      	movs	r2, #0
   1d3ae:	4bb5      	ldr	r3, [pc, #724]	; (1d684 <_dtoa_r+0x9b4>)
   1d3b0:	f002 fae0 	bl	1f974 <__aeabi_dmul>
   1d3b4:	2200      	movs	r2, #0
   1d3b6:	2300      	movs	r3, #0
   1d3b8:	4606      	mov	r6, r0
   1d3ba:	460f      	mov	r7, r1
   1d3bc:	f002 fd42 	bl	1fe44 <__aeabi_dcmpeq>
   1d3c0:	2800      	cmp	r0, #0
   1d3c2:	d09c      	beq.n	1d2fe <_dtoa_r+0x62e>
   1d3c4:	e7cf      	b.n	1d366 <_dtoa_r+0x696>
   1d3c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1d3c8:	2a00      	cmp	r2, #0
   1d3ca:	f000 8129 	beq.w	1d620 <_dtoa_r+0x950>
   1d3ce:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1d3d0:	2a01      	cmp	r2, #1
   1d3d2:	f300 810e 	bgt.w	1d5f2 <_dtoa_r+0x922>
   1d3d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1d3d8:	2a00      	cmp	r2, #0
   1d3da:	f000 8106 	beq.w	1d5ea <_dtoa_r+0x91a>
   1d3de:	f203 4333 	addw	r3, r3, #1075	; 0x433
   1d3e2:	4645      	mov	r5, r8
   1d3e4:	9e08      	ldr	r6, [sp, #32]
   1d3e6:	9a07      	ldr	r2, [sp, #28]
   1d3e8:	2101      	movs	r1, #1
   1d3ea:	441a      	add	r2, r3
   1d3ec:	4620      	mov	r0, r4
   1d3ee:	4498      	add	r8, r3
   1d3f0:	9207      	str	r2, [sp, #28]
   1d3f2:	f000 ff13 	bl	1e21c <__i2b>
   1d3f6:	4607      	mov	r7, r0
   1d3f8:	2d00      	cmp	r5, #0
   1d3fa:	dd0b      	ble.n	1d414 <_dtoa_r+0x744>
   1d3fc:	9b07      	ldr	r3, [sp, #28]
   1d3fe:	2b00      	cmp	r3, #0
   1d400:	dd08      	ble.n	1d414 <_dtoa_r+0x744>
   1d402:	42ab      	cmp	r3, r5
   1d404:	bfa8      	it	ge
   1d406:	462b      	movge	r3, r5
   1d408:	9a07      	ldr	r2, [sp, #28]
   1d40a:	eba8 0803 	sub.w	r8, r8, r3
   1d40e:	1aed      	subs	r5, r5, r3
   1d410:	1ad3      	subs	r3, r2, r3
   1d412:	9307      	str	r3, [sp, #28]
   1d414:	9b08      	ldr	r3, [sp, #32]
   1d416:	b1fb      	cbz	r3, 1d458 <_dtoa_r+0x788>
   1d418:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1d41a:	2b00      	cmp	r3, #0
   1d41c:	f000 8104 	beq.w	1d628 <_dtoa_r+0x958>
   1d420:	2e00      	cmp	r6, #0
   1d422:	dd11      	ble.n	1d448 <_dtoa_r+0x778>
   1d424:	4639      	mov	r1, r7
   1d426:	4632      	mov	r2, r6
   1d428:	4620      	mov	r0, r4
   1d42a:	f000 ff8d 	bl	1e348 <__pow5mult>
   1d42e:	4652      	mov	r2, sl
   1d430:	4601      	mov	r1, r0
   1d432:	4607      	mov	r7, r0
   1d434:	4620      	mov	r0, r4
   1d436:	f000 fefa 	bl	1e22e <__multiply>
   1d43a:	4651      	mov	r1, sl
   1d43c:	900a      	str	r0, [sp, #40]	; 0x28
   1d43e:	4620      	mov	r0, r4
   1d440:	f000 fe0e 	bl	1e060 <_Bfree>
   1d444:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1d446:	469a      	mov	sl, r3
   1d448:	9b08      	ldr	r3, [sp, #32]
   1d44a:	1b9a      	subs	r2, r3, r6
   1d44c:	d004      	beq.n	1d458 <_dtoa_r+0x788>
   1d44e:	4651      	mov	r1, sl
   1d450:	4620      	mov	r0, r4
   1d452:	f000 ff79 	bl	1e348 <__pow5mult>
   1d456:	4682      	mov	sl, r0
   1d458:	2101      	movs	r1, #1
   1d45a:	4620      	mov	r0, r4
   1d45c:	f000 fede 	bl	1e21c <__i2b>
   1d460:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1d462:	4606      	mov	r6, r0
   1d464:	2b00      	cmp	r3, #0
   1d466:	f340 80e1 	ble.w	1d62c <_dtoa_r+0x95c>
   1d46a:	461a      	mov	r2, r3
   1d46c:	4601      	mov	r1, r0
   1d46e:	4620      	mov	r0, r4
   1d470:	f000 ff6a 	bl	1e348 <__pow5mult>
   1d474:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1d476:	4606      	mov	r6, r0
   1d478:	2b01      	cmp	r3, #1
   1d47a:	f340 80da 	ble.w	1d632 <_dtoa_r+0x962>
   1d47e:	2300      	movs	r3, #0
   1d480:	9308      	str	r3, [sp, #32]
   1d482:	6933      	ldr	r3, [r6, #16]
   1d484:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   1d488:	6918      	ldr	r0, [r3, #16]
   1d48a:	f000 fe79 	bl	1e180 <__hi0bits>
   1d48e:	f1c0 0020 	rsb	r0, r0, #32
   1d492:	9b07      	ldr	r3, [sp, #28]
   1d494:	4418      	add	r0, r3
   1d496:	f010 001f 	ands.w	r0, r0, #31
   1d49a:	f000 80f0 	beq.w	1d67e <_dtoa_r+0x9ae>
   1d49e:	f1c0 0320 	rsb	r3, r0, #32
   1d4a2:	2b04      	cmp	r3, #4
   1d4a4:	f340 80e2 	ble.w	1d66c <_dtoa_r+0x99c>
   1d4a8:	9b07      	ldr	r3, [sp, #28]
   1d4aa:	f1c0 001c 	rsb	r0, r0, #28
   1d4ae:	4480      	add	r8, r0
   1d4b0:	4405      	add	r5, r0
   1d4b2:	4403      	add	r3, r0
   1d4b4:	9307      	str	r3, [sp, #28]
   1d4b6:	f1b8 0f00 	cmp.w	r8, #0
   1d4ba:	dd05      	ble.n	1d4c8 <_dtoa_r+0x7f8>
   1d4bc:	4651      	mov	r1, sl
   1d4be:	4642      	mov	r2, r8
   1d4c0:	4620      	mov	r0, r4
   1d4c2:	f000 ff8f 	bl	1e3e4 <__lshift>
   1d4c6:	4682      	mov	sl, r0
   1d4c8:	9b07      	ldr	r3, [sp, #28]
   1d4ca:	2b00      	cmp	r3, #0
   1d4cc:	dd05      	ble.n	1d4da <_dtoa_r+0x80a>
   1d4ce:	4631      	mov	r1, r6
   1d4d0:	461a      	mov	r2, r3
   1d4d2:	4620      	mov	r0, r4
   1d4d4:	f000 ff86 	bl	1e3e4 <__lshift>
   1d4d8:	4606      	mov	r6, r0
   1d4da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1d4dc:	2b00      	cmp	r3, #0
   1d4de:	f000 80d3 	beq.w	1d688 <_dtoa_r+0x9b8>
   1d4e2:	4631      	mov	r1, r6
   1d4e4:	4650      	mov	r0, sl
   1d4e6:	f000 ffce 	bl	1e486 <__mcmp>
   1d4ea:	2800      	cmp	r0, #0
   1d4ec:	f280 80cc 	bge.w	1d688 <_dtoa_r+0x9b8>
   1d4f0:	2300      	movs	r3, #0
   1d4f2:	4651      	mov	r1, sl
   1d4f4:	220a      	movs	r2, #10
   1d4f6:	4620      	mov	r0, r4
   1d4f8:	f000 fdc9 	bl	1e08e <__multadd>
   1d4fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1d4fe:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
   1d502:	4682      	mov	sl, r0
   1d504:	2b00      	cmp	r3, #0
   1d506:	f000 81a9 	beq.w	1d85c <_dtoa_r+0xb8c>
   1d50a:	2300      	movs	r3, #0
   1d50c:	4639      	mov	r1, r7
   1d50e:	220a      	movs	r2, #10
   1d510:	4620      	mov	r0, r4
   1d512:	f000 fdbc 	bl	1e08e <__multadd>
   1d516:	9b04      	ldr	r3, [sp, #16]
   1d518:	4607      	mov	r7, r0
   1d51a:	2b00      	cmp	r3, #0
   1d51c:	dc03      	bgt.n	1d526 <_dtoa_r+0x856>
   1d51e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1d520:	2b02      	cmp	r3, #2
   1d522:	f300 80b9 	bgt.w	1d698 <_dtoa_r+0x9c8>
   1d526:	2d00      	cmp	r5, #0
   1d528:	dd05      	ble.n	1d536 <_dtoa_r+0x866>
   1d52a:	4639      	mov	r1, r7
   1d52c:	462a      	mov	r2, r5
   1d52e:	4620      	mov	r0, r4
   1d530:	f000 ff58 	bl	1e3e4 <__lshift>
   1d534:	4607      	mov	r7, r0
   1d536:	9b08      	ldr	r3, [sp, #32]
   1d538:	2b00      	cmp	r3, #0
   1d53a:	f000 8110 	beq.w	1d75e <_dtoa_r+0xa8e>
   1d53e:	6879      	ldr	r1, [r7, #4]
   1d540:	4620      	mov	r0, r4
   1d542:	f000 fd59 	bl	1dff8 <_Balloc>
   1d546:	4605      	mov	r5, r0
   1d548:	693a      	ldr	r2, [r7, #16]
   1d54a:	f107 010c 	add.w	r1, r7, #12
   1d54e:	3202      	adds	r2, #2
   1d550:	0092      	lsls	r2, r2, #2
   1d552:	300c      	adds	r0, #12
   1d554:	f7fc fbb3 	bl	19cbe <memcpy>
   1d558:	2201      	movs	r2, #1
   1d55a:	4629      	mov	r1, r5
   1d55c:	4620      	mov	r0, r4
   1d55e:	f000 ff41 	bl	1e3e4 <__lshift>
   1d562:	9707      	str	r7, [sp, #28]
   1d564:	4607      	mov	r7, r0
   1d566:	9b02      	ldr	r3, [sp, #8]
   1d568:	f8dd 8018 	ldr.w	r8, [sp, #24]
   1d56c:	f003 0301 	and.w	r3, r3, #1
   1d570:	9308      	str	r3, [sp, #32]
   1d572:	4631      	mov	r1, r6
   1d574:	4650      	mov	r0, sl
   1d576:	f7ff fb1f 	bl	1cbb8 <quorem>
   1d57a:	9907      	ldr	r1, [sp, #28]
   1d57c:	4605      	mov	r5, r0
   1d57e:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1d582:	4650      	mov	r0, sl
   1d584:	f000 ff7f 	bl	1e486 <__mcmp>
   1d588:	463a      	mov	r2, r7
   1d58a:	9002      	str	r0, [sp, #8]
   1d58c:	4631      	mov	r1, r6
   1d58e:	4620      	mov	r0, r4
   1d590:	f000 ff93 	bl	1e4ba <__mdiff>
   1d594:	68c3      	ldr	r3, [r0, #12]
   1d596:	4602      	mov	r2, r0
   1d598:	2b00      	cmp	r3, #0
   1d59a:	f040 80e2 	bne.w	1d762 <_dtoa_r+0xa92>
   1d59e:	4601      	mov	r1, r0
   1d5a0:	9009      	str	r0, [sp, #36]	; 0x24
   1d5a2:	4650      	mov	r0, sl
   1d5a4:	f000 ff6f 	bl	1e486 <__mcmp>
   1d5a8:	4603      	mov	r3, r0
   1d5aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1d5ac:	4611      	mov	r1, r2
   1d5ae:	4620      	mov	r0, r4
   1d5b0:	9309      	str	r3, [sp, #36]	; 0x24
   1d5b2:	f000 fd55 	bl	1e060 <_Bfree>
   1d5b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1d5b8:	2b00      	cmp	r3, #0
   1d5ba:	f040 80d4 	bne.w	1d766 <_dtoa_r+0xa96>
   1d5be:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1d5c0:	2a00      	cmp	r2, #0
   1d5c2:	f040 80d0 	bne.w	1d766 <_dtoa_r+0xa96>
   1d5c6:	9a08      	ldr	r2, [sp, #32]
   1d5c8:	2a00      	cmp	r2, #0
   1d5ca:	f040 80cc 	bne.w	1d766 <_dtoa_r+0xa96>
   1d5ce:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1d5d2:	f000 80e8 	beq.w	1d7a6 <_dtoa_r+0xad6>
   1d5d6:	9b02      	ldr	r3, [sp, #8]
   1d5d8:	2b00      	cmp	r3, #0
   1d5da:	dd01      	ble.n	1d5e0 <_dtoa_r+0x910>
   1d5dc:	f105 0931 	add.w	r9, r5, #49	; 0x31
   1d5e0:	f108 0501 	add.w	r5, r8, #1
   1d5e4:	f888 9000 	strb.w	r9, [r8]
   1d5e8:	e06b      	b.n	1d6c2 <_dtoa_r+0x9f2>
   1d5ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
   1d5ec:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   1d5f0:	e6f7      	b.n	1d3e2 <_dtoa_r+0x712>
   1d5f2:	9b08      	ldr	r3, [sp, #32]
   1d5f4:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
   1d5f8:	42b3      	cmp	r3, r6
   1d5fa:	bfb7      	itett	lt
   1d5fc:	9b08      	ldrlt	r3, [sp, #32]
   1d5fe:	1b9e      	subge	r6, r3, r6
   1d600:	1af2      	sublt	r2, r6, r3
   1d602:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
   1d604:	bfbf      	itttt	lt
   1d606:	9608      	strlt	r6, [sp, #32]
   1d608:	189b      	addlt	r3, r3, r2
   1d60a:	930c      	strlt	r3, [sp, #48]	; 0x30
   1d60c:	2600      	movlt	r6, #0
   1d60e:	f1b9 0f00 	cmp.w	r9, #0
   1d612:	bfb9      	ittee	lt
   1d614:	eba8 0509 	sublt.w	r5, r8, r9
   1d618:	2300      	movlt	r3, #0
   1d61a:	4645      	movge	r5, r8
   1d61c:	464b      	movge	r3, r9
   1d61e:	e6e2      	b.n	1d3e6 <_dtoa_r+0x716>
   1d620:	9e08      	ldr	r6, [sp, #32]
   1d622:	4645      	mov	r5, r8
   1d624:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1d626:	e6e7      	b.n	1d3f8 <_dtoa_r+0x728>
   1d628:	9a08      	ldr	r2, [sp, #32]
   1d62a:	e710      	b.n	1d44e <_dtoa_r+0x77e>
   1d62c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1d62e:	2b01      	cmp	r3, #1
   1d630:	dc18      	bgt.n	1d664 <_dtoa_r+0x994>
   1d632:	9b02      	ldr	r3, [sp, #8]
   1d634:	b9b3      	cbnz	r3, 1d664 <_dtoa_r+0x994>
   1d636:	9b03      	ldr	r3, [sp, #12]
   1d638:	f3c3 0313 	ubfx	r3, r3, #0, #20
   1d63c:	b9a3      	cbnz	r3, 1d668 <_dtoa_r+0x998>
   1d63e:	9b03      	ldr	r3, [sp, #12]
   1d640:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
   1d644:	0d1b      	lsrs	r3, r3, #20
   1d646:	051b      	lsls	r3, r3, #20
   1d648:	b12b      	cbz	r3, 1d656 <_dtoa_r+0x986>
   1d64a:	9b07      	ldr	r3, [sp, #28]
   1d64c:	f108 0801 	add.w	r8, r8, #1
   1d650:	3301      	adds	r3, #1
   1d652:	9307      	str	r3, [sp, #28]
   1d654:	2301      	movs	r3, #1
   1d656:	9308      	str	r3, [sp, #32]
   1d658:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1d65a:	2b00      	cmp	r3, #0
   1d65c:	f47f af11 	bne.w	1d482 <_dtoa_r+0x7b2>
   1d660:	2001      	movs	r0, #1
   1d662:	e716      	b.n	1d492 <_dtoa_r+0x7c2>
   1d664:	2300      	movs	r3, #0
   1d666:	e7f6      	b.n	1d656 <_dtoa_r+0x986>
   1d668:	9b02      	ldr	r3, [sp, #8]
   1d66a:	e7f4      	b.n	1d656 <_dtoa_r+0x986>
   1d66c:	f43f af23 	beq.w	1d4b6 <_dtoa_r+0x7e6>
   1d670:	9a07      	ldr	r2, [sp, #28]
   1d672:	331c      	adds	r3, #28
   1d674:	441a      	add	r2, r3
   1d676:	4498      	add	r8, r3
   1d678:	441d      	add	r5, r3
   1d67a:	4613      	mov	r3, r2
   1d67c:	e71a      	b.n	1d4b4 <_dtoa_r+0x7e4>
   1d67e:	4603      	mov	r3, r0
   1d680:	e7f6      	b.n	1d670 <_dtoa_r+0x9a0>
   1d682:	bf00      	nop
   1d684:	40240000 	.word	0x40240000
   1d688:	f1b9 0f00 	cmp.w	r9, #0
   1d68c:	dc33      	bgt.n	1d6f6 <_dtoa_r+0xa26>
   1d68e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1d690:	2b02      	cmp	r3, #2
   1d692:	dd30      	ble.n	1d6f6 <_dtoa_r+0xa26>
   1d694:	f8cd 9010 	str.w	r9, [sp, #16]
   1d698:	9b04      	ldr	r3, [sp, #16]
   1d69a:	b963      	cbnz	r3, 1d6b6 <_dtoa_r+0x9e6>
   1d69c:	4631      	mov	r1, r6
   1d69e:	2205      	movs	r2, #5
   1d6a0:	4620      	mov	r0, r4
   1d6a2:	f000 fcf4 	bl	1e08e <__multadd>
   1d6a6:	4601      	mov	r1, r0
   1d6a8:	4606      	mov	r6, r0
   1d6aa:	4650      	mov	r0, sl
   1d6ac:	f000 feeb 	bl	1e486 <__mcmp>
   1d6b0:	2800      	cmp	r0, #0
   1d6b2:	f73f ad5c 	bgt.w	1d16e <_dtoa_r+0x49e>
   1d6b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1d6b8:	9d06      	ldr	r5, [sp, #24]
   1d6ba:	ea6f 0b03 	mvn.w	fp, r3
   1d6be:	2300      	movs	r3, #0
   1d6c0:	9307      	str	r3, [sp, #28]
   1d6c2:	4631      	mov	r1, r6
   1d6c4:	4620      	mov	r0, r4
   1d6c6:	f000 fccb 	bl	1e060 <_Bfree>
   1d6ca:	2f00      	cmp	r7, #0
   1d6cc:	f43f ae4b 	beq.w	1d366 <_dtoa_r+0x696>
   1d6d0:	9b07      	ldr	r3, [sp, #28]
   1d6d2:	b12b      	cbz	r3, 1d6e0 <_dtoa_r+0xa10>
   1d6d4:	42bb      	cmp	r3, r7
   1d6d6:	d003      	beq.n	1d6e0 <_dtoa_r+0xa10>
   1d6d8:	4619      	mov	r1, r3
   1d6da:	4620      	mov	r0, r4
   1d6dc:	f000 fcc0 	bl	1e060 <_Bfree>
   1d6e0:	4639      	mov	r1, r7
   1d6e2:	4620      	mov	r0, r4
   1d6e4:	f000 fcbc 	bl	1e060 <_Bfree>
   1d6e8:	e63d      	b.n	1d366 <_dtoa_r+0x696>
   1d6ea:	2600      	movs	r6, #0
   1d6ec:	4637      	mov	r7, r6
   1d6ee:	e7e2      	b.n	1d6b6 <_dtoa_r+0x9e6>
   1d6f0:	46bb      	mov	fp, r7
   1d6f2:	4637      	mov	r7, r6
   1d6f4:	e53b      	b.n	1d16e <_dtoa_r+0x49e>
   1d6f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1d6f8:	f8cd 9010 	str.w	r9, [sp, #16]
   1d6fc:	2b00      	cmp	r3, #0
   1d6fe:	f47f af12 	bne.w	1d526 <_dtoa_r+0x856>
   1d702:	9d06      	ldr	r5, [sp, #24]
   1d704:	4631      	mov	r1, r6
   1d706:	4650      	mov	r0, sl
   1d708:	f7ff fa56 	bl	1cbb8 <quorem>
   1d70c:	9b06      	ldr	r3, [sp, #24]
   1d70e:	f100 0930 	add.w	r9, r0, #48	; 0x30
   1d712:	f805 9b01 	strb.w	r9, [r5], #1
   1d716:	9a04      	ldr	r2, [sp, #16]
   1d718:	1aeb      	subs	r3, r5, r3
   1d71a:	429a      	cmp	r2, r3
   1d71c:	f300 8081 	bgt.w	1d822 <_dtoa_r+0xb52>
   1d720:	9b06      	ldr	r3, [sp, #24]
   1d722:	2a01      	cmp	r2, #1
   1d724:	bfac      	ite	ge
   1d726:	189b      	addge	r3, r3, r2
   1d728:	3301      	addlt	r3, #1
   1d72a:	4698      	mov	r8, r3
   1d72c:	2300      	movs	r3, #0
   1d72e:	9307      	str	r3, [sp, #28]
   1d730:	4651      	mov	r1, sl
   1d732:	2201      	movs	r2, #1
   1d734:	4620      	mov	r0, r4
   1d736:	f000 fe55 	bl	1e3e4 <__lshift>
   1d73a:	4631      	mov	r1, r6
   1d73c:	4682      	mov	sl, r0
   1d73e:	f000 fea2 	bl	1e486 <__mcmp>
   1d742:	2800      	cmp	r0, #0
   1d744:	dc34      	bgt.n	1d7b0 <_dtoa_r+0xae0>
   1d746:	d102      	bne.n	1d74e <_dtoa_r+0xa7e>
   1d748:	f019 0f01 	tst.w	r9, #1
   1d74c:	d130      	bne.n	1d7b0 <_dtoa_r+0xae0>
   1d74e:	4645      	mov	r5, r8
   1d750:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1d754:	1e6a      	subs	r2, r5, #1
   1d756:	2b30      	cmp	r3, #48	; 0x30
   1d758:	d1b3      	bne.n	1d6c2 <_dtoa_r+0x9f2>
   1d75a:	4615      	mov	r5, r2
   1d75c:	e7f8      	b.n	1d750 <_dtoa_r+0xa80>
   1d75e:	4638      	mov	r0, r7
   1d760:	e6ff      	b.n	1d562 <_dtoa_r+0x892>
   1d762:	2301      	movs	r3, #1
   1d764:	e722      	b.n	1d5ac <_dtoa_r+0x8dc>
   1d766:	9a02      	ldr	r2, [sp, #8]
   1d768:	2a00      	cmp	r2, #0
   1d76a:	db04      	blt.n	1d776 <_dtoa_r+0xaa6>
   1d76c:	d128      	bne.n	1d7c0 <_dtoa_r+0xaf0>
   1d76e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   1d770:	bb32      	cbnz	r2, 1d7c0 <_dtoa_r+0xaf0>
   1d772:	9a08      	ldr	r2, [sp, #32]
   1d774:	bb22      	cbnz	r2, 1d7c0 <_dtoa_r+0xaf0>
   1d776:	2b00      	cmp	r3, #0
   1d778:	f77f af32 	ble.w	1d5e0 <_dtoa_r+0x910>
   1d77c:	4651      	mov	r1, sl
   1d77e:	2201      	movs	r2, #1
   1d780:	4620      	mov	r0, r4
   1d782:	f000 fe2f 	bl	1e3e4 <__lshift>
   1d786:	4631      	mov	r1, r6
   1d788:	4682      	mov	sl, r0
   1d78a:	f000 fe7c 	bl	1e486 <__mcmp>
   1d78e:	2800      	cmp	r0, #0
   1d790:	dc05      	bgt.n	1d79e <_dtoa_r+0xace>
   1d792:	f47f af25 	bne.w	1d5e0 <_dtoa_r+0x910>
   1d796:	f019 0f01 	tst.w	r9, #1
   1d79a:	f43f af21 	beq.w	1d5e0 <_dtoa_r+0x910>
   1d79e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1d7a2:	f47f af1b 	bne.w	1d5dc <_dtoa_r+0x90c>
   1d7a6:	2339      	movs	r3, #57	; 0x39
   1d7a8:	f108 0801 	add.w	r8, r8, #1
   1d7ac:	f808 3c01 	strb.w	r3, [r8, #-1]
   1d7b0:	4645      	mov	r5, r8
   1d7b2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   1d7b6:	1e6a      	subs	r2, r5, #1
   1d7b8:	2b39      	cmp	r3, #57	; 0x39
   1d7ba:	d03a      	beq.n	1d832 <_dtoa_r+0xb62>
   1d7bc:	3301      	adds	r3, #1
   1d7be:	e03f      	b.n	1d840 <_dtoa_r+0xb70>
   1d7c0:	2b00      	cmp	r3, #0
   1d7c2:	f108 0501 	add.w	r5, r8, #1
   1d7c6:	dd05      	ble.n	1d7d4 <_dtoa_r+0xb04>
   1d7c8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
   1d7cc:	d0eb      	beq.n	1d7a6 <_dtoa_r+0xad6>
   1d7ce:	f109 0901 	add.w	r9, r9, #1
   1d7d2:	e707      	b.n	1d5e4 <_dtoa_r+0x914>
   1d7d4:	9b06      	ldr	r3, [sp, #24]
   1d7d6:	9a04      	ldr	r2, [sp, #16]
   1d7d8:	1aeb      	subs	r3, r5, r3
   1d7da:	4293      	cmp	r3, r2
   1d7dc:	46a8      	mov	r8, r5
   1d7de:	f805 9c01 	strb.w	r9, [r5, #-1]
   1d7e2:	d0a5      	beq.n	1d730 <_dtoa_r+0xa60>
   1d7e4:	4651      	mov	r1, sl
   1d7e6:	2300      	movs	r3, #0
   1d7e8:	220a      	movs	r2, #10
   1d7ea:	4620      	mov	r0, r4
   1d7ec:	f000 fc4f 	bl	1e08e <__multadd>
   1d7f0:	9b07      	ldr	r3, [sp, #28]
   1d7f2:	4682      	mov	sl, r0
   1d7f4:	42bb      	cmp	r3, r7
   1d7f6:	f04f 020a 	mov.w	r2, #10
   1d7fa:	f04f 0300 	mov.w	r3, #0
   1d7fe:	9907      	ldr	r1, [sp, #28]
   1d800:	4620      	mov	r0, r4
   1d802:	d104      	bne.n	1d80e <_dtoa_r+0xb3e>
   1d804:	f000 fc43 	bl	1e08e <__multadd>
   1d808:	9007      	str	r0, [sp, #28]
   1d80a:	4607      	mov	r7, r0
   1d80c:	e6b1      	b.n	1d572 <_dtoa_r+0x8a2>
   1d80e:	f000 fc3e 	bl	1e08e <__multadd>
   1d812:	2300      	movs	r3, #0
   1d814:	9007      	str	r0, [sp, #28]
   1d816:	220a      	movs	r2, #10
   1d818:	4639      	mov	r1, r7
   1d81a:	4620      	mov	r0, r4
   1d81c:	f000 fc37 	bl	1e08e <__multadd>
   1d820:	e7f3      	b.n	1d80a <_dtoa_r+0xb3a>
   1d822:	4651      	mov	r1, sl
   1d824:	2300      	movs	r3, #0
   1d826:	220a      	movs	r2, #10
   1d828:	4620      	mov	r0, r4
   1d82a:	f000 fc30 	bl	1e08e <__multadd>
   1d82e:	4682      	mov	sl, r0
   1d830:	e768      	b.n	1d704 <_dtoa_r+0xa34>
   1d832:	9b06      	ldr	r3, [sp, #24]
   1d834:	4293      	cmp	r3, r2
   1d836:	d105      	bne.n	1d844 <_dtoa_r+0xb74>
   1d838:	2331      	movs	r3, #49	; 0x31
   1d83a:	9a06      	ldr	r2, [sp, #24]
   1d83c:	f10b 0b01 	add.w	fp, fp, #1
   1d840:	7013      	strb	r3, [r2, #0]
   1d842:	e73e      	b.n	1d6c2 <_dtoa_r+0x9f2>
   1d844:	4615      	mov	r5, r2
   1d846:	e7b4      	b.n	1d7b2 <_dtoa_r+0xae2>
   1d848:	4b09      	ldr	r3, [pc, #36]	; (1d870 <_dtoa_r+0xba0>)
   1d84a:	f7ff baa3 	b.w	1cd94 <_dtoa_r+0xc4>
   1d84e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1d850:	2b00      	cmp	r3, #0
   1d852:	f47f aa7d 	bne.w	1cd50 <_dtoa_r+0x80>
   1d856:	4b07      	ldr	r3, [pc, #28]	; (1d874 <_dtoa_r+0xba4>)
   1d858:	f7ff ba9c 	b.w	1cd94 <_dtoa_r+0xc4>
   1d85c:	9b04      	ldr	r3, [sp, #16]
   1d85e:	2b00      	cmp	r3, #0
   1d860:	f73f af4f 	bgt.w	1d702 <_dtoa_r+0xa32>
   1d864:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1d866:	2b02      	cmp	r3, #2
   1d868:	f77f af4b 	ble.w	1d702 <_dtoa_r+0xa32>
   1d86c:	e714      	b.n	1d698 <_dtoa_r+0x9c8>
   1d86e:	bf00      	nop
   1d870:	00020f03 	.word	0x00020f03
   1d874:	00021355 	.word	0x00021355

0001d878 <_fstat_r>:
_fstat_r():
   1d878:	b538      	push	{r3, r4, r5, lr}
   1d87a:	2300      	movs	r3, #0
   1d87c:	4c06      	ldr	r4, [pc, #24]	; (1d898 <_fstat_r+0x20>)
   1d87e:	4605      	mov	r5, r0
   1d880:	4608      	mov	r0, r1
   1d882:	4611      	mov	r1, r2
   1d884:	6023      	str	r3, [r4, #0]
   1d886:	f7f9 febb 	bl	17600 <_fstat>
   1d88a:	1c43      	adds	r3, r0, #1
   1d88c:	d102      	bne.n	1d894 <_fstat_r+0x1c>
   1d88e:	6823      	ldr	r3, [r4, #0]
   1d890:	b103      	cbz	r3, 1d894 <_fstat_r+0x1c>
   1d892:	602b      	str	r3, [r5, #0]
   1d894:	bd38      	pop	{r3, r4, r5, pc}
   1d896:	bf00      	nop
   1d898:	2007c8c8 	.word	0x2007c8c8

0001d89c <rshift>:
rshift():
   1d89c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1d89e:	6906      	ldr	r6, [r0, #16]
   1d8a0:	114b      	asrs	r3, r1, #5
   1d8a2:	42b3      	cmp	r3, r6
   1d8a4:	f100 0514 	add.w	r5, r0, #20
   1d8a8:	da2b      	bge.n	1d902 <rshift+0x66>
   1d8aa:	f011 011f 	ands.w	r1, r1, #31
   1d8ae:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   1d8b2:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   1d8b6:	d108      	bne.n	1d8ca <rshift+0x2e>
   1d8b8:	4629      	mov	r1, r5
   1d8ba:	42b2      	cmp	r2, r6
   1d8bc:	460b      	mov	r3, r1
   1d8be:	d210      	bcs.n	1d8e2 <rshift+0x46>
   1d8c0:	f852 3b04 	ldr.w	r3, [r2], #4
   1d8c4:	f841 3b04 	str.w	r3, [r1], #4
   1d8c8:	e7f7      	b.n	1d8ba <rshift+0x1e>
   1d8ca:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
   1d8ce:	462b      	mov	r3, r5
   1d8d0:	f1c1 0e20 	rsb	lr, r1, #32
   1d8d4:	3204      	adds	r2, #4
   1d8d6:	40cc      	lsrs	r4, r1
   1d8d8:	42b2      	cmp	r2, r6
   1d8da:	d308      	bcc.n	1d8ee <rshift+0x52>
   1d8dc:	601c      	str	r4, [r3, #0]
   1d8de:	b104      	cbz	r4, 1d8e2 <rshift+0x46>
   1d8e0:	3304      	adds	r3, #4
   1d8e2:	1b5b      	subs	r3, r3, r5
   1d8e4:	109b      	asrs	r3, r3, #2
   1d8e6:	6103      	str	r3, [r0, #16]
   1d8e8:	b903      	cbnz	r3, 1d8ec <rshift+0x50>
   1d8ea:	6143      	str	r3, [r0, #20]
   1d8ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1d8ee:	6817      	ldr	r7, [r2, #0]
   1d8f0:	fa07 f70e 	lsl.w	r7, r7, lr
   1d8f4:	433c      	orrs	r4, r7
   1d8f6:	f843 4b04 	str.w	r4, [r3], #4
   1d8fa:	f852 4b04 	ldr.w	r4, [r2], #4
   1d8fe:	40cc      	lsrs	r4, r1
   1d900:	e7ea      	b.n	1d8d8 <rshift+0x3c>
   1d902:	462b      	mov	r3, r5
   1d904:	e7ed      	b.n	1d8e2 <rshift+0x46>

0001d906 <__hexdig_fun>:
__hexdig_fun():
   1d906:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   1d90a:	2b09      	cmp	r3, #9
   1d90c:	d802      	bhi.n	1d914 <__hexdig_fun+0xe>
   1d90e:	3820      	subs	r0, #32
   1d910:	b2c0      	uxtb	r0, r0
   1d912:	4770      	bx	lr
   1d914:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   1d918:	2b05      	cmp	r3, #5
   1d91a:	d801      	bhi.n	1d920 <__hexdig_fun+0x1a>
   1d91c:	3847      	subs	r0, #71	; 0x47
   1d91e:	e7f7      	b.n	1d910 <__hexdig_fun+0xa>
   1d920:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   1d924:	2b05      	cmp	r3, #5
   1d926:	d801      	bhi.n	1d92c <__hexdig_fun+0x26>
   1d928:	3827      	subs	r0, #39	; 0x27
   1d92a:	e7f1      	b.n	1d910 <__hexdig_fun+0xa>
   1d92c:	2000      	movs	r0, #0
   1d92e:	4770      	bx	lr

0001d930 <__gethex>:
__gethex():
   1d930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d934:	b08b      	sub	sp, #44	; 0x2c
   1d936:	9002      	str	r0, [sp, #8]
   1d938:	9816      	ldr	r0, [sp, #88]	; 0x58
   1d93a:	468a      	mov	sl, r1
   1d93c:	4690      	mov	r8, r2
   1d93e:	9306      	str	r3, [sp, #24]
   1d940:	f000 fb38 	bl	1dfb4 <__localeconv_l>
   1d944:	6803      	ldr	r3, [r0, #0]
   1d946:	f04f 0b00 	mov.w	fp, #0
   1d94a:	4618      	mov	r0, r3
   1d94c:	9303      	str	r3, [sp, #12]
   1d94e:	f7fd feac 	bl	1b6aa <strlen>
   1d952:	9b03      	ldr	r3, [sp, #12]
   1d954:	9001      	str	r0, [sp, #4]
   1d956:	4403      	add	r3, r0
   1d958:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   1d95c:	9307      	str	r3, [sp, #28]
   1d95e:	f8da 3000 	ldr.w	r3, [sl]
   1d962:	3302      	adds	r3, #2
   1d964:	461f      	mov	r7, r3
   1d966:	f813 0b01 	ldrb.w	r0, [r3], #1
   1d96a:	2830      	cmp	r0, #48	; 0x30
   1d96c:	d06c      	beq.n	1da48 <__gethex+0x118>
   1d96e:	f7ff ffca 	bl	1d906 <__hexdig_fun>
   1d972:	4604      	mov	r4, r0
   1d974:	2800      	cmp	r0, #0
   1d976:	d16a      	bne.n	1da4e <__gethex+0x11e>
   1d978:	9a01      	ldr	r2, [sp, #4]
   1d97a:	9903      	ldr	r1, [sp, #12]
   1d97c:	4638      	mov	r0, r7
   1d97e:	f7fd fe9c 	bl	1b6ba <strncmp>
   1d982:	2800      	cmp	r0, #0
   1d984:	d166      	bne.n	1da54 <__gethex+0x124>
   1d986:	9b01      	ldr	r3, [sp, #4]
   1d988:	5cf8      	ldrb	r0, [r7, r3]
   1d98a:	18fe      	adds	r6, r7, r3
   1d98c:	f7ff ffbb 	bl	1d906 <__hexdig_fun>
   1d990:	2800      	cmp	r0, #0
   1d992:	d062      	beq.n	1da5a <__gethex+0x12a>
   1d994:	4633      	mov	r3, r6
   1d996:	7818      	ldrb	r0, [r3, #0]
   1d998:	461f      	mov	r7, r3
   1d99a:	2830      	cmp	r0, #48	; 0x30
   1d99c:	f103 0301 	add.w	r3, r3, #1
   1d9a0:	d0f9      	beq.n	1d996 <__gethex+0x66>
   1d9a2:	f7ff ffb0 	bl	1d906 <__hexdig_fun>
   1d9a6:	fab0 f580 	clz	r5, r0
   1d9aa:	4634      	mov	r4, r6
   1d9ac:	f04f 0b01 	mov.w	fp, #1
   1d9b0:	096d      	lsrs	r5, r5, #5
   1d9b2:	463a      	mov	r2, r7
   1d9b4:	4616      	mov	r6, r2
   1d9b6:	7830      	ldrb	r0, [r6, #0]
   1d9b8:	3201      	adds	r2, #1
   1d9ba:	f7ff ffa4 	bl	1d906 <__hexdig_fun>
   1d9be:	2800      	cmp	r0, #0
   1d9c0:	d1f8      	bne.n	1d9b4 <__gethex+0x84>
   1d9c2:	9a01      	ldr	r2, [sp, #4]
   1d9c4:	9903      	ldr	r1, [sp, #12]
   1d9c6:	4630      	mov	r0, r6
   1d9c8:	f7fd fe77 	bl	1b6ba <strncmp>
   1d9cc:	b950      	cbnz	r0, 1d9e4 <__gethex+0xb4>
   1d9ce:	b954      	cbnz	r4, 1d9e6 <__gethex+0xb6>
   1d9d0:	9b01      	ldr	r3, [sp, #4]
   1d9d2:	18f4      	adds	r4, r6, r3
   1d9d4:	4622      	mov	r2, r4
   1d9d6:	4616      	mov	r6, r2
   1d9d8:	7830      	ldrb	r0, [r6, #0]
   1d9da:	3201      	adds	r2, #1
   1d9dc:	f7ff ff93 	bl	1d906 <__hexdig_fun>
   1d9e0:	2800      	cmp	r0, #0
   1d9e2:	d1f8      	bne.n	1d9d6 <__gethex+0xa6>
   1d9e4:	b10c      	cbz	r4, 1d9ea <__gethex+0xba>
   1d9e6:	1ba4      	subs	r4, r4, r6
   1d9e8:	00a4      	lsls	r4, r4, #2
   1d9ea:	7833      	ldrb	r3, [r6, #0]
   1d9ec:	2b50      	cmp	r3, #80	; 0x50
   1d9ee:	d001      	beq.n	1d9f4 <__gethex+0xc4>
   1d9f0:	2b70      	cmp	r3, #112	; 0x70
   1d9f2:	d140      	bne.n	1da76 <__gethex+0x146>
   1d9f4:	7873      	ldrb	r3, [r6, #1]
   1d9f6:	2b2b      	cmp	r3, #43	; 0x2b
   1d9f8:	d035      	beq.n	1da66 <__gethex+0x136>
   1d9fa:	2b2d      	cmp	r3, #45	; 0x2d
   1d9fc:	d02f      	beq.n	1da5e <__gethex+0x12e>
   1d9fe:	f04f 0900 	mov.w	r9, #0
   1da02:	1c71      	adds	r1, r6, #1
   1da04:	7808      	ldrb	r0, [r1, #0]
   1da06:	f7ff ff7e 	bl	1d906 <__hexdig_fun>
   1da0a:	1e43      	subs	r3, r0, #1
   1da0c:	b2db      	uxtb	r3, r3
   1da0e:	2b18      	cmp	r3, #24
   1da10:	d831      	bhi.n	1da76 <__gethex+0x146>
   1da12:	f1a0 0210 	sub.w	r2, r0, #16
   1da16:	f811 0f01 	ldrb.w	r0, [r1, #1]!
   1da1a:	f7ff ff74 	bl	1d906 <__hexdig_fun>
   1da1e:	1e43      	subs	r3, r0, #1
   1da20:	b2db      	uxtb	r3, r3
   1da22:	2b18      	cmp	r3, #24
   1da24:	d922      	bls.n	1da6c <__gethex+0x13c>
   1da26:	f1b9 0f00 	cmp.w	r9, #0
   1da2a:	d000      	beq.n	1da2e <__gethex+0xfe>
   1da2c:	4252      	negs	r2, r2
   1da2e:	4414      	add	r4, r2
   1da30:	f8ca 1000 	str.w	r1, [sl]
   1da34:	b30d      	cbz	r5, 1da7a <__gethex+0x14a>
   1da36:	f1bb 0f00 	cmp.w	fp, #0
   1da3a:	bf14      	ite	ne
   1da3c:	2700      	movne	r7, #0
   1da3e:	2706      	moveq	r7, #6
   1da40:	4638      	mov	r0, r7
   1da42:	b00b      	add	sp, #44	; 0x2c
   1da44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da48:	f10b 0b01 	add.w	fp, fp, #1
   1da4c:	e78a      	b.n	1d964 <__gethex+0x34>
   1da4e:	2500      	movs	r5, #0
   1da50:	462c      	mov	r4, r5
   1da52:	e7ae      	b.n	1d9b2 <__gethex+0x82>
   1da54:	463e      	mov	r6, r7
   1da56:	2501      	movs	r5, #1
   1da58:	e7c7      	b.n	1d9ea <__gethex+0xba>
   1da5a:	4604      	mov	r4, r0
   1da5c:	e7fb      	b.n	1da56 <__gethex+0x126>
   1da5e:	f04f 0901 	mov.w	r9, #1
   1da62:	1cb1      	adds	r1, r6, #2
   1da64:	e7ce      	b.n	1da04 <__gethex+0xd4>
   1da66:	f04f 0900 	mov.w	r9, #0
   1da6a:	e7fa      	b.n	1da62 <__gethex+0x132>
   1da6c:	230a      	movs	r3, #10
   1da6e:	fb03 0202 	mla	r2, r3, r2, r0
   1da72:	3a10      	subs	r2, #16
   1da74:	e7cf      	b.n	1da16 <__gethex+0xe6>
   1da76:	4631      	mov	r1, r6
   1da78:	e7da      	b.n	1da30 <__gethex+0x100>
   1da7a:	4629      	mov	r1, r5
   1da7c:	1bf3      	subs	r3, r6, r7
   1da7e:	3b01      	subs	r3, #1
   1da80:	2b07      	cmp	r3, #7
   1da82:	dc49      	bgt.n	1db18 <__gethex+0x1e8>
   1da84:	9802      	ldr	r0, [sp, #8]
   1da86:	f000 fab7 	bl	1dff8 <_Balloc>
   1da8a:	f04f 0b00 	mov.w	fp, #0
   1da8e:	4605      	mov	r5, r0
   1da90:	46da      	mov	sl, fp
   1da92:	9b01      	ldr	r3, [sp, #4]
   1da94:	f100 0914 	add.w	r9, r0, #20
   1da98:	f1c3 0301 	rsb	r3, r3, #1
   1da9c:	f8cd 9010 	str.w	r9, [sp, #16]
   1daa0:	9308      	str	r3, [sp, #32]
   1daa2:	42b7      	cmp	r7, r6
   1daa4:	d33b      	bcc.n	1db1e <__gethex+0x1ee>
   1daa6:	9804      	ldr	r0, [sp, #16]
   1daa8:	f840 ab04 	str.w	sl, [r0], #4
   1daac:	eba0 0009 	sub.w	r0, r0, r9
   1dab0:	1080      	asrs	r0, r0, #2
   1dab2:	6128      	str	r0, [r5, #16]
   1dab4:	0147      	lsls	r7, r0, #5
   1dab6:	4650      	mov	r0, sl
   1dab8:	f000 fb62 	bl	1e180 <__hi0bits>
   1dabc:	f8d8 6000 	ldr.w	r6, [r8]
   1dac0:	1a3f      	subs	r7, r7, r0
   1dac2:	42b7      	cmp	r7, r6
   1dac4:	dd64      	ble.n	1db90 <__gethex+0x260>
   1dac6:	1bbf      	subs	r7, r7, r6
   1dac8:	4639      	mov	r1, r7
   1daca:	4628      	mov	r0, r5
   1dacc:	f000 fe5b 	bl	1e786 <__any_on>
   1dad0:	4682      	mov	sl, r0
   1dad2:	b178      	cbz	r0, 1daf4 <__gethex+0x1c4>
   1dad4:	f04f 0a01 	mov.w	sl, #1
   1dad8:	1e7b      	subs	r3, r7, #1
   1dada:	1159      	asrs	r1, r3, #5
   1dadc:	f003 021f 	and.w	r2, r3, #31
   1dae0:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
   1dae4:	fa0a f202 	lsl.w	r2, sl, r2
   1dae8:	420a      	tst	r2, r1
   1daea:	d003      	beq.n	1daf4 <__gethex+0x1c4>
   1daec:	4553      	cmp	r3, sl
   1daee:	dc46      	bgt.n	1db7e <__gethex+0x24e>
   1daf0:	f04f 0a02 	mov.w	sl, #2
   1daf4:	4639      	mov	r1, r7
   1daf6:	4628      	mov	r0, r5
   1daf8:	f7ff fed0 	bl	1d89c <rshift>
   1dafc:	443c      	add	r4, r7
   1dafe:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1db02:	429c      	cmp	r4, r3
   1db04:	dd52      	ble.n	1dbac <__gethex+0x27c>
   1db06:	4629      	mov	r1, r5
   1db08:	9802      	ldr	r0, [sp, #8]
   1db0a:	f000 faa9 	bl	1e060 <_Bfree>
   1db0e:	2300      	movs	r3, #0
   1db10:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1db12:	27a3      	movs	r7, #163	; 0xa3
   1db14:	6013      	str	r3, [r2, #0]
   1db16:	e793      	b.n	1da40 <__gethex+0x110>
   1db18:	3101      	adds	r1, #1
   1db1a:	105b      	asrs	r3, r3, #1
   1db1c:	e7b0      	b.n	1da80 <__gethex+0x150>
   1db1e:	1e73      	subs	r3, r6, #1
   1db20:	9305      	str	r3, [sp, #20]
   1db22:	9a07      	ldr	r2, [sp, #28]
   1db24:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   1db28:	4293      	cmp	r3, r2
   1db2a:	d018      	beq.n	1db5e <__gethex+0x22e>
   1db2c:	f1bb 0f20 	cmp.w	fp, #32
   1db30:	d107      	bne.n	1db42 <__gethex+0x212>
   1db32:	9b04      	ldr	r3, [sp, #16]
   1db34:	f8c3 a000 	str.w	sl, [r3]
   1db38:	f04f 0a00 	mov.w	sl, #0
   1db3c:	46d3      	mov	fp, sl
   1db3e:	3304      	adds	r3, #4
   1db40:	9304      	str	r3, [sp, #16]
   1db42:	f816 0c01 	ldrb.w	r0, [r6, #-1]
   1db46:	f7ff fede 	bl	1d906 <__hexdig_fun>
   1db4a:	f000 000f 	and.w	r0, r0, #15
   1db4e:	fa00 f00b 	lsl.w	r0, r0, fp
   1db52:	ea4a 0a00 	orr.w	sl, sl, r0
   1db56:	f10b 0b04 	add.w	fp, fp, #4
   1db5a:	9b05      	ldr	r3, [sp, #20]
   1db5c:	e00d      	b.n	1db7a <__gethex+0x24a>
   1db5e:	9b05      	ldr	r3, [sp, #20]
   1db60:	9a08      	ldr	r2, [sp, #32]
   1db62:	4413      	add	r3, r2
   1db64:	429f      	cmp	r7, r3
   1db66:	d8e1      	bhi.n	1db2c <__gethex+0x1fc>
   1db68:	4618      	mov	r0, r3
   1db6a:	9a01      	ldr	r2, [sp, #4]
   1db6c:	9903      	ldr	r1, [sp, #12]
   1db6e:	9309      	str	r3, [sp, #36]	; 0x24
   1db70:	f7fd fda3 	bl	1b6ba <strncmp>
   1db74:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1db76:	2800      	cmp	r0, #0
   1db78:	d1d8      	bne.n	1db2c <__gethex+0x1fc>
   1db7a:	461e      	mov	r6, r3
   1db7c:	e791      	b.n	1daa2 <__gethex+0x172>
   1db7e:	1eb9      	subs	r1, r7, #2
   1db80:	4628      	mov	r0, r5
   1db82:	f000 fe00 	bl	1e786 <__any_on>
   1db86:	2800      	cmp	r0, #0
   1db88:	d0b2      	beq.n	1daf0 <__gethex+0x1c0>
   1db8a:	f04f 0a03 	mov.w	sl, #3
   1db8e:	e7b1      	b.n	1daf4 <__gethex+0x1c4>
   1db90:	da09      	bge.n	1dba6 <__gethex+0x276>
   1db92:	1bf7      	subs	r7, r6, r7
   1db94:	4629      	mov	r1, r5
   1db96:	463a      	mov	r2, r7
   1db98:	9802      	ldr	r0, [sp, #8]
   1db9a:	f000 fc23 	bl	1e3e4 <__lshift>
   1db9e:	4605      	mov	r5, r0
   1dba0:	1be4      	subs	r4, r4, r7
   1dba2:	f100 0914 	add.w	r9, r0, #20
   1dba6:	f04f 0a00 	mov.w	sl, #0
   1dbaa:	e7a8      	b.n	1dafe <__gethex+0x1ce>
   1dbac:	f8d8 0004 	ldr.w	r0, [r8, #4]
   1dbb0:	4284      	cmp	r4, r0
   1dbb2:	da6b      	bge.n	1dc8c <__gethex+0x35c>
   1dbb4:	1b04      	subs	r4, r0, r4
   1dbb6:	42a6      	cmp	r6, r4
   1dbb8:	dc2e      	bgt.n	1dc18 <__gethex+0x2e8>
   1dbba:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1dbbe:	2b02      	cmp	r3, #2
   1dbc0:	d022      	beq.n	1dc08 <__gethex+0x2d8>
   1dbc2:	2b03      	cmp	r3, #3
   1dbc4:	d024      	beq.n	1dc10 <__gethex+0x2e0>
   1dbc6:	2b01      	cmp	r3, #1
   1dbc8:	d115      	bne.n	1dbf6 <__gethex+0x2c6>
   1dbca:	42a6      	cmp	r6, r4
   1dbcc:	d113      	bne.n	1dbf6 <__gethex+0x2c6>
   1dbce:	2e01      	cmp	r6, #1
   1dbd0:	dc0b      	bgt.n	1dbea <__gethex+0x2ba>
   1dbd2:	f8d8 3004 	ldr.w	r3, [r8, #4]
   1dbd6:	9a06      	ldr	r2, [sp, #24]
   1dbd8:	2762      	movs	r7, #98	; 0x62
   1dbda:	6013      	str	r3, [r2, #0]
   1dbdc:	2301      	movs	r3, #1
   1dbde:	612b      	str	r3, [r5, #16]
   1dbe0:	f8c9 3000 	str.w	r3, [r9]
   1dbe4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1dbe6:	601d      	str	r5, [r3, #0]
   1dbe8:	e72a      	b.n	1da40 <__gethex+0x110>
   1dbea:	1e71      	subs	r1, r6, #1
   1dbec:	4628      	mov	r0, r5
   1dbee:	f000 fdca 	bl	1e786 <__any_on>
   1dbf2:	2800      	cmp	r0, #0
   1dbf4:	d1ed      	bne.n	1dbd2 <__gethex+0x2a2>
   1dbf6:	4629      	mov	r1, r5
   1dbf8:	9802      	ldr	r0, [sp, #8]
   1dbfa:	f000 fa31 	bl	1e060 <_Bfree>
   1dbfe:	2300      	movs	r3, #0
   1dc00:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1dc02:	2750      	movs	r7, #80	; 0x50
   1dc04:	6013      	str	r3, [r2, #0]
   1dc06:	e71b      	b.n	1da40 <__gethex+0x110>
   1dc08:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1dc0a:	2b00      	cmp	r3, #0
   1dc0c:	d0e1      	beq.n	1dbd2 <__gethex+0x2a2>
   1dc0e:	e7f2      	b.n	1dbf6 <__gethex+0x2c6>
   1dc10:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1dc12:	2b00      	cmp	r3, #0
   1dc14:	d1dd      	bne.n	1dbd2 <__gethex+0x2a2>
   1dc16:	e7ee      	b.n	1dbf6 <__gethex+0x2c6>
   1dc18:	1e67      	subs	r7, r4, #1
   1dc1a:	f1ba 0f00 	cmp.w	sl, #0
   1dc1e:	d132      	bne.n	1dc86 <__gethex+0x356>
   1dc20:	b127      	cbz	r7, 1dc2c <__gethex+0x2fc>
   1dc22:	4639      	mov	r1, r7
   1dc24:	4628      	mov	r0, r5
   1dc26:	f000 fdae 	bl	1e786 <__any_on>
   1dc2a:	4682      	mov	sl, r0
   1dc2c:	2301      	movs	r3, #1
   1dc2e:	117a      	asrs	r2, r7, #5
   1dc30:	f007 071f 	and.w	r7, r7, #31
   1dc34:	fa03 f707 	lsl.w	r7, r3, r7
   1dc38:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
   1dc3c:	4621      	mov	r1, r4
   1dc3e:	421f      	tst	r7, r3
   1dc40:	f04f 0702 	mov.w	r7, #2
   1dc44:	4628      	mov	r0, r5
   1dc46:	bf18      	it	ne
   1dc48:	f04a 0a02 	orrne.w	sl, sl, #2
   1dc4c:	1b36      	subs	r6, r6, r4
   1dc4e:	f7ff fe25 	bl	1d89c <rshift>
   1dc52:	f8d8 4004 	ldr.w	r4, [r8, #4]
   1dc56:	f1ba 0f00 	cmp.w	sl, #0
   1dc5a:	d045      	beq.n	1dce8 <__gethex+0x3b8>
   1dc5c:	f8d8 300c 	ldr.w	r3, [r8, #12]
   1dc60:	2b02      	cmp	r3, #2
   1dc62:	d015      	beq.n	1dc90 <__gethex+0x360>
   1dc64:	2b03      	cmp	r3, #3
   1dc66:	d017      	beq.n	1dc98 <__gethex+0x368>
   1dc68:	2b01      	cmp	r3, #1
   1dc6a:	d109      	bne.n	1dc80 <__gethex+0x350>
   1dc6c:	f01a 0f02 	tst.w	sl, #2
   1dc70:	d006      	beq.n	1dc80 <__gethex+0x350>
   1dc72:	f8d9 3000 	ldr.w	r3, [r9]
   1dc76:	ea4a 0a03 	orr.w	sl, sl, r3
   1dc7a:	f01a 0f01 	tst.w	sl, #1
   1dc7e:	d10e      	bne.n	1dc9e <__gethex+0x36e>
   1dc80:	f047 0710 	orr.w	r7, r7, #16
   1dc84:	e030      	b.n	1dce8 <__gethex+0x3b8>
   1dc86:	f04f 0a01 	mov.w	sl, #1
   1dc8a:	e7cf      	b.n	1dc2c <__gethex+0x2fc>
   1dc8c:	2701      	movs	r7, #1
   1dc8e:	e7e2      	b.n	1dc56 <__gethex+0x326>
   1dc90:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1dc92:	f1c3 0301 	rsb	r3, r3, #1
   1dc96:	9315      	str	r3, [sp, #84]	; 0x54
   1dc98:	9b15      	ldr	r3, [sp, #84]	; 0x54
   1dc9a:	2b00      	cmp	r3, #0
   1dc9c:	d0f0      	beq.n	1dc80 <__gethex+0x350>
   1dc9e:	2000      	movs	r0, #0
   1dca0:	f8d5 9010 	ldr.w	r9, [r5, #16]
   1dca4:	f105 0314 	add.w	r3, r5, #20
   1dca8:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   1dcac:	eb03 010a 	add.w	r1, r3, sl
   1dcb0:	681a      	ldr	r2, [r3, #0]
   1dcb2:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
   1dcb6:	d01c      	beq.n	1dcf2 <__gethex+0x3c2>
   1dcb8:	3201      	adds	r2, #1
   1dcba:	601a      	str	r2, [r3, #0]
   1dcbc:	2f02      	cmp	r7, #2
   1dcbe:	f105 0314 	add.w	r3, r5, #20
   1dcc2:	d138      	bne.n	1dd36 <__gethex+0x406>
   1dcc4:	f8d8 2000 	ldr.w	r2, [r8]
   1dcc8:	3a01      	subs	r2, #1
   1dcca:	4296      	cmp	r6, r2
   1dccc:	d10a      	bne.n	1dce4 <__gethex+0x3b4>
   1dcce:	2201      	movs	r2, #1
   1dcd0:	1171      	asrs	r1, r6, #5
   1dcd2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1dcd6:	f006 061f 	and.w	r6, r6, #31
   1dcda:	fa02 f606 	lsl.w	r6, r2, r6
   1dcde:	421e      	tst	r6, r3
   1dce0:	bf18      	it	ne
   1dce2:	4617      	movne	r7, r2
   1dce4:	f047 0720 	orr.w	r7, r7, #32
   1dce8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1dcea:	601d      	str	r5, [r3, #0]
   1dcec:	9b06      	ldr	r3, [sp, #24]
   1dcee:	601c      	str	r4, [r3, #0]
   1dcf0:	e6a6      	b.n	1da40 <__gethex+0x110>
   1dcf2:	f843 0b04 	str.w	r0, [r3], #4
   1dcf6:	4299      	cmp	r1, r3
   1dcf8:	d8da      	bhi.n	1dcb0 <__gethex+0x380>
   1dcfa:	68ab      	ldr	r3, [r5, #8]
   1dcfc:	4599      	cmp	r9, r3
   1dcfe:	db12      	blt.n	1dd26 <__gethex+0x3f6>
   1dd00:	6869      	ldr	r1, [r5, #4]
   1dd02:	9802      	ldr	r0, [sp, #8]
   1dd04:	3101      	adds	r1, #1
   1dd06:	f000 f977 	bl	1dff8 <_Balloc>
   1dd0a:	4683      	mov	fp, r0
   1dd0c:	692a      	ldr	r2, [r5, #16]
   1dd0e:	f105 010c 	add.w	r1, r5, #12
   1dd12:	3202      	adds	r2, #2
   1dd14:	0092      	lsls	r2, r2, #2
   1dd16:	300c      	adds	r0, #12
   1dd18:	f7fb ffd1 	bl	19cbe <memcpy>
   1dd1c:	4629      	mov	r1, r5
   1dd1e:	9802      	ldr	r0, [sp, #8]
   1dd20:	f000 f99e 	bl	1e060 <_Bfree>
   1dd24:	465d      	mov	r5, fp
   1dd26:	692b      	ldr	r3, [r5, #16]
   1dd28:	1c5a      	adds	r2, r3, #1
   1dd2a:	612a      	str	r2, [r5, #16]
   1dd2c:	2201      	movs	r2, #1
   1dd2e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   1dd32:	615a      	str	r2, [r3, #20]
   1dd34:	e7c2      	b.n	1dcbc <__gethex+0x38c>
   1dd36:	692a      	ldr	r2, [r5, #16]
   1dd38:	4591      	cmp	r9, r2
   1dd3a:	da0b      	bge.n	1dd54 <__gethex+0x424>
   1dd3c:	2101      	movs	r1, #1
   1dd3e:	4628      	mov	r0, r5
   1dd40:	f7ff fdac 	bl	1d89c <rshift>
   1dd44:	f8d8 3008 	ldr.w	r3, [r8, #8]
   1dd48:	3401      	adds	r4, #1
   1dd4a:	429c      	cmp	r4, r3
   1dd4c:	f73f aedb 	bgt.w	1db06 <__gethex+0x1d6>
   1dd50:	2701      	movs	r7, #1
   1dd52:	e7c7      	b.n	1dce4 <__gethex+0x3b4>
   1dd54:	f016 061f 	ands.w	r6, r6, #31
   1dd58:	d0fa      	beq.n	1dd50 <__gethex+0x420>
   1dd5a:	449a      	add	sl, r3
   1dd5c:	f85a 0c04 	ldr.w	r0, [sl, #-4]
   1dd60:	f000 fa0e 	bl	1e180 <__hi0bits>
   1dd64:	f1c6 0620 	rsb	r6, r6, #32
   1dd68:	42b0      	cmp	r0, r6
   1dd6a:	dbe7      	blt.n	1dd3c <__gethex+0x40c>
   1dd6c:	e7f0      	b.n	1dd50 <__gethex+0x420>

0001dd6e <L_shift>:
L_shift():
   1dd6e:	f1c2 0208 	rsb	r2, r2, #8
   1dd72:	0092      	lsls	r2, r2, #2
   1dd74:	b570      	push	{r4, r5, r6, lr}
   1dd76:	f1c2 0620 	rsb	r6, r2, #32
   1dd7a:	6843      	ldr	r3, [r0, #4]
   1dd7c:	6804      	ldr	r4, [r0, #0]
   1dd7e:	fa03 f506 	lsl.w	r5, r3, r6
   1dd82:	432c      	orrs	r4, r5
   1dd84:	40d3      	lsrs	r3, r2
   1dd86:	6004      	str	r4, [r0, #0]
   1dd88:	f840 3f04 	str.w	r3, [r0, #4]!
   1dd8c:	4288      	cmp	r0, r1
   1dd8e:	d3f4      	bcc.n	1dd7a <L_shift+0xc>
   1dd90:	bd70      	pop	{r4, r5, r6, pc}

0001dd92 <__match>:
__match():
   1dd92:	b530      	push	{r4, r5, lr}
   1dd94:	6803      	ldr	r3, [r0, #0]
   1dd96:	f811 4b01 	ldrb.w	r4, [r1], #1
   1dd9a:	3301      	adds	r3, #1
   1dd9c:	b914      	cbnz	r4, 1dda4 <__match+0x12>
   1dd9e:	6003      	str	r3, [r0, #0]
   1dda0:	2001      	movs	r0, #1
   1dda2:	bd30      	pop	{r4, r5, pc}
   1dda4:	781a      	ldrb	r2, [r3, #0]
   1dda6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   1ddaa:	2d19      	cmp	r5, #25
   1ddac:	bf98      	it	ls
   1ddae:	3220      	addls	r2, #32
   1ddb0:	42a2      	cmp	r2, r4
   1ddb2:	d0f0      	beq.n	1dd96 <__match+0x4>
   1ddb4:	2000      	movs	r0, #0
   1ddb6:	bd30      	pop	{r4, r5, pc}

0001ddb8 <__hexnan>:
__hexnan():
   1ddb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ddbc:	2500      	movs	r5, #0
   1ddbe:	680b      	ldr	r3, [r1, #0]
   1ddc0:	4682      	mov	sl, r0
   1ddc2:	115f      	asrs	r7, r3, #5
   1ddc4:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   1ddc8:	f013 031f 	ands.w	r3, r3, #31
   1ddcc:	bf18      	it	ne
   1ddce:	3704      	addne	r7, #4
   1ddd0:	1f3e      	subs	r6, r7, #4
   1ddd2:	4690      	mov	r8, r2
   1ddd4:	46b1      	mov	r9, r6
   1ddd6:	4634      	mov	r4, r6
   1ddd8:	46ab      	mov	fp, r5
   1ddda:	b087      	sub	sp, #28
   1dddc:	6801      	ldr	r1, [r0, #0]
   1ddde:	9302      	str	r3, [sp, #8]
   1dde0:	f847 5c04 	str.w	r5, [r7, #-4]
   1dde4:	9501      	str	r5, [sp, #4]
   1dde6:	784a      	ldrb	r2, [r1, #1]
   1dde8:	1c4b      	adds	r3, r1, #1
   1ddea:	9303      	str	r3, [sp, #12]
   1ddec:	b342      	cbz	r2, 1de40 <__hexnan+0x88>
   1ddee:	4610      	mov	r0, r2
   1ddf0:	9105      	str	r1, [sp, #20]
   1ddf2:	9204      	str	r2, [sp, #16]
   1ddf4:	f7ff fd87 	bl	1d906 <__hexdig_fun>
   1ddf8:	2800      	cmp	r0, #0
   1ddfa:	d143      	bne.n	1de84 <__hexnan+0xcc>
   1ddfc:	9a04      	ldr	r2, [sp, #16]
   1ddfe:	9905      	ldr	r1, [sp, #20]
   1de00:	2a20      	cmp	r2, #32
   1de02:	d818      	bhi.n	1de36 <__hexnan+0x7e>
   1de04:	9b01      	ldr	r3, [sp, #4]
   1de06:	459b      	cmp	fp, r3
   1de08:	dd13      	ble.n	1de32 <__hexnan+0x7a>
   1de0a:	454c      	cmp	r4, r9
   1de0c:	d206      	bcs.n	1de1c <__hexnan+0x64>
   1de0e:	2d07      	cmp	r5, #7
   1de10:	dc04      	bgt.n	1de1c <__hexnan+0x64>
   1de12:	462a      	mov	r2, r5
   1de14:	4649      	mov	r1, r9
   1de16:	4620      	mov	r0, r4
   1de18:	f7ff ffa9 	bl	1dd6e <L_shift>
   1de1c:	4544      	cmp	r4, r8
   1de1e:	d944      	bls.n	1deaa <__hexnan+0xf2>
   1de20:	2300      	movs	r3, #0
   1de22:	f1a4 0904 	sub.w	r9, r4, #4
   1de26:	f844 3c04 	str.w	r3, [r4, #-4]
   1de2a:	461d      	mov	r5, r3
   1de2c:	464c      	mov	r4, r9
   1de2e:	f8cd b004 	str.w	fp, [sp, #4]
   1de32:	9903      	ldr	r1, [sp, #12]
   1de34:	e7d7      	b.n	1dde6 <__hexnan+0x2e>
   1de36:	2a29      	cmp	r2, #41	; 0x29
   1de38:	d14a      	bne.n	1ded0 <__hexnan+0x118>
   1de3a:	3102      	adds	r1, #2
   1de3c:	f8ca 1000 	str.w	r1, [sl]
   1de40:	f1bb 0f00 	cmp.w	fp, #0
   1de44:	d044      	beq.n	1ded0 <__hexnan+0x118>
   1de46:	454c      	cmp	r4, r9
   1de48:	d206      	bcs.n	1de58 <__hexnan+0xa0>
   1de4a:	2d07      	cmp	r5, #7
   1de4c:	dc04      	bgt.n	1de58 <__hexnan+0xa0>
   1de4e:	462a      	mov	r2, r5
   1de50:	4649      	mov	r1, r9
   1de52:	4620      	mov	r0, r4
   1de54:	f7ff ff8b 	bl	1dd6e <L_shift>
   1de58:	4544      	cmp	r4, r8
   1de5a:	d928      	bls.n	1deae <__hexnan+0xf6>
   1de5c:	4643      	mov	r3, r8
   1de5e:	f854 2b04 	ldr.w	r2, [r4], #4
   1de62:	42a6      	cmp	r6, r4
   1de64:	f843 2b04 	str.w	r2, [r3], #4
   1de68:	d2f9      	bcs.n	1de5e <__hexnan+0xa6>
   1de6a:	2200      	movs	r2, #0
   1de6c:	f843 2b04 	str.w	r2, [r3], #4
   1de70:	429e      	cmp	r6, r3
   1de72:	d2fb      	bcs.n	1de6c <__hexnan+0xb4>
   1de74:	6833      	ldr	r3, [r6, #0]
   1de76:	b91b      	cbnz	r3, 1de80 <__hexnan+0xc8>
   1de78:	4546      	cmp	r6, r8
   1de7a:	d127      	bne.n	1decc <__hexnan+0x114>
   1de7c:	2301      	movs	r3, #1
   1de7e:	6033      	str	r3, [r6, #0]
   1de80:	2005      	movs	r0, #5
   1de82:	e026      	b.n	1ded2 <__hexnan+0x11a>
   1de84:	3501      	adds	r5, #1
   1de86:	2d08      	cmp	r5, #8
   1de88:	f10b 0b01 	add.w	fp, fp, #1
   1de8c:	dd06      	ble.n	1de9c <__hexnan+0xe4>
   1de8e:	4544      	cmp	r4, r8
   1de90:	d9cf      	bls.n	1de32 <__hexnan+0x7a>
   1de92:	2300      	movs	r3, #0
   1de94:	2501      	movs	r5, #1
   1de96:	f844 3c04 	str.w	r3, [r4, #-4]
   1de9a:	3c04      	subs	r4, #4
   1de9c:	6822      	ldr	r2, [r4, #0]
   1de9e:	f000 000f 	and.w	r0, r0, #15
   1dea2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
   1dea6:	6020      	str	r0, [r4, #0]
   1dea8:	e7c3      	b.n	1de32 <__hexnan+0x7a>
   1deaa:	2508      	movs	r5, #8
   1deac:	e7c1      	b.n	1de32 <__hexnan+0x7a>
   1deae:	9b02      	ldr	r3, [sp, #8]
   1deb0:	2b00      	cmp	r3, #0
   1deb2:	d0df      	beq.n	1de74 <__hexnan+0xbc>
   1deb4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1deb8:	f1c3 0320 	rsb	r3, r3, #32
   1debc:	fa22 f303 	lsr.w	r3, r2, r3
   1dec0:	f857 2c04 	ldr.w	r2, [r7, #-4]
   1dec4:	401a      	ands	r2, r3
   1dec6:	f847 2c04 	str.w	r2, [r7, #-4]
   1deca:	e7d3      	b.n	1de74 <__hexnan+0xbc>
   1decc:	3e04      	subs	r6, #4
   1dece:	e7d1      	b.n	1de74 <__hexnan+0xbc>
   1ded0:	2004      	movs	r0, #4
   1ded2:	b007      	add	sp, #28
   1ded4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ded8 <_findenv_r>:
_findenv_r():
   1ded8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1dedc:	4606      	mov	r6, r0
   1dede:	468a      	mov	sl, r1
   1dee0:	4617      	mov	r7, r2
   1dee2:	f001 fd3b 	bl	1f95c <__env_lock>
   1dee6:	4b1b      	ldr	r3, [pc, #108]	; (1df54 <_findenv_r+0x7c>)
   1dee8:	f8d3 8000 	ldr.w	r8, [r3]
   1deec:	4699      	mov	r9, r3
   1deee:	f1b8 0f00 	cmp.w	r8, #0
   1def2:	d007      	beq.n	1df04 <_findenv_r+0x2c>
   1def4:	4654      	mov	r4, sl
   1def6:	4623      	mov	r3, r4
   1def8:	f813 2b01 	ldrb.w	r2, [r3], #1
   1defc:	b332      	cbz	r2, 1df4c <_findenv_r+0x74>
   1defe:	2a3d      	cmp	r2, #61	; 0x3d
   1df00:	461c      	mov	r4, r3
   1df02:	d1f8      	bne.n	1def6 <_findenv_r+0x1e>
   1df04:	4630      	mov	r0, r6
   1df06:	f001 fd2a 	bl	1f95e <__env_unlock>
   1df0a:	2000      	movs	r0, #0
   1df0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1df10:	f108 0804 	add.w	r8, r8, #4
   1df14:	f8d8 0000 	ldr.w	r0, [r8]
   1df18:	2800      	cmp	r0, #0
   1df1a:	d0f3      	beq.n	1df04 <_findenv_r+0x2c>
   1df1c:	4622      	mov	r2, r4
   1df1e:	4651      	mov	r1, sl
   1df20:	f7fd fbcb 	bl	1b6ba <strncmp>
   1df24:	2800      	cmp	r0, #0
   1df26:	d1f3      	bne.n	1df10 <_findenv_r+0x38>
   1df28:	f8d8 3000 	ldr.w	r3, [r8]
   1df2c:	191d      	adds	r5, r3, r4
   1df2e:	5d1b      	ldrb	r3, [r3, r4]
   1df30:	2b3d      	cmp	r3, #61	; 0x3d
   1df32:	d1ed      	bne.n	1df10 <_findenv_r+0x38>
   1df34:	f8d9 3000 	ldr.w	r3, [r9]
   1df38:	4630      	mov	r0, r6
   1df3a:	eba8 0303 	sub.w	r3, r8, r3
   1df3e:	109b      	asrs	r3, r3, #2
   1df40:	603b      	str	r3, [r7, #0]
   1df42:	f001 fd0c 	bl	1f95e <__env_unlock>
   1df46:	1c68      	adds	r0, r5, #1
   1df48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1df4c:	eba4 040a 	sub.w	r4, r4, sl
   1df50:	e7e0      	b.n	1df14 <_findenv_r+0x3c>
   1df52:	bf00      	nop
   1df54:	2007c2f8 	.word	0x2007c2f8

0001df58 <_getenv_r>:
_getenv_r():
   1df58:	b507      	push	{r0, r1, r2, lr}
   1df5a:	aa01      	add	r2, sp, #4
   1df5c:	f7ff ffbc 	bl	1ded8 <_findenv_r>
   1df60:	b003      	add	sp, #12
   1df62:	f85d fb04 	ldr.w	pc, [sp], #4
   1df66:	Address 0x000000000001df66 is out of bounds.


0001df68 <_gettimeofday_r>:
_gettimeofday_r():
   1df68:	b538      	push	{r3, r4, r5, lr}
   1df6a:	2300      	movs	r3, #0
   1df6c:	4c06      	ldr	r4, [pc, #24]	; (1df88 <_gettimeofday_r+0x20>)
   1df6e:	4605      	mov	r5, r0
   1df70:	4608      	mov	r0, r1
   1df72:	4611      	mov	r1, r2
   1df74:	6023      	str	r3, [r4, #0]
   1df76:	f7f9 fb5d 	bl	17634 <_gettimeofday>
   1df7a:	1c43      	adds	r3, r0, #1
   1df7c:	d102      	bne.n	1df84 <_gettimeofday_r+0x1c>
   1df7e:	6823      	ldr	r3, [r4, #0]
   1df80:	b103      	cbz	r3, 1df84 <_gettimeofday_r+0x1c>
   1df82:	602b      	str	r3, [r5, #0]
   1df84:	bd38      	pop	{r3, r4, r5, pc}
   1df86:	bf00      	nop
   1df88:	2007c8c8 	.word	0x2007c8c8

0001df8c <__gettzinfo>:
__gettzinfo():
   1df8c:	4800      	ldr	r0, [pc, #0]	; (1df90 <__gettzinfo+0x4>)
   1df8e:	4770      	bx	lr
   1df90:	2007c2b8 	.word	0x2007c2b8

0001df94 <_isatty_r>:
_isatty_r():
   1df94:	b538      	push	{r3, r4, r5, lr}
   1df96:	2300      	movs	r3, #0
   1df98:	4c05      	ldr	r4, [pc, #20]	; (1dfb0 <_isatty_r+0x1c>)
   1df9a:	4605      	mov	r5, r0
   1df9c:	4608      	mov	r0, r1
   1df9e:	6023      	str	r3, [r4, #0]
   1dfa0:	f7f9 fb36 	bl	17610 <_isatty>
   1dfa4:	1c43      	adds	r3, r0, #1
   1dfa6:	d102      	bne.n	1dfae <_isatty_r+0x1a>
   1dfa8:	6823      	ldr	r3, [r4, #0]
   1dfaa:	b103      	cbz	r3, 1dfae <_isatty_r+0x1a>
   1dfac:	602b      	str	r3, [r5, #0]
   1dfae:	bd38      	pop	{r3, r4, r5, pc}
   1dfb0:	2007c8c8 	.word	0x2007c8c8

0001dfb4 <__localeconv_l>:
__localeconv_l():
   1dfb4:	30f0      	adds	r0, #240	; 0xf0
   1dfb6:	4770      	bx	lr

0001dfb8 <_localeconv_r>:
_localeconv_r():
   1dfb8:	4b04      	ldr	r3, [pc, #16]	; (1dfcc <_localeconv_r+0x14>)
   1dfba:	681b      	ldr	r3, [r3, #0]
   1dfbc:	6a18      	ldr	r0, [r3, #32]
   1dfbe:	4b04      	ldr	r3, [pc, #16]	; (1dfd0 <_localeconv_r+0x18>)
   1dfc0:	2800      	cmp	r0, #0
   1dfc2:	bf08      	it	eq
   1dfc4:	4618      	moveq	r0, r3
   1dfc6:	30f0      	adds	r0, #240	; 0xf0
   1dfc8:	4770      	bx	lr
   1dfca:	bf00      	nop
   1dfcc:	2007c0e0 	.word	0x2007c0e0
   1dfd0:	2007c144 	.word	0x2007c144

0001dfd4 <_lseek_r>:
_lseek_r():
   1dfd4:	b538      	push	{r3, r4, r5, lr}
   1dfd6:	4605      	mov	r5, r0
   1dfd8:	4608      	mov	r0, r1
   1dfda:	4611      	mov	r1, r2
   1dfdc:	2200      	movs	r2, #0
   1dfde:	4c05      	ldr	r4, [pc, #20]	; (1dff4 <_lseek_r+0x20>)
   1dfe0:	6022      	str	r2, [r4, #0]
   1dfe2:	461a      	mov	r2, r3
   1dfe4:	f7f9 fa60 	bl	174a8 <_lseek>
   1dfe8:	1c43      	adds	r3, r0, #1
   1dfea:	d102      	bne.n	1dff2 <_lseek_r+0x1e>
   1dfec:	6823      	ldr	r3, [r4, #0]
   1dfee:	b103      	cbz	r3, 1dff2 <_lseek_r+0x1e>
   1dff0:	602b      	str	r3, [r5, #0]
   1dff2:	bd38      	pop	{r3, r4, r5, pc}
   1dff4:	2007c8c8 	.word	0x2007c8c8

0001dff8 <_Balloc>:
_Balloc():
   1dff8:	b570      	push	{r4, r5, r6, lr}
   1dffa:	6a45      	ldr	r5, [r0, #36]	; 0x24
   1dffc:	4604      	mov	r4, r0
   1dffe:	460e      	mov	r6, r1
   1e000:	b93d      	cbnz	r5, 1e012 <_Balloc+0x1a>
   1e002:	2010      	movs	r0, #16
   1e004:	f7fb fe1c 	bl	19c40 <malloc>
   1e008:	6260      	str	r0, [r4, #36]	; 0x24
   1e00a:	6045      	str	r5, [r0, #4]
   1e00c:	6085      	str	r5, [r0, #8]
   1e00e:	6005      	str	r5, [r0, #0]
   1e010:	60c5      	str	r5, [r0, #12]
   1e012:	6a65      	ldr	r5, [r4, #36]	; 0x24
   1e014:	68eb      	ldr	r3, [r5, #12]
   1e016:	b183      	cbz	r3, 1e03a <_Balloc+0x42>
   1e018:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1e01a:	68db      	ldr	r3, [r3, #12]
   1e01c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   1e020:	b9b8      	cbnz	r0, 1e052 <_Balloc+0x5a>
   1e022:	2101      	movs	r1, #1
   1e024:	fa01 f506 	lsl.w	r5, r1, r6
   1e028:	1d6a      	adds	r2, r5, #5
   1e02a:	0092      	lsls	r2, r2, #2
   1e02c:	4620      	mov	r0, r4
   1e02e:	f7fc f8d9 	bl	1a1e4 <_calloc_r>
   1e032:	b160      	cbz	r0, 1e04e <_Balloc+0x56>
   1e034:	6046      	str	r6, [r0, #4]
   1e036:	6085      	str	r5, [r0, #8]
   1e038:	e00e      	b.n	1e058 <_Balloc+0x60>
   1e03a:	2221      	movs	r2, #33	; 0x21
   1e03c:	2104      	movs	r1, #4
   1e03e:	4620      	mov	r0, r4
   1e040:	f7fc f8d0 	bl	1a1e4 <_calloc_r>
   1e044:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1e046:	60e8      	str	r0, [r5, #12]
   1e048:	68db      	ldr	r3, [r3, #12]
   1e04a:	2b00      	cmp	r3, #0
   1e04c:	d1e4      	bne.n	1e018 <_Balloc+0x20>
   1e04e:	2000      	movs	r0, #0
   1e050:	bd70      	pop	{r4, r5, r6, pc}
   1e052:	6802      	ldr	r2, [r0, #0]
   1e054:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   1e058:	2300      	movs	r3, #0
   1e05a:	6103      	str	r3, [r0, #16]
   1e05c:	60c3      	str	r3, [r0, #12]
   1e05e:	bd70      	pop	{r4, r5, r6, pc}

0001e060 <_Bfree>:
_Bfree():
   1e060:	b570      	push	{r4, r5, r6, lr}
   1e062:	6a44      	ldr	r4, [r0, #36]	; 0x24
   1e064:	4606      	mov	r6, r0
   1e066:	460d      	mov	r5, r1
   1e068:	b93c      	cbnz	r4, 1e07a <_Bfree+0x1a>
   1e06a:	2010      	movs	r0, #16
   1e06c:	f7fb fde8 	bl	19c40 <malloc>
   1e070:	6270      	str	r0, [r6, #36]	; 0x24
   1e072:	6044      	str	r4, [r0, #4]
   1e074:	6084      	str	r4, [r0, #8]
   1e076:	6004      	str	r4, [r0, #0]
   1e078:	60c4      	str	r4, [r0, #12]
   1e07a:	b13d      	cbz	r5, 1e08c <_Bfree+0x2c>
   1e07c:	6a73      	ldr	r3, [r6, #36]	; 0x24
   1e07e:	686a      	ldr	r2, [r5, #4]
   1e080:	68db      	ldr	r3, [r3, #12]
   1e082:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   1e086:	6029      	str	r1, [r5, #0]
   1e088:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   1e08c:	bd70      	pop	{r4, r5, r6, pc}

0001e08e <__multadd>:
__multadd():
   1e08e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e092:	461f      	mov	r7, r3
   1e094:	4606      	mov	r6, r0
   1e096:	460c      	mov	r4, r1
   1e098:	2300      	movs	r3, #0
   1e09a:	690d      	ldr	r5, [r1, #16]
   1e09c:	f101 0e14 	add.w	lr, r1, #20
   1e0a0:	f8de 0000 	ldr.w	r0, [lr]
   1e0a4:	3301      	adds	r3, #1
   1e0a6:	b281      	uxth	r1, r0
   1e0a8:	fb02 7101 	mla	r1, r2, r1, r7
   1e0ac:	0c00      	lsrs	r0, r0, #16
   1e0ae:	0c0f      	lsrs	r7, r1, #16
   1e0b0:	fb02 7000 	mla	r0, r2, r0, r7
   1e0b4:	b289      	uxth	r1, r1
   1e0b6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
   1e0ba:	429d      	cmp	r5, r3
   1e0bc:	ea4f 4710 	mov.w	r7, r0, lsr #16
   1e0c0:	f84e 1b04 	str.w	r1, [lr], #4
   1e0c4:	dcec      	bgt.n	1e0a0 <__multadd+0x12>
   1e0c6:	b1d7      	cbz	r7, 1e0fe <__multadd+0x70>
   1e0c8:	68a3      	ldr	r3, [r4, #8]
   1e0ca:	429d      	cmp	r5, r3
   1e0cc:	db12      	blt.n	1e0f4 <__multadd+0x66>
   1e0ce:	6861      	ldr	r1, [r4, #4]
   1e0d0:	4630      	mov	r0, r6
   1e0d2:	3101      	adds	r1, #1
   1e0d4:	f7ff ff90 	bl	1dff8 <_Balloc>
   1e0d8:	4680      	mov	r8, r0
   1e0da:	6922      	ldr	r2, [r4, #16]
   1e0dc:	f104 010c 	add.w	r1, r4, #12
   1e0e0:	3202      	adds	r2, #2
   1e0e2:	0092      	lsls	r2, r2, #2
   1e0e4:	300c      	adds	r0, #12
   1e0e6:	f7fb fdea 	bl	19cbe <memcpy>
   1e0ea:	4621      	mov	r1, r4
   1e0ec:	4630      	mov	r0, r6
   1e0ee:	f7ff ffb7 	bl	1e060 <_Bfree>
   1e0f2:	4644      	mov	r4, r8
   1e0f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   1e0f8:	3501      	adds	r5, #1
   1e0fa:	615f      	str	r7, [r3, #20]
   1e0fc:	6125      	str	r5, [r4, #16]
   1e0fe:	4620      	mov	r0, r4
   1e100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001e104 <__s2b>:
__s2b():
   1e104:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e108:	4615      	mov	r5, r2
   1e10a:	2209      	movs	r2, #9
   1e10c:	461f      	mov	r7, r3
   1e10e:	3308      	adds	r3, #8
   1e110:	460c      	mov	r4, r1
   1e112:	fb93 f3f2 	sdiv	r3, r3, r2
   1e116:	4606      	mov	r6, r0
   1e118:	2201      	movs	r2, #1
   1e11a:	2100      	movs	r1, #0
   1e11c:	429a      	cmp	r2, r3
   1e11e:	db20      	blt.n	1e162 <__s2b+0x5e>
   1e120:	4630      	mov	r0, r6
   1e122:	f7ff ff69 	bl	1dff8 <_Balloc>
   1e126:	9b08      	ldr	r3, [sp, #32]
   1e128:	2d09      	cmp	r5, #9
   1e12a:	6143      	str	r3, [r0, #20]
   1e12c:	f04f 0301 	mov.w	r3, #1
   1e130:	6103      	str	r3, [r0, #16]
   1e132:	dd19      	ble.n	1e168 <__s2b+0x64>
   1e134:	f104 0909 	add.w	r9, r4, #9
   1e138:	46c8      	mov	r8, r9
   1e13a:	442c      	add	r4, r5
   1e13c:	f818 3b01 	ldrb.w	r3, [r8], #1
   1e140:	4601      	mov	r1, r0
   1e142:	3b30      	subs	r3, #48	; 0x30
   1e144:	220a      	movs	r2, #10
   1e146:	4630      	mov	r0, r6
   1e148:	f7ff ffa1 	bl	1e08e <__multadd>
   1e14c:	45a0      	cmp	r8, r4
   1e14e:	d1f5      	bne.n	1e13c <__s2b+0x38>
   1e150:	f1a5 0408 	sub.w	r4, r5, #8
   1e154:	444c      	add	r4, r9
   1e156:	1b2d      	subs	r5, r5, r4
   1e158:	1963      	adds	r3, r4, r5
   1e15a:	42bb      	cmp	r3, r7
   1e15c:	db07      	blt.n	1e16e <__s2b+0x6a>
   1e15e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e162:	0052      	lsls	r2, r2, #1
   1e164:	3101      	adds	r1, #1
   1e166:	e7d9      	b.n	1e11c <__s2b+0x18>
   1e168:	340a      	adds	r4, #10
   1e16a:	2509      	movs	r5, #9
   1e16c:	e7f3      	b.n	1e156 <__s2b+0x52>
   1e16e:	f814 3b01 	ldrb.w	r3, [r4], #1
   1e172:	4601      	mov	r1, r0
   1e174:	3b30      	subs	r3, #48	; 0x30
   1e176:	220a      	movs	r2, #10
   1e178:	4630      	mov	r0, r6
   1e17a:	f7ff ff88 	bl	1e08e <__multadd>
   1e17e:	e7eb      	b.n	1e158 <__s2b+0x54>

0001e180 <__hi0bits>:
__hi0bits():
   1e180:	0c02      	lsrs	r2, r0, #16
   1e182:	0412      	lsls	r2, r2, #16
   1e184:	4603      	mov	r3, r0
   1e186:	b9b2      	cbnz	r2, 1e1b6 <__hi0bits+0x36>
   1e188:	0403      	lsls	r3, r0, #16
   1e18a:	2010      	movs	r0, #16
   1e18c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   1e190:	bf04      	itt	eq
   1e192:	021b      	lsleq	r3, r3, #8
   1e194:	3008      	addeq	r0, #8
   1e196:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   1e19a:	bf04      	itt	eq
   1e19c:	011b      	lsleq	r3, r3, #4
   1e19e:	3004      	addeq	r0, #4
   1e1a0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   1e1a4:	bf04      	itt	eq
   1e1a6:	009b      	lsleq	r3, r3, #2
   1e1a8:	3002      	addeq	r0, #2
   1e1aa:	2b00      	cmp	r3, #0
   1e1ac:	db06      	blt.n	1e1bc <__hi0bits+0x3c>
   1e1ae:	005b      	lsls	r3, r3, #1
   1e1b0:	d503      	bpl.n	1e1ba <__hi0bits+0x3a>
   1e1b2:	3001      	adds	r0, #1
   1e1b4:	4770      	bx	lr
   1e1b6:	2000      	movs	r0, #0
   1e1b8:	e7e8      	b.n	1e18c <__hi0bits+0xc>
   1e1ba:	2020      	movs	r0, #32
   1e1bc:	4770      	bx	lr

0001e1be <__lo0bits>:
__lo0bits():
   1e1be:	6803      	ldr	r3, [r0, #0]
   1e1c0:	4601      	mov	r1, r0
   1e1c2:	f013 0207 	ands.w	r2, r3, #7
   1e1c6:	d00b      	beq.n	1e1e0 <__lo0bits+0x22>
   1e1c8:	07da      	lsls	r2, r3, #31
   1e1ca:	d423      	bmi.n	1e214 <__lo0bits+0x56>
   1e1cc:	0798      	lsls	r0, r3, #30
   1e1ce:	bf49      	itett	mi
   1e1d0:	085b      	lsrmi	r3, r3, #1
   1e1d2:	089b      	lsrpl	r3, r3, #2
   1e1d4:	2001      	movmi	r0, #1
   1e1d6:	600b      	strmi	r3, [r1, #0]
   1e1d8:	bf5c      	itt	pl
   1e1da:	600b      	strpl	r3, [r1, #0]
   1e1dc:	2002      	movpl	r0, #2
   1e1de:	4770      	bx	lr
   1e1e0:	b298      	uxth	r0, r3
   1e1e2:	b9a8      	cbnz	r0, 1e210 <__lo0bits+0x52>
   1e1e4:	2010      	movs	r0, #16
   1e1e6:	0c1b      	lsrs	r3, r3, #16
   1e1e8:	f013 0fff 	tst.w	r3, #255	; 0xff
   1e1ec:	bf04      	itt	eq
   1e1ee:	0a1b      	lsreq	r3, r3, #8
   1e1f0:	3008      	addeq	r0, #8
   1e1f2:	071a      	lsls	r2, r3, #28
   1e1f4:	bf04      	itt	eq
   1e1f6:	091b      	lsreq	r3, r3, #4
   1e1f8:	3004      	addeq	r0, #4
   1e1fa:	079a      	lsls	r2, r3, #30
   1e1fc:	bf04      	itt	eq
   1e1fe:	089b      	lsreq	r3, r3, #2
   1e200:	3002      	addeq	r0, #2
   1e202:	07da      	lsls	r2, r3, #31
   1e204:	d402      	bmi.n	1e20c <__lo0bits+0x4e>
   1e206:	085b      	lsrs	r3, r3, #1
   1e208:	d006      	beq.n	1e218 <__lo0bits+0x5a>
   1e20a:	3001      	adds	r0, #1
   1e20c:	600b      	str	r3, [r1, #0]
   1e20e:	4770      	bx	lr
   1e210:	4610      	mov	r0, r2
   1e212:	e7e9      	b.n	1e1e8 <__lo0bits+0x2a>
   1e214:	2000      	movs	r0, #0
   1e216:	4770      	bx	lr
   1e218:	2020      	movs	r0, #32
   1e21a:	4770      	bx	lr

0001e21c <__i2b>:
__i2b():
   1e21c:	b510      	push	{r4, lr}
   1e21e:	460c      	mov	r4, r1
   1e220:	2101      	movs	r1, #1
   1e222:	f7ff fee9 	bl	1dff8 <_Balloc>
   1e226:	2201      	movs	r2, #1
   1e228:	6144      	str	r4, [r0, #20]
   1e22a:	6102      	str	r2, [r0, #16]
   1e22c:	bd10      	pop	{r4, pc}

0001e22e <__multiply>:
__multiply():
   1e22e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e232:	4614      	mov	r4, r2
   1e234:	690a      	ldr	r2, [r1, #16]
   1e236:	6923      	ldr	r3, [r4, #16]
   1e238:	4689      	mov	r9, r1
   1e23a:	429a      	cmp	r2, r3
   1e23c:	bfbe      	ittt	lt
   1e23e:	460b      	movlt	r3, r1
   1e240:	46a1      	movlt	r9, r4
   1e242:	461c      	movlt	r4, r3
   1e244:	f8d9 7010 	ldr.w	r7, [r9, #16]
   1e248:	f8d4 a010 	ldr.w	sl, [r4, #16]
   1e24c:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1e250:	f8d9 1004 	ldr.w	r1, [r9, #4]
   1e254:	eb07 060a 	add.w	r6, r7, sl
   1e258:	429e      	cmp	r6, r3
   1e25a:	bfc8      	it	gt
   1e25c:	3101      	addgt	r1, #1
   1e25e:	f7ff fecb 	bl	1dff8 <_Balloc>
   1e262:	f100 0514 	add.w	r5, r0, #20
   1e266:	462b      	mov	r3, r5
   1e268:	2200      	movs	r2, #0
   1e26a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
   1e26e:	4543      	cmp	r3, r8
   1e270:	d316      	bcc.n	1e2a0 <__multiply+0x72>
   1e272:	f104 0214 	add.w	r2, r4, #20
   1e276:	f109 0114 	add.w	r1, r9, #20
   1e27a:	eb02 038a 	add.w	r3, r2, sl, lsl #2
   1e27e:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   1e282:	9301      	str	r3, [sp, #4]
   1e284:	9c01      	ldr	r4, [sp, #4]
   1e286:	4613      	mov	r3, r2
   1e288:	4294      	cmp	r4, r2
   1e28a:	d80c      	bhi.n	1e2a6 <__multiply+0x78>
   1e28c:	2e00      	cmp	r6, #0
   1e28e:	dd03      	ble.n	1e298 <__multiply+0x6a>
   1e290:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   1e294:	2b00      	cmp	r3, #0
   1e296:	d054      	beq.n	1e342 <__multiply+0x114>
   1e298:	6106      	str	r6, [r0, #16]
   1e29a:	b003      	add	sp, #12
   1e29c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2a0:	f843 2b04 	str.w	r2, [r3], #4
   1e2a4:	e7e3      	b.n	1e26e <__multiply+0x40>
   1e2a6:	f8b3 a000 	ldrh.w	sl, [r3]
   1e2aa:	3204      	adds	r2, #4
   1e2ac:	f1ba 0f00 	cmp.w	sl, #0
   1e2b0:	d020      	beq.n	1e2f4 <__multiply+0xc6>
   1e2b2:	46ae      	mov	lr, r5
   1e2b4:	4689      	mov	r9, r1
   1e2b6:	f04f 0c00 	mov.w	ip, #0
   1e2ba:	f859 4b04 	ldr.w	r4, [r9], #4
   1e2be:	f8be b000 	ldrh.w	fp, [lr]
   1e2c2:	b2a3      	uxth	r3, r4
   1e2c4:	fb0a b303 	mla	r3, sl, r3, fp
   1e2c8:	ea4f 4b14 	mov.w	fp, r4, lsr #16
   1e2cc:	f8de 4000 	ldr.w	r4, [lr]
   1e2d0:	4463      	add	r3, ip
   1e2d2:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1e2d6:	fb0a c40b 	mla	r4, sl, fp, ip
   1e2da:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   1e2de:	b29b      	uxth	r3, r3
   1e2e0:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   1e2e4:	454f      	cmp	r7, r9
   1e2e6:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   1e2ea:	f84e 3b04 	str.w	r3, [lr], #4
   1e2ee:	d8e4      	bhi.n	1e2ba <__multiply+0x8c>
   1e2f0:	f8ce c000 	str.w	ip, [lr]
   1e2f4:	f832 9c02 	ldrh.w	r9, [r2, #-2]
   1e2f8:	f1b9 0f00 	cmp.w	r9, #0
   1e2fc:	d01f      	beq.n	1e33e <__multiply+0x110>
   1e2fe:	46ae      	mov	lr, r5
   1e300:	468c      	mov	ip, r1
   1e302:	f04f 0a00 	mov.w	sl, #0
   1e306:	682b      	ldr	r3, [r5, #0]
   1e308:	f8bc 4000 	ldrh.w	r4, [ip]
   1e30c:	f8be b002 	ldrh.w	fp, [lr, #2]
   1e310:	b29b      	uxth	r3, r3
   1e312:	fb09 b404 	mla	r4, r9, r4, fp
   1e316:	44a2      	add	sl, r4
   1e318:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
   1e31c:	f84e 3b04 	str.w	r3, [lr], #4
   1e320:	f85c 3b04 	ldr.w	r3, [ip], #4
   1e324:	f8be 4000 	ldrh.w	r4, [lr]
   1e328:	0c1b      	lsrs	r3, r3, #16
   1e32a:	fb09 4303 	mla	r3, r9, r3, r4
   1e32e:	4567      	cmp	r7, ip
   1e330:	eb03 431a 	add.w	r3, r3, sl, lsr #16
   1e334:	ea4f 4a13 	mov.w	sl, r3, lsr #16
   1e338:	d8e6      	bhi.n	1e308 <__multiply+0xda>
   1e33a:	f8ce 3000 	str.w	r3, [lr]
   1e33e:	3504      	adds	r5, #4
   1e340:	e7a0      	b.n	1e284 <__multiply+0x56>
   1e342:	3e01      	subs	r6, #1
   1e344:	e7a2      	b.n	1e28c <__multiply+0x5e>
   1e346:	Address 0x000000000001e346 is out of bounds.


0001e348 <__pow5mult>:
__pow5mult():
   1e348:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e34c:	4615      	mov	r5, r2
   1e34e:	f012 0203 	ands.w	r2, r2, #3
   1e352:	4606      	mov	r6, r0
   1e354:	460f      	mov	r7, r1
   1e356:	d007      	beq.n	1e368 <__pow5mult+0x20>
   1e358:	4c21      	ldr	r4, [pc, #132]	; (1e3e0 <__pow5mult+0x98>)
   1e35a:	3a01      	subs	r2, #1
   1e35c:	2300      	movs	r3, #0
   1e35e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
   1e362:	f7ff fe94 	bl	1e08e <__multadd>
   1e366:	4607      	mov	r7, r0
   1e368:	10ad      	asrs	r5, r5, #2
   1e36a:	d035      	beq.n	1e3d8 <__pow5mult+0x90>
   1e36c:	6a74      	ldr	r4, [r6, #36]	; 0x24
   1e36e:	b93c      	cbnz	r4, 1e380 <__pow5mult+0x38>
   1e370:	2010      	movs	r0, #16
   1e372:	f7fb fc65 	bl	19c40 <malloc>
   1e376:	6270      	str	r0, [r6, #36]	; 0x24
   1e378:	6044      	str	r4, [r0, #4]
   1e37a:	6084      	str	r4, [r0, #8]
   1e37c:	6004      	str	r4, [r0, #0]
   1e37e:	60c4      	str	r4, [r0, #12]
   1e380:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   1e384:	f8d8 4008 	ldr.w	r4, [r8, #8]
   1e388:	b94c      	cbnz	r4, 1e39e <__pow5mult+0x56>
   1e38a:	f240 2171 	movw	r1, #625	; 0x271
   1e38e:	4630      	mov	r0, r6
   1e390:	f7ff ff44 	bl	1e21c <__i2b>
   1e394:	2300      	movs	r3, #0
   1e396:	4604      	mov	r4, r0
   1e398:	f8c8 0008 	str.w	r0, [r8, #8]
   1e39c:	6003      	str	r3, [r0, #0]
   1e39e:	f04f 0800 	mov.w	r8, #0
   1e3a2:	07eb      	lsls	r3, r5, #31
   1e3a4:	d50a      	bpl.n	1e3bc <__pow5mult+0x74>
   1e3a6:	4639      	mov	r1, r7
   1e3a8:	4622      	mov	r2, r4
   1e3aa:	4630      	mov	r0, r6
   1e3ac:	f7ff ff3f 	bl	1e22e <__multiply>
   1e3b0:	4681      	mov	r9, r0
   1e3b2:	4639      	mov	r1, r7
   1e3b4:	4630      	mov	r0, r6
   1e3b6:	f7ff fe53 	bl	1e060 <_Bfree>
   1e3ba:	464f      	mov	r7, r9
   1e3bc:	106d      	asrs	r5, r5, #1
   1e3be:	d00b      	beq.n	1e3d8 <__pow5mult+0x90>
   1e3c0:	6820      	ldr	r0, [r4, #0]
   1e3c2:	b938      	cbnz	r0, 1e3d4 <__pow5mult+0x8c>
   1e3c4:	4622      	mov	r2, r4
   1e3c6:	4621      	mov	r1, r4
   1e3c8:	4630      	mov	r0, r6
   1e3ca:	f7ff ff30 	bl	1e22e <__multiply>
   1e3ce:	6020      	str	r0, [r4, #0]
   1e3d0:	f8c0 8000 	str.w	r8, [r0]
   1e3d4:	4604      	mov	r4, r0
   1e3d6:	e7e4      	b.n	1e3a2 <__pow5mult+0x5a>
   1e3d8:	4638      	mov	r0, r7
   1e3da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e3de:	bf00      	nop
   1e3e0:	00021458 	.word	0x00021458

0001e3e4 <__lshift>:
__lshift():
   1e3e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e3e8:	460c      	mov	r4, r1
   1e3ea:	4607      	mov	r7, r0
   1e3ec:	4616      	mov	r6, r2
   1e3ee:	6923      	ldr	r3, [r4, #16]
   1e3f0:	ea4f 1a62 	mov.w	sl, r2, asr #5
   1e3f4:	eb0a 0903 	add.w	r9, sl, r3
   1e3f8:	6849      	ldr	r1, [r1, #4]
   1e3fa:	68a3      	ldr	r3, [r4, #8]
   1e3fc:	f109 0501 	add.w	r5, r9, #1
   1e400:	42ab      	cmp	r3, r5
   1e402:	db31      	blt.n	1e468 <__lshift+0x84>
   1e404:	4638      	mov	r0, r7
   1e406:	f7ff fdf7 	bl	1dff8 <_Balloc>
   1e40a:	2200      	movs	r2, #0
   1e40c:	4680      	mov	r8, r0
   1e40e:	4611      	mov	r1, r2
   1e410:	f100 0314 	add.w	r3, r0, #20
   1e414:	4552      	cmp	r2, sl
   1e416:	db2a      	blt.n	1e46e <__lshift+0x8a>
   1e418:	6920      	ldr	r0, [r4, #16]
   1e41a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
   1e41e:	f104 0114 	add.w	r1, r4, #20
   1e422:	f016 021f 	ands.w	r2, r6, #31
   1e426:	eb03 038a 	add.w	r3, r3, sl, lsl #2
   1e42a:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   1e42e:	d022      	beq.n	1e476 <__lshift+0x92>
   1e430:	2000      	movs	r0, #0
   1e432:	f1c2 0c20 	rsb	ip, r2, #32
   1e436:	680e      	ldr	r6, [r1, #0]
   1e438:	4096      	lsls	r6, r2
   1e43a:	4330      	orrs	r0, r6
   1e43c:	f843 0b04 	str.w	r0, [r3], #4
   1e440:	f851 0b04 	ldr.w	r0, [r1], #4
   1e444:	458e      	cmp	lr, r1
   1e446:	fa20 f00c 	lsr.w	r0, r0, ip
   1e44a:	d8f4      	bhi.n	1e436 <__lshift+0x52>
   1e44c:	6018      	str	r0, [r3, #0]
   1e44e:	b108      	cbz	r0, 1e454 <__lshift+0x70>
   1e450:	f109 0502 	add.w	r5, r9, #2
   1e454:	3d01      	subs	r5, #1
   1e456:	4638      	mov	r0, r7
   1e458:	f8c8 5010 	str.w	r5, [r8, #16]
   1e45c:	4621      	mov	r1, r4
   1e45e:	f7ff fdff 	bl	1e060 <_Bfree>
   1e462:	4640      	mov	r0, r8
   1e464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e468:	3101      	adds	r1, #1
   1e46a:	005b      	lsls	r3, r3, #1
   1e46c:	e7c8      	b.n	1e400 <__lshift+0x1c>
   1e46e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   1e472:	3201      	adds	r2, #1
   1e474:	e7ce      	b.n	1e414 <__lshift+0x30>
   1e476:	3b04      	subs	r3, #4
   1e478:	f851 2b04 	ldr.w	r2, [r1], #4
   1e47c:	458e      	cmp	lr, r1
   1e47e:	f843 2f04 	str.w	r2, [r3, #4]!
   1e482:	d8f9      	bhi.n	1e478 <__lshift+0x94>
   1e484:	e7e6      	b.n	1e454 <__lshift+0x70>

0001e486 <__mcmp>:
__mcmp():
   1e486:	6903      	ldr	r3, [r0, #16]
   1e488:	690a      	ldr	r2, [r1, #16]
   1e48a:	b530      	push	{r4, r5, lr}
   1e48c:	1a9b      	subs	r3, r3, r2
   1e48e:	d10c      	bne.n	1e4aa <__mcmp+0x24>
   1e490:	0092      	lsls	r2, r2, #2
   1e492:	3014      	adds	r0, #20
   1e494:	3114      	adds	r1, #20
   1e496:	1884      	adds	r4, r0, r2
   1e498:	4411      	add	r1, r2
   1e49a:	f854 5d04 	ldr.w	r5, [r4, #-4]!
   1e49e:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   1e4a2:	4295      	cmp	r5, r2
   1e4a4:	d003      	beq.n	1e4ae <__mcmp+0x28>
   1e4a6:	d305      	bcc.n	1e4b4 <__mcmp+0x2e>
   1e4a8:	2301      	movs	r3, #1
   1e4aa:	4618      	mov	r0, r3
   1e4ac:	bd30      	pop	{r4, r5, pc}
   1e4ae:	42a0      	cmp	r0, r4
   1e4b0:	d3f3      	bcc.n	1e49a <__mcmp+0x14>
   1e4b2:	e7fa      	b.n	1e4aa <__mcmp+0x24>
   1e4b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   1e4b8:	e7f7      	b.n	1e4aa <__mcmp+0x24>

0001e4ba <__mdiff>:
__mdiff():
   1e4ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e4be:	460d      	mov	r5, r1
   1e4c0:	4607      	mov	r7, r0
   1e4c2:	4611      	mov	r1, r2
   1e4c4:	4628      	mov	r0, r5
   1e4c6:	4614      	mov	r4, r2
   1e4c8:	f7ff ffdd 	bl	1e486 <__mcmp>
   1e4cc:	1e06      	subs	r6, r0, #0
   1e4ce:	d108      	bne.n	1e4e2 <__mdiff+0x28>
   1e4d0:	4631      	mov	r1, r6
   1e4d2:	4638      	mov	r0, r7
   1e4d4:	f7ff fd90 	bl	1dff8 <_Balloc>
   1e4d8:	2301      	movs	r3, #1
   1e4da:	6146      	str	r6, [r0, #20]
   1e4dc:	6103      	str	r3, [r0, #16]
   1e4de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e4e2:	bfa4      	itt	ge
   1e4e4:	4623      	movge	r3, r4
   1e4e6:	462c      	movge	r4, r5
   1e4e8:	4638      	mov	r0, r7
   1e4ea:	6861      	ldr	r1, [r4, #4]
   1e4ec:	bfa6      	itte	ge
   1e4ee:	461d      	movge	r5, r3
   1e4f0:	2600      	movge	r6, #0
   1e4f2:	2601      	movlt	r6, #1
   1e4f4:	f7ff fd80 	bl	1dff8 <_Balloc>
   1e4f8:	f04f 0c00 	mov.w	ip, #0
   1e4fc:	60c6      	str	r6, [r0, #12]
   1e4fe:	692b      	ldr	r3, [r5, #16]
   1e500:	6926      	ldr	r6, [r4, #16]
   1e502:	f104 0214 	add.w	r2, r4, #20
   1e506:	f105 0914 	add.w	r9, r5, #20
   1e50a:	eb02 0786 	add.w	r7, r2, r6, lsl #2
   1e50e:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   1e512:	f100 0114 	add.w	r1, r0, #20
   1e516:	f852 ab04 	ldr.w	sl, [r2], #4
   1e51a:	f859 5b04 	ldr.w	r5, [r9], #4
   1e51e:	fa1f f38a 	uxth.w	r3, sl
   1e522:	4463      	add	r3, ip
   1e524:	b2ac      	uxth	r4, r5
   1e526:	1b1b      	subs	r3, r3, r4
   1e528:	0c2c      	lsrs	r4, r5, #16
   1e52a:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
   1e52e:	eb04 4423 	add.w	r4, r4, r3, asr #16
   1e532:	b29b      	uxth	r3, r3
   1e534:	ea4f 4c24 	mov.w	ip, r4, asr #16
   1e538:	45c8      	cmp	r8, r9
   1e53a:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   1e53e:	4696      	mov	lr, r2
   1e540:	f841 4b04 	str.w	r4, [r1], #4
   1e544:	d8e7      	bhi.n	1e516 <__mdiff+0x5c>
   1e546:	45be      	cmp	lr, r7
   1e548:	d305      	bcc.n	1e556 <__mdiff+0x9c>
   1e54a:	f851 3d04 	ldr.w	r3, [r1, #-4]!
   1e54e:	b18b      	cbz	r3, 1e574 <__mdiff+0xba>
   1e550:	6106      	str	r6, [r0, #16]
   1e552:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e556:	f85e 4b04 	ldr.w	r4, [lr], #4
   1e55a:	b2a2      	uxth	r2, r4
   1e55c:	4462      	add	r2, ip
   1e55e:	1413      	asrs	r3, r2, #16
   1e560:	eb03 4314 	add.w	r3, r3, r4, lsr #16
   1e564:	b292      	uxth	r2, r2
   1e566:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   1e56a:	ea4f 4c23 	mov.w	ip, r3, asr #16
   1e56e:	f841 2b04 	str.w	r2, [r1], #4
   1e572:	e7e8      	b.n	1e546 <__mdiff+0x8c>
   1e574:	3e01      	subs	r6, #1
   1e576:	e7e8      	b.n	1e54a <__mdiff+0x90>

0001e578 <__ulp>:
__ulp():
   1e578:	4b10      	ldr	r3, [pc, #64]	; (1e5bc <__ulp+0x44>)
   1e57a:	400b      	ands	r3, r1
   1e57c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   1e580:	2b00      	cmp	r3, #0
   1e582:	dd02      	ble.n	1e58a <__ulp+0x12>
   1e584:	2000      	movs	r0, #0
   1e586:	4619      	mov	r1, r3
   1e588:	4770      	bx	lr
   1e58a:	425b      	negs	r3, r3
   1e58c:	151b      	asrs	r3, r3, #20
   1e58e:	2b13      	cmp	r3, #19
   1e590:	f04f 0000 	mov.w	r0, #0
   1e594:	f04f 0100 	mov.w	r1, #0
   1e598:	dc04      	bgt.n	1e5a4 <__ulp+0x2c>
   1e59a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   1e59e:	fa42 f103 	asr.w	r1, r2, r3
   1e5a2:	4770      	bx	lr
   1e5a4:	2201      	movs	r2, #1
   1e5a6:	3b14      	subs	r3, #20
   1e5a8:	2b1e      	cmp	r3, #30
   1e5aa:	bfce      	itee	gt
   1e5ac:	4613      	movgt	r3, r2
   1e5ae:	f1c3 031f 	rsble	r3, r3, #31
   1e5b2:	fa02 f303 	lslle.w	r3, r2, r3
   1e5b6:	4618      	mov	r0, r3
   1e5b8:	4770      	bx	lr
   1e5ba:	bf00      	nop
   1e5bc:	7ff00000 	.word	0x7ff00000

0001e5c0 <__b2d>:
__b2d():
   1e5c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e5c4:	6907      	ldr	r7, [r0, #16]
   1e5c6:	f100 0914 	add.w	r9, r0, #20
   1e5ca:	eb09 0787 	add.w	r7, r9, r7, lsl #2
   1e5ce:	f857 6c04 	ldr.w	r6, [r7, #-4]
   1e5d2:	f1a7 0804 	sub.w	r8, r7, #4
   1e5d6:	4630      	mov	r0, r6
   1e5d8:	f7ff fdd2 	bl	1e180 <__hi0bits>
   1e5dc:	f1c0 0320 	rsb	r3, r0, #32
   1e5e0:	280a      	cmp	r0, #10
   1e5e2:	600b      	str	r3, [r1, #0]
   1e5e4:	491e      	ldr	r1, [pc, #120]	; (1e660 <__b2d+0xa0>)
   1e5e6:	dc17      	bgt.n	1e618 <__b2d+0x58>
   1e5e8:	45c1      	cmp	r9, r8
   1e5ea:	bf28      	it	cs
   1e5ec:	2200      	movcs	r2, #0
   1e5ee:	f1c0 0e0b 	rsb	lr, r0, #11
   1e5f2:	fa26 f30e 	lsr.w	r3, r6, lr
   1e5f6:	bf38      	it	cc
   1e5f8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1e5fc:	ea43 0501 	orr.w	r5, r3, r1
   1e600:	f100 0315 	add.w	r3, r0, #21
   1e604:	fa06 f303 	lsl.w	r3, r6, r3
   1e608:	fa22 f20e 	lsr.w	r2, r2, lr
   1e60c:	ea43 0402 	orr.w	r4, r3, r2
   1e610:	4620      	mov	r0, r4
   1e612:	4629      	mov	r1, r5
   1e614:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e618:	45c1      	cmp	r9, r8
   1e61a:	bf3a      	itte	cc
   1e61c:	f1a7 0808 	subcc.w	r8, r7, #8
   1e620:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   1e624:	2200      	movcs	r2, #0
   1e626:	f1b0 030b 	subs.w	r3, r0, #11
   1e62a:	d015      	beq.n	1e658 <__b2d+0x98>
   1e62c:	409e      	lsls	r6, r3
   1e62e:	f1c3 0720 	rsb	r7, r3, #32
   1e632:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
   1e636:	fa22 f107 	lsr.w	r1, r2, r7
   1e63a:	45c8      	cmp	r8, r9
   1e63c:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
   1e640:	ea46 0501 	orr.w	r5, r6, r1
   1e644:	bf94      	ite	ls
   1e646:	2100      	movls	r1, #0
   1e648:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
   1e64c:	fa02 f003 	lsl.w	r0, r2, r3
   1e650:	40f9      	lsrs	r1, r7
   1e652:	ea40 0401 	orr.w	r4, r0, r1
   1e656:	e7db      	b.n	1e610 <__b2d+0x50>
   1e658:	ea46 0501 	orr.w	r5, r6, r1
   1e65c:	4614      	mov	r4, r2
   1e65e:	e7d7      	b.n	1e610 <__b2d+0x50>
   1e660:	3ff00000 	.word	0x3ff00000

0001e664 <__d2b>:
__d2b():
   1e664:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1e668:	461c      	mov	r4, r3
   1e66a:	2101      	movs	r1, #1
   1e66c:	4690      	mov	r8, r2
   1e66e:	9e08      	ldr	r6, [sp, #32]
   1e670:	9d09      	ldr	r5, [sp, #36]	; 0x24
   1e672:	f7ff fcc1 	bl	1dff8 <_Balloc>
   1e676:	f3c4 0213 	ubfx	r2, r4, #0, #20
   1e67a:	f3c4 540a 	ubfx	r4, r4, #20, #11
   1e67e:	4607      	mov	r7, r0
   1e680:	bb34      	cbnz	r4, 1e6d0 <__d2b+0x6c>
   1e682:	9201      	str	r2, [sp, #4]
   1e684:	f1b8 0f00 	cmp.w	r8, #0
   1e688:	d027      	beq.n	1e6da <__d2b+0x76>
   1e68a:	a802      	add	r0, sp, #8
   1e68c:	f840 8d08 	str.w	r8, [r0, #-8]!
   1e690:	f7ff fd95 	bl	1e1be <__lo0bits>
   1e694:	9900      	ldr	r1, [sp, #0]
   1e696:	b1f0      	cbz	r0, 1e6d6 <__d2b+0x72>
   1e698:	9a01      	ldr	r2, [sp, #4]
   1e69a:	f1c0 0320 	rsb	r3, r0, #32
   1e69e:	fa02 f303 	lsl.w	r3, r2, r3
   1e6a2:	430b      	orrs	r3, r1
   1e6a4:	40c2      	lsrs	r2, r0
   1e6a6:	617b      	str	r3, [r7, #20]
   1e6a8:	9201      	str	r2, [sp, #4]
   1e6aa:	9b01      	ldr	r3, [sp, #4]
   1e6ac:	2b00      	cmp	r3, #0
   1e6ae:	bf14      	ite	ne
   1e6b0:	2102      	movne	r1, #2
   1e6b2:	2101      	moveq	r1, #1
   1e6b4:	61bb      	str	r3, [r7, #24]
   1e6b6:	6139      	str	r1, [r7, #16]
   1e6b8:	b1c4      	cbz	r4, 1e6ec <__d2b+0x88>
   1e6ba:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   1e6be:	4404      	add	r4, r0
   1e6c0:	6034      	str	r4, [r6, #0]
   1e6c2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   1e6c6:	6028      	str	r0, [r5, #0]
   1e6c8:	4638      	mov	r0, r7
   1e6ca:	b002      	add	sp, #8
   1e6cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e6d0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   1e6d4:	e7d5      	b.n	1e682 <__d2b+0x1e>
   1e6d6:	6179      	str	r1, [r7, #20]
   1e6d8:	e7e7      	b.n	1e6aa <__d2b+0x46>
   1e6da:	a801      	add	r0, sp, #4
   1e6dc:	f7ff fd6f 	bl	1e1be <__lo0bits>
   1e6e0:	2101      	movs	r1, #1
   1e6e2:	9b01      	ldr	r3, [sp, #4]
   1e6e4:	6139      	str	r1, [r7, #16]
   1e6e6:	617b      	str	r3, [r7, #20]
   1e6e8:	3020      	adds	r0, #32
   1e6ea:	e7e5      	b.n	1e6b8 <__d2b+0x54>
   1e6ec:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   1e6f0:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   1e6f4:	6030      	str	r0, [r6, #0]
   1e6f6:	6918      	ldr	r0, [r3, #16]
   1e6f8:	f7ff fd42 	bl	1e180 <__hi0bits>
   1e6fc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   1e700:	e7e1      	b.n	1e6c6 <__d2b+0x62>

0001e702 <__ratio>:
__ratio():
   1e702:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
   1e706:	4688      	mov	r8, r1
   1e708:	4669      	mov	r1, sp
   1e70a:	4681      	mov	r9, r0
   1e70c:	f7ff ff58 	bl	1e5c0 <__b2d>
   1e710:	460d      	mov	r5, r1
   1e712:	4604      	mov	r4, r0
   1e714:	a901      	add	r1, sp, #4
   1e716:	4640      	mov	r0, r8
   1e718:	f7ff ff52 	bl	1e5c0 <__b2d>
   1e71c:	f8d9 3010 	ldr.w	r3, [r9, #16]
   1e720:	f8d8 2010 	ldr.w	r2, [r8, #16]
   1e724:	9e00      	ldr	r6, [sp, #0]
   1e726:	1a9a      	subs	r2, r3, r2
   1e728:	9b01      	ldr	r3, [sp, #4]
   1e72a:	1af3      	subs	r3, r6, r3
   1e72c:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   1e730:	2b00      	cmp	r3, #0
   1e732:	bfd6      	itet	le
   1e734:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
   1e738:	eb05 5503 	addgt.w	r5, r5, r3, lsl #20
   1e73c:	eb01 5103 	addle.w	r1, r1, r3, lsl #20
   1e740:	4602      	mov	r2, r0
   1e742:	460b      	mov	r3, r1
   1e744:	4620      	mov	r0, r4
   1e746:	4629      	mov	r1, r5
   1e748:	f001 fa3e 	bl	1fbc8 <__aeabi_ddiv>
   1e74c:	b002      	add	sp, #8
   1e74e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

0001e752 <__copybits>:
__copybits():
   1e752:	3901      	subs	r1, #1
   1e754:	b510      	push	{r4, lr}
   1e756:	1149      	asrs	r1, r1, #5
   1e758:	6914      	ldr	r4, [r2, #16]
   1e75a:	3101      	adds	r1, #1
   1e75c:	f102 0314 	add.w	r3, r2, #20
   1e760:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   1e764:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   1e768:	42a3      	cmp	r3, r4
   1e76a:	4602      	mov	r2, r0
   1e76c:	d303      	bcc.n	1e776 <__copybits+0x24>
   1e76e:	2300      	movs	r3, #0
   1e770:	428a      	cmp	r2, r1
   1e772:	d305      	bcc.n	1e780 <__copybits+0x2e>
   1e774:	bd10      	pop	{r4, pc}
   1e776:	f853 2b04 	ldr.w	r2, [r3], #4
   1e77a:	f840 2b04 	str.w	r2, [r0], #4
   1e77e:	e7f3      	b.n	1e768 <__copybits+0x16>
   1e780:	f842 3b04 	str.w	r3, [r2], #4
   1e784:	e7f4      	b.n	1e770 <__copybits+0x1e>

0001e786 <__any_on>:
__any_on():
   1e786:	f100 0214 	add.w	r2, r0, #20
   1e78a:	6900      	ldr	r0, [r0, #16]
   1e78c:	114b      	asrs	r3, r1, #5
   1e78e:	4298      	cmp	r0, r3
   1e790:	b510      	push	{r4, lr}
   1e792:	db11      	blt.n	1e7b8 <__any_on+0x32>
   1e794:	dd0a      	ble.n	1e7ac <__any_on+0x26>
   1e796:	f011 011f 	ands.w	r1, r1, #31
   1e79a:	d007      	beq.n	1e7ac <__any_on+0x26>
   1e79c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   1e7a0:	fa24 f001 	lsr.w	r0, r4, r1
   1e7a4:	fa00 f101 	lsl.w	r1, r0, r1
   1e7a8:	428c      	cmp	r4, r1
   1e7aa:	d10b      	bne.n	1e7c4 <__any_on+0x3e>
   1e7ac:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   1e7b0:	4293      	cmp	r3, r2
   1e7b2:	d803      	bhi.n	1e7bc <__any_on+0x36>
   1e7b4:	2000      	movs	r0, #0
   1e7b6:	bd10      	pop	{r4, pc}
   1e7b8:	4603      	mov	r3, r0
   1e7ba:	e7f7      	b.n	1e7ac <__any_on+0x26>
   1e7bc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   1e7c0:	2900      	cmp	r1, #0
   1e7c2:	d0f5      	beq.n	1e7b0 <__any_on+0x2a>
   1e7c4:	2001      	movs	r0, #1
   1e7c6:	bd10      	pop	{r4, pc}

0001e7c8 <_realloc_r>:
_realloc_r():
   1e7c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e7ca:	4607      	mov	r7, r0
   1e7cc:	4614      	mov	r4, r2
   1e7ce:	460e      	mov	r6, r1
   1e7d0:	b921      	cbnz	r1, 1e7dc <_realloc_r+0x14>
   1e7d2:	4611      	mov	r1, r2
   1e7d4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1e7d8:	f7fb bd90 	b.w	1a2fc <_malloc_r>
   1e7dc:	b922      	cbnz	r2, 1e7e8 <_realloc_r+0x20>
   1e7de:	f7fb fd0f 	bl	1a200 <_free_r>
   1e7e2:	4625      	mov	r5, r4
   1e7e4:	4628      	mov	r0, r5
   1e7e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1e7e8:	f001 f8ba 	bl	1f960 <_malloc_usable_size_r>
   1e7ec:	4284      	cmp	r4, r0
   1e7ee:	d90f      	bls.n	1e810 <_realloc_r+0x48>
   1e7f0:	4621      	mov	r1, r4
   1e7f2:	4638      	mov	r0, r7
   1e7f4:	f7fb fd82 	bl	1a2fc <_malloc_r>
   1e7f8:	4605      	mov	r5, r0
   1e7fa:	2800      	cmp	r0, #0
   1e7fc:	d0f2      	beq.n	1e7e4 <_realloc_r+0x1c>
   1e7fe:	4631      	mov	r1, r6
   1e800:	4622      	mov	r2, r4
   1e802:	f7fb fa5c 	bl	19cbe <memcpy>
   1e806:	4631      	mov	r1, r6
   1e808:	4638      	mov	r0, r7
   1e80a:	f7fb fcf9 	bl	1a200 <_free_r>
   1e80e:	e7e9      	b.n	1e7e4 <_realloc_r+0x1c>
   1e810:	4635      	mov	r5, r6
   1e812:	e7e7      	b.n	1e7e4 <_realloc_r+0x1c>

0001e814 <__ssputs_r>:
__ssputs_r():
   1e814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e818:	688e      	ldr	r6, [r1, #8]
   1e81a:	4682      	mov	sl, r0
   1e81c:	429e      	cmp	r6, r3
   1e81e:	460c      	mov	r4, r1
   1e820:	4691      	mov	r9, r2
   1e822:	4698      	mov	r8, r3
   1e824:	d835      	bhi.n	1e892 <__ssputs_r+0x7e>
   1e826:	898a      	ldrh	r2, [r1, #12]
   1e828:	f412 6f90 	tst.w	r2, #1152	; 0x480
   1e82c:	d031      	beq.n	1e892 <__ssputs_r+0x7e>
   1e82e:	2302      	movs	r3, #2
   1e830:	6825      	ldr	r5, [r4, #0]
   1e832:	6909      	ldr	r1, [r1, #16]
   1e834:	1a6f      	subs	r7, r5, r1
   1e836:	6965      	ldr	r5, [r4, #20]
   1e838:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   1e83c:	fb95 f5f3 	sdiv	r5, r5, r3
   1e840:	f108 0301 	add.w	r3, r8, #1
   1e844:	443b      	add	r3, r7
   1e846:	429d      	cmp	r5, r3
   1e848:	bf38      	it	cc
   1e84a:	461d      	movcc	r5, r3
   1e84c:	0553      	lsls	r3, r2, #21
   1e84e:	d531      	bpl.n	1e8b4 <__ssputs_r+0xa0>
   1e850:	4629      	mov	r1, r5
   1e852:	f7fb fd53 	bl	1a2fc <_malloc_r>
   1e856:	4606      	mov	r6, r0
   1e858:	b950      	cbnz	r0, 1e870 <__ssputs_r+0x5c>
   1e85a:	230c      	movs	r3, #12
   1e85c:	f8ca 3000 	str.w	r3, [sl]
   1e860:	89a3      	ldrh	r3, [r4, #12]
   1e862:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e866:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1e86a:	81a3      	strh	r3, [r4, #12]
   1e86c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e870:	463a      	mov	r2, r7
   1e872:	6921      	ldr	r1, [r4, #16]
   1e874:	f7fb fa23 	bl	19cbe <memcpy>
   1e878:	89a3      	ldrh	r3, [r4, #12]
   1e87a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   1e87e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1e882:	81a3      	strh	r3, [r4, #12]
   1e884:	6126      	str	r6, [r4, #16]
   1e886:	443e      	add	r6, r7
   1e888:	6026      	str	r6, [r4, #0]
   1e88a:	4646      	mov	r6, r8
   1e88c:	6165      	str	r5, [r4, #20]
   1e88e:	1bed      	subs	r5, r5, r7
   1e890:	60a5      	str	r5, [r4, #8]
   1e892:	4546      	cmp	r6, r8
   1e894:	bf28      	it	cs
   1e896:	4646      	movcs	r6, r8
   1e898:	4649      	mov	r1, r9
   1e89a:	4632      	mov	r2, r6
   1e89c:	6820      	ldr	r0, [r4, #0]
   1e89e:	f7fb fa19 	bl	19cd4 <memmove>
   1e8a2:	68a3      	ldr	r3, [r4, #8]
   1e8a4:	2000      	movs	r0, #0
   1e8a6:	1b9b      	subs	r3, r3, r6
   1e8a8:	60a3      	str	r3, [r4, #8]
   1e8aa:	6823      	ldr	r3, [r4, #0]
   1e8ac:	441e      	add	r6, r3
   1e8ae:	6026      	str	r6, [r4, #0]
   1e8b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e8b4:	462a      	mov	r2, r5
   1e8b6:	f7ff ff87 	bl	1e7c8 <_realloc_r>
   1e8ba:	4606      	mov	r6, r0
   1e8bc:	2800      	cmp	r0, #0
   1e8be:	d1e1      	bne.n	1e884 <__ssputs_r+0x70>
   1e8c0:	6921      	ldr	r1, [r4, #16]
   1e8c2:	4650      	mov	r0, sl
   1e8c4:	f7fb fc9c 	bl	1a200 <_free_r>
   1e8c8:	e7c7      	b.n	1e85a <__ssputs_r+0x46>
   1e8ca:	Address 0x000000000001e8ca is out of bounds.


0001e8cc <_svfiprintf_r>:
_svfiprintf_r():
   1e8cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8d0:	b09d      	sub	sp, #116	; 0x74
   1e8d2:	9303      	str	r3, [sp, #12]
   1e8d4:	898b      	ldrh	r3, [r1, #12]
   1e8d6:	4680      	mov	r8, r0
   1e8d8:	061c      	lsls	r4, r3, #24
   1e8da:	460d      	mov	r5, r1
   1e8dc:	4616      	mov	r6, r2
   1e8de:	d50f      	bpl.n	1e900 <_svfiprintf_r+0x34>
   1e8e0:	690b      	ldr	r3, [r1, #16]
   1e8e2:	b96b      	cbnz	r3, 1e900 <_svfiprintf_r+0x34>
   1e8e4:	2140      	movs	r1, #64	; 0x40
   1e8e6:	f7fb fd09 	bl	1a2fc <_malloc_r>
   1e8ea:	6028      	str	r0, [r5, #0]
   1e8ec:	6128      	str	r0, [r5, #16]
   1e8ee:	b928      	cbnz	r0, 1e8fc <_svfiprintf_r+0x30>
   1e8f0:	230c      	movs	r3, #12
   1e8f2:	f8c8 3000 	str.w	r3, [r8]
   1e8f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1e8fa:	e0c4      	b.n	1ea86 <_svfiprintf_r+0x1ba>
   1e8fc:	2340      	movs	r3, #64	; 0x40
   1e8fe:	616b      	str	r3, [r5, #20]
   1e900:	2300      	movs	r3, #0
   1e902:	9309      	str	r3, [sp, #36]	; 0x24
   1e904:	2320      	movs	r3, #32
   1e906:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1e90a:	2330      	movs	r3, #48	; 0x30
   1e90c:	f04f 0b01 	mov.w	fp, #1
   1e910:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1e914:	4637      	mov	r7, r6
   1e916:	463c      	mov	r4, r7
   1e918:	f814 3b01 	ldrb.w	r3, [r4], #1
   1e91c:	2b00      	cmp	r3, #0
   1e91e:	d13c      	bne.n	1e99a <_svfiprintf_r+0xce>
   1e920:	ebb7 0a06 	subs.w	sl, r7, r6
   1e924:	d00b      	beq.n	1e93e <_svfiprintf_r+0x72>
   1e926:	4653      	mov	r3, sl
   1e928:	4632      	mov	r2, r6
   1e92a:	4629      	mov	r1, r5
   1e92c:	4640      	mov	r0, r8
   1e92e:	f7ff ff71 	bl	1e814 <__ssputs_r>
   1e932:	3001      	adds	r0, #1
   1e934:	f000 80a2 	beq.w	1ea7c <_svfiprintf_r+0x1b0>
   1e938:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1e93a:	4453      	add	r3, sl
   1e93c:	9309      	str	r3, [sp, #36]	; 0x24
   1e93e:	783b      	ldrb	r3, [r7, #0]
   1e940:	2b00      	cmp	r3, #0
   1e942:	f000 809b 	beq.w	1ea7c <_svfiprintf_r+0x1b0>
   1e946:	2300      	movs	r3, #0
   1e948:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1e94c:	9304      	str	r3, [sp, #16]
   1e94e:	9307      	str	r3, [sp, #28]
   1e950:	9205      	str	r2, [sp, #20]
   1e952:	9306      	str	r3, [sp, #24]
   1e954:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1e958:	931a      	str	r3, [sp, #104]	; 0x68
   1e95a:	2205      	movs	r2, #5
   1e95c:	7821      	ldrb	r1, [r4, #0]
   1e95e:	4850      	ldr	r0, [pc, #320]	; (1eaa0 <_svfiprintf_r+0x1d4>)
   1e960:	f7fb f990 	bl	19c84 <memchr>
   1e964:	1c67      	adds	r7, r4, #1
   1e966:	9b04      	ldr	r3, [sp, #16]
   1e968:	b9d8      	cbnz	r0, 1e9a2 <_svfiprintf_r+0xd6>
   1e96a:	06d9      	lsls	r1, r3, #27
   1e96c:	bf44      	itt	mi
   1e96e:	2220      	movmi	r2, #32
   1e970:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1e974:	071a      	lsls	r2, r3, #28
   1e976:	bf44      	itt	mi
   1e978:	222b      	movmi	r2, #43	; 0x2b
   1e97a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1e97e:	7822      	ldrb	r2, [r4, #0]
   1e980:	2a2a      	cmp	r2, #42	; 0x2a
   1e982:	d016      	beq.n	1e9b2 <_svfiprintf_r+0xe6>
   1e984:	2100      	movs	r1, #0
   1e986:	200a      	movs	r0, #10
   1e988:	9a07      	ldr	r2, [sp, #28]
   1e98a:	4627      	mov	r7, r4
   1e98c:	783b      	ldrb	r3, [r7, #0]
   1e98e:	3401      	adds	r4, #1
   1e990:	3b30      	subs	r3, #48	; 0x30
   1e992:	2b09      	cmp	r3, #9
   1e994:	d950      	bls.n	1ea38 <_svfiprintf_r+0x16c>
   1e996:	b1c9      	cbz	r1, 1e9cc <_svfiprintf_r+0x100>
   1e998:	e011      	b.n	1e9be <_svfiprintf_r+0xf2>
   1e99a:	2b25      	cmp	r3, #37	; 0x25
   1e99c:	d0c0      	beq.n	1e920 <_svfiprintf_r+0x54>
   1e99e:	4627      	mov	r7, r4
   1e9a0:	e7b9      	b.n	1e916 <_svfiprintf_r+0x4a>
   1e9a2:	4a3f      	ldr	r2, [pc, #252]	; (1eaa0 <_svfiprintf_r+0x1d4>)
   1e9a4:	463c      	mov	r4, r7
   1e9a6:	1a80      	subs	r0, r0, r2
   1e9a8:	fa0b f000 	lsl.w	r0, fp, r0
   1e9ac:	4318      	orrs	r0, r3
   1e9ae:	9004      	str	r0, [sp, #16]
   1e9b0:	e7d3      	b.n	1e95a <_svfiprintf_r+0x8e>
   1e9b2:	9a03      	ldr	r2, [sp, #12]
   1e9b4:	1d11      	adds	r1, r2, #4
   1e9b6:	6812      	ldr	r2, [r2, #0]
   1e9b8:	9103      	str	r1, [sp, #12]
   1e9ba:	2a00      	cmp	r2, #0
   1e9bc:	db01      	blt.n	1e9c2 <_svfiprintf_r+0xf6>
   1e9be:	9207      	str	r2, [sp, #28]
   1e9c0:	e004      	b.n	1e9cc <_svfiprintf_r+0x100>
   1e9c2:	4252      	negs	r2, r2
   1e9c4:	f043 0302 	orr.w	r3, r3, #2
   1e9c8:	9207      	str	r2, [sp, #28]
   1e9ca:	9304      	str	r3, [sp, #16]
   1e9cc:	783b      	ldrb	r3, [r7, #0]
   1e9ce:	2b2e      	cmp	r3, #46	; 0x2e
   1e9d0:	d10d      	bne.n	1e9ee <_svfiprintf_r+0x122>
   1e9d2:	787b      	ldrb	r3, [r7, #1]
   1e9d4:	1c79      	adds	r1, r7, #1
   1e9d6:	2b2a      	cmp	r3, #42	; 0x2a
   1e9d8:	d132      	bne.n	1ea40 <_svfiprintf_r+0x174>
   1e9da:	9b03      	ldr	r3, [sp, #12]
   1e9dc:	3702      	adds	r7, #2
   1e9de:	1d1a      	adds	r2, r3, #4
   1e9e0:	681b      	ldr	r3, [r3, #0]
   1e9e2:	9203      	str	r2, [sp, #12]
   1e9e4:	2b00      	cmp	r3, #0
   1e9e6:	bfb8      	it	lt
   1e9e8:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1e9ec:	9305      	str	r3, [sp, #20]
   1e9ee:	4c2d      	ldr	r4, [pc, #180]	; (1eaa4 <_svfiprintf_r+0x1d8>)
   1e9f0:	2203      	movs	r2, #3
   1e9f2:	7839      	ldrb	r1, [r7, #0]
   1e9f4:	4620      	mov	r0, r4
   1e9f6:	f7fb f945 	bl	19c84 <memchr>
   1e9fa:	b138      	cbz	r0, 1ea0c <_svfiprintf_r+0x140>
   1e9fc:	2340      	movs	r3, #64	; 0x40
   1e9fe:	1b00      	subs	r0, r0, r4
   1ea00:	fa03 f000 	lsl.w	r0, r3, r0
   1ea04:	9b04      	ldr	r3, [sp, #16]
   1ea06:	3701      	adds	r7, #1
   1ea08:	4303      	orrs	r3, r0
   1ea0a:	9304      	str	r3, [sp, #16]
   1ea0c:	7839      	ldrb	r1, [r7, #0]
   1ea0e:	2206      	movs	r2, #6
   1ea10:	4825      	ldr	r0, [pc, #148]	; (1eaa8 <_svfiprintf_r+0x1dc>)
   1ea12:	1c7e      	adds	r6, r7, #1
   1ea14:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1ea18:	f7fb f934 	bl	19c84 <memchr>
   1ea1c:	2800      	cmp	r0, #0
   1ea1e:	d035      	beq.n	1ea8c <_svfiprintf_r+0x1c0>
   1ea20:	4b22      	ldr	r3, [pc, #136]	; (1eaac <_svfiprintf_r+0x1e0>)
   1ea22:	b9fb      	cbnz	r3, 1ea64 <_svfiprintf_r+0x198>
   1ea24:	9b03      	ldr	r3, [sp, #12]
   1ea26:	3307      	adds	r3, #7
   1ea28:	f023 0307 	bic.w	r3, r3, #7
   1ea2c:	3308      	adds	r3, #8
   1ea2e:	9303      	str	r3, [sp, #12]
   1ea30:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1ea32:	444b      	add	r3, r9
   1ea34:	9309      	str	r3, [sp, #36]	; 0x24
   1ea36:	e76d      	b.n	1e914 <_svfiprintf_r+0x48>
   1ea38:	fb00 3202 	mla	r2, r0, r2, r3
   1ea3c:	2101      	movs	r1, #1
   1ea3e:	e7a4      	b.n	1e98a <_svfiprintf_r+0xbe>
   1ea40:	2300      	movs	r3, #0
   1ea42:	240a      	movs	r4, #10
   1ea44:	4618      	mov	r0, r3
   1ea46:	9305      	str	r3, [sp, #20]
   1ea48:	460f      	mov	r7, r1
   1ea4a:	783a      	ldrb	r2, [r7, #0]
   1ea4c:	3101      	adds	r1, #1
   1ea4e:	3a30      	subs	r2, #48	; 0x30
   1ea50:	2a09      	cmp	r2, #9
   1ea52:	d903      	bls.n	1ea5c <_svfiprintf_r+0x190>
   1ea54:	2b00      	cmp	r3, #0
   1ea56:	d0ca      	beq.n	1e9ee <_svfiprintf_r+0x122>
   1ea58:	9005      	str	r0, [sp, #20]
   1ea5a:	e7c8      	b.n	1e9ee <_svfiprintf_r+0x122>
   1ea5c:	fb04 2000 	mla	r0, r4, r0, r2
   1ea60:	2301      	movs	r3, #1
   1ea62:	e7f1      	b.n	1ea48 <_svfiprintf_r+0x17c>
   1ea64:	ab03      	add	r3, sp, #12
   1ea66:	9300      	str	r3, [sp, #0]
   1ea68:	462a      	mov	r2, r5
   1ea6a:	4b11      	ldr	r3, [pc, #68]	; (1eab0 <_svfiprintf_r+0x1e4>)
   1ea6c:	a904      	add	r1, sp, #16
   1ea6e:	4640      	mov	r0, r8
   1ea70:	f7fb fd34 	bl	1a4dc <_printf_float>
   1ea74:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1ea78:	4681      	mov	r9, r0
   1ea7a:	d1d9      	bne.n	1ea30 <_svfiprintf_r+0x164>
   1ea7c:	89ab      	ldrh	r3, [r5, #12]
   1ea7e:	065b      	lsls	r3, r3, #25
   1ea80:	f53f af39 	bmi.w	1e8f6 <_svfiprintf_r+0x2a>
   1ea84:	9809      	ldr	r0, [sp, #36]	; 0x24
   1ea86:	b01d      	add	sp, #116	; 0x74
   1ea88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea8c:	ab03      	add	r3, sp, #12
   1ea8e:	9300      	str	r3, [sp, #0]
   1ea90:	462a      	mov	r2, r5
   1ea92:	4b07      	ldr	r3, [pc, #28]	; (1eab0 <_svfiprintf_r+0x1e4>)
   1ea94:	a904      	add	r1, sp, #16
   1ea96:	4640      	mov	r0, r8
   1ea98:	f7fb ffd0 	bl	1aa3c <_printf_i>
   1ea9c:	e7ea      	b.n	1ea74 <_svfiprintf_r+0x1a8>
   1ea9e:	bf00      	nop
   1eaa0:	00021464 	.word	0x00021464
   1eaa4:	0002146a 	.word	0x0002146a
   1eaa8:	0002146e 	.word	0x0002146e
   1eaac:	0001a4dd 	.word	0x0001a4dd
   1eab0:	0001e815 	.word	0x0001e815

0001eab4 <_sungetc_r>:
_sungetc_r():
   1eab4:	b538      	push	{r3, r4, r5, lr}
   1eab6:	1c4b      	adds	r3, r1, #1
   1eab8:	4614      	mov	r4, r2
   1eaba:	d103      	bne.n	1eac4 <_sungetc_r+0x10>
   1eabc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1eac0:	4628      	mov	r0, r5
   1eac2:	bd38      	pop	{r3, r4, r5, pc}
   1eac4:	8993      	ldrh	r3, [r2, #12]
   1eac6:	b2cd      	uxtb	r5, r1
   1eac8:	f023 0320 	bic.w	r3, r3, #32
   1eacc:	8193      	strh	r3, [r2, #12]
   1eace:	6b53      	ldr	r3, [r2, #52]	; 0x34
   1ead0:	6852      	ldr	r2, [r2, #4]
   1ead2:	b18b      	cbz	r3, 1eaf8 <_sungetc_r+0x44>
   1ead4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1ead6:	429a      	cmp	r2, r3
   1ead8:	da08      	bge.n	1eaec <_sungetc_r+0x38>
   1eada:	6823      	ldr	r3, [r4, #0]
   1eadc:	1e5a      	subs	r2, r3, #1
   1eade:	6022      	str	r2, [r4, #0]
   1eae0:	f803 5c01 	strb.w	r5, [r3, #-1]
   1eae4:	6863      	ldr	r3, [r4, #4]
   1eae6:	3301      	adds	r3, #1
   1eae8:	6063      	str	r3, [r4, #4]
   1eaea:	e7e9      	b.n	1eac0 <_sungetc_r+0xc>
   1eaec:	4621      	mov	r1, r4
   1eaee:	f000 fe89 	bl	1f804 <__submore>
   1eaf2:	2800      	cmp	r0, #0
   1eaf4:	d0f1      	beq.n	1eada <_sungetc_r+0x26>
   1eaf6:	e7e1      	b.n	1eabc <_sungetc_r+0x8>
   1eaf8:	6921      	ldr	r1, [r4, #16]
   1eafa:	6823      	ldr	r3, [r4, #0]
   1eafc:	b151      	cbz	r1, 1eb14 <_sungetc_r+0x60>
   1eafe:	4299      	cmp	r1, r3
   1eb00:	d208      	bcs.n	1eb14 <_sungetc_r+0x60>
   1eb02:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1eb06:	428d      	cmp	r5, r1
   1eb08:	d104      	bne.n	1eb14 <_sungetc_r+0x60>
   1eb0a:	3b01      	subs	r3, #1
   1eb0c:	3201      	adds	r2, #1
   1eb0e:	6023      	str	r3, [r4, #0]
   1eb10:	6062      	str	r2, [r4, #4]
   1eb12:	e7d5      	b.n	1eac0 <_sungetc_r+0xc>
   1eb14:	63e3      	str	r3, [r4, #60]	; 0x3c
   1eb16:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1eb1a:	6363      	str	r3, [r4, #52]	; 0x34
   1eb1c:	2303      	movs	r3, #3
   1eb1e:	63a3      	str	r3, [r4, #56]	; 0x38
   1eb20:	4623      	mov	r3, r4
   1eb22:	6422      	str	r2, [r4, #64]	; 0x40
   1eb24:	f803 5f46 	strb.w	r5, [r3, #70]!
   1eb28:	6023      	str	r3, [r4, #0]
   1eb2a:	2301      	movs	r3, #1
   1eb2c:	e7dc      	b.n	1eae8 <_sungetc_r+0x34>

0001eb2e <__ssrefill_r>:
__ssrefill_r():
   1eb2e:	b510      	push	{r4, lr}
   1eb30:	460c      	mov	r4, r1
   1eb32:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1eb34:	b169      	cbz	r1, 1eb52 <__ssrefill_r+0x24>
   1eb36:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1eb3a:	4299      	cmp	r1, r3
   1eb3c:	d001      	beq.n	1eb42 <__ssrefill_r+0x14>
   1eb3e:	f7fb fb5f 	bl	1a200 <_free_r>
   1eb42:	2000      	movs	r0, #0
   1eb44:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1eb46:	6360      	str	r0, [r4, #52]	; 0x34
   1eb48:	6063      	str	r3, [r4, #4]
   1eb4a:	b113      	cbz	r3, 1eb52 <__ssrefill_r+0x24>
   1eb4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1eb4e:	6023      	str	r3, [r4, #0]
   1eb50:	bd10      	pop	{r4, pc}
   1eb52:	6923      	ldr	r3, [r4, #16]
   1eb54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1eb58:	6023      	str	r3, [r4, #0]
   1eb5a:	2300      	movs	r3, #0
   1eb5c:	6063      	str	r3, [r4, #4]
   1eb5e:	89a3      	ldrh	r3, [r4, #12]
   1eb60:	f043 0320 	orr.w	r3, r3, #32
   1eb64:	81a3      	strh	r3, [r4, #12]
   1eb66:	bd10      	pop	{r4, pc}

0001eb68 <__ssvfiscanf_r>:
__ssvfiscanf_r():
   1eb68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb6c:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1eb70:	9301      	str	r3, [sp, #4]
   1eb72:	2300      	movs	r3, #0
   1eb74:	4606      	mov	r6, r0
   1eb76:	460c      	mov	r4, r1
   1eb78:	4692      	mov	sl, r2
   1eb7a:	270a      	movs	r7, #10
   1eb7c:	9346      	str	r3, [sp, #280]	; 0x118
   1eb7e:	9347      	str	r3, [sp, #284]	; 0x11c
   1eb80:	4b9f      	ldr	r3, [pc, #636]	; (1ee00 <__ssvfiscanf_r+0x298>)
   1eb82:	f10d 080c 	add.w	r8, sp, #12
   1eb86:	93a2      	str	r3, [sp, #648]	; 0x288
   1eb88:	4b9e      	ldr	r3, [pc, #632]	; (1ee04 <__ssvfiscanf_r+0x29c>)
   1eb8a:	f8df 927c 	ldr.w	r9, [pc, #636]	; 1ee08 <__ssvfiscanf_r+0x2a0>
   1eb8e:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1eb92:	93a3      	str	r3, [sp, #652]	; 0x28c
   1eb94:	f89a 3000 	ldrb.w	r3, [sl]
   1eb98:	2b00      	cmp	r3, #0
   1eb9a:	f000 812f 	beq.w	1edfc <__ssvfiscanf_r+0x294>
   1eb9e:	f7fa ffdd 	bl	19b5c <__locale_ctype_ptr>
   1eba2:	f89a b000 	ldrb.w	fp, [sl]
   1eba6:	4458      	add	r0, fp
   1eba8:	7843      	ldrb	r3, [r0, #1]
   1ebaa:	f013 0308 	ands.w	r3, r3, #8
   1ebae:	d143      	bne.n	1ec38 <__ssvfiscanf_r+0xd0>
   1ebb0:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1ebb4:	f10a 0501 	add.w	r5, sl, #1
   1ebb8:	f040 8099 	bne.w	1ecee <__ssvfiscanf_r+0x186>
   1ebbc:	9345      	str	r3, [sp, #276]	; 0x114
   1ebbe:	9343      	str	r3, [sp, #268]	; 0x10c
   1ebc0:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1ebc4:	2b2a      	cmp	r3, #42	; 0x2a
   1ebc6:	d103      	bne.n	1ebd0 <__ssvfiscanf_r+0x68>
   1ebc8:	2310      	movs	r3, #16
   1ebca:	f10a 0502 	add.w	r5, sl, #2
   1ebce:	9343      	str	r3, [sp, #268]	; 0x10c
   1ebd0:	7829      	ldrb	r1, [r5, #0]
   1ebd2:	46aa      	mov	sl, r5
   1ebd4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1ebd8:	2a09      	cmp	r2, #9
   1ebda:	f105 0501 	add.w	r5, r5, #1
   1ebde:	d941      	bls.n	1ec64 <__ssvfiscanf_r+0xfc>
   1ebe0:	2203      	movs	r2, #3
   1ebe2:	4889      	ldr	r0, [pc, #548]	; (1ee08 <__ssvfiscanf_r+0x2a0>)
   1ebe4:	f7fb f84e 	bl	19c84 <memchr>
   1ebe8:	b138      	cbz	r0, 1ebfa <__ssvfiscanf_r+0x92>
   1ebea:	eba0 0309 	sub.w	r3, r0, r9
   1ebee:	2001      	movs	r0, #1
   1ebf0:	46aa      	mov	sl, r5
   1ebf2:	4098      	lsls	r0, r3
   1ebf4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1ebf6:	4318      	orrs	r0, r3
   1ebf8:	9043      	str	r0, [sp, #268]	; 0x10c
   1ebfa:	f89a 3000 	ldrb.w	r3, [sl]
   1ebfe:	f10a 0501 	add.w	r5, sl, #1
   1ec02:	2b67      	cmp	r3, #103	; 0x67
   1ec04:	d84a      	bhi.n	1ec9c <__ssvfiscanf_r+0x134>
   1ec06:	2b65      	cmp	r3, #101	; 0x65
   1ec08:	f080 80b7 	bcs.w	1ed7a <__ssvfiscanf_r+0x212>
   1ec0c:	2b47      	cmp	r3, #71	; 0x47
   1ec0e:	d82f      	bhi.n	1ec70 <__ssvfiscanf_r+0x108>
   1ec10:	2b45      	cmp	r3, #69	; 0x45
   1ec12:	f080 80b2 	bcs.w	1ed7a <__ssvfiscanf_r+0x212>
   1ec16:	2b00      	cmp	r3, #0
   1ec18:	f000 8082 	beq.w	1ed20 <__ssvfiscanf_r+0x1b8>
   1ec1c:	2b25      	cmp	r3, #37	; 0x25
   1ec1e:	d066      	beq.n	1ecee <__ssvfiscanf_r+0x186>
   1ec20:	2303      	movs	r3, #3
   1ec22:	9744      	str	r7, [sp, #272]	; 0x110
   1ec24:	9349      	str	r3, [sp, #292]	; 0x124
   1ec26:	e045      	b.n	1ecb4 <__ssvfiscanf_r+0x14c>
   1ec28:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1ec2a:	3301      	adds	r3, #1
   1ec2c:	3101      	adds	r1, #1
   1ec2e:	9147      	str	r1, [sp, #284]	; 0x11c
   1ec30:	6861      	ldr	r1, [r4, #4]
   1ec32:	6023      	str	r3, [r4, #0]
   1ec34:	3901      	subs	r1, #1
   1ec36:	6061      	str	r1, [r4, #4]
   1ec38:	6863      	ldr	r3, [r4, #4]
   1ec3a:	2b00      	cmp	r3, #0
   1ec3c:	dd0b      	ble.n	1ec56 <__ssvfiscanf_r+0xee>
   1ec3e:	f7fa ff8d 	bl	19b5c <__locale_ctype_ptr>
   1ec42:	6823      	ldr	r3, [r4, #0]
   1ec44:	7819      	ldrb	r1, [r3, #0]
   1ec46:	4408      	add	r0, r1
   1ec48:	7841      	ldrb	r1, [r0, #1]
   1ec4a:	070d      	lsls	r5, r1, #28
   1ec4c:	d4ec      	bmi.n	1ec28 <__ssvfiscanf_r+0xc0>
   1ec4e:	f10a 0501 	add.w	r5, sl, #1
   1ec52:	46aa      	mov	sl, r5
   1ec54:	e79e      	b.n	1eb94 <__ssvfiscanf_r+0x2c>
   1ec56:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1ec58:	4621      	mov	r1, r4
   1ec5a:	4630      	mov	r0, r6
   1ec5c:	4798      	blx	r3
   1ec5e:	2800      	cmp	r0, #0
   1ec60:	d0ed      	beq.n	1ec3e <__ssvfiscanf_r+0xd6>
   1ec62:	e7f4      	b.n	1ec4e <__ssvfiscanf_r+0xe6>
   1ec64:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1ec66:	fb07 1303 	mla	r3, r7, r3, r1
   1ec6a:	3b30      	subs	r3, #48	; 0x30
   1ec6c:	9345      	str	r3, [sp, #276]	; 0x114
   1ec6e:	e7af      	b.n	1ebd0 <__ssvfiscanf_r+0x68>
   1ec70:	2b5b      	cmp	r3, #91	; 0x5b
   1ec72:	d061      	beq.n	1ed38 <__ssvfiscanf_r+0x1d0>
   1ec74:	d80c      	bhi.n	1ec90 <__ssvfiscanf_r+0x128>
   1ec76:	2b58      	cmp	r3, #88	; 0x58
   1ec78:	d1d2      	bne.n	1ec20 <__ssvfiscanf_r+0xb8>
   1ec7a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1ec7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1ec80:	9243      	str	r2, [sp, #268]	; 0x10c
   1ec82:	2210      	movs	r2, #16
   1ec84:	9244      	str	r2, [sp, #272]	; 0x110
   1ec86:	2b6f      	cmp	r3, #111	; 0x6f
   1ec88:	bfb4      	ite	lt
   1ec8a:	2303      	movlt	r3, #3
   1ec8c:	2304      	movge	r3, #4
   1ec8e:	e010      	b.n	1ecb2 <__ssvfiscanf_r+0x14a>
   1ec90:	2b63      	cmp	r3, #99	; 0x63
   1ec92:	d05c      	beq.n	1ed4e <__ssvfiscanf_r+0x1e6>
   1ec94:	2b64      	cmp	r3, #100	; 0x64
   1ec96:	d1c3      	bne.n	1ec20 <__ssvfiscanf_r+0xb8>
   1ec98:	9744      	str	r7, [sp, #272]	; 0x110
   1ec9a:	e7f4      	b.n	1ec86 <__ssvfiscanf_r+0x11e>
   1ec9c:	2b70      	cmp	r3, #112	; 0x70
   1ec9e:	d042      	beq.n	1ed26 <__ssvfiscanf_r+0x1be>
   1eca0:	d81d      	bhi.n	1ecde <__ssvfiscanf_r+0x176>
   1eca2:	2b6e      	cmp	r3, #110	; 0x6e
   1eca4:	d059      	beq.n	1ed5a <__ssvfiscanf_r+0x1f2>
   1eca6:	d843      	bhi.n	1ed30 <__ssvfiscanf_r+0x1c8>
   1eca8:	2b69      	cmp	r3, #105	; 0x69
   1ecaa:	d1b9      	bne.n	1ec20 <__ssvfiscanf_r+0xb8>
   1ecac:	2300      	movs	r3, #0
   1ecae:	9344      	str	r3, [sp, #272]	; 0x110
   1ecb0:	2303      	movs	r3, #3
   1ecb2:	9349      	str	r3, [sp, #292]	; 0x124
   1ecb4:	6863      	ldr	r3, [r4, #4]
   1ecb6:	2b00      	cmp	r3, #0
   1ecb8:	dd61      	ble.n	1ed7e <__ssvfiscanf_r+0x216>
   1ecba:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1ecbc:	0659      	lsls	r1, r3, #25
   1ecbe:	d56f      	bpl.n	1eda0 <__ssvfiscanf_r+0x238>
   1ecc0:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1ecc2:	2b02      	cmp	r3, #2
   1ecc4:	dc7c      	bgt.n	1edc0 <__ssvfiscanf_r+0x258>
   1ecc6:	ab01      	add	r3, sp, #4
   1ecc8:	4622      	mov	r2, r4
   1ecca:	a943      	add	r1, sp, #268	; 0x10c
   1eccc:	4630      	mov	r0, r6
   1ecce:	f000 fb59 	bl	1f384 <_scanf_chars>
   1ecd2:	2801      	cmp	r0, #1
   1ecd4:	f000 8092 	beq.w	1edfc <__ssvfiscanf_r+0x294>
   1ecd8:	2802      	cmp	r0, #2
   1ecda:	d1ba      	bne.n	1ec52 <__ssvfiscanf_r+0xea>
   1ecdc:	e01d      	b.n	1ed1a <__ssvfiscanf_r+0x1b2>
   1ecde:	2b75      	cmp	r3, #117	; 0x75
   1ece0:	d0da      	beq.n	1ec98 <__ssvfiscanf_r+0x130>
   1ece2:	2b78      	cmp	r3, #120	; 0x78
   1ece4:	d0c9      	beq.n	1ec7a <__ssvfiscanf_r+0x112>
   1ece6:	2b73      	cmp	r3, #115	; 0x73
   1ece8:	d19a      	bne.n	1ec20 <__ssvfiscanf_r+0xb8>
   1ecea:	2302      	movs	r3, #2
   1ecec:	e7e1      	b.n	1ecb2 <__ssvfiscanf_r+0x14a>
   1ecee:	6863      	ldr	r3, [r4, #4]
   1ecf0:	2b00      	cmp	r3, #0
   1ecf2:	dd0c      	ble.n	1ed0e <__ssvfiscanf_r+0x1a6>
   1ecf4:	6823      	ldr	r3, [r4, #0]
   1ecf6:	781a      	ldrb	r2, [r3, #0]
   1ecf8:	4593      	cmp	fp, r2
   1ecfa:	d17f      	bne.n	1edfc <__ssvfiscanf_r+0x294>
   1ecfc:	3301      	adds	r3, #1
   1ecfe:	6862      	ldr	r2, [r4, #4]
   1ed00:	6023      	str	r3, [r4, #0]
   1ed02:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1ed04:	3a01      	subs	r2, #1
   1ed06:	3301      	adds	r3, #1
   1ed08:	6062      	str	r2, [r4, #4]
   1ed0a:	9347      	str	r3, [sp, #284]	; 0x11c
   1ed0c:	e7a1      	b.n	1ec52 <__ssvfiscanf_r+0xea>
   1ed0e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1ed10:	4621      	mov	r1, r4
   1ed12:	4630      	mov	r0, r6
   1ed14:	4798      	blx	r3
   1ed16:	2800      	cmp	r0, #0
   1ed18:	d0ec      	beq.n	1ecf4 <__ssvfiscanf_r+0x18c>
   1ed1a:	9846      	ldr	r0, [sp, #280]	; 0x118
   1ed1c:	2800      	cmp	r0, #0
   1ed1e:	d163      	bne.n	1ede8 <__ssvfiscanf_r+0x280>
   1ed20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ed24:	e066      	b.n	1edf4 <__ssvfiscanf_r+0x28c>
   1ed26:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1ed28:	f042 0220 	orr.w	r2, r2, #32
   1ed2c:	9243      	str	r2, [sp, #268]	; 0x10c
   1ed2e:	e7a4      	b.n	1ec7a <__ssvfiscanf_r+0x112>
   1ed30:	2308      	movs	r3, #8
   1ed32:	9344      	str	r3, [sp, #272]	; 0x110
   1ed34:	2304      	movs	r3, #4
   1ed36:	e7bc      	b.n	1ecb2 <__ssvfiscanf_r+0x14a>
   1ed38:	4629      	mov	r1, r5
   1ed3a:	4640      	mov	r0, r8
   1ed3c:	f000 fc8e 	bl	1f65c <__sccl>
   1ed40:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1ed42:	4605      	mov	r5, r0
   1ed44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1ed48:	9343      	str	r3, [sp, #268]	; 0x10c
   1ed4a:	2301      	movs	r3, #1
   1ed4c:	e7b1      	b.n	1ecb2 <__ssvfiscanf_r+0x14a>
   1ed4e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1ed50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1ed54:	9343      	str	r3, [sp, #268]	; 0x10c
   1ed56:	2300      	movs	r3, #0
   1ed58:	e7ab      	b.n	1ecb2 <__ssvfiscanf_r+0x14a>
   1ed5a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1ed5c:	06d0      	lsls	r0, r2, #27
   1ed5e:	f53f af78 	bmi.w	1ec52 <__ssvfiscanf_r+0xea>
   1ed62:	f012 0f01 	tst.w	r2, #1
   1ed66:	9a01      	ldr	r2, [sp, #4]
   1ed68:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1ed6a:	f102 0104 	add.w	r1, r2, #4
   1ed6e:	9101      	str	r1, [sp, #4]
   1ed70:	6812      	ldr	r2, [r2, #0]
   1ed72:	bf14      	ite	ne
   1ed74:	8013      	strhne	r3, [r2, #0]
   1ed76:	6013      	streq	r3, [r2, #0]
   1ed78:	e76b      	b.n	1ec52 <__ssvfiscanf_r+0xea>
   1ed7a:	2305      	movs	r3, #5
   1ed7c:	e799      	b.n	1ecb2 <__ssvfiscanf_r+0x14a>
   1ed7e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1ed80:	4621      	mov	r1, r4
   1ed82:	4630      	mov	r0, r6
   1ed84:	4798      	blx	r3
   1ed86:	2800      	cmp	r0, #0
   1ed88:	d097      	beq.n	1ecba <__ssvfiscanf_r+0x152>
   1ed8a:	e7c6      	b.n	1ed1a <__ssvfiscanf_r+0x1b2>
   1ed8c:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   1ed8e:	3201      	adds	r2, #1
   1ed90:	9247      	str	r2, [sp, #284]	; 0x11c
   1ed92:	6862      	ldr	r2, [r4, #4]
   1ed94:	3a01      	subs	r2, #1
   1ed96:	2a00      	cmp	r2, #0
   1ed98:	6062      	str	r2, [r4, #4]
   1ed9a:	dd0a      	ble.n	1edb2 <__ssvfiscanf_r+0x24a>
   1ed9c:	3301      	adds	r3, #1
   1ed9e:	6023      	str	r3, [r4, #0]
   1eda0:	f7fa fedc 	bl	19b5c <__locale_ctype_ptr>
   1eda4:	6823      	ldr	r3, [r4, #0]
   1eda6:	781a      	ldrb	r2, [r3, #0]
   1eda8:	4410      	add	r0, r2
   1edaa:	7842      	ldrb	r2, [r0, #1]
   1edac:	0712      	lsls	r2, r2, #28
   1edae:	d4ed      	bmi.n	1ed8c <__ssvfiscanf_r+0x224>
   1edb0:	e786      	b.n	1ecc0 <__ssvfiscanf_r+0x158>
   1edb2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1edb4:	4621      	mov	r1, r4
   1edb6:	4630      	mov	r0, r6
   1edb8:	4798      	blx	r3
   1edba:	2800      	cmp	r0, #0
   1edbc:	d0f0      	beq.n	1eda0 <__ssvfiscanf_r+0x238>
   1edbe:	e7ac      	b.n	1ed1a <__ssvfiscanf_r+0x1b2>
   1edc0:	2b04      	cmp	r3, #4
   1edc2:	dc06      	bgt.n	1edd2 <__ssvfiscanf_r+0x26a>
   1edc4:	ab01      	add	r3, sp, #4
   1edc6:	4622      	mov	r2, r4
   1edc8:	a943      	add	r1, sp, #268	; 0x10c
   1edca:	4630      	mov	r0, r6
   1edcc:	f000 fb3e 	bl	1f44c <_scanf_i>
   1edd0:	e77f      	b.n	1ecd2 <__ssvfiscanf_r+0x16a>
   1edd2:	4b0e      	ldr	r3, [pc, #56]	; (1ee0c <__ssvfiscanf_r+0x2a4>)
   1edd4:	2b00      	cmp	r3, #0
   1edd6:	f43f af3c 	beq.w	1ec52 <__ssvfiscanf_r+0xea>
   1edda:	ab01      	add	r3, sp, #4
   1eddc:	4622      	mov	r2, r4
   1edde:	a943      	add	r1, sp, #268	; 0x10c
   1ede0:	4630      	mov	r0, r6
   1ede2:	f7fb ff4b 	bl	1ac7c <_scanf_float>
   1ede6:	e774      	b.n	1ecd2 <__ssvfiscanf_r+0x16a>
   1ede8:	89a3      	ldrh	r3, [r4, #12]
   1edea:	f013 0f40 	tst.w	r3, #64	; 0x40
   1edee:	bf18      	it	ne
   1edf0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1edf4:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   1edf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edfc:	9846      	ldr	r0, [sp, #280]	; 0x118
   1edfe:	e7f9      	b.n	1edf4 <__ssvfiscanf_r+0x28c>
   1ee00:	0001eab5 	.word	0x0001eab5
   1ee04:	0001eb2f 	.word	0x0001eb2f
   1ee08:	0002146a 	.word	0x0002146a
   1ee0c:	0001ac7d 	.word	0x0001ac7d

0001ee10 <__sfputc_r>:
__sfputc_r():
   1ee10:	6893      	ldr	r3, [r2, #8]
   1ee12:	b410      	push	{r4}
   1ee14:	3b01      	subs	r3, #1
   1ee16:	2b00      	cmp	r3, #0
   1ee18:	6093      	str	r3, [r2, #8]
   1ee1a:	da08      	bge.n	1ee2e <__sfputc_r+0x1e>
   1ee1c:	6994      	ldr	r4, [r2, #24]
   1ee1e:	42a3      	cmp	r3, r4
   1ee20:	db02      	blt.n	1ee28 <__sfputc_r+0x18>
   1ee22:	b2cb      	uxtb	r3, r1
   1ee24:	2b0a      	cmp	r3, #10
   1ee26:	d102      	bne.n	1ee2e <__sfputc_r+0x1e>
   1ee28:	bc10      	pop	{r4}
   1ee2a:	f7fd bdc1 	b.w	1c9b0 <__swbuf_r>
   1ee2e:	6813      	ldr	r3, [r2, #0]
   1ee30:	1c58      	adds	r0, r3, #1
   1ee32:	6010      	str	r0, [r2, #0]
   1ee34:	7019      	strb	r1, [r3, #0]
   1ee36:	b2c8      	uxtb	r0, r1
   1ee38:	bc10      	pop	{r4}
   1ee3a:	4770      	bx	lr

0001ee3c <__sfputs_r>:
__sfputs_r():
   1ee3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ee3e:	4606      	mov	r6, r0
   1ee40:	460f      	mov	r7, r1
   1ee42:	4614      	mov	r4, r2
   1ee44:	18d5      	adds	r5, r2, r3
   1ee46:	42ac      	cmp	r4, r5
   1ee48:	d101      	bne.n	1ee4e <__sfputs_r+0x12>
   1ee4a:	2000      	movs	r0, #0
   1ee4c:	e007      	b.n	1ee5e <__sfputs_r+0x22>
   1ee4e:	463a      	mov	r2, r7
   1ee50:	f814 1b01 	ldrb.w	r1, [r4], #1
   1ee54:	4630      	mov	r0, r6
   1ee56:	f7ff ffdb 	bl	1ee10 <__sfputc_r>
   1ee5a:	1c43      	adds	r3, r0, #1
   1ee5c:	d1f3      	bne.n	1ee46 <__sfputs_r+0xa>
   1ee5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001ee60 <_vfiprintf_r>:
_vfprintf_r():
   1ee60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee64:	b09d      	sub	sp, #116	; 0x74
   1ee66:	460c      	mov	r4, r1
   1ee68:	4617      	mov	r7, r2
   1ee6a:	9303      	str	r3, [sp, #12]
   1ee6c:	4606      	mov	r6, r0
   1ee6e:	b118      	cbz	r0, 1ee78 <_vfiprintf_r+0x18>
   1ee70:	6983      	ldr	r3, [r0, #24]
   1ee72:	b90b      	cbnz	r3, 1ee78 <_vfiprintf_r+0x18>
   1ee74:	f7fa fda4 	bl	199c0 <__sinit>
   1ee78:	4b7c      	ldr	r3, [pc, #496]	; (1f06c <_vfiprintf_r+0x20c>)
   1ee7a:	429c      	cmp	r4, r3
   1ee7c:	d157      	bne.n	1ef2e <_vfiprintf_r+0xce>
   1ee7e:	6874      	ldr	r4, [r6, #4]
   1ee80:	89a3      	ldrh	r3, [r4, #12]
   1ee82:	0718      	lsls	r0, r3, #28
   1ee84:	d55d      	bpl.n	1ef42 <_vfiprintf_r+0xe2>
   1ee86:	6923      	ldr	r3, [r4, #16]
   1ee88:	2b00      	cmp	r3, #0
   1ee8a:	d05a      	beq.n	1ef42 <_vfiprintf_r+0xe2>
   1ee8c:	2300      	movs	r3, #0
   1ee8e:	9309      	str	r3, [sp, #36]	; 0x24
   1ee90:	2320      	movs	r3, #32
   1ee92:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1ee96:	2330      	movs	r3, #48	; 0x30
   1ee98:	f04f 0b01 	mov.w	fp, #1
   1ee9c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1eea0:	46b8      	mov	r8, r7
   1eea2:	4645      	mov	r5, r8
   1eea4:	f815 3b01 	ldrb.w	r3, [r5], #1
   1eea8:	2b00      	cmp	r3, #0
   1eeaa:	d155      	bne.n	1ef58 <_vfiprintf_r+0xf8>
   1eeac:	ebb8 0a07 	subs.w	sl, r8, r7
   1eeb0:	d00b      	beq.n	1eeca <_vfiprintf_r+0x6a>
   1eeb2:	4653      	mov	r3, sl
   1eeb4:	463a      	mov	r2, r7
   1eeb6:	4621      	mov	r1, r4
   1eeb8:	4630      	mov	r0, r6
   1eeba:	f7ff ffbf 	bl	1ee3c <__sfputs_r>
   1eebe:	3001      	adds	r0, #1
   1eec0:	f000 80c4 	beq.w	1f04c <_vfiprintf_r+0x1ec>
   1eec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1eec6:	4453      	add	r3, sl
   1eec8:	9309      	str	r3, [sp, #36]	; 0x24
   1eeca:	f898 3000 	ldrb.w	r3, [r8]
   1eece:	2b00      	cmp	r3, #0
   1eed0:	f000 80bc 	beq.w	1f04c <_vfiprintf_r+0x1ec>
   1eed4:	2300      	movs	r3, #0
   1eed6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   1eeda:	9304      	str	r3, [sp, #16]
   1eedc:	9307      	str	r3, [sp, #28]
   1eede:	9205      	str	r2, [sp, #20]
   1eee0:	9306      	str	r3, [sp, #24]
   1eee2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1eee6:	931a      	str	r3, [sp, #104]	; 0x68
   1eee8:	2205      	movs	r2, #5
   1eeea:	7829      	ldrb	r1, [r5, #0]
   1eeec:	4860      	ldr	r0, [pc, #384]	; (1f070 <_vfiprintf_r+0x210>)
   1eeee:	f7fa fec9 	bl	19c84 <memchr>
   1eef2:	f105 0801 	add.w	r8, r5, #1
   1eef6:	9b04      	ldr	r3, [sp, #16]
   1eef8:	2800      	cmp	r0, #0
   1eefa:	d131      	bne.n	1ef60 <_vfiprintf_r+0x100>
   1eefc:	06d9      	lsls	r1, r3, #27
   1eefe:	bf44      	itt	mi
   1ef00:	2220      	movmi	r2, #32
   1ef02:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1ef06:	071a      	lsls	r2, r3, #28
   1ef08:	bf44      	itt	mi
   1ef0a:	222b      	movmi	r2, #43	; 0x2b
   1ef0c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1ef10:	782a      	ldrb	r2, [r5, #0]
   1ef12:	2a2a      	cmp	r2, #42	; 0x2a
   1ef14:	d02c      	beq.n	1ef70 <_vfiprintf_r+0x110>
   1ef16:	2100      	movs	r1, #0
   1ef18:	200a      	movs	r0, #10
   1ef1a:	9a07      	ldr	r2, [sp, #28]
   1ef1c:	46a8      	mov	r8, r5
   1ef1e:	f898 3000 	ldrb.w	r3, [r8]
   1ef22:	3501      	adds	r5, #1
   1ef24:	3b30      	subs	r3, #48	; 0x30
   1ef26:	2b09      	cmp	r3, #9
   1ef28:	d96d      	bls.n	1f006 <_vfiprintf_r+0x1a6>
   1ef2a:	b371      	cbz	r1, 1ef8a <_vfiprintf_r+0x12a>
   1ef2c:	e026      	b.n	1ef7c <_vfiprintf_r+0x11c>
   1ef2e:	4b51      	ldr	r3, [pc, #324]	; (1f074 <_vfiprintf_r+0x214>)
   1ef30:	429c      	cmp	r4, r3
   1ef32:	d101      	bne.n	1ef38 <_vfiprintf_r+0xd8>
   1ef34:	68b4      	ldr	r4, [r6, #8]
   1ef36:	e7a3      	b.n	1ee80 <_vfiprintf_r+0x20>
   1ef38:	4b4f      	ldr	r3, [pc, #316]	; (1f078 <_vfiprintf_r+0x218>)
   1ef3a:	429c      	cmp	r4, r3
   1ef3c:	bf08      	it	eq
   1ef3e:	68f4      	ldreq	r4, [r6, #12]
   1ef40:	e79e      	b.n	1ee80 <_vfiprintf_r+0x20>
   1ef42:	4621      	mov	r1, r4
   1ef44:	4630      	mov	r0, r6
   1ef46:	f7fd fda5 	bl	1ca94 <__swsetup_r>
   1ef4a:	2800      	cmp	r0, #0
   1ef4c:	d09e      	beq.n	1ee8c <_vfiprintf_r+0x2c>
   1ef4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1ef52:	b01d      	add	sp, #116	; 0x74
   1ef54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef58:	2b25      	cmp	r3, #37	; 0x25
   1ef5a:	d0a7      	beq.n	1eeac <_vfiprintf_r+0x4c>
   1ef5c:	46a8      	mov	r8, r5
   1ef5e:	e7a0      	b.n	1eea2 <_vfiprintf_r+0x42>
   1ef60:	4a43      	ldr	r2, [pc, #268]	; (1f070 <_vfiprintf_r+0x210>)
   1ef62:	4645      	mov	r5, r8
   1ef64:	1a80      	subs	r0, r0, r2
   1ef66:	fa0b f000 	lsl.w	r0, fp, r0
   1ef6a:	4318      	orrs	r0, r3
   1ef6c:	9004      	str	r0, [sp, #16]
   1ef6e:	e7bb      	b.n	1eee8 <_vfiprintf_r+0x88>
   1ef70:	9a03      	ldr	r2, [sp, #12]
   1ef72:	1d11      	adds	r1, r2, #4
   1ef74:	6812      	ldr	r2, [r2, #0]
   1ef76:	9103      	str	r1, [sp, #12]
   1ef78:	2a00      	cmp	r2, #0
   1ef7a:	db01      	blt.n	1ef80 <_vfiprintf_r+0x120>
   1ef7c:	9207      	str	r2, [sp, #28]
   1ef7e:	e004      	b.n	1ef8a <_vfiprintf_r+0x12a>
   1ef80:	4252      	negs	r2, r2
   1ef82:	f043 0302 	orr.w	r3, r3, #2
   1ef86:	9207      	str	r2, [sp, #28]
   1ef88:	9304      	str	r3, [sp, #16]
   1ef8a:	f898 3000 	ldrb.w	r3, [r8]
   1ef8e:	2b2e      	cmp	r3, #46	; 0x2e
   1ef90:	d110      	bne.n	1efb4 <_vfiprintf_r+0x154>
   1ef92:	f898 3001 	ldrb.w	r3, [r8, #1]
   1ef96:	f108 0101 	add.w	r1, r8, #1
   1ef9a:	2b2a      	cmp	r3, #42	; 0x2a
   1ef9c:	d137      	bne.n	1f00e <_vfiprintf_r+0x1ae>
   1ef9e:	9b03      	ldr	r3, [sp, #12]
   1efa0:	f108 0802 	add.w	r8, r8, #2
   1efa4:	1d1a      	adds	r2, r3, #4
   1efa6:	681b      	ldr	r3, [r3, #0]
   1efa8:	9203      	str	r2, [sp, #12]
   1efaa:	2b00      	cmp	r3, #0
   1efac:	bfb8      	it	lt
   1efae:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
   1efb2:	9305      	str	r3, [sp, #20]
   1efb4:	4d31      	ldr	r5, [pc, #196]	; (1f07c <_vfiprintf_r+0x21c>)
   1efb6:	2203      	movs	r2, #3
   1efb8:	f898 1000 	ldrb.w	r1, [r8]
   1efbc:	4628      	mov	r0, r5
   1efbe:	f7fa fe61 	bl	19c84 <memchr>
   1efc2:	b140      	cbz	r0, 1efd6 <_vfiprintf_r+0x176>
   1efc4:	2340      	movs	r3, #64	; 0x40
   1efc6:	1b40      	subs	r0, r0, r5
   1efc8:	fa03 f000 	lsl.w	r0, r3, r0
   1efcc:	9b04      	ldr	r3, [sp, #16]
   1efce:	f108 0801 	add.w	r8, r8, #1
   1efd2:	4303      	orrs	r3, r0
   1efd4:	9304      	str	r3, [sp, #16]
   1efd6:	f898 1000 	ldrb.w	r1, [r8]
   1efda:	2206      	movs	r2, #6
   1efdc:	4828      	ldr	r0, [pc, #160]	; (1f080 <_vfiprintf_r+0x220>)
   1efde:	f108 0701 	add.w	r7, r8, #1
   1efe2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1efe6:	f7fa fe4d 	bl	19c84 <memchr>
   1efea:	2800      	cmp	r0, #0
   1efec:	d034      	beq.n	1f058 <_vfiprintf_r+0x1f8>
   1efee:	4b25      	ldr	r3, [pc, #148]	; (1f084 <_vfiprintf_r+0x224>)
   1eff0:	bb03      	cbnz	r3, 1f034 <_vfiprintf_r+0x1d4>
   1eff2:	9b03      	ldr	r3, [sp, #12]
   1eff4:	3307      	adds	r3, #7
   1eff6:	f023 0307 	bic.w	r3, r3, #7
   1effa:	3308      	adds	r3, #8
   1effc:	9303      	str	r3, [sp, #12]
   1effe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1f000:	444b      	add	r3, r9
   1f002:	9309      	str	r3, [sp, #36]	; 0x24
   1f004:	e74c      	b.n	1eea0 <_vfiprintf_r+0x40>
   1f006:	fb00 3202 	mla	r2, r0, r2, r3
   1f00a:	2101      	movs	r1, #1
   1f00c:	e786      	b.n	1ef1c <_vfiprintf_r+0xbc>
   1f00e:	2300      	movs	r3, #0
   1f010:	250a      	movs	r5, #10
   1f012:	4618      	mov	r0, r3
   1f014:	9305      	str	r3, [sp, #20]
   1f016:	4688      	mov	r8, r1
   1f018:	f898 2000 	ldrb.w	r2, [r8]
   1f01c:	3101      	adds	r1, #1
   1f01e:	3a30      	subs	r2, #48	; 0x30
   1f020:	2a09      	cmp	r2, #9
   1f022:	d903      	bls.n	1f02c <_vfiprintf_r+0x1cc>
   1f024:	2b00      	cmp	r3, #0
   1f026:	d0c5      	beq.n	1efb4 <_vfiprintf_r+0x154>
   1f028:	9005      	str	r0, [sp, #20]
   1f02a:	e7c3      	b.n	1efb4 <_vfiprintf_r+0x154>
   1f02c:	fb05 2000 	mla	r0, r5, r0, r2
   1f030:	2301      	movs	r3, #1
   1f032:	e7f0      	b.n	1f016 <_vfiprintf_r+0x1b6>
   1f034:	ab03      	add	r3, sp, #12
   1f036:	9300      	str	r3, [sp, #0]
   1f038:	4622      	mov	r2, r4
   1f03a:	4b13      	ldr	r3, [pc, #76]	; (1f088 <_vfiprintf_r+0x228>)
   1f03c:	a904      	add	r1, sp, #16
   1f03e:	4630      	mov	r0, r6
   1f040:	f7fb fa4c 	bl	1a4dc <_printf_float>
   1f044:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   1f048:	4681      	mov	r9, r0
   1f04a:	d1d8      	bne.n	1effe <_vfiprintf_r+0x19e>
   1f04c:	89a3      	ldrh	r3, [r4, #12]
   1f04e:	065b      	lsls	r3, r3, #25
   1f050:	f53f af7d 	bmi.w	1ef4e <_vfiprintf_r+0xee>
   1f054:	9809      	ldr	r0, [sp, #36]	; 0x24
   1f056:	e77c      	b.n	1ef52 <_vfiprintf_r+0xf2>
   1f058:	ab03      	add	r3, sp, #12
   1f05a:	9300      	str	r3, [sp, #0]
   1f05c:	4622      	mov	r2, r4
   1f05e:	4b0a      	ldr	r3, [pc, #40]	; (1f088 <_vfiprintf_r+0x228>)
   1f060:	a904      	add	r1, sp, #16
   1f062:	4630      	mov	r0, r6
   1f064:	f7fb fcea 	bl	1aa3c <_printf_i>
   1f068:	e7ec      	b.n	1f044 <_vfiprintf_r+0x1e4>
   1f06a:	bf00      	nop
   1f06c:	00021080 	.word	0x00021080
   1f070:	00021464 	.word	0x00021464
   1f074:	000210a0 	.word	0x000210a0
   1f078:	00021060 	.word	0x00021060
   1f07c:	0002146a 	.word	0x0002146a
   1f080:	0002146e 	.word	0x0002146e
   1f084:	0001a4dd 	.word	0x0001a4dd
   1f088:	0001ee3d 	.word	0x0001ee3d

0001f08c <__svfiscanf_r>:
__svfscanf_r():
   1f08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f090:	f5ad 7d25 	sub.w	sp, sp, #660	; 0x294
   1f094:	9301      	str	r3, [sp, #4]
   1f096:	2300      	movs	r3, #0
   1f098:	4606      	mov	r6, r0
   1f09a:	460c      	mov	r4, r1
   1f09c:	4692      	mov	sl, r2
   1f09e:	270a      	movs	r7, #10
   1f0a0:	9346      	str	r3, [sp, #280]	; 0x118
   1f0a2:	9347      	str	r3, [sp, #284]	; 0x11c
   1f0a4:	4b9f      	ldr	r3, [pc, #636]	; (1f324 <__svfiscanf_r+0x298>)
   1f0a6:	f10d 080c 	add.w	r8, sp, #12
   1f0aa:	93a2      	str	r3, [sp, #648]	; 0x288
   1f0ac:	4b9e      	ldr	r3, [pc, #632]	; (1f328 <__svfiscanf_r+0x29c>)
   1f0ae:	f8df 927c 	ldr.w	r9, [pc, #636]	; 1f32c <__svfiscanf_r+0x2a0>
   1f0b2:	f8cd 8120 	str.w	r8, [sp, #288]	; 0x120
   1f0b6:	93a3      	str	r3, [sp, #652]	; 0x28c
   1f0b8:	f89a 3000 	ldrb.w	r3, [sl]
   1f0bc:	2b00      	cmp	r3, #0
   1f0be:	f000 812f 	beq.w	1f320 <__svfiscanf_r+0x294>
   1f0c2:	f7fa fd4b 	bl	19b5c <__locale_ctype_ptr>
   1f0c6:	f89a b000 	ldrb.w	fp, [sl]
   1f0ca:	4458      	add	r0, fp
   1f0cc:	7843      	ldrb	r3, [r0, #1]
   1f0ce:	f013 0308 	ands.w	r3, r3, #8
   1f0d2:	d143      	bne.n	1f15c <__svfiscanf_r+0xd0>
   1f0d4:	f1bb 0f25 	cmp.w	fp, #37	; 0x25
   1f0d8:	f10a 0501 	add.w	r5, sl, #1
   1f0dc:	f040 8099 	bne.w	1f212 <__svfiscanf_r+0x186>
   1f0e0:	9345      	str	r3, [sp, #276]	; 0x114
   1f0e2:	9343      	str	r3, [sp, #268]	; 0x10c
   1f0e4:	f89a 3001 	ldrb.w	r3, [sl, #1]
   1f0e8:	2b2a      	cmp	r3, #42	; 0x2a
   1f0ea:	d103      	bne.n	1f0f4 <__svfiscanf_r+0x68>
   1f0ec:	2310      	movs	r3, #16
   1f0ee:	f10a 0502 	add.w	r5, sl, #2
   1f0f2:	9343      	str	r3, [sp, #268]	; 0x10c
   1f0f4:	7829      	ldrb	r1, [r5, #0]
   1f0f6:	46aa      	mov	sl, r5
   1f0f8:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   1f0fc:	2a09      	cmp	r2, #9
   1f0fe:	f105 0501 	add.w	r5, r5, #1
   1f102:	d941      	bls.n	1f188 <__svfiscanf_r+0xfc>
   1f104:	2203      	movs	r2, #3
   1f106:	4889      	ldr	r0, [pc, #548]	; (1f32c <__svfiscanf_r+0x2a0>)
   1f108:	f7fa fdbc 	bl	19c84 <memchr>
   1f10c:	b138      	cbz	r0, 1f11e <__svfiscanf_r+0x92>
   1f10e:	eba0 0309 	sub.w	r3, r0, r9
   1f112:	2001      	movs	r0, #1
   1f114:	46aa      	mov	sl, r5
   1f116:	4098      	lsls	r0, r3
   1f118:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1f11a:	4318      	orrs	r0, r3
   1f11c:	9043      	str	r0, [sp, #268]	; 0x10c
   1f11e:	f89a 3000 	ldrb.w	r3, [sl]
   1f122:	f10a 0501 	add.w	r5, sl, #1
   1f126:	2b67      	cmp	r3, #103	; 0x67
   1f128:	d84a      	bhi.n	1f1c0 <__svfiscanf_r+0x134>
   1f12a:	2b65      	cmp	r3, #101	; 0x65
   1f12c:	f080 80b7 	bcs.w	1f29e <__svfiscanf_r+0x212>
   1f130:	2b47      	cmp	r3, #71	; 0x47
   1f132:	d82f      	bhi.n	1f194 <__svfiscanf_r+0x108>
   1f134:	2b45      	cmp	r3, #69	; 0x45
   1f136:	f080 80b2 	bcs.w	1f29e <__svfiscanf_r+0x212>
   1f13a:	2b00      	cmp	r3, #0
   1f13c:	f000 8082 	beq.w	1f244 <__svfiscanf_r+0x1b8>
   1f140:	2b25      	cmp	r3, #37	; 0x25
   1f142:	d066      	beq.n	1f212 <__svfiscanf_r+0x186>
   1f144:	2303      	movs	r3, #3
   1f146:	9744      	str	r7, [sp, #272]	; 0x110
   1f148:	9349      	str	r3, [sp, #292]	; 0x124
   1f14a:	e045      	b.n	1f1d8 <__svfiscanf_r+0x14c>
   1f14c:	9947      	ldr	r1, [sp, #284]	; 0x11c
   1f14e:	3301      	adds	r3, #1
   1f150:	3101      	adds	r1, #1
   1f152:	9147      	str	r1, [sp, #284]	; 0x11c
   1f154:	6861      	ldr	r1, [r4, #4]
   1f156:	6023      	str	r3, [r4, #0]
   1f158:	3901      	subs	r1, #1
   1f15a:	6061      	str	r1, [r4, #4]
   1f15c:	6863      	ldr	r3, [r4, #4]
   1f15e:	2b00      	cmp	r3, #0
   1f160:	dd0b      	ble.n	1f17a <__svfiscanf_r+0xee>
   1f162:	f7fa fcfb 	bl	19b5c <__locale_ctype_ptr>
   1f166:	6823      	ldr	r3, [r4, #0]
   1f168:	7819      	ldrb	r1, [r3, #0]
   1f16a:	4408      	add	r0, r1
   1f16c:	7841      	ldrb	r1, [r0, #1]
   1f16e:	070d      	lsls	r5, r1, #28
   1f170:	d4ec      	bmi.n	1f14c <__svfiscanf_r+0xc0>
   1f172:	f10a 0501 	add.w	r5, sl, #1
   1f176:	46aa      	mov	sl, r5
   1f178:	e79e      	b.n	1f0b8 <__svfiscanf_r+0x2c>
   1f17a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1f17c:	4621      	mov	r1, r4
   1f17e:	4630      	mov	r0, r6
   1f180:	4798      	blx	r3
   1f182:	2800      	cmp	r0, #0
   1f184:	d0ed      	beq.n	1f162 <__svfiscanf_r+0xd6>
   1f186:	e7f4      	b.n	1f172 <__svfiscanf_r+0xe6>
   1f188:	9b45      	ldr	r3, [sp, #276]	; 0x114
   1f18a:	fb07 1303 	mla	r3, r7, r3, r1
   1f18e:	3b30      	subs	r3, #48	; 0x30
   1f190:	9345      	str	r3, [sp, #276]	; 0x114
   1f192:	e7af      	b.n	1f0f4 <__svfiscanf_r+0x68>
   1f194:	2b5b      	cmp	r3, #91	; 0x5b
   1f196:	d061      	beq.n	1f25c <__svfiscanf_r+0x1d0>
   1f198:	d80c      	bhi.n	1f1b4 <__svfiscanf_r+0x128>
   1f19a:	2b58      	cmp	r3, #88	; 0x58
   1f19c:	d1d2      	bne.n	1f144 <__svfiscanf_r+0xb8>
   1f19e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1f1a0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1f1a4:	9243      	str	r2, [sp, #268]	; 0x10c
   1f1a6:	2210      	movs	r2, #16
   1f1a8:	9244      	str	r2, [sp, #272]	; 0x110
   1f1aa:	2b6f      	cmp	r3, #111	; 0x6f
   1f1ac:	bfb4      	ite	lt
   1f1ae:	2303      	movlt	r3, #3
   1f1b0:	2304      	movge	r3, #4
   1f1b2:	e010      	b.n	1f1d6 <__svfiscanf_r+0x14a>
   1f1b4:	2b63      	cmp	r3, #99	; 0x63
   1f1b6:	d05c      	beq.n	1f272 <__svfiscanf_r+0x1e6>
   1f1b8:	2b64      	cmp	r3, #100	; 0x64
   1f1ba:	d1c3      	bne.n	1f144 <__svfiscanf_r+0xb8>
   1f1bc:	9744      	str	r7, [sp, #272]	; 0x110
   1f1be:	e7f4      	b.n	1f1aa <__svfiscanf_r+0x11e>
   1f1c0:	2b70      	cmp	r3, #112	; 0x70
   1f1c2:	d042      	beq.n	1f24a <__svfiscanf_r+0x1be>
   1f1c4:	d81d      	bhi.n	1f202 <__svfiscanf_r+0x176>
   1f1c6:	2b6e      	cmp	r3, #110	; 0x6e
   1f1c8:	d059      	beq.n	1f27e <__svfiscanf_r+0x1f2>
   1f1ca:	d843      	bhi.n	1f254 <__svfiscanf_r+0x1c8>
   1f1cc:	2b69      	cmp	r3, #105	; 0x69
   1f1ce:	d1b9      	bne.n	1f144 <__svfiscanf_r+0xb8>
   1f1d0:	2300      	movs	r3, #0
   1f1d2:	9344      	str	r3, [sp, #272]	; 0x110
   1f1d4:	2303      	movs	r3, #3
   1f1d6:	9349      	str	r3, [sp, #292]	; 0x124
   1f1d8:	6863      	ldr	r3, [r4, #4]
   1f1da:	2b00      	cmp	r3, #0
   1f1dc:	dd61      	ble.n	1f2a2 <__svfiscanf_r+0x216>
   1f1de:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1f1e0:	0659      	lsls	r1, r3, #25
   1f1e2:	d56f      	bpl.n	1f2c4 <__svfiscanf_r+0x238>
   1f1e4:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1f1e6:	2b02      	cmp	r3, #2
   1f1e8:	dc7c      	bgt.n	1f2e4 <__svfiscanf_r+0x258>
   1f1ea:	ab01      	add	r3, sp, #4
   1f1ec:	4622      	mov	r2, r4
   1f1ee:	a943      	add	r1, sp, #268	; 0x10c
   1f1f0:	4630      	mov	r0, r6
   1f1f2:	f000 f8c7 	bl	1f384 <_scanf_chars>
   1f1f6:	2801      	cmp	r0, #1
   1f1f8:	f000 8092 	beq.w	1f320 <__svfiscanf_r+0x294>
   1f1fc:	2802      	cmp	r0, #2
   1f1fe:	d1ba      	bne.n	1f176 <__svfiscanf_r+0xea>
   1f200:	e01d      	b.n	1f23e <__svfiscanf_r+0x1b2>
   1f202:	2b75      	cmp	r3, #117	; 0x75
   1f204:	d0da      	beq.n	1f1bc <__svfiscanf_r+0x130>
   1f206:	2b78      	cmp	r3, #120	; 0x78
   1f208:	d0c9      	beq.n	1f19e <__svfiscanf_r+0x112>
   1f20a:	2b73      	cmp	r3, #115	; 0x73
   1f20c:	d19a      	bne.n	1f144 <__svfiscanf_r+0xb8>
   1f20e:	2302      	movs	r3, #2
   1f210:	e7e1      	b.n	1f1d6 <__svfiscanf_r+0x14a>
   1f212:	6863      	ldr	r3, [r4, #4]
   1f214:	2b00      	cmp	r3, #0
   1f216:	dd0c      	ble.n	1f232 <__svfiscanf_r+0x1a6>
   1f218:	6823      	ldr	r3, [r4, #0]
   1f21a:	781a      	ldrb	r2, [r3, #0]
   1f21c:	4593      	cmp	fp, r2
   1f21e:	d17f      	bne.n	1f320 <__svfiscanf_r+0x294>
   1f220:	3301      	adds	r3, #1
   1f222:	6862      	ldr	r2, [r4, #4]
   1f224:	6023      	str	r3, [r4, #0]
   1f226:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1f228:	3a01      	subs	r2, #1
   1f22a:	3301      	adds	r3, #1
   1f22c:	6062      	str	r2, [r4, #4]
   1f22e:	9347      	str	r3, [sp, #284]	; 0x11c
   1f230:	e7a1      	b.n	1f176 <__svfiscanf_r+0xea>
   1f232:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1f234:	4621      	mov	r1, r4
   1f236:	4630      	mov	r0, r6
   1f238:	4798      	blx	r3
   1f23a:	2800      	cmp	r0, #0
   1f23c:	d0ec      	beq.n	1f218 <__svfiscanf_r+0x18c>
   1f23e:	9846      	ldr	r0, [sp, #280]	; 0x118
   1f240:	2800      	cmp	r0, #0
   1f242:	d163      	bne.n	1f30c <__svfiscanf_r+0x280>
   1f244:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f248:	e066      	b.n	1f318 <__svfiscanf_r+0x28c>
   1f24a:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1f24c:	f042 0220 	orr.w	r2, r2, #32
   1f250:	9243      	str	r2, [sp, #268]	; 0x10c
   1f252:	e7a4      	b.n	1f19e <__svfiscanf_r+0x112>
   1f254:	2308      	movs	r3, #8
   1f256:	9344      	str	r3, [sp, #272]	; 0x110
   1f258:	2304      	movs	r3, #4
   1f25a:	e7bc      	b.n	1f1d6 <__svfiscanf_r+0x14a>
   1f25c:	4629      	mov	r1, r5
   1f25e:	4640      	mov	r0, r8
   1f260:	f000 f9fc 	bl	1f65c <__sccl>
   1f264:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1f266:	4605      	mov	r5, r0
   1f268:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1f26c:	9343      	str	r3, [sp, #268]	; 0x10c
   1f26e:	2301      	movs	r3, #1
   1f270:	e7b1      	b.n	1f1d6 <__svfiscanf_r+0x14a>
   1f272:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1f274:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1f278:	9343      	str	r3, [sp, #268]	; 0x10c
   1f27a:	2300      	movs	r3, #0
   1f27c:	e7ab      	b.n	1f1d6 <__svfiscanf_r+0x14a>
   1f27e:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1f280:	06d0      	lsls	r0, r2, #27
   1f282:	f53f af78 	bmi.w	1f176 <__svfiscanf_r+0xea>
   1f286:	f012 0f01 	tst.w	r2, #1
   1f28a:	9a01      	ldr	r2, [sp, #4]
   1f28c:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1f28e:	f102 0104 	add.w	r1, r2, #4
   1f292:	9101      	str	r1, [sp, #4]
   1f294:	6812      	ldr	r2, [r2, #0]
   1f296:	bf14      	ite	ne
   1f298:	8013      	strhne	r3, [r2, #0]
   1f29a:	6013      	streq	r3, [r2, #0]
   1f29c:	e76b      	b.n	1f176 <__svfiscanf_r+0xea>
   1f29e:	2305      	movs	r3, #5
   1f2a0:	e799      	b.n	1f1d6 <__svfiscanf_r+0x14a>
   1f2a2:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1f2a4:	4621      	mov	r1, r4
   1f2a6:	4630      	mov	r0, r6
   1f2a8:	4798      	blx	r3
   1f2aa:	2800      	cmp	r0, #0
   1f2ac:	d097      	beq.n	1f1de <__svfiscanf_r+0x152>
   1f2ae:	e7c6      	b.n	1f23e <__svfiscanf_r+0x1b2>
   1f2b0:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   1f2b2:	3201      	adds	r2, #1
   1f2b4:	9247      	str	r2, [sp, #284]	; 0x11c
   1f2b6:	6862      	ldr	r2, [r4, #4]
   1f2b8:	3a01      	subs	r2, #1
   1f2ba:	2a00      	cmp	r2, #0
   1f2bc:	6062      	str	r2, [r4, #4]
   1f2be:	dd0a      	ble.n	1f2d6 <__svfiscanf_r+0x24a>
   1f2c0:	3301      	adds	r3, #1
   1f2c2:	6023      	str	r3, [r4, #0]
   1f2c4:	f7fa fc4a 	bl	19b5c <__locale_ctype_ptr>
   1f2c8:	6823      	ldr	r3, [r4, #0]
   1f2ca:	781a      	ldrb	r2, [r3, #0]
   1f2cc:	4410      	add	r0, r2
   1f2ce:	7842      	ldrb	r2, [r0, #1]
   1f2d0:	0712      	lsls	r2, r2, #28
   1f2d2:	d4ed      	bmi.n	1f2b0 <__svfiscanf_r+0x224>
   1f2d4:	e786      	b.n	1f1e4 <__svfiscanf_r+0x158>
   1f2d6:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1f2d8:	4621      	mov	r1, r4
   1f2da:	4630      	mov	r0, r6
   1f2dc:	4798      	blx	r3
   1f2de:	2800      	cmp	r0, #0
   1f2e0:	d0f0      	beq.n	1f2c4 <__svfiscanf_r+0x238>
   1f2e2:	e7ac      	b.n	1f23e <__svfiscanf_r+0x1b2>
   1f2e4:	2b04      	cmp	r3, #4
   1f2e6:	dc06      	bgt.n	1f2f6 <__svfiscanf_r+0x26a>
   1f2e8:	ab01      	add	r3, sp, #4
   1f2ea:	4622      	mov	r2, r4
   1f2ec:	a943      	add	r1, sp, #268	; 0x10c
   1f2ee:	4630      	mov	r0, r6
   1f2f0:	f000 f8ac 	bl	1f44c <_scanf_i>
   1f2f4:	e77f      	b.n	1f1f6 <__svfiscanf_r+0x16a>
   1f2f6:	4b0e      	ldr	r3, [pc, #56]	; (1f330 <__svfiscanf_r+0x2a4>)
   1f2f8:	2b00      	cmp	r3, #0
   1f2fa:	f43f af3c 	beq.w	1f176 <__svfiscanf_r+0xea>
   1f2fe:	ab01      	add	r3, sp, #4
   1f300:	4622      	mov	r2, r4
   1f302:	a943      	add	r1, sp, #268	; 0x10c
   1f304:	4630      	mov	r0, r6
   1f306:	f7fb fcb9 	bl	1ac7c <_scanf_float>
   1f30a:	e774      	b.n	1f1f6 <__svfiscanf_r+0x16a>
   1f30c:	89a3      	ldrh	r3, [r4, #12]
   1f30e:	f013 0f40 	tst.w	r3, #64	; 0x40
   1f312:	bf18      	it	ne
   1f314:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   1f318:	f50d 7d25 	add.w	sp, sp, #660	; 0x294
   1f31c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f320:	9846      	ldr	r0, [sp, #280]	; 0x118
   1f322:	e7f9      	b.n	1f318 <__svfiscanf_r+0x28c>
   1f324:	0001f879 	.word	0x0001f879
   1f328:	0001b20d 	.word	0x0001b20d
   1f32c:	0002146a 	.word	0x0002146a
   1f330:	0001ac7d 	.word	0x0001ac7d

0001f334 <_vfiscanf_r>:
_vfscanf_r():
   1f334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f338:	460c      	mov	r4, r1
   1f33a:	4616      	mov	r6, r2
   1f33c:	461f      	mov	r7, r3
   1f33e:	4605      	mov	r5, r0
   1f340:	b118      	cbz	r0, 1f34a <_vfiscanf_r+0x16>
   1f342:	6983      	ldr	r3, [r0, #24]
   1f344:	b90b      	cbnz	r3, 1f34a <_vfiscanf_r+0x16>
   1f346:	f7fa fb3b 	bl	199c0 <__sinit>
   1f34a:	4b0b      	ldr	r3, [pc, #44]	; (1f378 <_vfiscanf_r+0x44>)
   1f34c:	429c      	cmp	r4, r3
   1f34e:	d108      	bne.n	1f362 <_vfiscanf_r+0x2e>
   1f350:	686c      	ldr	r4, [r5, #4]
   1f352:	463b      	mov	r3, r7
   1f354:	4632      	mov	r2, r6
   1f356:	4621      	mov	r1, r4
   1f358:	4628      	mov	r0, r5
   1f35a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1f35e:	f7ff be95 	b.w	1f08c <__svfiscanf_r>
   1f362:	4b06      	ldr	r3, [pc, #24]	; (1f37c <_vfiscanf_r+0x48>)
   1f364:	429c      	cmp	r4, r3
   1f366:	d101      	bne.n	1f36c <_vfiscanf_r+0x38>
   1f368:	68ac      	ldr	r4, [r5, #8]
   1f36a:	e7f2      	b.n	1f352 <_vfiscanf_r+0x1e>
   1f36c:	4b04      	ldr	r3, [pc, #16]	; (1f380 <_vfiscanf_r+0x4c>)
   1f36e:	429c      	cmp	r4, r3
   1f370:	bf08      	it	eq
   1f372:	68ec      	ldreq	r4, [r5, #12]
   1f374:	e7ed      	b.n	1f352 <_vfiscanf_r+0x1e>
   1f376:	bf00      	nop
   1f378:	00021080 	.word	0x00021080
   1f37c:	000210a0 	.word	0x000210a0
   1f380:	00021060 	.word	0x00021060

0001f384 <_scanf_chars>:
_scanf_chars():
   1f384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f388:	4615      	mov	r5, r2
   1f38a:	688a      	ldr	r2, [r1, #8]
   1f38c:	4680      	mov	r8, r0
   1f38e:	460c      	mov	r4, r1
   1f390:	b932      	cbnz	r2, 1f3a0 <_scanf_chars+0x1c>
   1f392:	698a      	ldr	r2, [r1, #24]
   1f394:	2a00      	cmp	r2, #0
   1f396:	bf0c      	ite	eq
   1f398:	2201      	moveq	r2, #1
   1f39a:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
   1f39e:	608a      	str	r2, [r1, #8]
   1f3a0:	2600      	movs	r6, #0
   1f3a2:	6822      	ldr	r2, [r4, #0]
   1f3a4:	06d1      	lsls	r1, r2, #27
   1f3a6:	bf5f      	itttt	pl
   1f3a8:	681a      	ldrpl	r2, [r3, #0]
   1f3aa:	1d11      	addpl	r1, r2, #4
   1f3ac:	6019      	strpl	r1, [r3, #0]
   1f3ae:	6817      	ldrpl	r7, [r2, #0]
   1f3b0:	69a3      	ldr	r3, [r4, #24]
   1f3b2:	b1db      	cbz	r3, 1f3ec <_scanf_chars+0x68>
   1f3b4:	2b01      	cmp	r3, #1
   1f3b6:	d107      	bne.n	1f3c8 <_scanf_chars+0x44>
   1f3b8:	682b      	ldr	r3, [r5, #0]
   1f3ba:	6962      	ldr	r2, [r4, #20]
   1f3bc:	781b      	ldrb	r3, [r3, #0]
   1f3be:	5cd3      	ldrb	r3, [r2, r3]
   1f3c0:	b9a3      	cbnz	r3, 1f3ec <_scanf_chars+0x68>
   1f3c2:	2e00      	cmp	r6, #0
   1f3c4:	d131      	bne.n	1f42a <_scanf_chars+0xa6>
   1f3c6:	e006      	b.n	1f3d6 <_scanf_chars+0x52>
   1f3c8:	2b02      	cmp	r3, #2
   1f3ca:	d007      	beq.n	1f3dc <_scanf_chars+0x58>
   1f3cc:	2e00      	cmp	r6, #0
   1f3ce:	d12c      	bne.n	1f42a <_scanf_chars+0xa6>
   1f3d0:	69a3      	ldr	r3, [r4, #24]
   1f3d2:	2b01      	cmp	r3, #1
   1f3d4:	d129      	bne.n	1f42a <_scanf_chars+0xa6>
   1f3d6:	2001      	movs	r0, #1
   1f3d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f3dc:	f7fa fbbe 	bl	19b5c <__locale_ctype_ptr>
   1f3e0:	682b      	ldr	r3, [r5, #0]
   1f3e2:	781b      	ldrb	r3, [r3, #0]
   1f3e4:	4418      	add	r0, r3
   1f3e6:	7843      	ldrb	r3, [r0, #1]
   1f3e8:	071b      	lsls	r3, r3, #28
   1f3ea:	d4ef      	bmi.n	1f3cc <_scanf_chars+0x48>
   1f3ec:	6823      	ldr	r3, [r4, #0]
   1f3ee:	3601      	adds	r6, #1
   1f3f0:	06da      	lsls	r2, r3, #27
   1f3f2:	bf5e      	ittt	pl
   1f3f4:	682b      	ldrpl	r3, [r5, #0]
   1f3f6:	781b      	ldrbpl	r3, [r3, #0]
   1f3f8:	703b      	strbpl	r3, [r7, #0]
   1f3fa:	682a      	ldr	r2, [r5, #0]
   1f3fc:	686b      	ldr	r3, [r5, #4]
   1f3fe:	f102 0201 	add.w	r2, r2, #1
   1f402:	602a      	str	r2, [r5, #0]
   1f404:	68a2      	ldr	r2, [r4, #8]
   1f406:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
   1f40a:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
   1f40e:	606b      	str	r3, [r5, #4]
   1f410:	bf58      	it	pl
   1f412:	3701      	addpl	r7, #1
   1f414:	60a2      	str	r2, [r4, #8]
   1f416:	b142      	cbz	r2, 1f42a <_scanf_chars+0xa6>
   1f418:	2b00      	cmp	r3, #0
   1f41a:	dcc9      	bgt.n	1f3b0 <_scanf_chars+0x2c>
   1f41c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1f420:	4629      	mov	r1, r5
   1f422:	4640      	mov	r0, r8
   1f424:	4798      	blx	r3
   1f426:	2800      	cmp	r0, #0
   1f428:	d0c2      	beq.n	1f3b0 <_scanf_chars+0x2c>
   1f42a:	6823      	ldr	r3, [r4, #0]
   1f42c:	f013 0310 	ands.w	r3, r3, #16
   1f430:	d105      	bne.n	1f43e <_scanf_chars+0xba>
   1f432:	68e2      	ldr	r2, [r4, #12]
   1f434:	3201      	adds	r2, #1
   1f436:	60e2      	str	r2, [r4, #12]
   1f438:	69a2      	ldr	r2, [r4, #24]
   1f43a:	b102      	cbz	r2, 1f43e <_scanf_chars+0xba>
   1f43c:	703b      	strb	r3, [r7, #0]
   1f43e:	6923      	ldr	r3, [r4, #16]
   1f440:	2000      	movs	r0, #0
   1f442:	441e      	add	r6, r3
   1f444:	6126      	str	r6, [r4, #16]
   1f446:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f44a:	Address 0x000000000001f44a is out of bounds.


0001f44c <_scanf_i>:
_scanf_i():
   1f44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f450:	460c      	mov	r4, r1
   1f452:	469a      	mov	sl, r3
   1f454:	4b74      	ldr	r3, [pc, #464]	; (1f628 <_scanf_i+0x1dc>)
   1f456:	b087      	sub	sp, #28
   1f458:	4683      	mov	fp, r0
   1f45a:	4616      	mov	r6, r2
   1f45c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1f460:	ab03      	add	r3, sp, #12
   1f462:	68a7      	ldr	r7, [r4, #8]
   1f464:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   1f468:	4b70      	ldr	r3, [pc, #448]	; (1f62c <_scanf_i+0x1e0>)
   1f46a:	69a1      	ldr	r1, [r4, #24]
   1f46c:	4a70      	ldr	r2, [pc, #448]	; (1f630 <_scanf_i+0x1e4>)
   1f46e:	f104 091c 	add.w	r9, r4, #28
   1f472:	2903      	cmp	r1, #3
   1f474:	bf18      	it	ne
   1f476:	461a      	movne	r2, r3
   1f478:	1e7b      	subs	r3, r7, #1
   1f47a:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   1f47e:	bf84      	itt	hi
   1f480:	f240 135d 	movwhi	r3, #349	; 0x15d
   1f484:	60a3      	strhi	r3, [r4, #8]
   1f486:	6823      	ldr	r3, [r4, #0]
   1f488:	bf88      	it	hi
   1f48a:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   1f48e:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   1f492:	6023      	str	r3, [r4, #0]
   1f494:	bf98      	it	ls
   1f496:	2700      	movls	r7, #0
   1f498:	464b      	mov	r3, r9
   1f49a:	f04f 0800 	mov.w	r8, #0
   1f49e:	9200      	str	r2, [sp, #0]
   1f4a0:	bf88      	it	hi
   1f4a2:	197f      	addhi	r7, r7, r5
   1f4a4:	6831      	ldr	r1, [r6, #0]
   1f4a6:	9301      	str	r3, [sp, #4]
   1f4a8:	ab03      	add	r3, sp, #12
   1f4aa:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
   1f4ae:	2202      	movs	r2, #2
   1f4b0:	7809      	ldrb	r1, [r1, #0]
   1f4b2:	f7fa fbe7 	bl	19c84 <memchr>
   1f4b6:	9b01      	ldr	r3, [sp, #4]
   1f4b8:	b328      	cbz	r0, 1f506 <_scanf_i+0xba>
   1f4ba:	f1b8 0f01 	cmp.w	r8, #1
   1f4be:	d156      	bne.n	1f56e <_scanf_i+0x122>
   1f4c0:	6862      	ldr	r2, [r4, #4]
   1f4c2:	b92a      	cbnz	r2, 1f4d0 <_scanf_i+0x84>
   1f4c4:	2208      	movs	r2, #8
   1f4c6:	6062      	str	r2, [r4, #4]
   1f4c8:	6822      	ldr	r2, [r4, #0]
   1f4ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   1f4ce:	6022      	str	r2, [r4, #0]
   1f4d0:	6822      	ldr	r2, [r4, #0]
   1f4d2:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   1f4d6:	6022      	str	r2, [r4, #0]
   1f4d8:	68a2      	ldr	r2, [r4, #8]
   1f4da:	1e51      	subs	r1, r2, #1
   1f4dc:	60a1      	str	r1, [r4, #8]
   1f4de:	b192      	cbz	r2, 1f506 <_scanf_i+0xba>
   1f4e0:	6832      	ldr	r2, [r6, #0]
   1f4e2:	1c5d      	adds	r5, r3, #1
   1f4e4:	1c51      	adds	r1, r2, #1
   1f4e6:	6031      	str	r1, [r6, #0]
   1f4e8:	7812      	ldrb	r2, [r2, #0]
   1f4ea:	701a      	strb	r2, [r3, #0]
   1f4ec:	6873      	ldr	r3, [r6, #4]
   1f4ee:	3b01      	subs	r3, #1
   1f4f0:	2b00      	cmp	r3, #0
   1f4f2:	6073      	str	r3, [r6, #4]
   1f4f4:	dc06      	bgt.n	1f504 <_scanf_i+0xb8>
   1f4f6:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1f4fa:	4631      	mov	r1, r6
   1f4fc:	4658      	mov	r0, fp
   1f4fe:	4798      	blx	r3
   1f500:	2800      	cmp	r0, #0
   1f502:	d177      	bne.n	1f5f4 <_scanf_i+0x1a8>
   1f504:	462b      	mov	r3, r5
   1f506:	f108 0801 	add.w	r8, r8, #1
   1f50a:	f1b8 0f03 	cmp.w	r8, #3
   1f50e:	d1c9      	bne.n	1f4a4 <_scanf_i+0x58>
   1f510:	6862      	ldr	r2, [r4, #4]
   1f512:	b90a      	cbnz	r2, 1f518 <_scanf_i+0xcc>
   1f514:	220a      	movs	r2, #10
   1f516:	6062      	str	r2, [r4, #4]
   1f518:	6862      	ldr	r2, [r4, #4]
   1f51a:	4946      	ldr	r1, [pc, #280]	; (1f634 <_scanf_i+0x1e8>)
   1f51c:	6960      	ldr	r0, [r4, #20]
   1f51e:	1a89      	subs	r1, r1, r2
   1f520:	9301      	str	r3, [sp, #4]
   1f522:	f000 f89b 	bl	1f65c <__sccl>
   1f526:	9b01      	ldr	r3, [sp, #4]
   1f528:	f04f 0800 	mov.w	r8, #0
   1f52c:	461d      	mov	r5, r3
   1f52e:	68a3      	ldr	r3, [r4, #8]
   1f530:	2b00      	cmp	r3, #0
   1f532:	d039      	beq.n	1f5a8 <_scanf_i+0x15c>
   1f534:	6831      	ldr	r1, [r6, #0]
   1f536:	6960      	ldr	r0, [r4, #20]
   1f538:	780a      	ldrb	r2, [r1, #0]
   1f53a:	5c80      	ldrb	r0, [r0, r2]
   1f53c:	2800      	cmp	r0, #0
   1f53e:	d033      	beq.n	1f5a8 <_scanf_i+0x15c>
   1f540:	2a30      	cmp	r2, #48	; 0x30
   1f542:	6822      	ldr	r2, [r4, #0]
   1f544:	d121      	bne.n	1f58a <_scanf_i+0x13e>
   1f546:	0510      	lsls	r0, r2, #20
   1f548:	d51f      	bpl.n	1f58a <_scanf_i+0x13e>
   1f54a:	f108 0801 	add.w	r8, r8, #1
   1f54e:	b117      	cbz	r7, 1f556 <_scanf_i+0x10a>
   1f550:	3301      	adds	r3, #1
   1f552:	3f01      	subs	r7, #1
   1f554:	60a3      	str	r3, [r4, #8]
   1f556:	6873      	ldr	r3, [r6, #4]
   1f558:	3b01      	subs	r3, #1
   1f55a:	2b00      	cmp	r3, #0
   1f55c:	6073      	str	r3, [r6, #4]
   1f55e:	dd1c      	ble.n	1f59a <_scanf_i+0x14e>
   1f560:	6833      	ldr	r3, [r6, #0]
   1f562:	3301      	adds	r3, #1
   1f564:	6033      	str	r3, [r6, #0]
   1f566:	68a3      	ldr	r3, [r4, #8]
   1f568:	3b01      	subs	r3, #1
   1f56a:	60a3      	str	r3, [r4, #8]
   1f56c:	e7df      	b.n	1f52e <_scanf_i+0xe2>
   1f56e:	f1b8 0f02 	cmp.w	r8, #2
   1f572:	d1b1      	bne.n	1f4d8 <_scanf_i+0x8c>
   1f574:	6822      	ldr	r2, [r4, #0]
   1f576:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   1f57a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   1f57e:	d1c2      	bne.n	1f506 <_scanf_i+0xba>
   1f580:	2110      	movs	r1, #16
   1f582:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   1f586:	6061      	str	r1, [r4, #4]
   1f588:	e7a5      	b.n	1f4d6 <_scanf_i+0x8a>
   1f58a:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   1f58e:	6022      	str	r2, [r4, #0]
   1f590:	780b      	ldrb	r3, [r1, #0]
   1f592:	3501      	adds	r5, #1
   1f594:	f805 3c01 	strb.w	r3, [r5, #-1]
   1f598:	e7dd      	b.n	1f556 <_scanf_i+0x10a>
   1f59a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1f59e:	4631      	mov	r1, r6
   1f5a0:	4658      	mov	r0, fp
   1f5a2:	4798      	blx	r3
   1f5a4:	2800      	cmp	r0, #0
   1f5a6:	d0de      	beq.n	1f566 <_scanf_i+0x11a>
   1f5a8:	6823      	ldr	r3, [r4, #0]
   1f5aa:	05d9      	lsls	r1, r3, #23
   1f5ac:	d50c      	bpl.n	1f5c8 <_scanf_i+0x17c>
   1f5ae:	454d      	cmp	r5, r9
   1f5b0:	d908      	bls.n	1f5c4 <_scanf_i+0x178>
   1f5b2:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   1f5b6:	1e6f      	subs	r7, r5, #1
   1f5b8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   1f5bc:	4632      	mov	r2, r6
   1f5be:	4658      	mov	r0, fp
   1f5c0:	4798      	blx	r3
   1f5c2:	463d      	mov	r5, r7
   1f5c4:	454d      	cmp	r5, r9
   1f5c6:	d02c      	beq.n	1f622 <_scanf_i+0x1d6>
   1f5c8:	6822      	ldr	r2, [r4, #0]
   1f5ca:	f012 0210 	ands.w	r2, r2, #16
   1f5ce:	d11e      	bne.n	1f60e <_scanf_i+0x1c2>
   1f5d0:	702a      	strb	r2, [r5, #0]
   1f5d2:	6863      	ldr	r3, [r4, #4]
   1f5d4:	4649      	mov	r1, r9
   1f5d6:	4658      	mov	r0, fp
   1f5d8:	9e00      	ldr	r6, [sp, #0]
   1f5da:	47b0      	blx	r6
   1f5dc:	6822      	ldr	r2, [r4, #0]
   1f5de:	f8da 3000 	ldr.w	r3, [sl]
   1f5e2:	f012 0f20 	tst.w	r2, #32
   1f5e6:	d008      	beq.n	1f5fa <_scanf_i+0x1ae>
   1f5e8:	1d1a      	adds	r2, r3, #4
   1f5ea:	f8ca 2000 	str.w	r2, [sl]
   1f5ee:	681b      	ldr	r3, [r3, #0]
   1f5f0:	6018      	str	r0, [r3, #0]
   1f5f2:	e009      	b.n	1f608 <_scanf_i+0x1bc>
   1f5f4:	f04f 0800 	mov.w	r8, #0
   1f5f8:	e7d6      	b.n	1f5a8 <_scanf_i+0x15c>
   1f5fa:	07d2      	lsls	r2, r2, #31
   1f5fc:	d5f4      	bpl.n	1f5e8 <_scanf_i+0x19c>
   1f5fe:	1d1a      	adds	r2, r3, #4
   1f600:	f8ca 2000 	str.w	r2, [sl]
   1f604:	681b      	ldr	r3, [r3, #0]
   1f606:	8018      	strh	r0, [r3, #0]
   1f608:	68e3      	ldr	r3, [r4, #12]
   1f60a:	3301      	adds	r3, #1
   1f60c:	60e3      	str	r3, [r4, #12]
   1f60e:	2000      	movs	r0, #0
   1f610:	eba5 0509 	sub.w	r5, r5, r9
   1f614:	44a8      	add	r8, r5
   1f616:	6925      	ldr	r5, [r4, #16]
   1f618:	4445      	add	r5, r8
   1f61a:	6125      	str	r5, [r4, #16]
   1f61c:	b007      	add	sp, #28
   1f61e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f622:	2001      	movs	r0, #1
   1f624:	e7fa      	b.n	1f61c <_scanf_i+0x1d0>
   1f626:	bf00      	nop
   1f628:	00021478 	.word	0x00021478
   1f62c:	0001f7b5 	.word	0x0001f7b5
   1f630:	0001c461 	.word	0x0001c461
   1f634:	00021494 	.word	0x00021494

0001f638 <_read_r>:
_read_r():
   1f638:	b538      	push	{r3, r4, r5, lr}
   1f63a:	4605      	mov	r5, r0
   1f63c:	4608      	mov	r0, r1
   1f63e:	4611      	mov	r1, r2
   1f640:	2200      	movs	r2, #0
   1f642:	4c05      	ldr	r4, [pc, #20]	; (1f658 <_read_r+0x20>)
   1f644:	6022      	str	r2, [r4, #0]
   1f646:	461a      	mov	r2, r3
   1f648:	f7f7 fee0 	bl	1740c <_read>
   1f64c:	1c43      	adds	r3, r0, #1
   1f64e:	d102      	bne.n	1f656 <_read_r+0x1e>
   1f650:	6823      	ldr	r3, [r4, #0]
   1f652:	b103      	cbz	r3, 1f656 <_read_r+0x1e>
   1f654:	602b      	str	r3, [r5, #0]
   1f656:	bd38      	pop	{r3, r4, r5, pc}
   1f658:	2007c8c8 	.word	0x2007c8c8

0001f65c <__sccl>:
__sccl():
   1f65c:	b570      	push	{r4, r5, r6, lr}
   1f65e:	780b      	ldrb	r3, [r1, #0]
   1f660:	1e44      	subs	r4, r0, #1
   1f662:	2b5e      	cmp	r3, #94	; 0x5e
   1f664:	bf13      	iteet	ne
   1f666:	1c4a      	addne	r2, r1, #1
   1f668:	1c8a      	addeq	r2, r1, #2
   1f66a:	784b      	ldrbeq	r3, [r1, #1]
   1f66c:	2100      	movne	r1, #0
   1f66e:	bf08      	it	eq
   1f670:	2101      	moveq	r1, #1
   1f672:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   1f676:	f804 1f01 	strb.w	r1, [r4, #1]!
   1f67a:	42a5      	cmp	r5, r4
   1f67c:	d1fb      	bne.n	1f676 <__sccl+0x1a>
   1f67e:	b913      	cbnz	r3, 1f686 <__sccl+0x2a>
   1f680:	3a01      	subs	r2, #1
   1f682:	4610      	mov	r0, r2
   1f684:	bd70      	pop	{r4, r5, r6, pc}
   1f686:	f081 0401 	eor.w	r4, r1, #1
   1f68a:	4611      	mov	r1, r2
   1f68c:	54c4      	strb	r4, [r0, r3]
   1f68e:	780d      	ldrb	r5, [r1, #0]
   1f690:	1c4a      	adds	r2, r1, #1
   1f692:	2d2d      	cmp	r5, #45	; 0x2d
   1f694:	d006      	beq.n	1f6a4 <__sccl+0x48>
   1f696:	2d5d      	cmp	r5, #93	; 0x5d
   1f698:	d0f3      	beq.n	1f682 <__sccl+0x26>
   1f69a:	b90d      	cbnz	r5, 1f6a0 <__sccl+0x44>
   1f69c:	460a      	mov	r2, r1
   1f69e:	e7f0      	b.n	1f682 <__sccl+0x26>
   1f6a0:	462b      	mov	r3, r5
   1f6a2:	e7f2      	b.n	1f68a <__sccl+0x2e>
   1f6a4:	784e      	ldrb	r6, [r1, #1]
   1f6a6:	2e5d      	cmp	r6, #93	; 0x5d
   1f6a8:	d0fa      	beq.n	1f6a0 <__sccl+0x44>
   1f6aa:	42b3      	cmp	r3, r6
   1f6ac:	dcf8      	bgt.n	1f6a0 <__sccl+0x44>
   1f6ae:	3102      	adds	r1, #2
   1f6b0:	3301      	adds	r3, #1
   1f6b2:	429e      	cmp	r6, r3
   1f6b4:	54c4      	strb	r4, [r0, r3]
   1f6b6:	dcfb      	bgt.n	1f6b0 <__sccl+0x54>
   1f6b8:	e7e9      	b.n	1f68e <__sccl+0x32>

0001f6ba <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
   1f6ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1f6be:	4680      	mov	r8, r0
   1f6c0:	4689      	mov	r9, r1
   1f6c2:	4692      	mov	sl, r2
   1f6c4:	461e      	mov	r6, r3
   1f6c6:	460f      	mov	r7, r1
   1f6c8:	463d      	mov	r5, r7
   1f6ca:	9808      	ldr	r0, [sp, #32]
   1f6cc:	f815 4b01 	ldrb.w	r4, [r5], #1
   1f6d0:	f7fa fa40 	bl	19b54 <__locale_ctype_ptr_l>
   1f6d4:	4420      	add	r0, r4
   1f6d6:	7843      	ldrb	r3, [r0, #1]
   1f6d8:	f013 0308 	ands.w	r3, r3, #8
   1f6dc:	d10a      	bne.n	1f6f4 <_strtoul_l.isra.0+0x3a>
   1f6de:	2c2d      	cmp	r4, #45	; 0x2d
   1f6e0:	d10a      	bne.n	1f6f8 <_strtoul_l.isra.0+0x3e>
   1f6e2:	2301      	movs	r3, #1
   1f6e4:	782c      	ldrb	r4, [r5, #0]
   1f6e6:	1cbd      	adds	r5, r7, #2
   1f6e8:	b15e      	cbz	r6, 1f702 <_strtoul_l.isra.0+0x48>
   1f6ea:	2e10      	cmp	r6, #16
   1f6ec:	d113      	bne.n	1f716 <_strtoul_l.isra.0+0x5c>
   1f6ee:	2c30      	cmp	r4, #48	; 0x30
   1f6f0:	d009      	beq.n	1f706 <_strtoul_l.isra.0+0x4c>
   1f6f2:	e010      	b.n	1f716 <_strtoul_l.isra.0+0x5c>
   1f6f4:	462f      	mov	r7, r5
   1f6f6:	e7e7      	b.n	1f6c8 <_strtoul_l.isra.0+0xe>
   1f6f8:	2c2b      	cmp	r4, #43	; 0x2b
   1f6fa:	bf04      	itt	eq
   1f6fc:	782c      	ldrbeq	r4, [r5, #0]
   1f6fe:	1cbd      	addeq	r5, r7, #2
   1f700:	e7f2      	b.n	1f6e8 <_strtoul_l.isra.0+0x2e>
   1f702:	2c30      	cmp	r4, #48	; 0x30
   1f704:	d125      	bne.n	1f752 <_strtoul_l.isra.0+0x98>
   1f706:	782a      	ldrb	r2, [r5, #0]
   1f708:	f002 02df 	and.w	r2, r2, #223	; 0xdf
   1f70c:	2a58      	cmp	r2, #88	; 0x58
   1f70e:	d14a      	bne.n	1f7a6 <_strtoul_l.isra.0+0xec>
   1f710:	2610      	movs	r6, #16
   1f712:	786c      	ldrb	r4, [r5, #1]
   1f714:	3502      	adds	r5, #2
   1f716:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   1f71a:	fbb1 f1f6 	udiv	r1, r1, r6
   1f71e:	2700      	movs	r7, #0
   1f720:	fb06 fe01 	mul.w	lr, r6, r1
   1f724:	4638      	mov	r0, r7
   1f726:	ea6f 0e0e 	mvn.w	lr, lr
   1f72a:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
   1f72e:	2a09      	cmp	r2, #9
   1f730:	d811      	bhi.n	1f756 <_strtoul_l.isra.0+0x9c>
   1f732:	4614      	mov	r4, r2
   1f734:	42a6      	cmp	r6, r4
   1f736:	dd1d      	ble.n	1f774 <_strtoul_l.isra.0+0xba>
   1f738:	2f00      	cmp	r7, #0
   1f73a:	db18      	blt.n	1f76e <_strtoul_l.isra.0+0xb4>
   1f73c:	4281      	cmp	r1, r0
   1f73e:	d316      	bcc.n	1f76e <_strtoul_l.isra.0+0xb4>
   1f740:	d101      	bne.n	1f746 <_strtoul_l.isra.0+0x8c>
   1f742:	45a6      	cmp	lr, r4
   1f744:	db13      	blt.n	1f76e <_strtoul_l.isra.0+0xb4>
   1f746:	2701      	movs	r7, #1
   1f748:	fb00 4006 	mla	r0, r0, r6, r4
   1f74c:	f815 4b01 	ldrb.w	r4, [r5], #1
   1f750:	e7eb      	b.n	1f72a <_strtoul_l.isra.0+0x70>
   1f752:	260a      	movs	r6, #10
   1f754:	e7df      	b.n	1f716 <_strtoul_l.isra.0+0x5c>
   1f756:	f1a4 0241 	sub.w	r2, r4, #65	; 0x41
   1f75a:	2a19      	cmp	r2, #25
   1f75c:	d801      	bhi.n	1f762 <_strtoul_l.isra.0+0xa8>
   1f75e:	3c37      	subs	r4, #55	; 0x37
   1f760:	e7e8      	b.n	1f734 <_strtoul_l.isra.0+0x7a>
   1f762:	f1a4 0261 	sub.w	r2, r4, #97	; 0x61
   1f766:	2a19      	cmp	r2, #25
   1f768:	d804      	bhi.n	1f774 <_strtoul_l.isra.0+0xba>
   1f76a:	3c57      	subs	r4, #87	; 0x57
   1f76c:	e7e2      	b.n	1f734 <_strtoul_l.isra.0+0x7a>
   1f76e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   1f772:	e7eb      	b.n	1f74c <_strtoul_l.isra.0+0x92>
   1f774:	2f00      	cmp	r7, #0
   1f776:	da09      	bge.n	1f78c <_strtoul_l.isra.0+0xd2>
   1f778:	2322      	movs	r3, #34	; 0x22
   1f77a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f77e:	f8c8 3000 	str.w	r3, [r8]
   1f782:	f1ba 0f00 	cmp.w	sl, #0
   1f786:	d107      	bne.n	1f798 <_strtoul_l.isra.0+0xde>
   1f788:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f78c:	b103      	cbz	r3, 1f790 <_strtoul_l.isra.0+0xd6>
   1f78e:	4240      	negs	r0, r0
   1f790:	f1ba 0f00 	cmp.w	sl, #0
   1f794:	d00c      	beq.n	1f7b0 <_strtoul_l.isra.0+0xf6>
   1f796:	b127      	cbz	r7, 1f7a2 <_strtoul_l.isra.0+0xe8>
   1f798:	3d01      	subs	r5, #1
   1f79a:	f8ca 5000 	str.w	r5, [sl]
   1f79e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f7a2:	464d      	mov	r5, r9
   1f7a4:	e7f9      	b.n	1f79a <_strtoul_l.isra.0+0xe0>
   1f7a6:	2430      	movs	r4, #48	; 0x30
   1f7a8:	2e00      	cmp	r6, #0
   1f7aa:	d1b4      	bne.n	1f716 <_strtoul_l.isra.0+0x5c>
   1f7ac:	2608      	movs	r6, #8
   1f7ae:	e7b2      	b.n	1f716 <_strtoul_l.isra.0+0x5c>
   1f7b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001f7b4 <_strtoul_r>:
_strtoul_r():
   1f7b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1f7b6:	4c06      	ldr	r4, [pc, #24]	; (1f7d0 <_strtoul_r+0x1c>)
   1f7b8:	4d06      	ldr	r5, [pc, #24]	; (1f7d4 <_strtoul_r+0x20>)
   1f7ba:	6824      	ldr	r4, [r4, #0]
   1f7bc:	6a24      	ldr	r4, [r4, #32]
   1f7be:	2c00      	cmp	r4, #0
   1f7c0:	bf08      	it	eq
   1f7c2:	462c      	moveq	r4, r5
   1f7c4:	9400      	str	r4, [sp, #0]
   1f7c6:	f7ff ff78 	bl	1f6ba <_strtoul_l.isra.0>
   1f7ca:	b003      	add	sp, #12
   1f7cc:	bd30      	pop	{r4, r5, pc}
   1f7ce:	bf00      	nop
   1f7d0:	2007c0e0 	.word	0x2007c0e0
   1f7d4:	2007c144 	.word	0x2007c144

0001f7d8 <strtoul>:
strtoul():
   1f7d8:	4b08      	ldr	r3, [pc, #32]	; (1f7fc <strtoul+0x24>)
   1f7da:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1f7dc:	681c      	ldr	r4, [r3, #0]
   1f7de:	4d08      	ldr	r5, [pc, #32]	; (1f800 <strtoul+0x28>)
   1f7e0:	6a23      	ldr	r3, [r4, #32]
   1f7e2:	2b00      	cmp	r3, #0
   1f7e4:	bf08      	it	eq
   1f7e6:	462b      	moveq	r3, r5
   1f7e8:	9300      	str	r3, [sp, #0]
   1f7ea:	4613      	mov	r3, r2
   1f7ec:	460a      	mov	r2, r1
   1f7ee:	4601      	mov	r1, r0
   1f7f0:	4620      	mov	r0, r4
   1f7f2:	f7ff ff62 	bl	1f6ba <_strtoul_l.isra.0>
   1f7f6:	b003      	add	sp, #12
   1f7f8:	bd30      	pop	{r4, r5, pc}
   1f7fa:	bf00      	nop
   1f7fc:	2007c0e0 	.word	0x2007c0e0
   1f800:	2007c144 	.word	0x2007c144

0001f804 <__submore>:
__submore():
   1f804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f808:	460c      	mov	r4, r1
   1f80a:	6b49      	ldr	r1, [r1, #52]	; 0x34
   1f80c:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1f810:	4299      	cmp	r1, r3
   1f812:	d11c      	bne.n	1f84e <__submore+0x4a>
   1f814:	f44f 6180 	mov.w	r1, #1024	; 0x400
   1f818:	f7fa fd70 	bl	1a2fc <_malloc_r>
   1f81c:	b918      	cbnz	r0, 1f826 <__submore+0x22>
   1f81e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   1f822:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f826:	f44f 6380 	mov.w	r3, #1024	; 0x400
   1f82a:	63a3      	str	r3, [r4, #56]	; 0x38
   1f82c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   1f830:	6360      	str	r0, [r4, #52]	; 0x34
   1f832:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   1f836:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   1f83a:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   1f83e:	7043      	strb	r3, [r0, #1]
   1f840:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   1f844:	7003      	strb	r3, [r0, #0]
   1f846:	6020      	str	r0, [r4, #0]
   1f848:	2000      	movs	r0, #0
   1f84a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f84e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   1f850:	0077      	lsls	r7, r6, #1
   1f852:	463a      	mov	r2, r7
   1f854:	f7fe ffb8 	bl	1e7c8 <_realloc_r>
   1f858:	4605      	mov	r5, r0
   1f85a:	2800      	cmp	r0, #0
   1f85c:	d0df      	beq.n	1f81e <__submore+0x1a>
   1f85e:	eb00 0806 	add.w	r8, r0, r6
   1f862:	4601      	mov	r1, r0
   1f864:	4632      	mov	r2, r6
   1f866:	4640      	mov	r0, r8
   1f868:	f7fa fa29 	bl	19cbe <memcpy>
   1f86c:	f8c4 8000 	str.w	r8, [r4]
   1f870:	6365      	str	r5, [r4, #52]	; 0x34
   1f872:	63a7      	str	r7, [r4, #56]	; 0x38
   1f874:	e7e8      	b.n	1f848 <__submore+0x44>
   1f876:	Address 0x000000000001f876 is out of bounds.


0001f878 <_ungetc_r>:
_ungetc_r():
   1f878:	1c4b      	adds	r3, r1, #1
   1f87a:	b570      	push	{r4, r5, r6, lr}
   1f87c:	4606      	mov	r6, r0
   1f87e:	460d      	mov	r5, r1
   1f880:	4614      	mov	r4, r2
   1f882:	d103      	bne.n	1f88c <_ungetc_r+0x14>
   1f884:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   1f888:	4628      	mov	r0, r5
   1f88a:	bd70      	pop	{r4, r5, r6, pc}
   1f88c:	b118      	cbz	r0, 1f896 <_ungetc_r+0x1e>
   1f88e:	6983      	ldr	r3, [r0, #24]
   1f890:	b90b      	cbnz	r3, 1f896 <_ungetc_r+0x1e>
   1f892:	f7fa f895 	bl	199c0 <__sinit>
   1f896:	4b2e      	ldr	r3, [pc, #184]	; (1f950 <_ungetc_r+0xd8>)
   1f898:	429c      	cmp	r4, r3
   1f89a:	d12c      	bne.n	1f8f6 <_ungetc_r+0x7e>
   1f89c:	6874      	ldr	r4, [r6, #4]
   1f89e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1f8a2:	f023 0320 	bic.w	r3, r3, #32
   1f8a6:	81a3      	strh	r3, [r4, #12]
   1f8a8:	b29b      	uxth	r3, r3
   1f8aa:	0759      	lsls	r1, r3, #29
   1f8ac:	d413      	bmi.n	1f8d6 <_ungetc_r+0x5e>
   1f8ae:	06da      	lsls	r2, r3, #27
   1f8b0:	d5e8      	bpl.n	1f884 <_ungetc_r+0xc>
   1f8b2:	071b      	lsls	r3, r3, #28
   1f8b4:	d50b      	bpl.n	1f8ce <_ungetc_r+0x56>
   1f8b6:	4621      	mov	r1, r4
   1f8b8:	4630      	mov	r0, r6
   1f8ba:	f7fa f805 	bl	198c8 <_fflush_r>
   1f8be:	2800      	cmp	r0, #0
   1f8c0:	d1e0      	bne.n	1f884 <_ungetc_r+0xc>
   1f8c2:	89a3      	ldrh	r3, [r4, #12]
   1f8c4:	60a0      	str	r0, [r4, #8]
   1f8c6:	f023 0308 	bic.w	r3, r3, #8
   1f8ca:	81a3      	strh	r3, [r4, #12]
   1f8cc:	61a0      	str	r0, [r4, #24]
   1f8ce:	89a3      	ldrh	r3, [r4, #12]
   1f8d0:	f043 0304 	orr.w	r3, r3, #4
   1f8d4:	81a3      	strh	r3, [r4, #12]
   1f8d6:	6b63      	ldr	r3, [r4, #52]	; 0x34
   1f8d8:	b2ed      	uxtb	r5, r5
   1f8da:	6862      	ldr	r2, [r4, #4]
   1f8dc:	b1e3      	cbz	r3, 1f918 <_ungetc_r+0xa0>
   1f8de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1f8e0:	429a      	cmp	r2, r3
   1f8e2:	da12      	bge.n	1f90a <_ungetc_r+0x92>
   1f8e4:	6823      	ldr	r3, [r4, #0]
   1f8e6:	1e5a      	subs	r2, r3, #1
   1f8e8:	6022      	str	r2, [r4, #0]
   1f8ea:	f803 5c01 	strb.w	r5, [r3, #-1]
   1f8ee:	6863      	ldr	r3, [r4, #4]
   1f8f0:	3301      	adds	r3, #1
   1f8f2:	6063      	str	r3, [r4, #4]
   1f8f4:	e7c8      	b.n	1f888 <_ungetc_r+0x10>
   1f8f6:	4b17      	ldr	r3, [pc, #92]	; (1f954 <_ungetc_r+0xdc>)
   1f8f8:	429c      	cmp	r4, r3
   1f8fa:	d101      	bne.n	1f900 <_ungetc_r+0x88>
   1f8fc:	68b4      	ldr	r4, [r6, #8]
   1f8fe:	e7ce      	b.n	1f89e <_ungetc_r+0x26>
   1f900:	4b15      	ldr	r3, [pc, #84]	; (1f958 <_ungetc_r+0xe0>)
   1f902:	429c      	cmp	r4, r3
   1f904:	bf08      	it	eq
   1f906:	68f4      	ldreq	r4, [r6, #12]
   1f908:	e7c9      	b.n	1f89e <_ungetc_r+0x26>
   1f90a:	4621      	mov	r1, r4
   1f90c:	4630      	mov	r0, r6
   1f90e:	f7ff ff79 	bl	1f804 <__submore>
   1f912:	2800      	cmp	r0, #0
   1f914:	d0e6      	beq.n	1f8e4 <_ungetc_r+0x6c>
   1f916:	e7b5      	b.n	1f884 <_ungetc_r+0xc>
   1f918:	6921      	ldr	r1, [r4, #16]
   1f91a:	6823      	ldr	r3, [r4, #0]
   1f91c:	b151      	cbz	r1, 1f934 <_ungetc_r+0xbc>
   1f91e:	4299      	cmp	r1, r3
   1f920:	d208      	bcs.n	1f934 <_ungetc_r+0xbc>
   1f922:	f813 1c01 	ldrb.w	r1, [r3, #-1]
   1f926:	428d      	cmp	r5, r1
   1f928:	d104      	bne.n	1f934 <_ungetc_r+0xbc>
   1f92a:	3b01      	subs	r3, #1
   1f92c:	3201      	adds	r2, #1
   1f92e:	6023      	str	r3, [r4, #0]
   1f930:	6062      	str	r2, [r4, #4]
   1f932:	e7a9      	b.n	1f888 <_ungetc_r+0x10>
   1f934:	63e3      	str	r3, [r4, #60]	; 0x3c
   1f936:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1f93a:	6363      	str	r3, [r4, #52]	; 0x34
   1f93c:	2303      	movs	r3, #3
   1f93e:	63a3      	str	r3, [r4, #56]	; 0x38
   1f940:	4623      	mov	r3, r4
   1f942:	6422      	str	r2, [r4, #64]	; 0x40
   1f944:	f803 5f46 	strb.w	r5, [r3, #70]!
   1f948:	6023      	str	r3, [r4, #0]
   1f94a:	2301      	movs	r3, #1
   1f94c:	e7d1      	b.n	1f8f2 <_ungetc_r+0x7a>
   1f94e:	bf00      	nop
   1f950:	00021080 	.word	0x00021080
   1f954:	000210a0 	.word	0x000210a0
   1f958:	00021060 	.word	0x00021060

0001f95c <__env_lock>:
__env_lock():
   1f95c:	4770      	bx	lr

0001f95e <__env_unlock>:
__env_unlock():
   1f95e:	4770      	bx	lr

0001f960 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   1f960:	f851 0c04 	ldr.w	r0, [r1, #-4]
   1f964:	2800      	cmp	r0, #0
   1f966:	f1a0 0004 	sub.w	r0, r0, #4
   1f96a:	bfbc      	itt	lt
   1f96c:	580b      	ldrlt	r3, [r1, r0]
   1f96e:	18c0      	addlt	r0, r0, r3
   1f970:	4770      	bx	lr
   1f972:	Address 0x000000000001f972 is out of bounds.


0001f974 <__aeabi_dmul>:
__muldf3():
   1f974:	b570      	push	{r4, r5, r6, lr}
   1f976:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1f97a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1f97e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1f982:	bf1d      	ittte	ne
   1f984:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1f988:	ea94 0f0c 	teqne	r4, ip
   1f98c:	ea95 0f0c 	teqne	r5, ip
   1f990:	f000 f8de 	bleq	1fb50 <__aeabi_dmul+0x1dc>
   1f994:	442c      	add	r4, r5
   1f996:	ea81 0603 	eor.w	r6, r1, r3
   1f99a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1f99e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1f9a2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1f9a6:	bf18      	it	ne
   1f9a8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1f9ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1f9b0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1f9b4:	d038      	beq.n	1fa28 <__aeabi_dmul+0xb4>
   1f9b6:	fba0 ce02 	umull	ip, lr, r0, r2
   1f9ba:	f04f 0500 	mov.w	r5, #0
   1f9be:	fbe1 e502 	umlal	lr, r5, r1, r2
   1f9c2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1f9c6:	fbe0 e503 	umlal	lr, r5, r0, r3
   1f9ca:	f04f 0600 	mov.w	r6, #0
   1f9ce:	fbe1 5603 	umlal	r5, r6, r1, r3
   1f9d2:	f09c 0f00 	teq	ip, #0
   1f9d6:	bf18      	it	ne
   1f9d8:	f04e 0e01 	orrne.w	lr, lr, #1
   1f9dc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   1f9e0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1f9e4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   1f9e8:	d204      	bcs.n	1f9f4 <__aeabi_dmul+0x80>
   1f9ea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   1f9ee:	416d      	adcs	r5, r5
   1f9f0:	eb46 0606 	adc.w	r6, r6, r6
   1f9f4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   1f9f8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   1f9fc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   1fa00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   1fa04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   1fa08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1fa0c:	bf88      	it	hi
   1fa0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1fa12:	d81e      	bhi.n	1fa52 <__aeabi_dmul+0xde>
   1fa14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1fa18:	bf08      	it	eq
   1fa1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1fa1e:	f150 0000 	adcs.w	r0, r0, #0
   1fa22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1fa26:	bd70      	pop	{r4, r5, r6, pc}
   1fa28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1fa2c:	ea46 0101 	orr.w	r1, r6, r1
   1fa30:	ea40 0002 	orr.w	r0, r0, r2
   1fa34:	ea81 0103 	eor.w	r1, r1, r3
   1fa38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1fa3c:	bfc2      	ittt	gt
   1fa3e:	ebd4 050c 	rsbsgt	r5, r4, ip
   1fa42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1fa46:	bd70      	popgt	{r4, r5, r6, pc}
   1fa48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1fa4c:	f04f 0e00 	mov.w	lr, #0
   1fa50:	3c01      	subs	r4, #1
   1fa52:	f300 80ab 	bgt.w	1fbac <__aeabi_dmul+0x238>
   1fa56:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1fa5a:	bfde      	ittt	le
   1fa5c:	2000      	movle	r0, #0
   1fa5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1fa62:	bd70      	pople	{r4, r5, r6, pc}
   1fa64:	f1c4 0400 	rsb	r4, r4, #0
   1fa68:	3c20      	subs	r4, #32
   1fa6a:	da35      	bge.n	1fad8 <__aeabi_dmul+0x164>
   1fa6c:	340c      	adds	r4, #12
   1fa6e:	dc1b      	bgt.n	1faa8 <__aeabi_dmul+0x134>
   1fa70:	f104 0414 	add.w	r4, r4, #20
   1fa74:	f1c4 0520 	rsb	r5, r4, #32
   1fa78:	fa00 f305 	lsl.w	r3, r0, r5
   1fa7c:	fa20 f004 	lsr.w	r0, r0, r4
   1fa80:	fa01 f205 	lsl.w	r2, r1, r5
   1fa84:	ea40 0002 	orr.w	r0, r0, r2
   1fa88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1fa8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1fa90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1fa94:	fa21 f604 	lsr.w	r6, r1, r4
   1fa98:	eb42 0106 	adc.w	r1, r2, r6
   1fa9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1faa0:	bf08      	it	eq
   1faa2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1faa6:	bd70      	pop	{r4, r5, r6, pc}
   1faa8:	f1c4 040c 	rsb	r4, r4, #12
   1faac:	f1c4 0520 	rsb	r5, r4, #32
   1fab0:	fa00 f304 	lsl.w	r3, r0, r4
   1fab4:	fa20 f005 	lsr.w	r0, r0, r5
   1fab8:	fa01 f204 	lsl.w	r2, r1, r4
   1fabc:	ea40 0002 	orr.w	r0, r0, r2
   1fac0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1fac4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1fac8:	f141 0100 	adc.w	r1, r1, #0
   1facc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1fad0:	bf08      	it	eq
   1fad2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1fad6:	bd70      	pop	{r4, r5, r6, pc}
   1fad8:	f1c4 0520 	rsb	r5, r4, #32
   1fadc:	fa00 f205 	lsl.w	r2, r0, r5
   1fae0:	ea4e 0e02 	orr.w	lr, lr, r2
   1fae4:	fa20 f304 	lsr.w	r3, r0, r4
   1fae8:	fa01 f205 	lsl.w	r2, r1, r5
   1faec:	ea43 0302 	orr.w	r3, r3, r2
   1faf0:	fa21 f004 	lsr.w	r0, r1, r4
   1faf4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1faf8:	fa21 f204 	lsr.w	r2, r1, r4
   1fafc:	ea20 0002 	bic.w	r0, r0, r2
   1fb00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   1fb04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1fb08:	bf08      	it	eq
   1fb0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1fb0e:	bd70      	pop	{r4, r5, r6, pc}
   1fb10:	f094 0f00 	teq	r4, #0
   1fb14:	d10f      	bne.n	1fb36 <__aeabi_dmul+0x1c2>
   1fb16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1fb1a:	0040      	lsls	r0, r0, #1
   1fb1c:	eb41 0101 	adc.w	r1, r1, r1
   1fb20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1fb24:	bf08      	it	eq
   1fb26:	3c01      	subeq	r4, #1
   1fb28:	d0f7      	beq.n	1fb1a <__aeabi_dmul+0x1a6>
   1fb2a:	ea41 0106 	orr.w	r1, r1, r6
   1fb2e:	f095 0f00 	teq	r5, #0
   1fb32:	bf18      	it	ne
   1fb34:	4770      	bxne	lr
   1fb36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1fb3a:	0052      	lsls	r2, r2, #1
   1fb3c:	eb43 0303 	adc.w	r3, r3, r3
   1fb40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   1fb44:	bf08      	it	eq
   1fb46:	3d01      	subeq	r5, #1
   1fb48:	d0f7      	beq.n	1fb3a <__aeabi_dmul+0x1c6>
   1fb4a:	ea43 0306 	orr.w	r3, r3, r6
   1fb4e:	4770      	bx	lr
   1fb50:	ea94 0f0c 	teq	r4, ip
   1fb54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1fb58:	bf18      	it	ne
   1fb5a:	ea95 0f0c 	teqne	r5, ip
   1fb5e:	d00c      	beq.n	1fb7a <__aeabi_dmul+0x206>
   1fb60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1fb64:	bf18      	it	ne
   1fb66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1fb6a:	d1d1      	bne.n	1fb10 <__aeabi_dmul+0x19c>
   1fb6c:	ea81 0103 	eor.w	r1, r1, r3
   1fb70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1fb74:	f04f 0000 	mov.w	r0, #0
   1fb78:	bd70      	pop	{r4, r5, r6, pc}
   1fb7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1fb7e:	bf06      	itte	eq
   1fb80:	4610      	moveq	r0, r2
   1fb82:	4619      	moveq	r1, r3
   1fb84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1fb88:	d019      	beq.n	1fbbe <__aeabi_dmul+0x24a>
   1fb8a:	ea94 0f0c 	teq	r4, ip
   1fb8e:	d102      	bne.n	1fb96 <__aeabi_dmul+0x222>
   1fb90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   1fb94:	d113      	bne.n	1fbbe <__aeabi_dmul+0x24a>
   1fb96:	ea95 0f0c 	teq	r5, ip
   1fb9a:	d105      	bne.n	1fba8 <__aeabi_dmul+0x234>
   1fb9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1fba0:	bf1c      	itt	ne
   1fba2:	4610      	movne	r0, r2
   1fba4:	4619      	movne	r1, r3
   1fba6:	d10a      	bne.n	1fbbe <__aeabi_dmul+0x24a>
   1fba8:	ea81 0103 	eor.w	r1, r1, r3
   1fbac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1fbb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1fbb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1fbb8:	f04f 0000 	mov.w	r0, #0
   1fbbc:	bd70      	pop	{r4, r5, r6, pc}
   1fbbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1fbc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   1fbc6:	bd70      	pop	{r4, r5, r6, pc}

0001fbc8 <__aeabi_ddiv>:
__divdf3():
   1fbc8:	b570      	push	{r4, r5, r6, lr}
   1fbca:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1fbce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1fbd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1fbd6:	bf1d      	ittte	ne
   1fbd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1fbdc:	ea94 0f0c 	teqne	r4, ip
   1fbe0:	ea95 0f0c 	teqne	r5, ip
   1fbe4:	f000 f8a7 	bleq	1fd36 <__aeabi_ddiv+0x16e>
   1fbe8:	eba4 0405 	sub.w	r4, r4, r5
   1fbec:	ea81 0e03 	eor.w	lr, r1, r3
   1fbf0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1fbf4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1fbf8:	f000 8088 	beq.w	1fd0c <__aeabi_ddiv+0x144>
   1fbfc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1fc00:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   1fc04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   1fc08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   1fc0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
   1fc10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   1fc14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   1fc18:	ea4f 2600 	mov.w	r6, r0, lsl #8
   1fc1c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   1fc20:	429d      	cmp	r5, r3
   1fc22:	bf08      	it	eq
   1fc24:	4296      	cmpeq	r6, r2
   1fc26:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1fc2a:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1fc2e:	d202      	bcs.n	1fc36 <__aeabi_ddiv+0x6e>
   1fc30:	085b      	lsrs	r3, r3, #1
   1fc32:	ea4f 0232 	mov.w	r2, r2, rrx
   1fc36:	1ab6      	subs	r6, r6, r2
   1fc38:	eb65 0503 	sbc.w	r5, r5, r3
   1fc3c:	085b      	lsrs	r3, r3, #1
   1fc3e:	ea4f 0232 	mov.w	r2, r2, rrx
   1fc42:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   1fc46:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1fc4a:	ebb6 0e02 	subs.w	lr, r6, r2
   1fc4e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1fc52:	bf22      	ittt	cs
   1fc54:	1ab6      	subcs	r6, r6, r2
   1fc56:	4675      	movcs	r5, lr
   1fc58:	ea40 000c 	orrcs.w	r0, r0, ip
   1fc5c:	085b      	lsrs	r3, r3, #1
   1fc5e:	ea4f 0232 	mov.w	r2, r2, rrx
   1fc62:	ebb6 0e02 	subs.w	lr, r6, r2
   1fc66:	eb75 0e03 	sbcs.w	lr, r5, r3
   1fc6a:	bf22      	ittt	cs
   1fc6c:	1ab6      	subcs	r6, r6, r2
   1fc6e:	4675      	movcs	r5, lr
   1fc70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1fc74:	085b      	lsrs	r3, r3, #1
   1fc76:	ea4f 0232 	mov.w	r2, r2, rrx
   1fc7a:	ebb6 0e02 	subs.w	lr, r6, r2
   1fc7e:	eb75 0e03 	sbcs.w	lr, r5, r3
   1fc82:	bf22      	ittt	cs
   1fc84:	1ab6      	subcs	r6, r6, r2
   1fc86:	4675      	movcs	r5, lr
   1fc88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1fc8c:	085b      	lsrs	r3, r3, #1
   1fc8e:	ea4f 0232 	mov.w	r2, r2, rrx
   1fc92:	ebb6 0e02 	subs.w	lr, r6, r2
   1fc96:	eb75 0e03 	sbcs.w	lr, r5, r3
   1fc9a:	bf22      	ittt	cs
   1fc9c:	1ab6      	subcs	r6, r6, r2
   1fc9e:	4675      	movcs	r5, lr
   1fca0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1fca4:	ea55 0e06 	orrs.w	lr, r5, r6
   1fca8:	d018      	beq.n	1fcdc <__aeabi_ddiv+0x114>
   1fcaa:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1fcae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   1fcb2:	ea4f 1606 	mov.w	r6, r6, lsl #4
   1fcb6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1fcba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1fcbe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   1fcc2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   1fcc6:	d1c0      	bne.n	1fc4a <__aeabi_ddiv+0x82>
   1fcc8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1fccc:	d10b      	bne.n	1fce6 <__aeabi_ddiv+0x11e>
   1fcce:	ea41 0100 	orr.w	r1, r1, r0
   1fcd2:	f04f 0000 	mov.w	r0, #0
   1fcd6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1fcda:	e7b6      	b.n	1fc4a <__aeabi_ddiv+0x82>
   1fcdc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1fce0:	bf04      	itt	eq
   1fce2:	4301      	orreq	r1, r0
   1fce4:	2000      	moveq	r0, #0
   1fce6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1fcea:	bf88      	it	hi
   1fcec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1fcf0:	f63f aeaf 	bhi.w	1fa52 <__aeabi_dmul+0xde>
   1fcf4:	ebb5 0c03 	subs.w	ip, r5, r3
   1fcf8:	bf04      	itt	eq
   1fcfa:	ebb6 0c02 	subseq.w	ip, r6, r2
   1fcfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1fd02:	f150 0000 	adcs.w	r0, r0, #0
   1fd06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1fd0a:	bd70      	pop	{r4, r5, r6, pc}
   1fd0c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1fd10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   1fd14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   1fd18:	bfc2      	ittt	gt
   1fd1a:	ebd4 050c 	rsbsgt	r5, r4, ip
   1fd1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1fd22:	bd70      	popgt	{r4, r5, r6, pc}
   1fd24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1fd28:	f04f 0e00 	mov.w	lr, #0
   1fd2c:	3c01      	subs	r4, #1
   1fd2e:	e690      	b.n	1fa52 <__aeabi_dmul+0xde>
   1fd30:	ea45 0e06 	orr.w	lr, r5, r6
   1fd34:	e68d      	b.n	1fa52 <__aeabi_dmul+0xde>
   1fd36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1fd3a:	ea94 0f0c 	teq	r4, ip
   1fd3e:	bf08      	it	eq
   1fd40:	ea95 0f0c 	teqeq	r5, ip
   1fd44:	f43f af3b 	beq.w	1fbbe <__aeabi_dmul+0x24a>
   1fd48:	ea94 0f0c 	teq	r4, ip
   1fd4c:	d10a      	bne.n	1fd64 <__aeabi_ddiv+0x19c>
   1fd4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1fd52:	f47f af34 	bne.w	1fbbe <__aeabi_dmul+0x24a>
   1fd56:	ea95 0f0c 	teq	r5, ip
   1fd5a:	f47f af25 	bne.w	1fba8 <__aeabi_dmul+0x234>
   1fd5e:	4610      	mov	r0, r2
   1fd60:	4619      	mov	r1, r3
   1fd62:	e72c      	b.n	1fbbe <__aeabi_dmul+0x24a>
   1fd64:	ea95 0f0c 	teq	r5, ip
   1fd68:	d106      	bne.n	1fd78 <__aeabi_ddiv+0x1b0>
   1fd6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1fd6e:	f43f aefd 	beq.w	1fb6c <__aeabi_dmul+0x1f8>
   1fd72:	4610      	mov	r0, r2
   1fd74:	4619      	mov	r1, r3
   1fd76:	e722      	b.n	1fbbe <__aeabi_dmul+0x24a>
   1fd78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1fd7c:	bf18      	it	ne
   1fd7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1fd82:	f47f aec5 	bne.w	1fb10 <__aeabi_dmul+0x19c>
   1fd86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1fd8a:	f47f af0d 	bne.w	1fba8 <__aeabi_dmul+0x234>
   1fd8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1fd92:	f47f aeeb 	bne.w	1fb6c <__aeabi_dmul+0x1f8>
   1fd96:	e712      	b.n	1fbbe <__aeabi_dmul+0x24a>

0001fd98 <__gedf2>:
__gedf2():
   1fd98:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   1fd9c:	e006      	b.n	1fdac <__cmpdf2+0x4>
   1fd9e:	bf00      	nop

0001fda0 <__ledf2>:
__ledf2():
   1fda0:	f04f 0c01 	mov.w	ip, #1
   1fda4:	e002      	b.n	1fdac <__cmpdf2+0x4>
   1fda6:	bf00      	nop

0001fda8 <__cmpdf2>:
__nedf2():
   1fda8:	f04f 0c01 	mov.w	ip, #1
   1fdac:	f84d cd04 	str.w	ip, [sp, #-4]!
   1fdb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1fdb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1fdb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1fdbc:	bf18      	it	ne
   1fdbe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   1fdc2:	d01b      	beq.n	1fdfc <__cmpdf2+0x54>
   1fdc4:	b001      	add	sp, #4
   1fdc6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   1fdca:	bf0c      	ite	eq
   1fdcc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   1fdd0:	ea91 0f03 	teqne	r1, r3
   1fdd4:	bf02      	ittt	eq
   1fdd6:	ea90 0f02 	teqeq	r0, r2
   1fdda:	2000      	moveq	r0, #0
   1fddc:	4770      	bxeq	lr
   1fdde:	f110 0f00 	cmn.w	r0, #0
   1fde2:	ea91 0f03 	teq	r1, r3
   1fde6:	bf58      	it	pl
   1fde8:	4299      	cmppl	r1, r3
   1fdea:	bf08      	it	eq
   1fdec:	4290      	cmpeq	r0, r2
   1fdee:	bf2c      	ite	cs
   1fdf0:	17d8      	asrcs	r0, r3, #31
   1fdf2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   1fdf6:	f040 0001 	orr.w	r0, r0, #1
   1fdfa:	4770      	bx	lr
   1fdfc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1fe00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1fe04:	d102      	bne.n	1fe0c <__cmpdf2+0x64>
   1fe06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1fe0a:	d107      	bne.n	1fe1c <__cmpdf2+0x74>
   1fe0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1fe10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1fe14:	d1d6      	bne.n	1fdc4 <__cmpdf2+0x1c>
   1fe16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1fe1a:	d0d3      	beq.n	1fdc4 <__cmpdf2+0x1c>
   1fe1c:	f85d 0b04 	ldr.w	r0, [sp], #4
   1fe20:	4770      	bx	lr
   1fe22:	bf00      	nop

0001fe24 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   1fe24:	4684      	mov	ip, r0
   1fe26:	4610      	mov	r0, r2
   1fe28:	4662      	mov	r2, ip
   1fe2a:	468c      	mov	ip, r1
   1fe2c:	4619      	mov	r1, r3
   1fe2e:	4663      	mov	r3, ip
   1fe30:	e000      	b.n	1fe34 <__aeabi_cdcmpeq>
   1fe32:	bf00      	nop

0001fe34 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
   1fe34:	b501      	push	{r0, lr}
   1fe36:	f7ff ffb7 	bl	1fda8 <__cmpdf2>
   1fe3a:	2800      	cmp	r0, #0
   1fe3c:	bf48      	it	mi
   1fe3e:	f110 0f00 	cmnmi.w	r0, #0
   1fe42:	bd01      	pop	{r0, pc}

0001fe44 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   1fe44:	f84d ed08 	str.w	lr, [sp, #-8]!
   1fe48:	f7ff fff4 	bl	1fe34 <__aeabi_cdcmpeq>
   1fe4c:	bf0c      	ite	eq
   1fe4e:	2001      	moveq	r0, #1
   1fe50:	2000      	movne	r0, #0
   1fe52:	f85d fb08 	ldr.w	pc, [sp], #8
   1fe56:	bf00      	nop

0001fe58 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   1fe58:	f84d ed08 	str.w	lr, [sp, #-8]!
   1fe5c:	f7ff ffea 	bl	1fe34 <__aeabi_cdcmpeq>
   1fe60:	bf34      	ite	cc
   1fe62:	2001      	movcc	r0, #1
   1fe64:	2000      	movcs	r0, #0
   1fe66:	f85d fb08 	ldr.w	pc, [sp], #8
   1fe6a:	bf00      	nop

0001fe6c <__aeabi_dcmple>:
__aeabi_dcmple():
   1fe6c:	f84d ed08 	str.w	lr, [sp, #-8]!
   1fe70:	f7ff ffe0 	bl	1fe34 <__aeabi_cdcmpeq>
   1fe74:	bf94      	ite	ls
   1fe76:	2001      	movls	r0, #1
   1fe78:	2000      	movhi	r0, #0
   1fe7a:	f85d fb08 	ldr.w	pc, [sp], #8
   1fe7e:	bf00      	nop

0001fe80 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   1fe80:	f84d ed08 	str.w	lr, [sp, #-8]!
   1fe84:	f7ff ffce 	bl	1fe24 <__aeabi_cdrcmple>
   1fe88:	bf94      	ite	ls
   1fe8a:	2001      	movls	r0, #1
   1fe8c:	2000      	movhi	r0, #0
   1fe8e:	f85d fb08 	ldr.w	pc, [sp], #8
   1fe92:	bf00      	nop

0001fe94 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   1fe94:	f84d ed08 	str.w	lr, [sp, #-8]!
   1fe98:	f7ff ffc4 	bl	1fe24 <__aeabi_cdrcmple>
   1fe9c:	bf34      	ite	cc
   1fe9e:	2001      	movcc	r0, #1
   1fea0:	2000      	movcs	r0, #0
   1fea2:	f85d fb08 	ldr.w	pc, [sp], #8
   1fea6:	bf00      	nop

0001fea8 <__aeabi_dcmpun>:
__unorddf2():
   1fea8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   1feac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1feb0:	d102      	bne.n	1feb8 <__aeabi_dcmpun+0x10>
   1feb2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   1feb6:	d10a      	bne.n	1fece <__aeabi_dcmpun+0x26>
   1feb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1febc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   1fec0:	d102      	bne.n	1fec8 <__aeabi_dcmpun+0x20>
   1fec2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   1fec6:	d102      	bne.n	1fece <__aeabi_dcmpun+0x26>
   1fec8:	f04f 0000 	mov.w	r0, #0
   1fecc:	4770      	bx	lr
   1fece:	f04f 0001 	mov.w	r0, #1
   1fed2:	4770      	bx	lr

0001fed4 <__aeabi_d2iz>:
__aeabi_d2iz():
   1fed4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1fed8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1fedc:	d215      	bcs.n	1ff0a <__aeabi_d2iz+0x36>
   1fede:	d511      	bpl.n	1ff04 <__aeabi_d2iz+0x30>
   1fee0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1fee4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1fee8:	d912      	bls.n	1ff10 <__aeabi_d2iz+0x3c>
   1feea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1feee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1fef2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1fef6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1fefa:	fa23 f002 	lsr.w	r0, r3, r2
   1fefe:	bf18      	it	ne
   1ff00:	4240      	negne	r0, r0
   1ff02:	4770      	bx	lr
   1ff04:	f04f 0000 	mov.w	r0, #0
   1ff08:	4770      	bx	lr
   1ff0a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1ff0e:	d105      	bne.n	1ff1c <__aeabi_d2iz+0x48>
   1ff10:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   1ff14:	bf08      	it	eq
   1ff16:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1ff1a:	4770      	bx	lr
   1ff1c:	f04f 0000 	mov.w	r0, #0
   1ff20:	4770      	bx	lr
   1ff22:	bf00      	nop
   1ff24:	74737953 	.word	0x74737953
   1ff28:	50206d65 	.word	0x50206d65
   1ff2c:	7265776f 	.word	0x7265776f
   1ff30:	3a6e6f2d 	.word	0x3a6e6f2d
   1ff34:	6f6f4220 	.word	0x6f6f4220
   1ff38:	676e6974 	.word	0x676e6974
   1ff3c:	2e2e2e20 	.word	0x2e2e2e20
   1ff40:	73795300 	.word	0x73795300
   1ff44:	206d6574 	.word	0x206d6574
   1ff48:	73617243 	.word	0x73617243
   1ff4c:	52203a68 	.word	0x52203a68
   1ff50:	6f622d65 	.word	0x6f622d65
   1ff54:	6e69746f 	.word	0x6e69746f
   1ff58:	2e2e2067 	.word	0x2e2e2067
   1ff5c:	6157002e 	.word	0x6157002e
   1ff60:	64686374 	.word	0x64686374
   1ff64:	5320676f 	.word	0x5320676f
   1ff68:	65747379 	.word	0x65747379
   1ff6c:	6552206d 	.word	0x6552206d
   1ff70:	3a746573 	.word	0x3a746573
   1ff74:	6f6f4220 	.word	0x6f6f4220
   1ff78:	676e6974 	.word	0x676e6974
   1ff7c:	2e2e2e20 	.word	0x2e2e2e20
   1ff80:	00          	.byte	0x00
   1ff81:	55          	.byte	0x55
   1ff82:	656e      	.short	0x656e
   1ff84:	63657078 	.word	0x63657078
   1ff88:	20646574 	.word	0x20646574
   1ff8c:	20525349 	.word	0x20525349
   1ff90:	6c6c6163 	.word	0x6c6c6163
   1ff94:	20746120 	.word	0x20746120
   1ff98:	5f63706c 	.word	0x5f63706c
   1ff9c:	2e737973 	.word	0x2e737973
   1ffa0:	0063      	.short	0x0063
   1ffa2:	654d      	.short	0x654d
   1ffa4:	79726f6d 	.word	0x79726f6d
   1ffa8:	666e4920 	.word	0x666e4920
   1ffac:	616d726f 	.word	0x616d726f
   1ffb0:	6e6f6974 	.word	0x6e6f6974
   1ffb4:	6c470a3a 	.word	0x6c470a3a
   1ffb8:	6c61626f 	.word	0x6c61626f
   1ffbc:	65735520 	.word	0x65735520
   1ffc0:	20202064 	.word	0x20202064
   1ffc4:	3525203a 	.word	0x3525203a
   1ffc8:	616d0a64 	.word	0x616d0a64
   1ffcc:	636f6c6c 	.word	0x636f6c6c
   1ffd0:	65735520 	.word	0x65735520
   1ffd4:	20202064 	.word	0x20202064
   1ffd8:	3525203a 	.word	0x3525203a
   1ffdc:	616d0a64 	.word	0x616d0a64
   1ffe0:	636f6c6c 	.word	0x636f6c6c
   1ffe4:	61764120 	.word	0x61764120
   1ffe8:	202e6c69 	.word	0x202e6c69
   1ffec:	3525203a 	.word	0x3525203a
   1fff0:	79530a64 	.word	0x79530a64
   1fff4:	6d657473 	.word	0x6d657473
   1fff8:	61764120 	.word	0x61764120
   1fffc:	202e6c69 	.word	0x202e6c69
   20000:	3525203a 	.word	0x3525203a
   20004:	654e0a64 	.word	0x654e0a64
   20008:	48207478 	.word	0x48207478
   2000c:	20706165 	.word	0x20706165
   20010:	20727470 	.word	0x20727470
   20014:	3a202020 	.word	0x3a202020
   20018:	25783020 	.word	0x25783020
   2001c:	0a583830 	.word	0x0a583830
   20020:	7473614c 	.word	0x7473614c
   20024:	72627320 	.word	0x72627320
   20028:	2029286b 	.word	0x2029286b
   2002c:	20727470 	.word	0x20727470
   20030:	30203a20 	.word	0x30203a20
   20034:	38302578 	.word	0x38302578
   20038:	614c0a58 	.word	0x614c0a58
   2003c:	73207473 	.word	0x73207473
   20040:	286b7262 	.word	0x286b7262
   20044:	69732029 	.word	0x69732029
   20048:	3a20657a 	.word	0x3a20657a
   2004c:	0a752520 	.word	0x0a752520
   20050:	206d754e 	.word	0x206d754e
   20054:	72627320 	.word	0x72627320
   20058:	2029286b 	.word	0x2029286b
   2005c:	6c6c6163 	.word	0x6c6c6163
   20060:	25203a73 	.word	0x25203a73
   20064:	0a75      	.short	0x0a75
   20066:	00          	.byte	0x00
   20067:	25          	.byte	0x25
   20068:	52492075 	.word	0x52492075
   2006c:	61772051 	.word	0x61772051
   20070:	72742073 	.word	0x72742073
   20074:	65676769 	.word	0x65676769
   20078:	2c646572 	.word	0x2c646572
   2007c:	74756220 	.word	0x74756220
   20080:	206f6e20 	.word	0x206f6e20
   20084:	20515249 	.word	0x20515249
   20088:	76726573 	.word	0x76726573
   2008c:	20656369 	.word	0x20656369
   20090:	20736177 	.word	0x20736177
   20094:	69666564 	.word	0x69666564
   20098:	2164656e 	.word	0x2164656e
   2009c:	000a      	.short	0x000a
   2009e:	4d4e      	.short	0x4d4e
   200a0:	61462049 	.word	0x61462049
   200a4:	0a746c75 	.word	0x0a746c75
   200a8:	6d654d00 	.word	0x6d654d00
   200ac:	75614620 	.word	0x75614620
   200b0:	000a746c 	.word	0x000a746c
   200b4:	20535542 	.word	0x20535542
   200b8:	6c756146 	.word	0x6c756146
   200bc:	55000a74 	.word	0x55000a74
   200c0:	65676173 	.word	0x65676173
   200c4:	75614620 	.word	0x75614620
   200c8:	000a746c 	.word	0x000a746c
   200cc:	4d474244 	.word	0x4d474244
   200d0:	46204e4f 	.word	0x46204e4f
   200d4:	746c7561 	.word	0x746c7561
   200d8:	5249000a 	.word	0x5249000a
   200dc:	6f6e2051 	.word	0x6f6e2051
   200e0:	65722074 	.word	0x65722074
   200e4:	74736967 	.word	0x74736967
   200e8:	64657265 	.word	0x64657265
   200ec:	616d0021 	.word	0x616d0021
   200f0:	29286e69 	.word	0x29286e69
   200f4:	6f687320 	.word	0x6f687320
   200f8:	20646c75 	.word	0x20646c75
   200fc:	6576656e 	.word	0x6576656e
   20100:	78652072 	.word	0x78652072
   20104:	6f207469 	.word	0x6f207469
   20108:	6874206e 	.word	0x6874206e
   2010c:	73207369 	.word	0x73207369
   20110:	65747379 	.word	0x65747379
   20114:	0a6d      	.short	0x0a6d
   20116:	00          	.byte	0x00
   20117:	48          	.byte	0x48
   20118:	49544c41 	.word	0x49544c41
   2011c:	5320474e 	.word	0x5320474e
   20120:	45545359 	.word	0x45545359
   20124:	59203a4d 	.word	0x59203a4d
   20128:	2072756f 	.word	0x2072756f
   2012c:	74737973 	.word	0x74737973
   20130:	72206d65 	.word	0x72206d65
   20134:	6f206e61 	.word	0x6f206e61
   20138:	6f207475 	.word	0x6f207475
   2013c:	656d2066 	.word	0x656d2066
   20140:	79726f6d 	.word	0x79726f6d
   20144:	41522820 	.word	0x41522820
   20148:	0a21294d 	.word	0x0a21294d
   2014c:	00          	.byte	0x00
   2014d:	48          	.byte	0x48
   2014e:	4c41      	.short	0x4c41
   20150:	474e4954 	.word	0x474e4954
   20154:	53595320 	.word	0x53595320
   20158:	3a4d4554 	.word	0x3a4d4554
   2015c:	61745320 	.word	0x61745320
   20160:	6f206b63 	.word	0x6f206b63
   20164:	66726576 	.word	0x66726576
   20168:	20776f6c 	.word	0x20776f6c
   2016c:	74207962 	.word	0x74207962
   20170:	3a6b7361 	.word	0x3a6b7361
   20174:	540a0020 	.word	0x540a0020
   20178:	69207972 	.word	0x69207972
   2017c:	6572636e 	.word	0x6572636e
   20180:	6e697361 	.word	0x6e697361
   20184:	74732067 	.word	0x74732067
   20188:	206b6361 	.word	0x206b6361
   2018c:	6f6d656d 	.word	0x6f6d656d
   20190:	6f207972 	.word	0x6f207972
   20194:	68742066 	.word	0x68742066
   20198:	74207369 	.word	0x74207369
   2019c:	2e6b7361 	.word	0x2e6b7361
   201a0:	000a      	.short	0x000a
   201a2:	4449      	.short	0x4449
   201a4:	ff00454c 	.word	0xff00454c

000201a8 <typeinfo for CharDev>:
   201a8:	00020f64 000201b0                       d.......

000201b0 <typeinfo name for CharDev>:
   201b0:	61684337 76654472 ffffff00              7CharDev....

000201bc <vtable for CharDev>:
   201bc:	00000000 000201a8 00018641 00018641     ........A...A...
   201cc:	00011a95 00000000 00000000              ............

000201d8 <typeinfo for UartDev>:
   201d8:	00020fc4 000201e4 000201a8              ............

000201e4 <typeinfo name for UartDev>:
   201e4:	72615537 76654474 ffffff00              7UartDev....

000201f0 <vtable for UartDev>:
   201f0:	00000000 000201d8 00011f81 00011edd     ................
   20200:	00011f61 00011f39 00011f4d 40004000     a...9...M....@.@
   20210:	40008000 40090000 40094000              ...@...@.@.@

0002021c <typeinfo name for SingletonTemplate<Uart0>>:
   2021c:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   2022c:	49657461 72615535 00453074              ateI5Uart0E.

00020238 <typeinfo for SingletonTemplate<Uart0>>:
   20238:	00020f64 0002021c                       d.......

00020240 <typeinfo name for Uart0>:
   20240:	72615535 ff003074                       5Uart0..

00020248 <typeinfo for Uart0>:
   20248:	00021024 00020240 00000000 00000002     $...@...........
   20258:	000201d8 00000002 00020238 00000002     ........8.......

00020268 <vtable for Uart0>:
   20268:	00000000 00020248 00011f81 00011edd     ....H...........
   20278:	00011f61 0001283d 00012851              a...=(..Q(..

00020284 <typeinfo name for SingletonTemplate<Uart2>>:
   20284:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   20294:	49657461 72615535 00453274              ateI5Uart2E.

000202a0 <typeinfo for SingletonTemplate<Uart2>>:
   202a0:	00020f64 00020284                       d.......

000202a8 <typeinfo name for Uart2>:
   202a8:	72615535 ff003274                       5Uart2..

000202b0 <typeinfo for Uart2>:
   202b0:	00021024 000202a8 00000000 00000002     $...............
   202c0:	000201d8 00000002 000202a0 00000002     ................

000202d0 <vtable for Uart2>:
   202d0:	00000000 000202b0 00011f81 00011edd     ................
   202e0:	00011f61 000128a5 000128b9              a....(...(..

000202ec <typeinfo name for SingletonTemplate<Uart3>>:
   202ec:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   202fc:	49657461 72615535 00453374              ateI5Uart3E.

00020308 <typeinfo for SingletonTemplate<Uart3>>:
   20308:	00020f64 000202ec                       d.......

00020310 <typeinfo name for Uart3>:
   20310:	72615535 ff003374                       5Uart3..

00020318 <typeinfo for Uart3>:
   20318:	00021024 00020310 00000000 00000002     $...............
   20328:	000201d8 00000002 00020308 00000002     ................

00020338 <vtable for Uart3>:
   20338:	00000000 00020318 00011f81 00011edd     ................
   20348:	00011f61 0001290d 00012921 67676f6c     a....)..!)..logg
   20358:	45007265 524f5252 6f6c203a 72656767     er.ERROR: logger
   20368:	696e6920 6c616974 74617a69 206e6f69      initialization 
   20378:	6c696166 00657275 6f6c3a30 73632e67     failure.0:log.cs
   20388:	61460076 64656c69 6c696620 72772065     v.Failed file wr
   20398:	3a657469 72450020 20726f72 77207525     ite: .Error %u w
   203a8:	69746972 6c20676e 6966676f 202e656c     riting logfile. 
   203b8:	252f7525 72772075 65747469 46202e6e     %u/%u written. F
   203c8:	3a727470 0a752520 ffff9f00 9a8094c7     ptr: %u.........

000203d8 <CSWTCH.70>:
   203d8:	00100000 00200000 00400000 00800000     ...... ...@.....

000203e8 <ExCvt>:
   203e8:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   203f8:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   20408:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   20418:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   20428:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   20438:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   20448:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   20458:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

00020468 <LfnOfs>:
   20468:	07050301 12100e09 1c181614 8000ff1e              ..............

00020476 <cst.6348>:
   20476:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   20486:	04000800 feeb0200 44534d90 2e35534f     .........MSDOS5.
   20496:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   204a6:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   204b6:	54414620 20202020 2a220020 3f3e3c3a      FAT     ."*:<>?
   204c6:	2b007f7c 5b3d3b2c 0400005d                       |..+,;=[].

000204d0 <vst.6347>:
   204d0:	02000400 00800100 00200040 00080010     ........@. .....
   204e0:	00020004 00c70000                                ......

000204e6 <Tbl>:
   204e6:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   204f6:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   20506:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   20516:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   20526:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   20536:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   20546:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   20556:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   20566:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   20576:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   20586:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   20596:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   205a6:	00df03b1 03c00393 03c303a3 03c400b5     ................
   205b6:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   205c6:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   205d6:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

000205e6 <tbl_lower.5775>:
   205e6:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   205f6:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   20606:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   20616:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   20626:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   20636:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   20646:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   20656:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   20666:	01050103 01090107 010d010b 0111010f     ................
   20676:	01150113 01190117 011d011b 0121011f     ..............!.
   20686:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   20696:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   206a6:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   206b6:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   206c6:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   206d6:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   206e6:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   206f6:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   20706:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   20716:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   20726:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   20736:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   20746:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   20756:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   20766:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   20776:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   20786:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   20796:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   207a6:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   207b6:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

000207c6 <tbl_upper.5776>:
   207c6:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   207d6:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   207e6:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   207f6:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   20806:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   20816:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   20826:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   20836:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   20846:	01040102 01080106 010c010a 0110010e     ................
   20856:	01140112 01180116 011c011a 0120011e     .............. .
   20866:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   20876:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   20886:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   20896:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   208a6:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   208b6:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   208c6:	03940393 03960395 03980397 039a0399     ................
   208d6:	039c039b 039e039d 03a0039f 03a303a1     ................
   208e6:	03a503a4 03a703a6 03a903a8 041003aa     ................
   208f6:	04120411 04140413 04160415 04180417     ................
   20906:	041a0419 041c041b 041e041d 0420041f     .............. .
   20916:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   20926:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   20936:	04030402 04050404 04070406 04090408     ................
   20946:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   20956:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   20966:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   20976:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   20986:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   20996:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...

000209a6 <LED_DISPLAY_CHARMAP>:
	...
   209c6:	00008600 00000000 00000000 00804000     .............@..
   209d6:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   209e6:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   209f6:	6d000073 00003f00 00000000 00000000     s..m.?..........
   20a06:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   20a16:	6d000073 00003f00 00000000 00000000     s..m.?..........
   20a26:	4c4c4548 e7000a4f e7e7adde 65646f6e     HELLO.......node
   20a36:	6e6f4400 72450065 00726f72 656e6f44     .Done.Error.Done
   20a46:	41460021 44454c49 52524500 203a524f     !.FAILED.ERROR: 
   20a56:	73736f50 656c6269 6f687320 6f207472     Possible short o
   20a66:	4453206e 726f2041 4c435320 72697720     n SDA or SCL wir
   20a76:	49282065 29324332 52450021 3a524f52     e (I2C2)!.ERROR:
   20a86:	69614620 2064656c 69206f74 6974696e      Failed to initi
   20a96:	7a696c61 69772065 656c6572 64007373     alize wireless.d
   20aa6:	006b7369 75626564 79530067 6d657473     isk.debug.System
   20ab6:	6f6f4220 20402074 66332e25 7a684d20      Boot @ %.3f Mhz
   20ac6:	7953000a 6d657473 62657220 65746f6f     ..System reboote
   20ad6:	66612064 20726574 73617263 20202e68     d after crash.  
   20ae6:	656c6552 746e6176 666e6920 500a3a6f     Relevant info:.P
   20af6:	30203a43 38302578 20202e58 203a524c     C: 0x%08X.  LR: 
   20b06:	30257830 202e5838 52535020 7830203a     0x%08X.  PSR: 0x
   20b16:	58383025 736f500a 6c626973 616c2065     %08X.Possible la
   20b26:	72207473 696e6e75 4f20676e 61542053     st running OS Ta
   20b36:	203a6b73 27732527 4620000a 6873616c     sk: '%s'.. Flash
   20b46:	72450020 6e697361 6e612067 6f662064      .Erasing and fo
   20b56:	74616d72 676e6974 49505320 616c6620     rmatting SPI fla
   20b66:	202c6873 73696874 6e616320 6b617420     sh, this can tak
   20b76:	20612065 6c696877 2e2e2065 5300202e     e a while ... .S
   20b86:	46204950 4853414c 20736920 73736f70     PI FLASH is poss
   20b96:	796c6269 6d616420 64656761 61500021     ibly damaged!.Pa
   20ba6:	73206567 3a657a69 0a752520 6d654d00     ge size: %u..Mem
   20bb6:	69732020 203a657a 28207525 20776172       size: %u (raw 
   20bc6:	65747962 000a2973 43204453 00647261     bytes)..SD Card.
   20bd6:	4f525245 41203a52 6c656363 74617265     ERROR: Accelerat
   20be6:	206e6f69 736e6553 4500726f 524f5252     ion Sensor.ERROR
   20bf6:	6554203a 7265706d 72757461 65532065     : Temperature Se
   20c06:	726f736e 52524500 203a524f 65532d37     nsor.ERROR: 7-Se
   20c16:	6e656d67 69442074 616c7073 616e0079     gment Display.na
   20c26:	00726464 20746553 65726977 7373656c     ddr.Set wireless
   20c36:	646f6e20 64612065 73657264 6f742073      node address to
   20c46:	20692520 6d6f7266 73252720 69662027      %i from '%s' fi
   20c56:	203a656c 000a7325 42007325 6472616f     le: %s..%s.Board
   20c66:	20444920 203a7369 27732527 78302820      ID is: '%s' (0x
   20c76:	58323025 45000a29 7265746e 62206120     %02X)..Enter a b
   20c86:	6472616f 20444920 20343628 72616863     oard ID (64 char
   20c96:	616d2073 203a2978 34362500 6f420073     s max): .%64s.Bo
   20ca6:	20647261 74204449 7270206f 6172676f     ard ID to progra
   20cb6:	27203a6d 0a277325 746e4500 27207265     m: '%s'..Enter '
   20cc6:	74202759 6f63206f 7269666e 20202e6d     Y' to confirm.  
   20cd6:	52414f42 44492044 4e414320 20544f4e     BOARD ID CANNOT 
   20ce6:	43204542 474e4148 41204445 4920444e     BE CHANGED AND I
   20cf6:	45502053 4e414d52 00544e45 00733325     S PERMANENT.%3s.
   20d06:	72616f42 44492064 746f6e20 6f727020     Board ID not pro
   20d16:	6d617267 0064656d 20756f59 206e6163     grammed.You can 
   20d26:	676f7270 206d6172 45502061 4e414d52     program a PERMAN
   20d36:	20544e45 6f204449 6f792066 62207275     ENT ID of your b
   20d46:	6472616f 6f54002e 206f6420 73696874     oard..To do this
   20d56:	6f68202c 5320646c 61203157 5320646e     , hold SW1 and S
   20d66:	61203457 7220646e 74657365 65687420     W4 and reset the
   20d76:	616f6220 002e6472 20555043 73616c66      board..CPU flas
   20d86:	6c612068 65726574 72702f64 6172676f     h altered/progra
   20d96:	64656d6d 756f6320 3a73746e 2f752520     mmed counts: %u/
   20da6:	000a7525 20555043 676f7270 6d6d6172     %u..CPU programm
   20db6:	66206465 6873616c 696d2820 616d2f6e     ed flash (min/ma
   20dc6:	203a2978 624b7525 25202d20 0a624b75     x): %uKb - %uKb.
   20dd6:	73614c00 72702074 6172676f 6e696d6d     .Last programmin
   20de6:	6f742067 25206b6f 736d2075 6143000a     g took %u ms..Ca
   20df6:	6e696c6c 6f792067 6d207275 286e6961     lling your main(
   20e06:	2d2d0029 2d2d2d2d 2d2d2d2d 2d2d2d2d     ).--------------
   20e16:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20e26:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   20e36:	2d2d2d2d 2d2d2d2d 2d2d2d2d 00424b00     ------------.KB.
   20e46:	5900424d 4e007365 7325006f 4b4f203a     MB.Yes.No.%s: OK
   20e56:	202d2d20 61706143 79746963 352d2520      -- Capacity %-5
   20e66:	2c732564 61764120 62616c69 203a656c     d%s, Available: 
   20e76:	75352d25 000a7325 203a7325 6f727245     %-5u%s..%s: Erro
   20e86:	726f2072 746f6e20 65727020 746e6573     r or not present
   20e96:	4520202e 726f7272 69252320 6f4d202c     .  Error #%i, Mo
   20ea6:	65746e75 25203a64 55000a73 7078656e     unted: %s..Unexp
   20eb6:	65746365 61632064 74206c6c 7865206f     ected call to ex
   20ec6:	29287469 656e5500 63657078 20646574     it().Unexpected 
   20ed6:	6c6c6163 206f7420 6c6c696b 31002928     call to kill().1
   20ee6:	30203020 30003020 30203020 31003120      0 0 0.0 0 0 1.1
   20ef6:	30203120 30003020 30203020 53003020      1 0 0.0 0 0 0.S
   20f06:	43450065 6d655300 6e490061 74754274     e.EC.Sema.IntBut
   20f16:	746e4900 0044454c 75424345 43450074     .IntLED.ECBut.EC
   20f26:	0044454c 0fc4ffff                                LED...

00020f2c <typeinfo for __cxxabiv1::__class_type_info>:
   20f2c:	00020fc4 00020f38 00021048              ....8...H...

00020f38 <typeinfo name for __cxxabiv1::__class_type_info>:
   20f38:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   20f48:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   20f58:	ffff0045                                E...

00020f5c <vtable for __cxxabiv1::__class_type_info>:
   20f5c:	00000000 00020f2c 00018475 00018489     ....,...u.......
   20f6c:	00018acd 00018acd 000184b5 00018435     ............5...
   20f7c:	0001849d 000184df 00018469              ........i...

00020f88 <typeinfo for __cxxabiv1::__si_class_type_info>:
   20f88:	00020fc4 00020f94 00020f2c              ........,...

00020f94 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   20f94:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   20fa4:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   20fb4:	456f666e ffffff00                       nfoE....

00020fbc <vtable for __cxxabiv1::__si_class_type_info>:
   20fbc:	00000000 00020f88 00018519 0001852d     ............-...
   20fcc:	00018acd 00018acd 000184b5 00018435     ............5...
   20fdc:	000185f5 00018579 00018541              ....y...A...

00020fe8 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   20fe8:	00020fc4 00020ff4 00020f2c              ........,...

00020ff4 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   20ff4:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   21004:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   21014:	6f666e69 ffff0045                       infoE...

0002101c <vtable for __cxxabiv1::__vmi_class_type_info>:
   2101c:	00000000 00020fe8 00018649 0001865d     ........I...]...
   2102c:	00018acd 00018acd 000184b5 00018435     ............5...
   2103c:	000189a1 0001870f 00018671              ........q...

00021048 <typeinfo for std::type_info>:
   21048:	00020f64 00021050                       d...P...

00021050 <typeinfo name for std::type_info>:
   21050:	74397453 5f657079 6f666e69 ffffff00     St9type_info....

00021060 <__sf_fake_stderr>:
	...

00021080 <__sf_fake_stdin>:
	...

000210a0 <__sf_fake_stdout>:
	...

000210c0 <_global_impure_ptr>:
   210c0:	2007c0e4 49534f50 ffff0058              ... POSIX...

000210cc <DAYS_IN_MONTH>:
   210cc:	0000001f 0000001c 0000001f 0000001e     ................
   210dc:	0000001f 0000001e 0000001f 0000001f     ................
   210ec:	0000001e 0000001f 0000001e 0000001f     ................

000210fc <_DAYS_BEFORE_MONTH>:
   210fc:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   2110c:	00000078 00000097 000000b5 000000d4     x...............
   2111c:	000000f3 00000111 00000130 0000014e     ........0...N...

0002112c <__month_lengths>:
   2112c:	0000001f 0000001c 0000001f 0000001e     ................
   2113c:	0000001f 0000001e 0000001f 0000001f     ................
   2114c:	0000001e 0000001f 0000001e 0000001f     ................
   2115c:	0000001f 0000001d 0000001f 0000001e     ................
   2116c:	0000001f 0000001e 0000001f 0000001f     ................
   2117c:	0000001e 0000001f 0000001e 0000001f     ................
   2118c:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   2119c:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   211ac:	32313000 36353433 61393837 65646362     .0123456789abcde
   211bc:	25650066 ff00646c                       f.e%ld..

000211c4 <fpi.6129>:
   211c4:	00000035 fffffbce 000003cb 00000001     5...............
   211d4:	00000000                                ....

000211d8 <fpinan.6165>:
   211d8:	00000034 fffffbce 000003cb 00000001     4...............
   211e8:	00000000 ffffffff                       ........

000211f0 <tinytens>:
   211f0:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   21200:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   21210:	64ac6f43 11680628 47005a54 2500544d     Co.d(.h.TZ.GMT.%
   21220:	5e5b3031 2c392d30 255d2d2b 254d006e     10[^0-9,+-]%n.M%
   21230:	6e257568 7568252e 252e6e25 6e257568     hu%n.%hu%n.%hu%n
   21240:	68252f00 3a6e2575 25756825 68253a6e     ./%hu%n:%hu%n:%h
   21250:	006e2575                                u%n.

00021254 <_ctype_>:
   21254:	20202000 20202020 28282020 20282828     .         ((((( 
   21264:	20202020 20202020 20202020 20202020                     
   21274:	10108820 10101010 10101010 10101010      ...............
   21284:	04040410 04040404 10040404 10101010     ................
   21294:	41411010 41414141 01010101 01010101     ..AAAAAA........
   212a4:	01010101 01010101 01010101 10101010     ................
   212b4:	42421010 42424242 02020202 02020202     ..BBBBBB........
   212c4:	02020202 02020202 02020202 10101010     ................
   212d4:	00000020 00000000 00000000 00000000      ...............
	...
   21354:	666e4900 74696e69 614e0079 ffff004e     .Infinity.NaN...
   21364:	ffffffff                                ....

00021368 <__mprec_bigtens>:
   21368:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   21378:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   21388:	7f73bf3c 75154fdd                       <.s..O.u

00021390 <__mprec_tens>:
   21390:	00000000 3ff00000 00000000 40240000     .......?......$@
   213a0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   213b0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   213c0:	00000000 412e8480 00000000 416312d0     .......A......cA
   213d0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   213e0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   213f0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   21400:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   21410:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   21420:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   21430:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   21440:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   21450:	79d99db4 44ea7843                       ...yCx.D

00021458 <p05.6047>:
   21458:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
   21468:	6c680020 6665004c 47464567 ffffff00      .hlL.efgEFG....
   21478:	00021496 00021499 0002149c 61462d41     ............A-Fa
   21488:	3938662d 33323130 37363534 2d2b005d     -f8901234567].+-
   21498:	00303000 ff005878                       .00.xX..

000214a0 <__init_array_start>:
__preinit_array_start():
   214a0:	00018429 	.word	0x00018429
